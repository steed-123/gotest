swagger: '2.0'
info:
  description: >-
    With the PureCloud Platform API, you can control all aspects of your
    PureCloud environment. With the APIs you can access the system
    configuration, manage conversations and more.
  version: v2
  title: PureCloud Platform API
  termsOfService: https://help.mypurecloud.com/articles/terms-and-conditions/
  contact:
    name: PureCloud Developer Evangelists
    url: https://developer.genesys.cloud
    email: DeveloperEvangelists@genesys.com
  license:
    name: UNLICENSED
    url: https://help.mypurecloud.com/articles/terms-and-conditions/
host: api.mypurecloud.com
tags:
  - name: Events
    description: Events
    externalDocs:
      description: Events Documentation
      url: https://developer.genesys.cloud/api/rest/v2/events/
  - name: Authorization
    description: Roles and permissions
    externalDocs:
      description: Authorization Documentation
      url: https://developer.mypurecloud.com/api/rest/v2/authorization/
  - name: OAuth
    description: OAuth clients, providers
    externalDocs:
      description: OAuth Documentation
      url: https://developer.mypurecloud.com/api/rest/v2/oauth/
  - name: Objects
    description: Access-controlled objects in the platform
    externalDocs:
      description: authorization docs
      url: https://developer.mypurecloud.com/api/rest/v2/authorization/
  - name: Tokens
    description: Authentication Tokens
    externalDocs:
      description: Tokens Documentation
      url: https://developer.mypurecloud.com/api/rest/v2/tokens/
  - name: Alerting
    description: Rules and alerts
    externalDocs:
      description: Alerting Documentation
      url: >-
        https://developer.genesys.cloud/notificationsalerts/alerting/alerting-apis
  - name: Analytics
    description: Analytics querying and reporting.
    externalDocs:
      description: Analytics Documentation
      url: >-
        https://developer.genesys.cloud/analyticsdatamanagement/analytics/analytics-apis
  - name: Architect
    description: Flows, Prompts, IVR schedules, Dependency Tracking
    externalDocs:
      description: Architect Documentation
      url: https://developer.genesys.cloud/routing/architect/
  - name: Audit
    description: ''
    externalDocs:
      description: Audit Documentation
      url: https://developer.genesys.cloud/platform/audit/
  - name: Billing
    description: ''
    externalDocs:
      description: billing Documentation
      url: https://developer.genesys.cloud/billing/
  - name: Callbacks
    description: ''
  - name: Calls
    description: ''
  - name: Carrier Services
    description: ''
  - name: Chat
    description: ''
  - name: Coaching
    description: Schedule and manage coaching appointments
    externalDocs:
      description: Coaching
      url: https://developer.genesys.cloud/routing/conversations/coaching-apis
  - name: Compliance
    description: ''
  - name: Configuration
    description: ''
    externalDocs:
      description: Configuration Documentation
      url: https://developer.genesys.cloud/devapps/api-explorer
  - name: Content Management
    description: ''
    externalDocs:
      description: Content Management Documentation
      url: >-
        https://developer.genesys.cloud/analyticsdatamanagement/contentmanagement/contentmanagement-apis
  - name: Conversations
    description: ''
    externalDocs:
      description: Conversations Documentation
      url: https://developer.genesys.cloud/routing/conversations/conversations-apis
  - name: Data Extensions
    description: Data extensions
    externalDocs:
      description: Data Extensions
      url: https://developer.genesys.cloud/devapps/api-explorer
  - name: Directory Proxy
    description: Search, Suggest, and people
  - name: Downloads
    description: Download file
    externalDocs:
      description: Downloads Documentation
      url: https://developer.genesys.cloud/devapps/api-explorer
  - name: External Contacts
    description: External Organizations, contacts, notes and relationships
    externalDocs:
      description: External Contacts
      url: >-
        https://developer.genesys.cloud/commdigital/externalcontacts/externalcontacts-apis
  - name: Fax
    description: ''
    externalDocs:
      description: Fax Documentation
      url: https://developer.genesys.cloud/commdigital/fax/
  - name: Flows
    description: IVR Flows
    externalDocs:
      description: Flow Aggregates Documentation
      url: >-
        https://developer.genesys.cloud/analyticsdatamanagement/analytics/aggregate/flow-query
  - name: Gamification
    description: Gamification, Scorecard, and leaderboard
    externalDocs:
      description: Gamification Documentation
      url: https://developer.genesys.cloud/useragentman/gamification/
  - name: General Data Protection Regulation
    description: Working with General Data Protection Regulation (GDPR) requests
    externalDocs:
      description: GDPR Documentation
      url: https://developer.genesys.cloud/gdprprivacy/
  - name: Geolocation
    description: ''
    externalDocs:
      description: Geolocation Documentation
      url: https://developer.genesys.cloud/platform/geolocation-apis
  - name: Greetings
    description: ''
    externalDocs:
      description: Greetings Documentation
      url: https://developer.genesys.cloud/commdigital/greetings/
  - name: Groups
    description: Groups, members
    externalDocs:
      description: Groups Documentation
      url: https://developer.genesys.cloud/useragentman/groups/
  - name: Identity Provider
    description: Identity providers
    externalDocs:
      description: Identity Providers Documentation
      url: >-
        https://developer.genesys.cloud/authorization/oauth-apis/identityprovider/
  - name: Infrastructure as Code
    description: Accelerated infrastructure configuration via reusable modules
    externalDocs:
      description: Infrastructure as Code Documentation
      url: https://developer.genesys.cloud/devapps/api-explorer
  - name: Integrations
    description: ''
    externalDocs:
      description: Integrations Documentation
      url: https://developer.genesys.cloud/platform/integrations/
  - name: Journey
    description: Predictive Engagement, Customer Journey
    externalDocs:
      description: Journey documentation
      url: >-
        https://developer.genesys.cloud/commdigital/digital/webmessaging/journey/journey-apis
  - name: Languages
    description: Available languages
    externalDocs:
      description: Languages Documentation
      url: https://developer.genesys.cloud/organization/languages-apis
  - name: Knowledge
    description: Knowledge administration and search
  - name: Language Understanding
    description: Language Understanding
    externalDocs:
      description: Language Understanding documentation
      url: >-
        https://developer.genesys.cloud/organization/languageunderstanding/languageunderstanding-apis
  - name: Learning
    description: Manage learning modules
  - name: Licensing
    description: ''
  - name: License
    description: Per-user platform license assignments
    externalDocs:
      description: License Documentation
      url: https://developer.genesys.cloud/organization/license-apis
  - name: Locations
    description: Physical locations
    externalDocs:
      description: Locations Documentation
      url: https://developer.genesys.cloud/telephony/locations-apis
  - name: Messaging
    description: Messaging
    externalDocs:
      description: Messaging Documentation
      url: https://developer.genesys.cloud/devapps/api-explorer
  - name: Mobile Devices
    description: Devices
    externalDocs:
      description: Devices Documentation
      url: https://developer.genesys.cloud/organization/mobiledevices-apis
  - name: Notifications
    description: Channels, subscriptions, topics, mobile push registration
    externalDocs:
      description: Notifications Documentation
      url: >-
        https://developer.genesys.cloud/notificationsalerts/notifications/notifications-apis
  - name: Organization
    description: Organization
    externalDocs:
      description: Organization Documentation
      url: https://developer.genesys.cloud/organization/organization/
  - name: Organization Authorization
    description: Organization Authorization
    externalDocs:
      description: Organization Authorization Documentation
      url: >-
        https://developer.genesys.cloud/authorization/oauth-apis/organizationauthorization-apis
  - name: Outbound
    description: ''
    externalDocs:
      description: Outbound Documentation
      url: https://developer.genesys.cloud/routing/outbound/
  - name: Presence
    description: User and organization presences
    externalDocs:
      description: Presence Documentation
      url: https://developer.genesys.cloud/useragentman/presence/
  - name: Process Automation
    description: Work items, flows, triggers
  - name: Quality
    description: Evaluations, calibrations
    externalDocs:
      description: Quality Management Documentation
      url: https://developer.genesys.cloud/useragentman/quality/
  - name: Recording
    description: Recordings, policies, annotations, orphans
    externalDocs:
      description: Recording Documentation
      url: https://developer.genesys.cloud/analyticsdatamanagement/recording/
  - name: Response Management
    description: Responses, library, Response Assets, query
    externalDocs:
      description: Response Management Documentation
      url: https://developer.genesys.cloud/organization/responsemanagement-apis
  - name: Routing
    description: Queues, wrapup codes, skills, email & sms config, predictive routing
    externalDocs:
      description: Routing Documentation
      url: https://developer.genesys.cloud/routing/routing/
  - name: SCIM
    description: System for Cross-domain Identity Management
    externalDocs:
      description: >-
        System for Cross-domain Identity Management: Definitions, Overview,
        Concepts, and Requirements
      url: https://developer.genesys.cloud/useragentman/scim/scim-apis
  - name: Scripts
    description: Agent-facing scripts for interactions
    externalDocs:
      description: Scripts Documentation
      url: https://developer.genesys.cloud/routing/scripts/
  - name: Search
    description: Search aggregate, users, groups
    externalDocs:
      description: Search Documentation
      url: https://developer.genesys.cloud/organization/search/
  - name: Socialize
    description: Gets, sets and updates entity data for the Socialize service
  - name: Speech & Text Analytics
    description: ''
  - name: Stations
    description: Stations
    externalDocs:
      description: Stations Documentation
      url: https://developer.genesys.cloud/telephony/stations-apis
  - name: Suggest
    description: Search suggest user, group, locations
  - name: Teams
    description: Teams, members
    externalDocs:
      description: Teams Documentation
      url: https://developer.genesys.cloud/devapps/api-explorer
  - name: Telephony
    description: Telephony providers and configuration
    externalDocs:
      description: Telephony Documentation
      url: https://developer.genesys.cloud/telephony/telephony-apis
  - name: Telephony Providers Edge
    description: Edge phones, trunks, lines.
    externalDocs:
      description: telephony provider edge
      url: https://developer.genesys.cloud/telephony/telephony-apis
  - name: Textbots
    description: Chatbot Interactions
  - name: Uploads
    description: Presigned url generator for uploading files
    externalDocs:
      description: Upload Documentation
      url: >-
        https://developer.genesys.cloud/analyticsdatamanagement/uploads/uploads-apis
  - name: User Recordings
    description: Summary, media
    externalDocs:
      description: User Recordings Documentation
      url: >-
        https://developer.genesys.cloud/analyticsdatamanagement/recording/userrecordings-apis
  - name: Users
    description: Me, routing, roles
    externalDocs:
      description: Users Documentation
      url: https://developer.genesys.cloud/useragentman/users/
  - name: Utilities
    description: ''
    externalDocs:
      description: Utilities Documentation
      url: https://developer.genesys.cloud/organization/utilities-apis
  - name: Videos
    description: ''
  - name: Voicemail
    description: Mailbox, messages, policy
    externalDocs:
      description: Voicemail Documentation
      url: https://developer.genesys.cloud/commdigital/voicemail/
  - name: WebChat
    description: WebChat deployments
    externalDocs:
      description: WebChat Deployment Documentation
      url: https://developer.genesys.cloud/commdigital/digital/webchat/webchat-apis
  - name: WebMessaging
    description: Web messaging
    externalDocs:
      description: Web Messaging Documentation
      url: >-
        https://developer.genesys.cloud/commdigital/digital/webmessaging/webmessaging-apis
  - name: Widgets
    description: Widget deployments
    externalDocs:
      description: Widget Deployment Documentation
      url: https://developer.genesys.cloud/commdigital/digital/webchat/widgets-apis
  - name: Usage
    description: View organizational level usage data
    externalDocs:
      description: Usage Documentation
      url: https://developer.genesys.cloud/platform/usage-apis
  - name: Workforce Management
    description: >-
      Adherence, Schedules, Forecasts, Intraday Monitoring, Time Off Requests,
      Configuration
    externalDocs:
      description: Workforce Management Documentation
      url: https://developer.genesys.cloud/useragentman/workforcemanagement/
  - name: Web Deployments
    description: Web Deployments
    externalDocs:
      description: Web Deployments Documentation
      url: >-
        https://developer.genesys.cloud/commdigital/digital/webchat/webdeployments-apis
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v2/outbound/campaigns/{campaignId}:
    put:
      tags:
        - Outbound
      summary: Update a campaign.
      description: ''
      operationId: putOutboundCampaign
      produces:
        - application/json
      parameters:
        - name: campaignId
          in: path
          description: Campaign ID
          required: true
          type: string
        - in: body
          name: body
          description: Campaign
          required: true
          schema:
            $ref: '#/definitions/Campaign'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Campaign'
        '400':
          description: >-
            The request could not be understood by the server due to malformed
            syntax.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            column.data.type.specification.not.found.for.contact.sort: >-
              A column data type specification must be defined for contact sort
              column
            invalid.priority: The priority must be between 1 and 5 (inclusive)
            name.length.exceeded: The name length exceeds the limit of 64 characters.
            invalid.column.data.type.specification.data.type: >-
              Column data type specification data type must match the contact
              sort column data type
            too.many.queue.members: >-
              The limit for number of queue members on a campaign configured for
              agent owned records has been exceeded. See details.
            duplicate.name: The name already exists.
            site.has.no.active.edges: There are no active edges in the site
            edge.group.not.found: The edge group could not be found.
            too.many.data.action.conditions: >-
              There can be a maximum of 1 data action condition across all rule
              sets referenced by this campaign
            missing.column.data.type.specification.in.contact.list: >-
              Column data type specifications must be defined on the campaign's
              contact list
            contact.sorts.duplicate.field.names: The same column name is used in separate contact sorts entries.
            invalid.update: ''
            more.than.one.contact.list.filter: Only one contact list filter is allowed per campaign.
            managed.site.cannot.be.configured: Managed Sites cannot be configured on a campaign.
            invalid.campaign.preview.timeout.seconds: The preview timeout seconds must be between 0 and 1200 (inclusive)
            invalid.query.param.value: >-
              Value [%s] is not valid for parameter [%s]. Allowable values are:
              %s
            resources.in.use: Resources are already in use.
            cannot.update.dynamic.contact.queueing.settings: The dynamic contact queueing settings cannot be updated
            invalid.update.bad.status.transition: The status transition is invalid.
            invalid.value: >-
              Value [%s] is not valid for field type [%s]. Allowable values are:
              %s
            contact.list.filter.not.found: The contact list filter could not be found.
            dnc.list.not.found: A do not call list could not be found.
            missing.caller.id.address: No caller id address supplied
            agent.owned.column.cannot.be.changed: The agent owned column cannot be changed.
            rule.set.not.found: A rule set could not be found.
            managed.edge.group.cannot.be.configured: Managed Edge Groups cannot be configured on a campaign.
            property.not.allowed.for.external.calling: >-
              The following properties are not allowed to be configured on an
              external campaign: abandonRate, edgeGroup, site,
              callAnalysisResponseSet, callerName, callerAddress,
              outboundLineCount, ruleSets, previewTimeOutSeconds,
              noAnswerTimeout, and callAnalysisResponseSet.
            invalid.campaign.phone.columns: The campaign phone columns are invalid.
            contact.sorts.conflict: The contact sort and contact sorts fields have conflicting values.
            invalid.update.campaign.active: The campaign is already active
            response.entity.too.large: >-
              The response is over the size limit. Reduce pageSize or expand
              list to reduce response size if applicable
            site.not.found: The site could not be found
            queue.not.found: The queue could not be found.
            dynamic.contact.queueing.settings.cannot.be.set.for.agent.owned.campaigns: >-
              Dynamic contact queueing cannot be enabled for agent owned
              campaigns
            no.edge.group.for.site: No edge group was found for the site
            name.cannot.be.blank: A name must be provided.
            invalid.campaign.outbound.line.count: ''
            bad.request: >-
              The request could not be understood by the server due to malformed
              syntax.
            callable.time.set.not.found: The callable time set could not be found.
            missing.caller.id.name: No caller id name supplied
            invalid.campaign.skill.column.data.type.specifications.max.length.limit.exceeded: >-
              The column data type specification length value exceeds the max
              length allowed for a skill column
            constraint.validation: '%s'
            dnc.list.invalid.custom.exclusion.column: >-
              The Custom Exclusion Column on one of the chosen DNC lists does
              not match any of the columns on the chosen Contact List
            contact.list.filter.does.not.match.contact.list: >-
              The contact list on the contact list filter does not match the
              contact list on the campaign.
            dynamic.queueing.campaigns.count.exceeded: The limit for dynamic queueing campaigns has been exceeded
            invalid.acw.queue.setting: >-
              Please change the After Call Work setting on the queue as Agent
              Requested is not valid
            client.failed.request: >-
              The client did not produce a request with valid end of stream
              signaling. This can be caused by poor network connection and/or
              client behavior.
            call.analysis.response.set.not.found: The call analysis response set could not be found.
            agent.owned.queue.cannot.be.changed: >-
              The queue cannot be changed on a campaign configured for agent
              owned records.
            script.not.found: The script could not be found.
            site.and.edge.group.cannot.be.configured: >-
              A single campaign cannot have both a site and an edge group
              configured
            contact.sort.field.not.found: The contact sort field is not a column on the contact list.
            invalid.campaign.agent.owned.column: >-
              The campaign agent owned column is not a valid contact list
              column.
            contact.sorts.invalid.field.name: >-
              A contact sorts field name is not a valid column name in the
              campaign's contact list.
            external.calling.property.not.allowed: >-
              Some properties cannot be set on an external calling campaign. See
              details
            invalid.property: Value [%s] is not a valid property for object [%s]
            edge.group.has.no.active.edges: There are no active edges in the edge group
            dynamic.queueing.active.campaigns.count.exceeded: The limit for active dynamic queueing campaigns has been exceeded
            invalid.call.analysis.response.set.for.agentless.campaign: The call analysis response set is invalid for agentless campaigns.
            invalid.ani.address: The caller id number is invalid.
            name.required: A name must be provided.
            callable.time.set.conflicts.with.automatic.time.zone.mapping: >-
              A callable time set cannot be included on the campaign when the
              campaign's contact list uses automatic time zone mapping.
            invalid.campaign.skill.column.data.type: >-
              The column data type specification that is selected as a skill
              column must be of Data Type text.
            active.campaigns.limit.exceeded: >-
              The maximum number of active campaigns has been reached. Please
              turn off at least one campaign and wait for it to stop before
              starting another one.
            edge.group.is.empty: There are no edges in the edge group
            invalid.date: >-
              Dates must be specified as ISO-8601 strings. For example:
              yyyy-MM-ddTHH:mm:ss.SSSZ
            missing.time.zone.in.contactlist: >-
              When using a callable time set, the contact list must have at
              least one time zone column defined.
            invalid.dialing.mode.update: Invalid dialing mode
            site.is.empty: There are no edges in the site
            contact.list.import.in.progress: The contact list on the camapign is still importing contacts.
        '401':
          description: No authentication bearer token specified in authorization header.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            authentication.required: No authentication bearer token specified in authorization header.
            ip.not.authorized: 'Requests originating from this IP address are not authorized: [%s]'
            bad.credentials: Invalid login credentials.
        '403':
          description: You are not authorized to perform the requested action.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            missing.division.permission: You are not authorized to perform the requested action.
            app.not.authorized.for.scope: App not authorized to use scope %s
            missing.permissions: >-
              Unable to perform the requested action. You are missing the
              following permission(s): %s
            not.authorized: You are not authorized to perform the requested action.
            missing.any.permissions: >-
              Unable to perform the requested action. You must have at least one
              of the following permissions assigned: %s
            all.campaigns.black.listed: >-
              This organization has been blacklisted from starting campaigns. 
              Please contact support.
            authz.policy.denied: >-
              Unable to perform the requested action. Your organization's
              security policies have denied access. Policy ID(s): [%s]
            missing.any.division.permissions: >-
              Unable to perform the requested action. You must have at least one
              of the following permissions assigned: %s in at least one of the
              following division(s): %s
            campaign.black.listed: This campaign has been blacklisted.  Please contact support.
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            not.found: The requested resource was not found.
            resource.not.found: The resource could not be found.
        '408':
          description: >-
            The client did not produce a request within the server timeout
            limit. This can be caused by a slow network connection and/or large
            payloads.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            client.timeout: >-
              The client did not produce a request within the server timeout
              limit. This can be caused by a slow network connection and/or
              large payloads.
        '409':
          description: Conflict.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            invalid.update.campaign.active: The campaign is already active.
            invalid.update.wrong.version: ''
        '413':
          description: 'The request is over the size limit. Maximum bytes: %s'
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            request.entity.too.large: 'The request is over the size limit. Maximum bytes: %s'
        '415':
          description: >-
            Unsupported Media Type - Unsupported or incorrect media type, such
            as an incorrect Content-Type value in the header.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            unsupported.media.type: >-
              Unsupported Media Type - Unsupported or incorrect media type, such
              as an incorrect Content-Type value in the header.
        '429':
          description: Rate limit exceeded the maximum. Retry the request in [%s] seconds
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            too.many.requests.retry.after: Rate limit exceeded the maximum. Retry the request in [%s] seconds
            too.many.requests: Rate limit exceeded the maximum [%s] requests within [%s] seconds
        '500':
          description: >-
            The server encountered an unexpected condition which prevented it
            from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            internal.server.error: >-
              The server encountered an unexpected condition which prevented it
              from fulfilling the request.
        '503':
          description: >-
            Service Unavailable - The server is currently unavailable (because
            it is overloaded or down for maintenance).
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            service.unavailable: >-
              Service Unavailable - The server is currently unavailable (because
              it is overloaded or down for maintenance).
        '504':
          description: The request timed out.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            authentication.request.timeout: Authentication request timeout.
            request.timeout: The request timed out.
      security:
        - PureCloud OAuth:
            - outbound
      x-inin-requires-permissions:
        type: ALL
        permissions:
          - outbound:campaign:edit
      x-purecloud-method-name: putOutboundCampaign
  /api/v2/outbound/schedules/campaigns/{campaignId}:
    put:
      tags:
        - Outbound
      summary: Update a new campaign schedule.
      description: ''
      operationId: putOutboundSchedulesCampaign
      produces:
        - application/json
      parameters:
        - name: campaignId
          in: path
          description: Campaign ID
          required: true
          type: string
        - in: body
          name: body
          description: CampaignSchedule
          required: true
          schema:
            $ref: '#/definitions/CampaignSchedule'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CampaignSchedule'
        '400':
          description: >-
            The request could not be understood by the server due to malformed
            syntax.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            invalid.update: ''
            invalid.interval.time: ''
            bad.request: >-
              The request could not be understood by the server due to malformed
              syntax.
            response.entity.too.large: >-
              The response is over the size limit. Reduce pageSize or expand
              list to reduce response size if applicable
            invalid.date: >-
              Dates must be specified as ISO-8601 strings. For example:
              yyyy-MM-ddTHH:mm:ss.SSSZ
            invalid.query.param.value: >-
              Value [%s] is not valid for parameter [%s]. Allowable values are:
              %s
            client.failed.request: >-
              The client did not produce a request with valid end of stream
              signaling. This can be caused by poor network connection and/or
              client behavior.
            invalid.property: Value [%s] is not a valid property for object [%s]
            constraint.validation: '%s'
            invalid.value: >-
              Value [%s] is not valid for field type [%s]. Allowable values are:
              %s
            future.intervals.exceeded.limit: ''
        '401':
          description: No authentication bearer token specified in authorization header.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            authentication.required: No authentication bearer token specified in authorization header.
            ip.not.authorized: 'Requests originating from this IP address are not authorized: [%s]'
            bad.credentials: Invalid login credentials.
        '403':
          description: You are not authorized to perform the requested action.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            missing.division.permission: >-
              Unable to perform the requested action. You are missing the
              following permission '%s' in the provided division(s).
            app.not.authorized.for.scope: App not authorized to use scope %s
            missing.permissions: >-
              Unable to perform the requested action. You are missing the
              following permission(s): %s
            not.authorized: You are not authorized to perform the requested action.
            missing.any.permissions: >-
              Unable to perform the requested action. You must have at least one
              of the following permissions assigned: %s
            authz.policy.denied: >-
              Unable to perform the requested action. Your organization's
              security policies have denied access. Policy ID(s): [%s]
            missing.any.division.permissions: >-
              Unable to perform the requested action. You must have at least one
              of the following permissions assigned: %s in at least one of the
              following division(s): %s
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            not.found: The requested resource was not found.
            campaign.not.found: The dialer campaign was not found.
        '408':
          description: >-
            The client did not produce a request within the server timeout
            limit. This can be caused by a slow network connection and/or large
            payloads.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            client.timeout: >-
              The client did not produce a request within the server timeout
              limit. This can be caused by a slow network connection and/or
              large payloads.
        '413':
          description: 'The request is over the size limit. Maximum bytes: %s'
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            request.entity.too.large: 'The request is over the size limit. Maximum bytes: %s'
        '415':
          description: >-
            Unsupported Media Type - Unsupported or incorrect media type, such
            as an incorrect Content-Type value in the header.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            unsupported.media.type: >-
              Unsupported Media Type - Unsupported or incorrect media type, such
              as an incorrect Content-Type value in the header.
        '429':
          description: Rate limit exceeded the maximum. Retry the request in [%s] seconds
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            too.many.requests.retry.after: Rate limit exceeded the maximum. Retry the request in [%s] seconds
            too.many.requests: Rate limit exceeded the maximum [%s] requests within [%s] seconds
        '500':
          description: >-
            The server encountered an unexpected condition which prevented it
            from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            internal.server.error: >-
              The server encountered an unexpected condition which prevented it
              from fulfilling the request.
        '503':
          description: >-
            Service Unavailable - The server is currently unavailable (because
            it is overloaded or down for maintenance).
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            service.unavailable: >-
              Service Unavailable - The server is currently unavailable (because
              it is overloaded or down for maintenance).
        '504':
          description: The request timed out.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            authentication.request.timeout: Authentication request timeout.
            request.timeout: The request timed out.
      security:
        - PureCloud OAuth:
            - outbound
      x-inin-requires-permissions:
        type: ANY
        permissions:
          - outbound:schedule:edit
      x-purecloud-method-name: putOutboundSchedulesCampaign
  /api/v2/outbound/contactlists:
    post:
      tags:
        - Outbound
      summary: Create a contact List.
      description: ''
      operationId: postOutboundContactlists
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: ContactList
          required: true
          schema:
            $ref: '#/definitions/ContactList'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ContactList'
        '400':
          description: >-
            The request could not be understood by the server due to malformed
            syntax.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            name.cannot.be.blank: A name must be provided.
            contact.columns.do.not.contain.phone.number.column: The contact columns do not contain phone number column
            no.phone.columns: No phone columns provided
            name.length.exceeded: The name length exceeds the limit of 64 characters.
            system.column.phone.column: ContactList Phone column cannot be a system defined column name.
            bad.request: >-
              The request could not be understood by the server due to malformed
              syntax.
            duplicate.name: The name already exists.
            invalid.create: ''
            not.unique.email.columns: Email Columns contain duplicate values.
            missing.column.data.type.specification.max: The numeric column data type specifications max value is required.
            missing.column.data.type.specification.in.contact.list: Column data type specifications must be provided for all columns
            division.not.found: The division could not be found.
            no.contact.columns.defined: There are no contact columns defined.
            constraint.validation: '%s'
            contact.list.both.phone.email.column.empty: Contact list phone and email columns are empty.
            invalid.contact.email.column: The contact email columns are invalid.
            invalid.column.data.type.specifications.max.length.values: >-
              The text column data type specifications max length value is
              invalid.
            contact.column.length.limit.exceeded: The length of each contact column must not exceed the limit.
            not.unique.contact.columns: Contact Columns contains duplicate values.
            missing.column.data.type.specification.min: The numeric column data type specifications min value is required.
            invalid.query.param.value: >-
              Value [%s] is not valid for parameter [%s]. Allowable values are:
              %s
            client.failed.request: >-
              The client did not produce a request with valid end of stream
              signaling. This can be caused by poor network connection and/or
              client behavior.
            cannot.have.callable.time.column.with.automatic.time.zone.mapping: >-
              The phone columns cannot reference callable time columns when
              automatic time zone mapping is being used
            invalid.contact.phone.column: The contact phone columns are invalid.
            invalid.zip.code.column: >-
              The zip code column must be a column of the contact list and
              cannot be a phone column
            contact.columns.do.not.contain.email.column: The contact columns do not contain email column
            invalid.value: >-
              Value [%s] is not valid for field type [%s]. Allowable values are:
              %s
            email.columns.limit.exceeded: Number of email columns must not exceed the limit.
            contact.columns.dont.match: >-
              Contact columns field and ordered contact columns field must
              match.
            column.data.type.specifications.summed.maxlength.exceeds.maximum.allowed: >-
              The sum of maxlength for all column data type specifications text
              columns exceeds the maximum allowed.
            invalid.column.data.type.specifications.max.values: The numeric column data type specifications max value is invalid.
            not.unique.phone.columns: Phone Number Columns contain duplicate values.
            invalid.property: Value [%s] is not a valid property for object [%s]
            no.email.columns: No email columns provided
            max.entity.count.reached: The maximum contact list count has been reached.
            phone.columns.limit.exceeded: Number of phone columns must not exceed the limit.
            column.data.type.specification.column.name.not.found: >-
              Column data type specification column name is not a valid contact
              list column
            response.entity.too.large: >-
              The response is over the size limit. Reduce pageSize or expand
              list to reduce response size if applicable
            invalid.date: >-
              Dates must be specified as ISO-8601 strings. For example:
              yyyy-MM-ddTHH:mm:ss.SSSZ
            contact.columns.limit.exceeded: Number of contact columns must not exceed the limit.
            cannot.have.zip.code.column.without.automatic.time.zone.mapping: >-
              The zip code column can only be used when automatic time zone
              mapping is also being used
            invalid.contact.data.value: The contact data values are invalid.
            invalid.column.data.type.specifications.min.values: The numeric column data type specifications min value is invalid.
            contact.list.email.columns.not.supported: Contact list email columns not supported.
            missing.column.data.type.specification.max.length: >-
              The numeric column data type specifications max length value is
              required.
        '401':
          description: No authentication bearer token specified in authorization header.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            authentication.required: No authentication bearer token specified in authorization header.
            ip.not.authorized: 'Requests originating from this IP address are not authorized: [%s]'
            bad.credentials: Invalid login credentials.
        '403':
          description: You are not authorized to perform the requested action.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            missing.division.permission: You are not authorized to perform the requested action.
            app.not.authorized.for.scope: App not authorized to use scope %s
            missing.permissions: >-
              Unable to perform the requested action. You are missing the
              following permission(s): %s
            not.authorized: You are not authorized to perform the requested action.
            missing.any.permissions: >-
              Unable to perform the requested action. You must have at least one
              of the following permissions assigned: %s
            authz.policy.denied: >-
              Unable to perform the requested action. Your organization's
              security policies have denied access. Policy ID(s): [%s]
            missing.any.division.permissions: >-
              Unable to perform the requested action. You must have at least one
              of the following permissions assigned: %s in at least one of the
              following division(s): %s
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            not.found: The requested resource was not found.
        '408':
          description: >-
            The client did not produce a request within the server timeout
            limit. This can be caused by a slow network connection and/or large
            payloads.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            client.timeout: >-
              The client did not produce a request within the server timeout
              limit. This can be caused by a slow network connection and/or
              large payloads.
        '413':
          description: 'The request is over the size limit. Maximum bytes: %s'
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            request.entity.too.large: 'The request is over the size limit. Maximum bytes: %s'
        '415':
          description: >-
            Unsupported Media Type - Unsupported or incorrect media type, such
            as an incorrect Content-Type value in the header.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            unsupported.media.type: >-
              Unsupported Media Type - Unsupported or incorrect media type, such
              as an incorrect Content-Type value in the header.
        '429':
          description: Rate limit exceeded the maximum. Retry the request in [%s] seconds
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            too.many.requests.retry.after: Rate limit exceeded the maximum. Retry the request in [%s] seconds
            too.many.requests: Rate limit exceeded the maximum [%s] requests within [%s] seconds
        '500':
          description: >-
            The server encountered an unexpected condition which prevented it
            from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            internal.error: An internal server error occurred.
            internal.server.error: >-
              The server encountered an unexpected condition which prevented it
              from fulfilling the request.
        '503':
          description: >-
            Service Unavailable - The server is currently unavailable (because
            it is overloaded or down for maintenance).
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            service.unavailable: >-
              Service Unavailable - The server is currently unavailable (because
              it is overloaded or down for maintenance).
        '504':
          description: The request timed out.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            authentication.request.timeout: Authentication request timeout.
            request.timeout: The request timed out.
      security:
        - PureCloud OAuth:
            - outbound
      x-inin-requires-permissions:
        type: ANY
        permissions:
          - outbound:contactList:add
      x-purecloud-method-name: postOutboundContactlists
  /api/v2/outbound/contactlists/{contactListId}/contacts:
    post:
      tags:
        - Outbound
      summary: Add contacts to a contact list.
      description: ''
      operationId: postOutboundContactlistContacts
      produces:
        - application/json
      parameters:
        - name: contactListId
          in: path
          description: Contact List ID
          required: true
          type: string
        - in: body
          name: body
          description: Contact
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/WritableDialerContact'
        - name: priority
          in: query
          description: >-
            Contact priority. True means the contact(s) will be dialed next;
            false means the contact will go to the end of the contact queue.
          required: false
          type: boolean
        - name: clearSystemData
          in: query
          description: >-
            Clear system data. True means the system columns (attempts, callable
            status, etc) stored on the contact will be cleared if the contact
            already exists; false means they won't.
          required: false
          type: boolean
        - name: doNotQueue
          in: query
          description: >-
            Do not queue. True means that updated contacts will not have their
            positions in the queue altered, so contacts that have already been
            dialed will not be redialed. For new contacts, this parameter has no
            effect; False means that updated contacts will be re-queued,
            according to the 'priority' parameter.
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DialerContact'
        '400':
          description: >-
            The request could not be understood by the server due to malformed
            syntax.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            too.many.contacts.added: Too many contacts added, the limit is 1000 per request
            uploads.black.listed: >-
              This organization has been prohibited from uploading contacts.
              Please contact support.
            contact.missing.columns: The contact is missing columns from its contact list.
            invalid.contact.columns: The contact columns are invalid.
            contact.list.clear.in.progress: The contact list is currently being cleared.
            bad.request: >-
              The request could not be understood by the server due to malformed
              syntax.
            invalid.create: An attempt was made to create contacts in an invalid way
            invalid.property: Value [%s] is not a valid property for object [%s]
            constraint.validation: '%s'
            invalid.update: An attempt was made to update contacts in an invalid way
            invalid.contact.id: >-
              The custom contactId field is not valid.  It cannot contain
              special characters.
            contact.column.length.limit.exceeded: The length of each contact column must not exceed the limit.
            response.entity.too.large: >-
              The response is over the size limit. Reduce pageSize or expand
              list to reduce response size if applicable
            invalid.date: >-
              Dates must be specified as ISO-8601 strings. For example:
              yyyy-MM-ddTHH:mm:ss.SSSZ
            invalid.query.param.value: >-
              Value [%s] is not valid for parameter [%s]. Allowable values are:
              %s
            client.failed.request: >-
              The client did not produce a request with valid end of stream
              signaling. This can be caused by poor network connection and/or
              client behavior.
            contact.missing.data: The data field is required.
            contact.id.length.limit.exceeded: The length of a contact id must not exceed the limit.
            contact.columns.limit.exceeded: Number of contact columns must not exceed the limit.
            contact.datum.length.limit.exceeded: >-
              The length of each piece of contact data must not exceed the
              limit.
            contacts.per.org.limit.exceeded: The organization has reached the limit on total contacts
            invalid.value: >-
              Value [%s] is not valid for field type [%s]. Allowable values are:
              %s
        '401':
          description: No authentication bearer token specified in authorization header.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            authentication.required: No authentication bearer token specified in authorization header.
            ip.not.authorized: 'Requests originating from this IP address are not authorized: [%s]'
            bad.credentials: Invalid login credentials.
        '403':
          description: You are not authorized to perform the requested action.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            missing.division.permission: >-
              Unable to perform the requested action. You are missing the
              following permission '%s' in the provided division(s).
            app.not.authorized.for.scope: App not authorized to use scope %s
            missing.permissions: >-
              Unable to perform the requested action. You are missing the
              following permission(s): %s
            not.authorized: You are not authorized to perform the requested action.
            missing.any.permissions: >-
              Unable to perform the requested action. You must have at least one
              of the following permissions assigned: %s
            authz.policy.denied: >-
              Unable to perform the requested action. Your organization's
              security policies have denied access. Policy ID(s): [%s]
            missing.any.division.permissions: >-
              Unable to perform the requested action. You must have at least one
              of the following permissions assigned: %s in at least one of the
              following division(s): %s
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            contact.list.not.found: The contact list could not be found.
            not.found: The requested resource was not found.
        '408':
          description: >-
            The client did not produce a request within the server timeout
            limit. This can be caused by a slow network connection and/or large
            payloads.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            client.timeout: >-
              The client did not produce a request within the server timeout
              limit. This can be caused by a slow network connection and/or
              large payloads.
        '413':
          description: 'The request is over the size limit. Maximum bytes: %s'
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            request.entity.too.large: 'The request is over the size limit. Maximum bytes: %s'
        '415':
          description: >-
            Unsupported Media Type - Unsupported or incorrect media type, such
            as an incorrect Content-Type value in the header.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            unsupported.media.type: >-
              Unsupported Media Type - Unsupported or incorrect media type, such
              as an incorrect Content-Type value in the header.
        '429':
          description: Rate limit exceeded the maximum. Retry the request in [%s] seconds
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            too.many.requests.retry.after: Rate limit exceeded the maximum. Retry the request in [%s] seconds
            too.many.requests: Rate limit exceeded the maximum [%s] requests within [%s] seconds
        '500':
          description: >-
            The server encountered an unexpected condition which prevented it
            from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            internal.error: An internal service error occurred.
            internal.server.error: >-
              The server encountered an unexpected condition which prevented it
              from fulfilling the request.
        '503':
          description: >-
            Service Unavailable - The server is currently unavailable (because
            it is overloaded or down for maintenance).
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            service.unavailable: >-
              Service Unavailable - The server is currently unavailable (because
              it is overloaded or down for maintenance).
        '504':
          description: The request timed out.
          schema:
            $ref: '#/definitions/ErrorBody'
          x-inin-error-codes:
            authentication.request.timeout: Authentication request timeout.
            request.timeout: The request timed out.
      security:
        - PureCloud OAuth:
            - outbound
      x-inin-requires-permissions:
        type: ANY
        permissions:
          - outbound:contact:add
      x-purecloud-method-name: postOutboundContactlistContacts
securityDefinitions:
  PureCloud OAuth:
    type: oauth2
    authorizationUrl: https://login.mypurecloud.com/authorize
    flow: implicit
    scopes:
      all: All the scopes
  Guest Chat JWT:
    type: apiKey
    name: Authorization
    in: header
definitions:
  BatchEventResponse:
    type: object
    properties:
      errors:
        type: array
        description: A list of validation or server errors that occurred for posted events.
        items:
          $ref: '#/definitions/EventError'
  EventError:
    type: object
    properties:
      eventId:
        type: string
        description: The eventId (V4 UUID) for the event that encountered an error.
      message:
        type: string
        description: A message describing the error.
      retryable:
        type: boolean
        description: The event for this eventId can be resubmitted if this value is true.
  AudioState:
    type: object
    properties:
      canHear:
        type: boolean
        description: >-
          Indicates that this communication's audio allows its participant to
          hear others.
      canSpeak:
        type: boolean
        description: >-
          Indicates that this communication's audio allows others to hear this
          participant.
  AudioUpdatedEvent:
    type: object
    required:
      - audioState
      - communicationId
      - conversationId
      - eventDateTime
      - eventId
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      communicationId:
        type: string
        description: A unique Id (V4 UUID) identifying this communication
      audioState:
        description: The updated audioState for the target communication.
        $ref: '#/definitions/AudioState'
  BatchConversationEventRequest:
    type: object
    properties:
      endTransferEvents:
        type: array
        description: EndTransfer events for this batch
        items:
          $ref: '#/definitions/EndTransferEvent'
      phoneTransferEvents:
        type: array
        description: PhoneTransfer events for this batch
        items:
          $ref: '#/definitions/PhoneTransferEvent'
      progressTransferEvents:
        type: array
        description: ProgressTransfer events for this batch
        items:
          $ref: '#/definitions/ProgressTransferEvent'
      routingTransferEvents:
        type: array
        description: RoutingTransfer events for this batch
        items:
          $ref: '#/definitions/RoutingTransferEvent'
      userTransferEvents:
        type: array
        description: UserTransfer events for this batch
        items:
          $ref: '#/definitions/UserTransferEvent'
      communicationAnsweredEvents:
        type: array
        description: CommunicationAnswered events for this batch
        items:
          $ref: '#/definitions/CommunicationAnsweredEvent'
      communicationDispositionAppliedEvents:
        type: array
        description: CommunicationDispositionApplied events for this batch
        items:
          $ref: '#/definitions/CommunicationDispositionAppliedEvent'
      holdUpdatedEvents:
        type: array
        description: HoldUpdated events for this batch
        items:
          $ref: '#/definitions/HoldUpdatedEvent'
      externalEstablishedEvents:
        type: array
        description: ExternalEstablished events for this batch
        items:
          $ref: '#/definitions/ExternalEstablishedEvent'
      ivrEstablishedEvents:
        type: array
        description: IvrEstablished events for this batch
        items:
          $ref: '#/definitions/IvrEstablishedEvent'
      phoneEstablishedEvents:
        type: array
        description: PhoneEstablished events for this batch
        items:
          $ref: '#/definitions/PhoneEstablishedEvent'
      routingEstablishedEvents:
        type: array
        description: RoutingEstablished events for this batch
        items:
          $ref: '#/definitions/RoutingEstablishedEvent'
      userEstablishedEvents:
        type: array
        description: UserEstablished events for this batch
        items:
          $ref: '#/definitions/UserEstablishedEvent'
      audioUpdatedEvents:
        type: array
        description: AudioUpdated events for this batch
        items:
          $ref: '#/definitions/AudioUpdatedEvent'
      communicationEndedEvents:
        type: array
        description: CommunicationEnded events for this batch
        items:
          $ref: '#/definitions/CommunicationEndedEvent'
      consultTransferEvents:
        type: array
        description: ConsultTransfer events for this batch
        items:
          $ref: '#/definitions/ConsultTransferEvent'
      progressConsultTransferEvents:
        type: array
        description: ProgressConsultTransfer events for this batch
        items:
          $ref: '#/definitions/ProgressConsultTransferEvent'
      endConsultTransferEvents:
        type: array
        description: EndConsultTransfer events for this batch
        items:
          $ref: '#/definitions/EndConsultTransferEvent'
    description: A maximum of 100 events are allowed per request
  CommunicationAnsweredEvent:
    type: object
    required:
      - communicationId
      - conversationId
      - eventDateTime
      - eventId
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      communicationId:
        type: string
        description: A unique Id (V4 UUID) identifying this communication
  CommunicationDispositionAppliedEvent:
    type: object
    required:
      - communicationId
      - conversationId
      - eventDateTime
      - eventId
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      communicationId:
        type: string
        description: A unique Id (V4 UUID) identifying this communication
      code:
        type: string
        description: >-
          The wrapup-code (V4 UUID) used to disposition this interaction. If
          this value is not provided the disposition is considered skipped.
      notes:
        type: string
        description: >-
          Text entered by the agent to describe the interaction or disposition.
          Ignored if the disposition is considered skipped.
      tags:
        type: array
        description: >-
          The list of tags selected by the agent to describe the interaction or
          disposition. Ignored if the disposition is considered skipped.
        items:
          type: string
  CommunicationEndedEvent:
    type: object
    required:
      - communicationId
      - conversationId
      - disconnectType
      - eventDateTime
      - eventId
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      communicationId:
        type: string
        description: A unique Id (V4 UUID) identifying this communication
      disconnectType:
        type: string
        description: Indicates how this communication was ended.
        enum:
          - Error
          - Peer
          - Self
          - System
          - Transfer
          - TransferACD
          - TransferConference
          - TransferConsult
          - TransferUser
      destinationConversationId:
        type: string
        description: >-
          The id (V4 UUID) of the conversation that the communication is being
          moved to when conversations are merged.
  ConsultTransferEvent:
    type: object
    required:
      - conversationId
      - destinationCommunicationId
      - eventDateTime
      - eventId
      - initiatingCommunicationId
      - objectCommunicationId
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      initiatingCommunicationId:
        type: string
        description: >-
          The id (V4 UUID) of the communication representing the participant
          that is initiating the transfer.
      destinationCommunicationId:
        type: string
        description: The id (V4 UUID) of the communication that is being transferred to.
      objectCommunicationId:
        type: string
        description: The id (V4 UUID) of the communication that is being transferred.
  EndConsultTransferEvent:
    type: object
    required:
      - conversationId
      - eventDateTime
      - eventId
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
  EndTransferEvent:
    type: object
    required:
      - commandId
      - conversationId
      - eventDateTime
      - eventId
      - finalState
      - objectCommunicationId
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      commandId:
        type: string
        description: >-
          The id (V4 UUID) used to identify the transfer already started by the
          external platform.
      finalState:
        type: string
        description: >-
          Indicates whether the transfer completed successfully, was cancelled,
          or failed for some reason.
        enum:
          - Completed
          - Canceled
          - Failed
      objectCommunicationId:
        type: string
        description: The id (V4 UUID) of the communication that was being transferred.
  ExternalEstablishedEvent:
    type: object
    required:
      - communicationId
      - conversationId
      - eventDateTime
      - eventId
      - initialConfiguration
      - sourceConfiguration
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      communicationId:
        type: string
        description: A unique Id (V4 UUID) identifying this communication
      ani:
        type: string
        description: >-
          The automatic number identification if it is available for this
          conversation.
      aniName:
        type: string
        description: >-
          The automatic number identification name if it is available for this
          conversation.
      dnis:
        type: string
        description: >-
          The dialed number identification if it is available for this
          conversation.
      dnisName:
        type: string
        description: >-
          The dialed number identification name if it is available for this
          conversation.
      initialConfiguration:
        description: Metadata about this communication.
        $ref: '#/definitions/InitialConfiguration'
      sourceConfiguration:
        description: Metadata about the source of this communication's interaction.
        $ref: '#/definitions/SourceConfiguration'
  HoldUpdatedEvent:
    type: object
    required:
      - communicationId
      - conversationId
      - eventDateTime
      - eventId
      - held
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      communicationId:
        type: string
        description: A unique Id (V4 UUID) identifying this communication
      held:
        type: boolean
        description: Indicates whether this communication is held.
  InitialConfiguration:
    type: object
    properties:
      audioState:
        description: Indicates the initial audio state for the communication.
        $ref: '#/definitions/AudioState'
      alerting:
        type: boolean
        description: >-
          Indicates that this communication's initial state is alerting. If
          false, the communication started in a connected state.
      inbound:
        type: boolean
        description: >-
          Indicates the direction of this communication with respect to the
          contact center. `true` means the communication is INBOUND. `false`
          means the communication is OUTBOUND.
      invitedBy:
        type: string
        description: >-
          The id of the communication (the "peer") that "invited" this
          communication, if this occurred.
      recordingActive:
        type: boolean
        description: >-
          Indicates whether recording is active for this communication at
          creation.
      additionalInfo:
        type: object
        description: >-
          Additional metadata about this session which should be recorded by the
          platform but which will not be indexed or searchable. Primarily for
          diagnostic value. Any information that needs to be accessible through
          other components like Analytics should be moved to dedicated fields.
        additionalProperties:
          type: string
  IvrEstablishedEvent:
    type: object
    required:
      - communicationId
      - conversationId
      - eventDateTime
      - eventId
      - initialConfiguration
      - sourceConfiguration
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      communicationId:
        type: string
        description: A unique Id (V4 UUID) identifying this communication
      ivrPhoneNumber:
        type: string
        description: The phone number for this IVR, if any is known
      ivrName:
        type: string
        description: A displayable name for this IVR, if any is known.
      ani:
        type: string
        description: >-
          The automatic number identification if it is available for this
          conversation.
      dnis:
        type: string
        description: >-
          The dialed number identification if it is available for this
          conversation.
      initialConfiguration:
        description: Metadata about this communication.
        $ref: '#/definitions/InitialConfiguration'
      sourceConfiguration:
        description: Metadata about the source of this communication's interaction.
        $ref: '#/definitions/SourceConfiguration'
  PhoneEstablishedEvent:
    type: object
    required:
      - communicationId
      - conversationId
      - eventDateTime
      - eventId
      - initialConfiguration
      - sourceConfiguration
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      communicationId:
        type: string
        description: A unique Id (V4 UUID) identifying this communication
      phoneNumber:
        type: string
        description: The phone number for this phone.
      ani:
        type: string
        description: >-
          The automatic number identification if it is available for this
          conversation.
      dnis:
        type: string
        description: >-
          The dialed number identification if it is available for this
          conversation.
      initialConfiguration:
        description: Metadata about this communication.
        $ref: '#/definitions/InitialConfiguration'
      sourceConfiguration:
        description: Metadata about the source of this communication's interaction.
        $ref: '#/definitions/SourceConfiguration'
  PhoneTransferEvent:
    type: object
    required:
      - commandId
      - conversationId
      - destinationPhoneNumber
      - eventDateTime
      - eventId
      - initiatingCommunicationId
      - objectCommunicationId
      - targetCommunicationId
      - transferType
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      transferType:
        type: string
        description: Indicates the desired type of transfer.
        enum:
          - Attended
          - Unattended
      commandId:
        type: string
        description: >-
          The id (V4 UUID) used by the external platform to refer to the
          transfer in subsequent Transfer events.
      initiatingCommunicationId:
        type: string
        description: >-
          The id (V4 UUID) of the communication representing the participant
          that is initiating the transfer.
      targetCommunicationId:
        type: string
        description: >-
          The id (V4 UUID) of the communication that is being transferred away
          from. In many cases this will be the same as the
          `initiatingCommunicationId`.
      objectCommunicationId:
        type: string
        description: The id (V4 UUID) of the communication that is being transferred.
      destinationPhoneNumber:
        type: string
        description: >-
          The desired destination phone number that the object communication
          should be transferred to.
  ProgressConsultTransferEvent:
    type: object
    required:
      - conversationId
      - destinationCommunicationId
      - eventDateTime
      - eventId
      - initiatingCommunicationId
      - objectCommunicationId
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      initiatingCommunicationId:
        type: string
        description: >-
          The id (V4 UUID) of the communication representing the participant
          that is initiating the transfer.
      destinationCommunicationId:
        type: string
        description: The id (V4 UUID) of the communication that is being transferred to.
      objectCommunicationId:
        type: string
        description: The id (V4 UUID) of the communication that is being transferred.
  ProgressTransferEvent:
    type: object
    required:
      - commandId
      - conversationId
      - destinationCommunicationId
      - eventDateTime
      - eventId
      - objectCommunicationId
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      commandId:
        type: string
        description: >-
          The id (V4 UUID) used to identify the transfer already started by the
          external platform.
      objectCommunicationId:
        type: string
        description: The id (V4 UUID) of the communication that is being transferred.
      destinationCommunicationId:
        type: string
        description: The id (V4 UUID) of the communication that is being transferred to.
  RoutingEstablishedEvent:
    type: object
    required:
      - communicationId
      - conversationId
      - eventDateTime
      - eventId
      - initialConfiguration
      - queueId
      - sourceConfiguration
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      communicationId:
        type: string
        description: A unique Id (V4 UUID) identifying this communication
      phoneNumber:
        type: string
        description: >-
          Identifies the phone number used to reach this queue if it is
          different from the information that would be accessed by queueId.
      queueId:
        type: string
        description: The id (V4 UUID) of the queue that is routing this conversation.
      ani:
        type: string
        description: >-
          The automatic number identification if it is available for this
          conversation.
      dnis:
        type: string
        description: >-
          The dialed number identification if it is available for this
          conversation.
      skillIds:
        type: array
        description: >-
          The unique identifiers (V4 UUID) for the skills that should be used to
          determine the destination for the conversation.
        items:
          type: string
      languageId:
        type: string
        description: >-
          The unique identifier (V4 UUID) for the language that should be used
          to determine the destination for the conversation.
      initialConfiguration:
        description: Metadata about this communication.
        $ref: '#/definitions/InitialConfiguration'
      sourceConfiguration:
        description: Metadata about the source of this communication's interaction.
        $ref: '#/definitions/SourceConfiguration'
  RoutingTransferEvent:
    type: object
    required:
      - commandId
      - conversationId
      - destinationQueueId
      - eventDateTime
      - eventId
      - initiatingCommunicationId
      - objectCommunicationId
      - targetCommunicationId
      - transferType
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      transferType:
        type: string
        description: Indicates the desired type of transfer.
        enum:
          - Attended
          - Unattended
      commandId:
        type: string
        description: >-
          The id (V4 UUID) used by the external platform to refer to the
          transfer in subsequent *Transfer events.
      initiatingCommunicationId:
        type: string
        description: Indicates the desired type of transfer.
      targetCommunicationId:
        type: string
        description: >-
          The id (V4 UUID) of the communication that is being transferred away
          from. In many cases this will be the same as the
          `initiatingCommunicationId`.
      objectCommunicationId:
        type: string
        description: The id (V4 UUID) of the communication that is being transferred.
      destinationQueueId:
        type: string
        description: >-
          The id (V4 UUID) of the desired destination queue that the object
          communication should be transferred to.
      languageId:
        type: string
        description: >-
          The unique identifier (V4 UUID) for the language that should be used
          to determine the destination for the conversation.
      skillIds:
        type: array
        description: >-
          The unique identifiers (V4 UUID) for the skills that should be used to
          determine the destination for the conversation.
        items:
          type: string
  SourceConfiguration:
    type: object
    required:
      - interactionId
      - sourceId
    properties:
      sourceId:
        type: string
        description: >-
          Identifies the external platform that is the source of the
          conversation.
      interactionId:
        type: string
        description: >-
          The customer's unique external identifier associated with the
          conversation that comes from the external platform.
      tagId:
        type: string
        description: >-
          The customer's external identifier or tag associated with the
          conversation. If set, it will be used to tag the conversation.
  UserEstablishedEvent:
    type: object
    required:
      - communicationId
      - conversationId
      - eventDateTime
      - eventId
      - initialConfiguration
      - sourceConfiguration
      - userId
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      communicationId:
        type: string
        description: A unique Id (V4 UUID) identifying this communication
      phoneNumber:
        type: string
        description: >-
          Identifies the phone number used to reach this user if it is different
          from the information that would be accessed by userId.
      userId:
        type: string
        description: The userId (V4 UUID) for the user this communication belongs to.
      stationId:
        type: string
        description: >-
          A Station ID (V4 UUID) that identifies the station being used if the
          user is using a station and the stationId is known.
      ani:
        type: string
        description: >-
          The automatic number identification if it is available for this
          conversation.
      dnis:
        type: string
        description: >-
          The dialed number identification if it is available for this
          conversation.
      afterCallWorkRequired:
        type: boolean
        description: >-
          Indicates whether or not this user will be required to complete after
          call work.
      queueId:
        type: string
        description: >-
          The id (V4 UUID) of the queue that the user is calling on behalf of.
          Applies to outbound calls only.
      initialConfiguration:
        description: Metadata about this communication.
        $ref: '#/definitions/InitialConfiguration'
      sourceConfiguration:
        description: Metadata about the source of this communication's interaction.
        $ref: '#/definitions/SourceConfiguration'
  UserTransferEvent:
    type: object
    required:
      - commandId
      - conversationId
      - destinationUserId
      - eventDateTime
      - eventId
      - initiatingCommunicationId
      - objectCommunicationId
      - targetCommunicationId
      - transferType
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: A unique Id (V4 UUID) identifying this conversation
      transferType:
        type: string
        description: Indicates the desired type of transfer.
        enum:
          - Attended
          - Unattended
      commandId:
        type: string
        description: >-
          The id (V4 UUID) used by the external platform to refer to the
          transfer in subsequent Transfer events.
      initiatingCommunicationId:
        type: string
        description: >-
          The id (V4 UUID) of the communication representing the participant
          that is initiating the transfer.
      targetCommunicationId:
        type: string
        description: >-
          The id (V4 UUID) of the communication that is being transferred away
          from. In many cases this will be the same as the
          `initiatingCommunicationId`.
      objectCommunicationId:
        type: string
        description: The id (V4 UUID) of the communication that is being transferred.
      destinationUserId:
        type: string
        description: >-
          The id (V4 UUID) of the desired destination user that the object
          communication should be transferred to.
  BatchUserRoutingStatusEventRequest:
    type: object
    properties:
      userRoutingStatusEvents:
        type: array
        description: UserRoutingStatus events for this batch
        items:
          $ref: '#/definitions/UserRoutingStatusEvent'
    description: A maximum of 100 events are allowed per request
  UserRoutingStatusEvent:
    type: object
    required:
      - agentId
      - eventDateTime
      - eventId
      - sourceId
      - status
    properties:
      eventId:
        type: string
        description: A unique (UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A timestamp as epoch representing the time this event occurred. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      agentId:
        type: string
        description: Unique identifier of the agent.
      status:
        type: string
        description: The agent's current routing status.
        enum:
          - OffQueue
          - Idle
          - Interacting
          - Communicating
          - NotResponding
      sourceId:
        type: string
        description: The agent's source platform Id.
  BatchUserPresenceEventRequest:
    type: object
    properties:
      userPresenceEvents:
        type: array
        description: UserPresence events for this batch
        items:
          $ref: '#/definitions/UserPresenceEvent'
    description: A maximum of 100 events are allowed per request
  UserPresenceEvent:
    type: object
    required:
      - eventDateTime
      - eventId
      - sourceId
      - userId
    properties:
      eventId:
        type: string
        description: A unique (V4 UUID) eventId for this event
      eventDateTime:
        type: string
        format: date-time
        description: >-
          A Date Time representing the time this event occurred. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      userId:
        type: string
        description: The User ID of the user associated with this UserPresence
      sourceId:
        type: string
        description: The id (V4 UUID) of the presence source being updated
      presenceDefinitionId:
        type: string
        description: >-
          The id (UUID) of the presence definition that the user presence is
          associated with
      message:
        type: string
        description: The message associated with the presence
  AuthzDivision:
    type: object
    required:
      - description
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      description:
        type: string
        description: A helpful description for the division.
      homeDivision:
        type: boolean
        description: >-
          A flag indicating whether this division is the "Home" (default)
          division. Cannot be modified and any supplied value will be ignored on
          create or update.
        readOnly: true
      objectCounts:
        type: object
        description: A count of objects in this division, grouped by type.
        readOnly: true
        additionalProperties:
          type: integer
          format: int64
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  AuthzDivisionEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/AuthzDivision'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  DomainEntityRef:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      selfUri:
        type: string
        format: uri
  Entity:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
  NamedEntity:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the object.
        readOnly: true
  OrgOAuthClient:
    type: object
    required:
      - authorizedGrantType
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the OAuth client.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date this client was created. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date this client was last modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: User that created this client
        $ref: '#/definitions/DomainEntityRef'
      modifiedBy:
        description: User that last modified this client
        $ref: '#/definitions/DomainEntityRef'
      authorizedGrantType:
        type: string
        description: >
          The OAuth Grant/Client type supported by this client.

          Code Authorization Grant/Client type - Preferred client type where the
          Client ID and Secret are required to create tokens. Used where the
          secret can be secured.

          PKCE-Enabled Code Authorization grant type - Code grant type which
          requires PKCE challenge and verifier to create tokens. Used in public
          clients for increased security.

          Implicit grant type - Client ID only is required to create tokens.
          Used in browser and mobile apps where the secret can not be secured.

          SAML2-Bearer extension grant type - SAML2 assertion provider for user
          authentication at the token endpoint.

          Client Credential grant type - Used to created access tokens that are
          tied only to the client.
        enum:
          - CODE
          - TOKEN
          - SAML2-BEARER
          - PASSWORD
          - CLIENT-CREDENTIALS
      scope:
        type: array
        description: >-
          The scope requested by this client. Scopes only apply to clients not
          using the client_credential grant
        items:
          type: string
      roleDivisions:
        type: array
        description: >-
          Set of roles and their corresponding divisions associated with this
          client. Roles and divisions only apply to clients using the
          client_credential grant
        uniqueItems: true
        items:
          $ref: '#/definitions/RoleDivision'
      state:
        type: string
        description: >-
          The state of the OAuth client.

          Active: The OAuth client can be used to create access tokens. This is
          the default state.

          Disabled: Access tokens created by the client are invalid and new ones
          cannot be created.

          Inactive: Access tokens cannot be created with this OAuth client and
          it will be deleted.
        enum:
          - active
          - disabled
          - inactive
      dateToDelete:
        type: string
        format: date-time
        description: >-
          The time at which this client will be deleted. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      organization:
        description: The  oauth client's organization.
        readOnly: true
        $ref: '#/definitions/NamedEntity'
  RoleDivision:
    type: object
    required:
      - divisionId
      - roleId
    properties:
      roleId:
        type: string
        description: Role to be associated with the given division which forms a grant
      divisionId:
        type: string
        description: Division associated with the given role which forms a grant
  TokenInfo:
    type: object
    properties:
      organization:
        description: The current organization
        readOnly: true
        $ref: '#/definitions/NamedEntity'
      homeOrganization:
        description: The token's home organization
        readOnly: true
        $ref: '#/definitions/NamedEntity'
      authorizedScope:
        type: array
        description: The list of scopes authorized for the OAuth client
        readOnly: true
        items:
          type: string
      clonedUser:
        description: >-
          Only present when a user is a clone of trustee user in the trustor
          org.
        readOnly: true
        $ref: '#/definitions/TokenInfoClonedUser'
      OAuthClient:
        $ref: '#/definitions/OrgOAuthClient'
  TokenInfoClonedUser:
    type: object
    properties:
      id:
        type: string
        description: User id of the original native user
        readOnly: true
      organization:
        description: Organization of the original native user
        readOnly: true
        $ref: '#/definitions/Entity'
  Station:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      description:
        type: string
      status:
        type: string
        enum:
          - AVAILABLE
          - ASSOCIATED
      userId:
        type: string
        description: >-
          The Id of the user currently logged in and associated with the
          station.
      webRtcUserId:
        type: string
        description: >-
          The Id of the user configured for the station if it is of type
          inin_webrtc_softphone. Empty if station type is not
          inin_webrtc_softphone.
      primaryEdge:
        $ref: '#/definitions/DomainEntityRef'
      secondaryEdge:
        $ref: '#/definitions/DomainEntityRef'
      type:
        type: string
      lineAppearanceId:
        type: string
      webRtcMediaDscp:
        type: integer
        format: int32
        description: >-
          The default or configured value of media dscp for the station. Empty
          if station type is not inin_webrtc_softphone.
        readOnly: true
      webRtcPersistentEnabled:
        type: boolean
        description: >-
          The default or configured value of persistent connection setting for
          the station. Empty if station type is not inin_webrtc_softphone.
        readOnly: true
      webRtcForceTurn:
        type: boolean
        description: >-
          Whether the station is configured to require TURN for routing WebRTC
          calls. Empty if station type is not inin_webrtc_softphone.
        readOnly: true
      webRtcCallAppearances:
        type: integer
        format: int32
        description: The number of call appearances on the station.
        readOnly: true
      webRtcRequireMediaHelper:
        type: boolean
        description: True when the media helper required.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  StationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Station'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ActiveAlertCount:
    type: object
    properties:
      count:
        type: integer
        format: int32
        description: The count of active alerts for a user.
  AddressableEntityRef:
    type: object
    properties:
      id:
        type: string
      selfUri:
        type: string
        format: uri
  Biography:
    type: object
    properties:
      biography:
        type: string
        description: Personal detailed description
      interests:
        type: array
        items:
          type: string
      hobbies:
        type: array
        items:
          type: string
      spouse:
        type: string
      education:
        type: array
        description: User education details
        items:
          $ref: '#/definitions/Education'
  Chat:
    type: object
    properties:
      jabberId:
        type: string
  Contact:
    type: object
    properties:
      address:
        type: string
        description: Email address or phone number for this contact type
      display:
        type: string
        description: Formatted version of the address property
        readOnly: true
      mediaType:
        type: string
        enum:
          - PHONE
          - EMAIL
          - SMS
      type:
        type: string
        enum:
          - PRIMARY
          - WORK
          - WORK2
          - WORK3
          - WORK4
          - HOME
          - MOBILE
          - MAIN
          - OTHER
      extension:
        type: string
        description: >-
          Use internal extension instead of address. Mutually exclusive with the
          address field.
      countryCode:
        type: string
      integration:
        type: string
        example: microsoftteams
        description: >-
          Integration tag value if this number is associated with an external
          integration.
  Division:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DomainRole:
    type: object
    properties:
      id:
        type: string
        description: The ID of the role
      name:
        type: string
        description: The name of the role
  Education:
    type: object
    properties:
      school:
        type: string
      fieldOfStudy:
        type: string
      notes:
        type: string
        description: Notes about education has a 2000 character limit
      dateStart:
        type: string
        format: date
        description: 'Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd'
      dateEnd:
        type: string
        format: date
        description: 'Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd'
  EmployerInfo:
    type: object
    properties:
      officialName:
        type: string
      employeeId:
        type: string
      employeeType:
        type: string
      dateHire:
        type: string
  Geolocation:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      type:
        type: string
        description: >-
          A string used to describe the type of client the geolocation is being
          updated from e.g. ios, android, web, etc.
      primary:
        type: boolean
        description: >-
          A boolean used to tell whether or not to set this geolocation client
          as the primary on a PATCH
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      country:
        type: string
      region:
        type: string
      city:
        type: string
      locations:
        type: array
        items:
          $ref: '#/definitions/LocationDefinition'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Group:
    type: object
    required:
      - name
      - rulesVisible
      - type
      - visibility
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The group name.
      description:
        type: string
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified date/time. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      memberCount:
        type: integer
        format: int64
        description: Number of members.
        readOnly: true
      state:
        type: string
        description: Active, inactive, or deleted state.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      version:
        type: integer
        format: int32
        description: Current version for this resource.
        readOnly: true
      type:
        type: string
        description: Type of group.
        enum:
          - official
          - social
      images:
        type: array
        items:
          $ref: '#/definitions/UserImage'
      addresses:
        type: array
        items:
          $ref: '#/definitions/GroupContact'
      rulesVisible:
        type: boolean
        description: >-
          Are membership rules visible to the person requesting to view the
          group
      visibility:
        type: string
        description: Who can view this group
        enum:
          - public
          - owners
          - members
      owners:
        type: array
        description: Owners of the group
        items:
          $ref: '#/definitions/User'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  GroupContact:
    type: object
    required:
      - address
      - mediaType
      - type
    properties:
      address:
        type: string
        description: Phone number for this contact type
      extension:
        type: string
        description: Extension is set if the number is e164 valid
      display:
        type: string
        description: Formatted version of the address property
        readOnly: true
      type:
        type: string
        description: Contact type of the address
        enum:
          - GROUPRING
          - GROUPPHONE
      mediaType:
        type: string
        description: Media type of the address
        enum:
          - PHONE
  InteractionStatsAlert:
    type: object
    required:
      - alertTypes
      - dimension
      - dimensionValue
      - mediaType
      - metric
      - name
      - notificationUsers
      - numericRange
      - ruleId
      - startDate
      - statistic
      - unread
      - value
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: Name of the rule that generated the alert
        readOnly: true
      dimension:
        type: string
        description: The dimension of concern.
        readOnly: true
        enum:
          - queueId
          - userId
      dimensionValue:
        type: string
        description: The value of the dimension.
        readOnly: true
      metric:
        type: string
        description: The metric to be assessed.
        readOnly: true
        enum:
          - tAbandon
          - tAnswered
          - tTalk
          - nOffered
          - tHandle
          - nTransferred
          - oServiceLevel
          - tWait
          - tHeld
          - tAcw
      mediaType:
        type: string
        description: The media type.
        readOnly: true
        enum:
          - voice
          - chat
          - email
          - callback
          - message
      numericRange:
        type: string
        description: The comparison descriptor used against the metric's value.
        readOnly: true
        enum:
          - gt
          - gte
          - lt
          - lte
          - eq
          - ne
      statistic:
        type: string
        description: The statistic of concern for the metric.
        readOnly: true
        enum:
          - count
          - min
          - ratio
          - max
      value:
        type: number
        format: double
        description: The threshold value.
        readOnly: true
      ruleId:
        type: string
        description: The id of the rule.
        readOnly: true
      unread:
        type: boolean
        description: Indicates if the alert has been read.
      startDate:
        type: string
        format: date-time
        description: >-
          The date/time the alert was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      endDate:
        type: string
        format: date-time
        description: >-
          The date/time the owning rule exiting in alarm status. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      notificationUsers:
        type: array
        description: The ids of users who were notified of alarm state change.
        readOnly: true
        uniqueItems: true
        items:
          $ref: '#/definitions/User'
      alertTypes:
        type: array
        description: A collection of notification methods.
        readOnly: true
        uniqueItems: true
        items:
          type: string
          enum:
            - SMS
            - DEVICE
            - EMAIL
      ruleUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Location:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for the location
      floorplanId:
        type: string
        description: Unique identifier for the location floorplan image
        readOnly: true
      coordinates:
        type: object
        description: >-
          Users coordinates on the floorplan. Only used when floorplanImage is
          set
        additionalProperties:
          type: number
          format: double
      notes:
        type: string
        description: Optional description on the users location
      locationDefinition:
        $ref: '#/definitions/LocationDefinition'
  LocationAddress:
    type: object
    properties:
      city:
        type: string
      country:
        type: string
      countryName:
        type: string
      state:
        type: string
      street1:
        type: string
      street2:
        type: string
      zipcode:
        type: string
  LocationAddressVerificationDetails:
    type: object
    properties:
      status:
        type: string
        description: Status of address verification process
        enum:
          - Pending
          - InProgress
          - Retry
          - Complete
          - Failed
      dateFinished:
        type: string
        format: date-time
        description: >-
          Finished time of address verification process. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateStarted:
        type: string
        format: date-time
        description: >-
          Time started of address verification process. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      service:
        type: string
        example: smartystreets-us
        description: Third party service used for address verification
  LocationDefinition:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      contactUser:
        description: Site contact for the location entity
        $ref: '#/definitions/AddressableEntityRef'
      emergencyNumber:
        description: Emergency number for the location entity
        $ref: '#/definitions/LocationEmergencyNumber'
      address:
        $ref: '#/definitions/LocationAddress'
      state:
        type: string
        description: Current state of the location entity
        enum:
          - active
          - deleted
      notes:
        type: string
        description: Notes for the location entity
      version:
        type: integer
        format: int32
        description: >-
          Current version of the location entity, value to be supplied should be
          retrieved by a GET or on create/update response
      path:
        type: array
        description: A list of ancestor IDs in order
        readOnly: true
        items:
          type: string
      profileImage:
        type: array
        description: >-
          Profile image of the location entity, retrieved with ?expand=images
          query parameter
        readOnly: true
        items:
          $ref: '#/definitions/LocationImage'
      floorplanImage:
        type: array
        description: >-
          Floorplan images of the location entity, retrieved with ?expand=images
          query parameter
        readOnly: true
        items:
          $ref: '#/definitions/LocationImage'
      addressVerificationDetails:
        description: >-
          Address verification information, retrieve dwith the
          ?expand=addressVerificationDetails query parameter
        readOnly: true
        $ref: '#/definitions/LocationAddressVerificationDetails'
      addressVerified:
        type: boolean
        description: >-
          Boolean field which states if the address has been verified as an
          actual address
        readOnly: true
      addressStored:
        type: boolean
        description: Boolean field which states if the address has been stored for E911
        readOnly: true
      images:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LocationEmergencyNumber:
    type: object
    properties:
      e164:
        type: string
      number:
        type: string
      type:
        type: string
        description: The type of emergency number.
        enum:
          - default
          - elin
  LocationImage:
    type: object
    properties:
      resolution:
        type: string
        description: 'Height and/or width of image. ex: 640x480 or x128'
      imageUri:
        type: string
  MediaSummary:
    type: object
    properties:
      contactCenter:
        $ref: '#/definitions/MediaSummaryDetail'
      enterprise:
        $ref: '#/definitions/MediaSummaryDetail'
  MediaSummaryDetail:
    type: object
    properties:
      active:
        type: integer
        format: int32
      acw:
        type: integer
        format: int32
  OAuthLastTokenIssued:
    type: object
    properties:
      dateIssued:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  OutOfOffice:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      user:
        $ref: '#/definitions/User'
      startDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      active:
        type: boolean
      indefinite:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PresenceDefinition:
    type: object
    properties:
      id:
        type: string
        description: description
      systemPresence:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ResourceConditionNode:
    type: object
    properties:
      variableName:
        type: string
      conjunction:
        type: string
        enum:
          - AND
          - OR
      operator:
        type: string
        enum:
          - EQ
          - IN
          - GE
          - GT
          - LE
          - LT
      operands:
        type: array
        items:
          $ref: '#/definitions/ResourceConditionValue'
      terms:
        type: array
        items:
          $ref: '#/definitions/ResourceConditionNode'
  ResourceConditionValue:
    type: object
    properties:
      type:
        type: string
        enum:
          - SCALAR
          - VARIABLE
          - USER
          - QUEUE
      value:
        type: string
  ResourcePermissionPolicy:
    type: object
    properties:
      id:
        type: string
      domain:
        type: string
      entityName:
        type: string
      policyName:
        type: string
      policyDescription:
        type: string
      actionSetKey:
        type: string
      allowConditions:
        type: boolean
      resourceConditionNode:
        $ref: '#/definitions/ResourceConditionNode'
      namedResources:
        type: array
        items:
          type: string
      resourceCondition:
        type: string
      actionSet:
        type: array
        uniqueItems: true
        items:
          type: string
  RoutingStatus:
    type: object
    properties:
      userId:
        type: string
        description: The userId of the agent
      status:
        type: string
        description: >-
          Indicates the Routing State of the agent.  A value of OFF_QUEUE will
          be returned if the specified user does not exist.
        enum:
          - OFF_QUEUE
          - IDLE
          - INTERACTING
          - NOT_RESPONDING
          - COMMUNICATING
      startTime:
        type: string
        format: date-time
        description: >-
          The timestamp when the agent went into this state. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  Team:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The team name
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      description:
        type: string
        description: Team information.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Last modified datetime. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified datetime. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      memberCount:
        type: integer
        format: int64
        description: Number of members in a team
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  User:
    type: object
    required:
      - version
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      chat:
        $ref: '#/definitions/Chat'
      department:
        type: string
      email:
        type: string
      primaryContactInfo:
        type: array
        description: Auto populated from addresses.
        readOnly: true
        items:
          $ref: '#/definitions/Contact'
      addresses:
        type: array
        description: Email addresses and phone numbers for this user
        items:
          $ref: '#/definitions/Contact'
      state:
        type: string
        description: The current state for this user.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      title:
        type: string
      username:
        type: string
      manager:
        $ref: '#/definitions/User'
      images:
        type: array
        items:
          $ref: '#/definitions/UserImage'
      version:
        type: integer
        format: int32
        description: >-
          Required when updating a user, this value should be the current
          version of the user.  The current version can be obtained with a GET
          on the user before doing a PATCH.
      certifications:
        type: array
        items:
          type: string
      biography:
        $ref: '#/definitions/Biography'
      employerInfo:
        $ref: '#/definitions/EmployerInfo'
      routingStatus:
        description: ACD routing status
        readOnly: true
        $ref: '#/definitions/RoutingStatus'
      presence:
        description: Active presence
        readOnly: true
        $ref: '#/definitions/UserPresence'
      integrationPresence:
        description: Integration presence
        readOnly: true
        $ref: '#/definitions/UserPresence'
      conversationSummary:
        description: Summary of conversion statistics for conversation types.
        readOnly: true
        $ref: '#/definitions/UserConversationSummary'
      outOfOffice:
        description: Determine if out of office is enabled
        readOnly: true
        $ref: '#/definitions/OutOfOffice'
      geolocation:
        description: Current geolocation position
        readOnly: true
        $ref: '#/definitions/Geolocation'
      station:
        description: Effective, default, and last station information
        readOnly: true
        $ref: '#/definitions/UserStations'
      authorization:
        description: Roles and permissions assigned to the user
        readOnly: true
        $ref: '#/definitions/UserAuthorization'
      profileSkills:
        type: array
        description: Profile skills possessed by the user
        readOnly: true
        items:
          type: string
      locations:
        type: array
        description: The user placement at each site location.
        readOnly: true
        items:
          $ref: '#/definitions/Location'
      groups:
        type: array
        description: The groups the user is a member of
        readOnly: true
        items:
          $ref: '#/definitions/Group'
      team:
        description: The team the user is a member of
        readOnly: true
        $ref: '#/definitions/Team'
      skills:
        type: array
        description: Routing (ACD) skills possessed by the user
        readOnly: true
        items:
          $ref: '#/definitions/UserRoutingSkill'
      languages:
        type: array
        description: Routing (ACD) languages possessed by the user
        readOnly: true
        items:
          $ref: '#/definitions/UserRoutingLanguage'
      acdAutoAnswer:
        type: boolean
        description: acd auto answer
      languagePreference:
        type: string
        description: preferred language by the user
        readOnly: true
      lastTokenIssued:
        $ref: '#/definitions/OAuthLastTokenIssued'
      dateLastLogin:
        type: string
        format: date-time
        description: >-
          The last time the user logged in using username and password. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UserAuthorization:
    type: object
    properties:
      roles:
        type: array
        items:
          $ref: '#/definitions/DomainRole'
      unusedRoles:
        type: array
        description: A collection of the roles the user is not using
        readOnly: true
        items:
          $ref: '#/definitions/DomainRole'
      permissions:
        type: array
        description: A collection of the permissions granted by all assigned roles
        readOnly: true
        items:
          type: string
      permissionPolicies:
        type: array
        description: The policies configured for assigned permissions.
        readOnly: true
        items:
          $ref: '#/definitions/ResourcePermissionPolicy'
  UserConversationSummary:
    type: object
    properties:
      userId:
        type: string
      call:
        $ref: '#/definitions/MediaSummary'
      callback:
        $ref: '#/definitions/MediaSummary'
      email:
        $ref: '#/definitions/MediaSummary'
      message:
        $ref: '#/definitions/MediaSummary'
      chat:
        $ref: '#/definitions/MediaSummary'
      socialExpression:
        $ref: '#/definitions/MediaSummary'
      video:
        $ref: '#/definitions/MediaSummary'
  UserImage:
    type: object
    properties:
      resolution:
        type: string
        description: 'Height and/or width of image. ex: 640x480 or x128'
      imageUri:
        type: string
  UserPresence:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      source:
        type: string
        description: >-
          Represents the source where the Presence was set. Some examples are:
          PURECLOUD, LYNC, OUTLOOK, etc.
      primary:
        type: boolean
        description: >-
          A boolean used to tell whether or not to set this presence source as
          the primary on a PATCH
      presenceDefinition:
        $ref: '#/definitions/PresenceDefinition'
      message:
        type: string
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UserRoutingLanguage:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      proficiency:
        type: number
        format: double
        description: >-
          A rating from 0.0 to 5.0 that indicates how fluent an agent is in a
          particular language. ACD interactions are routed to agents with higher
          proficiency ratings.
      state:
        type: string
        description: Activate or deactivate this routing language.
        enum:
          - active
          - inactive
          - deleted
      languageUri:
        type: string
        format: uri
        description: URI to the organization language used by this user language.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: >-
      Represents an organization language assigned to a user. When assigning to
      a user specify the organization language id as the id.
  UserRoutingSkill:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      proficiency:
        type: number
        format: double
        description: >-
          A rating from 0.0 to 5.0 that indicates how adept an agent is at a
          particular skill. When "Best available skills" is enabled for a queue
          in Genesys Cloud, ACD interactions in that queue are routed to agents
          with higher proficiency ratings.
      state:
        type: string
        description: Activate or deactivate this routing skill.
        enum:
          - active
          - inactive
          - deleted
      skillUri:
        type: string
        format: uri
        description: URI to the organization skill used by this user skill.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: >-
      Represents an organization skill assigned to a user. When assigning to a
      user specify the organization skill id as the id.
  UserStation:
    type: object
    properties:
      id:
        type: string
        description: A globally unique identifier for this station
        readOnly: true
      name:
        type: string
      type:
        type: string
      associatedUser:
        $ref: '#/definitions/User'
      associatedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      defaultUser:
        $ref: '#/definitions/User'
      providerInfo:
        type: object
        description: >-
          Provider-specific info for this station, e.g. { "edgeGroupId":
          "ffe7b15c-a9cc-4f4c-88f5-781327819a49" }
        additionalProperties:
          type: string
      webRtcCallAppearances:
        type: integer
        format: int32
        description: The number of call appearances on the station.
        readOnly: true
  UserStations:
    type: object
    properties:
      associatedStation:
        description: Current associated station for this user.
        readOnly: true
        $ref: '#/definitions/UserStation'
      effectiveStation:
        description: >-
          The station where the user can be reached based on their default and
          associated station.
        readOnly: true
        $ref: '#/definitions/UserStation'
      defaultStation:
        description: Default station to be used if not associated with a station.
        readOnly: true
        $ref: '#/definitions/UserStation'
      lastAssociatedStation:
        description: Last associated station for this user.
        readOnly: true
        $ref: '#/definitions/UserStation'
  WritableDivision:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      name:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UnreadStatus:
    type: object
    properties:
      unread:
        type: boolean
        description: Sets if the alert is read or unread.
  InteractionStatsAlertContainer:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/InteractionStatsAlert'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  InteractionStatsRule:
    type: object
    required:
      - alertTypes
      - dimension
      - dimensionValue
      - enabled
      - mediaType
      - metric
      - name
      - notificationUsers
      - numericRange
      - statistic
      - value
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: Name of the rule
      dimension:
        type: string
        description: The dimension of concern.
        enum:
          - queueId
          - userId
      dimensionValue:
        type: string
        description: The value of the dimension.
      metric:
        type: string
        description: The metric to be assessed.
        enum:
          - tAbandon
          - tAnswered
          - tTalk
          - nOffered
          - tHandle
          - nTransferred
          - oServiceLevel
          - tWait
          - tHeld
          - tAcw
      mediaType:
        type: string
        description: The media type.
        enum:
          - voice
          - chat
          - email
          - callback
          - message
      numericRange:
        type: string
        description: The comparison descriptor used against the metric's value.
        enum:
          - gt
          - gte
          - lt
          - lte
          - eq
          - ne
      statistic:
        type: string
        description: The statistic of concern for the metric.
        enum:
          - count
          - min
          - ratio
          - max
      value:
        type: number
        format: double
        description: The threshold value.
      enabled:
        type: boolean
        description: Indicates if the rule is enabled.
      inAlarm:
        type: boolean
        description: Indicates if the rule is in alarm state.
        readOnly: true
      notificationUsers:
        type: array
        description: The ids of users who will be notified of alarm state change.
        uniqueItems: true
        items:
          $ref: '#/definitions/User'
      alertTypes:
        type: array
        description: A collection of notification methods.
        uniqueItems: true
        items:
          type: string
          enum:
            - SMS
            - DEVICE
            - EMAIL
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  InteractionStatsRuleContainer:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/InteractionStatsRule'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  UnreadMetric:
    type: object
    properties:
      count:
        type: integer
        format: int32
        description: The count of unread alerts for a specific rule type.
  ActionAggregateDataContainer:
    type: object
    properties:
      group:
        type: object
        description: A mapping from dimension to value
        additionalProperties:
          type: string
      data:
        type: array
        items:
          $ref: '#/definitions/StatisticalResponse'
  ActionAggregateQueryResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/ActionAggregateDataContainer'
  AggregateMetricData:
    type: object
    properties:
      metric:
        type: string
      qualifier:
        type: string
      stats:
        $ref: '#/definitions/StatisticalSummary'
  AggregateViewData:
    type: object
    properties:
      name:
        type: string
      stats:
        $ref: '#/definitions/StatisticalSummary'
  StatisticalResponse:
    type: object
    properties:
      interval:
        type: string
      metrics:
        type: array
        items:
          $ref: '#/definitions/AggregateMetricData'
      views:
        type: array
        items:
          $ref: '#/definitions/AggregateViewData'
  StatisticalSummary:
    type: object
    properties:
      max:
        type: number
      min:
        type: number
      count:
        type: integer
        format: int64
      countNegative:
        type: integer
        format: int64
      countPositive:
        type: integer
        format: int64
      sum:
        type: number
      current:
        type: number
      ratio:
        type: number
      numerator:
        type: number
      denominator:
        type: number
      target:
        type: number
      p95:
        type: integer
        format: int64
      p99:
        type: integer
        format: int64
  ActionAggregateQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/ActionAggregateQueryPredicate'
  ActionAggregateQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/ActionAggregateQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/ActionAggregateQueryPredicate'
  ActionAggregateQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - actionCategory
          - actionId
          - actionName
          - correlationId
          - errorType
          - integrationId
          - integrationName
          - responseStatus
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension predicates
        $ref: '#/definitions/NumericRange'
  ActionAggregationQuery:
    type: object
    required:
      - interval
      - metrics
    properties:
      interval:
        type: string
        description: >-
          Behaves like one clause in a SQL WHERE. Specifies the date and time
          range of data being queried. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      granularity:
        type: string
        description: >-
          Granularity aggregates metrics into subpartitions within the time
          interval specified. The default granularity is the same duration as
          the interval. Periods are represented as an ISO-8601 string. For
          example: P1D or P1DT12H
      timeZone:
        type: string
        description: >-
          Time zone context used to calculate response intervals (this allows
          resolving DST changes). The interval offset is used even when timeZone
          is specified. Default is UTC. Time zones are represented as a string
          of the zone name as found in the IANA time zone database. For example:
          UTC, Etc/UTC, or Europe/London
      groupBy:
        type: array
        description: >-
          Behaves like a SQL GROUPBY. Allows for multiple levels of grouping as
          a list of dimensions. Partitions resulting aggregate computations into
          distinct named subgroups rather than across the entire result set as
          if it were one group.
        items:
          type: string
          enum:
            - actionCategory
            - actionId
            - actionName
            - correlationId
            - errorType
            - integrationId
            - integrationName
            - responseStatus
      filter:
        description: >-
          Behaves like a SQL WHERE clause. This is ANDed with the interval
          parameter. Expresses boolean logical predicates as well as dimensional
          filters
        $ref: '#/definitions/ActionAggregateQueryFilter'
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Only named metrics will be
          retrieved.
        items:
          type: string
          enum:
            - tTotalExecution
      flattenMultivaluedDimensions:
        type: boolean
        description: >-
          Flattens any multivalued dimensions used in response groups (e.g.
          ['a','b','c']->'a,b,c')
      views:
        type: array
        description: Custom derived metric views
        items:
          $ref: '#/definitions/ActionAggregationView'
      alternateTimeDimension:
        type: string
        description: >-
          Dimension to use as the alternative timestamp for data in the
          aggregate.  Choosing "eventTime" uses the actual time of the data
          event.
        enum:
          - eventTime
  ActionAggregationView:
    type: object
    required:
      - function
      - name
      - target
    properties:
      target:
        type: string
        description: Target metric name
        enum:
          - tTotalExecution
      name:
        type: string
        description: >-
          A unique name for this view. Must be distinct from other views and
          built-in metric names.
      function:
        type: string
        description: Type of view you wish to create
        enum:
          - rangeBound
      range:
        description: Range of numbers for slicing up data
        $ref: '#/definitions/AggregationRange'
  AggregationRange:
    type: object
    properties:
      gte:
        type: number
        description: Greater than or equal to
      lt:
        type: number
        description: Less than
  NumericRange:
    type: object
    properties:
      gt:
        type: number
        description: Greater than
      gte:
        type: number
        description: Greater than or equal to
      lt:
        type: number
        description: Less than
      lte:
        type: number
        description: Less than or equal to
  AsyncQueryResponse:
    type: object
    properties:
      jobId:
        type: string
        description: >-
          Unique identifier for the async query execution. Can be used to check
          the status of the query and retrieve results.
  AsyncQueryStatus:
    type: object
    properties:
      state:
        type: string
        description: The current state of the asynchronous query
        enum:
          - QUEUED
          - PENDING
          - FAILED
          - CANCELLED
          - FULFILLED
          - EXPIRED
      errorMessage:
        type: string
        description: The error associated with the current query, if the state is FAILED
      expirationDate:
        type: string
        format: date-time
        description: >-
          The time at which results for this query will expire. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      submissionDate:
        type: string
        format: date-time
        description: >-
          The time at which the query was submitted. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      completionDate:
        type: string
        format: date-time
        description: >-
          The time at which the query completed. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  BotAggregateDataContainer:
    type: object
    properties:
      group:
        type: object
        description: A mapping from dimension to value
        additionalProperties:
          type: string
      data:
        type: array
        items:
          $ref: '#/definitions/StatisticalResponse'
  BotAggregateQueryResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/BotAggregateDataContainer'
  BotAggregateQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/BotAggregateQueryPredicate'
  BotAggregateQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/BotAggregateQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/BotAggregateQueryPredicate'
  BotAggregateQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - askActionId
          - askActionResult
          - botFinalIntent
          - botId
          - botIntent
          - botProduct
          - botProvider
          - botRecognitionFailureReason
          - botResult
          - botSessionId
          - botSlot
          - botVersion
          - conversationId
          - externalContactId
          - knowledgeBaseId
          - languageCode
          - lastActionId
          - lastInputActionId
          - mediaType
          - messageType
          - selfServed
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension predicates
        $ref: '#/definitions/NumericRange'
  BotAggregationQuery:
    type: object
    required:
      - interval
      - metrics
    properties:
      interval:
        type: string
        description: >-
          Behaves like one clause in a SQL WHERE. Specifies the date and time
          range of data being queried. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      granularity:
        type: string
        description: >-
          Granularity aggregates metrics into subpartitions within the time
          interval specified. The default granularity is the same duration as
          the interval. Periods are represented as an ISO-8601 string. For
          example: P1D or P1DT12H
      timeZone:
        type: string
        description: >-
          Time zone context used to calculate response intervals (this allows
          resolving DST changes). The interval offset is used even when timeZone
          is specified. Default is UTC. Time zones are represented as a string
          of the zone name as found in the IANA time zone database. For example:
          UTC, Etc/UTC, or Europe/London
      groupBy:
        type: array
        description: >-
          Behaves like a SQL GROUPBY. Allows for multiple levels of grouping as
          a list of dimensions. Partitions resulting aggregate computations into
          distinct named subgroups rather than across the entire result set as
          if it were one group.
        items:
          type: string
          enum:
            - askActionId
            - askActionResult
            - botFinalIntent
            - botId
            - botIntent
            - botProduct
            - botProvider
            - botRecognitionFailureReason
            - botResult
            - botSessionId
            - botSlot
            - botVersion
            - conversationId
            - externalContactId
            - knowledgeBaseId
            - languageCode
            - lastActionId
            - lastInputActionId
            - mediaType
            - messageType
            - selfServed
      filter:
        description: >-
          Behaves like a SQL WHERE clause. This is ANDed with the interval
          parameter. Expresses boolean logical predicates as well as dimensional
          filters
        $ref: '#/definitions/BotAggregateQueryFilter'
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Only named metrics will be
          retrieved.
        items:
          type: string
          enum:
            - nBotSessionTurns
            - nBotSessions
            - oBotIntent
            - oBotSessionQuery
            - oBotSessionQuerySelfServed
            - oBotSessionTurn
            - oBotSlot
            - tBotDisconnect
            - tBotExit
            - tBotRecognitionFailure
            - tBotSession
      flattenMultivaluedDimensions:
        type: boolean
        description: >-
          Flattens any multivalued dimensions used in response groups (e.g.
          ['a','b','c']->'a,b,c')
      views:
        type: array
        description: Custom derived metric views
        items:
          $ref: '#/definitions/BotAggregationView'
      alternateTimeDimension:
        type: string
        description: >-
          Dimension to use as the alternative timestamp for data in the
          aggregate.  Choosing "eventTime" uses the actual time of the data
          event.
        enum:
          - eventTime
  BotAggregationView:
    type: object
    required:
      - function
      - name
      - target
    properties:
      target:
        type: string
        description: Target metric name
        enum:
          - nBotSessionTurns
          - nBotSessions
          - oBotIntent
          - oBotSessionQuery
          - oBotSessionQuerySelfServed
          - oBotSessionTurn
          - oBotSlot
          - tBotDisconnect
          - tBotExit
          - tBotRecognitionFailure
          - tBotSession
      name:
        type: string
        description: >-
          A unique name for this view. Must be distinct from other views and
          built-in metric names.
      function:
        type: string
        description: Type of view you wish to create
        enum:
          - rangeBound
      range:
        description: Range of numbers for slicing up data
        $ref: '#/definitions/AggregationRange'
  AnalyticsAgentGroup:
    type: object
    properties:
      agentGroupId:
        type: string
        description: Conditional group routing agent group identifier
      agentGroupType:
        type: string
        description: Conditional group routing agent group type
        enum:
          - Group
          - SkillGroup
          - Team
  AnalyticsConversationSegment:
    type: object
    properties:
      audioMuted:
        type: boolean
        description: Flag indicating if audio is muted or not (true/false)
      conference:
        type: boolean
        description: Indicates whether the segment was a conference
      destinationConversationId:
        type: string
        description: >-
          The unique identifier of a new conversation when a conversation is
          ended for a conference
      destinationSessionId:
        type: string
        description: >-
          The unique identifier of a new session when a session is ended for a
          conference
      disconnectType:
        type: string
        description: The session disconnect type
        enum:
          - client
          - conferenceTransfer
          - consultTransfer
          - endpoint
          - error
          - forwardTransfer
          - noAnswerTransfer
          - notAvailableTransfer
          - other
          - peer
          - spam
          - system
          - timeout
          - transfer
          - transportFailure
          - uncallable
      errorCode:
        type: string
        description: A code corresponding to the error that occurred
      groupId:
        type: string
        description: Unique identifier for a PureCloud group
      q850ResponseCodes:
        type: array
        description: Q.850 response code(s)
        items:
          type: integer
          format: int64
      queueId:
        type: string
        description: Queue identifier
      requestedLanguageId:
        type: string
        description: Unique identifier for the language requested for an interaction
      requestedRoutingSkillIds:
        type: array
        description: Unique identifier(s) for skill(s) requested for an interaction
        items:
          type: string
      requestedRoutingUserIds:
        type: array
        description: Unique identifier(s) for agent(s) requested for an interaction
        items:
          type: string
      segmentEnd:
        type: string
        format: date-time
        description: >-
          The end time of a segment. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      segmentStart:
        type: string
        format: date-time
        description: >-
          The start time of a segment. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      segmentType:
        type: string
        description: The activity that takes place in the segment, such as hold or interact
        enum:
          - alert
          - barging
          - callback
          - coaching
          - contacting
          - converting
          - delay
          - dialing
          - hold
          - interact
          - ivr
          - monitoring
          - scheduled
          - sharing
          - system
          - transmitting
          - unknown
          - uploading
          - voicemail
          - wrapup
      sipResponseCodes:
        type: array
        description: SIP response code(s)
        items:
          type: integer
          format: int64
      sourceConversationId:
        type: string
        description: >-
          The unique identifier of the previous conversation when a new
          conversation is created for a conference
      sourceSessionId:
        type: string
        description: >-
          The unique identifier of the previous session when a new session is
          created for a conference
      subject:
        type: string
        description: The subject for the initial email that started this conversation
      videoMuted:
        type: boolean
        description: Flag indicating if video is muted/paused or not (true/false)
      wrapUpCode:
        type: string
        description: Wrap up code
      wrapUpNote:
        type: string
        description: Note entered by an agent during after-call work
      wrapUpTags:
        type: array
        description: Tag(s) assigned during after-call work
        items:
          type: string
      scoredAgents:
        type: array
        description: Scored agents
        items:
          $ref: '#/definitions/AnalyticsScoredAgent'
      properties:
        type: array
        description: Additional segment properties
        items:
          $ref: '#/definitions/AnalyticsProperty'
  AnalyticsConversationWithoutAttributes:
    type: object
    properties:
      conferenceStart:
        type: string
        format: date-time
        description: >-
          The start time of a conference call. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationEnd:
        type: string
        format: date-time
        description: >-
          The end time of a conversation. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: Unique identifier for the conversation
      conversationInitiator:
        type: string
        description: >-
          Indicates the participant purpose of the participant initiating a
          message conversation
        enum:
          - acd
          - agent
          - api
          - botflow
          - campaign
          - customer
          - dialer
          - external
          - fax
          - group
          - inbound
          - ivr
          - manual
          - outbound
          - station
          - user
          - voicemail
          - workflow
      conversationStart:
        type: string
        format: date-time
        description: >-
          The start time of a conversation. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      customerParticipation:
        type: boolean
        description: >-
          Indicates a messaging conversation in which the customer participated
          by sending at least one message
      divisionIds:
        type: array
        description: Identifier(s) of division(s) associated with a conversation
        items:
          type: string
      externalTag:
        type: string
        description: External tag for the conversation
      knowledgeBaseIds:
        type: array
        description: The unique identifier(s) of the knowledge base(s) used
        items:
          type: string
      mediaStatsMinConversationMos:
        type: number
        format: double
        description: >-
          The lowest estimated average MOS among all the audio streams belonging
          to this conversation
      mediaStatsMinConversationRFactor:
        type: number
        format: double
        description: >-
          The lowest R-factor value among all of the audio streams belonging to
          this conversation
      originatingDirection:
        type: string
        description: The original direction of the conversation
        enum:
          - inbound
          - outbound
      selfServed:
        type: boolean
        description: Indicates whether all flow sessions were self serviced
      evaluations:
        type: array
        description: Evaluations associated with this conversation
        items:
          $ref: '#/definitions/AnalyticsEvaluation'
      surveys:
        type: array
        description: Surveys associated with this conversation
        items:
          $ref: '#/definitions/AnalyticsSurvey'
      resolutions:
        type: array
        description: Resolutions associated with this conversation
        items:
          $ref: '#/definitions/AnalyticsResolution'
      participants:
        type: array
        description: Participants in the conversation
        items:
          $ref: '#/definitions/AnalyticsParticipantWithoutAttributes'
  AnalyticsEvaluation:
    type: object
    properties:
      assigneeId:
        type: string
        description: UserId of the assignee
      calibrationId:
        type: string
        description: The calibration ID used for the purpose of training evaluators
      contextId:
        type: string
        description: A unique identifier for an evaluation form, regardless of version
      deleted:
        type: boolean
        description: Whether the evaluation has been deleted
      evaluationId:
        type: string
        description: Unique identifier for the evaluation
      evaluationStatus:
        type: string
        description: Status of evaluation
        enum:
          - Finished
          - InProgress
          - InReview
          - Pending
          - Retracted
      evaluatorId:
        type: string
        description: A unique identifier of the user who evaluated the interaction
      eventTime:
        type: string
        format: date-time
        description: >-
          Specifies when an evaluation occurred. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      formId:
        type: string
        description: ID of the evaluation form used
      formName:
        type: string
        description: Name of the evaluation form used
      queueId:
        type: string
        description: The ID of the associated queue
      released:
        type: boolean
        description: Whether the evaluation has been released
      rescored:
        type: boolean
        description: Whether the evaluation has been rescored at least once
      userId:
        type: string
        description: ID of the agent the evaluation was performed against
      oTotalCriticalScore:
        type: integer
        format: int64
      oTotalScore:
        type: integer
        format: int64
  AnalyticsFlow:
    type: object
    properties:
      endingLanguage:
        type: string
        description: Flow ending language, e.g. en-us
      entryReason:
        type: string
        description: >-
          The particular entry reason for this flow, e.g. an address, userId, or
          flowId
      entryType:
        type: string
        description: >-
          The entry type for this flow, e.g. dnis, dialer, agent, flow, or
          direct
        enum:
          - agent
          - direct
          - dnis
          - flow
          - outbound
      exitReason:
        type: string
        description: The exit reason for this flow, e.g. DISCONNECT
      flowId:
        type: string
        description: The unique identifier of this flow
      flowName:
        type: string
        description: The name of this flow at the time of flow execution
      flowType:
        type: string
        description: The type of this flow
        enum:
          - BOT
          - COMMONMODULE
          - DIGITALBOT
          - INBOUNDCALL
          - INBOUNDCHAT
          - INBOUNDEMAIL
          - INBOUNDSHORTMESSAGE
          - INQUEUECALL
          - INQUEUEEMAIL
          - INQUEUESHORTMESSAGE
          - OUTBOUNDCALL
          - SECURECALL
          - SPEECH
          - SURVEYINVITE
          - VOICE
          - VOICEMAIL
          - WORKFLOW
          - WORKITEM
      flowVersion:
        type: string
        description: The version of this flow
      issuedCallback:
        type: boolean
        description: Flag indicating whether the flow issued a callback
      recognitionFailureReason:
        type: string
        description: The recognition failure reason causing to exit/disconnect
      startingLanguage:
        type: string
        description: Flow starting language, e.g. en-us
      transferTargetAddress:
        type: string
        description: >-
          The address of a flow transfer target, e.g. a phone number, an email
          address, or a queueId
      transferTargetName:
        type: string
        description: The name of a flow transfer target
      transferType:
        type: string
        description: The type of transfer for flows that ended with a transfer
      outcomes:
        type: array
        description: Flow outcomes
        items:
          $ref: '#/definitions/AnalyticsFlowOutcome'
  AnalyticsFlowOutcome:
    type: object
    properties:
      flowOutcome:
        type: string
        description: >-
          Combination of unique flow outcome identifier and its value separated
          by colon
      flowOutcomeEndTimestamp:
        type: string
        format: date-time
        description: >-
          The outcome ending timestamp in ISO 8601 format. This may be null if
          the outcome did not succeed.
      flowOutcomeId:
        type: string
        description: Unique identifier of a flow outcome
      flowOutcomeStartTimestamp:
        type: string
        format: date-time
        description: The outcome starting timestamp in ISO 8601 format
      flowOutcomeValue:
        type: string
        description: Flow outcome value, e.g. SUCCESS
  AnalyticsMediaEndpointStat:
    type: object
    properties:
      codecs:
        type: array
        description: >-
          The MIME type(s) of the audio encodings used by the audio streams
          belonging to this endpoint
        items:
          type: string
      discardedPackets:
        type: integer
        format: int64
        description: >-
          The total number of packets received too late or too early, jitter
          queue overrun or underrun, for all audio streams belonging to this
          endpoint
      duplicatePackets:
        type: integer
        format: int64
        description: >-
          The total number of packets received with the same sequence number as
          another one recently received (window of 64 packets), for all audio
          streams belonging to this endpoint
      eventTime:
        type: string
        format: date-time
        description: >-
          Specifies when an event occurred. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      invalidPackets:
        type: integer
        format: int64
        description: >-
          The total number of malformed or not RTP packets, unknown payload
          type, or discarded probation packets for all audio streams belonging
          to this endpoint
      maxLatencyMs:
        type: integer
        format: int64
        description: >-
          The maximum latency experienced by any audio stream belonging to this
          endpoint, in milliseconds
      minMos:
        type: number
        format: double
        description: >-
          The lowest estimated average MOS among all the audio streams belonging
          to this endpoint
      minRFactor:
        type: number
        format: double
        description: >-
          The lowest R-factor value among all of the audio streams belonging to
          this endpoint
      overrunPackets:
        type: integer
        format: int64
        description: >-
          The total number of packets for which there was no room in the jitter
          queue when it was received, for all audio streams belonging to this
          endpoint (also counted in discarded)
      receivedPackets:
        type: integer
        format: int64
        description: >-
          The total number of packets received for all audio streams belonging
          to this endpoint (includes invalid, duplicate, and discarded packets)
      underrunPackets:
        type: integer
        format: int64
        description: >-
          The total number of packets received after their timestamp/seqnum has
          been played out, for all audio streams belonging to this endpoint
          (also counted in discarded)
  AnalyticsParticipantWithoutAttributes:
    type: object
    properties:
      externalContactId:
        type: string
        description: External contact identifier
      externalOrganizationId:
        type: string
        description: External organization identifier
      flaggedReason:
        type: string
        description: Reason for which participant flagged conversation
        enum:
          - general
      participantId:
        type: string
        description: Unique identifier for the participant
      participantName:
        type: string
        description: A human readable name identifying the participant
      purpose:
        type: string
        description: The participant's purpose
        enum:
          - acd
          - agent
          - api
          - botflow
          - campaign
          - customer
          - dialer
          - external
          - fax
          - group
          - inbound
          - ivr
          - manual
          - outbound
          - station
          - user
          - voicemail
          - workflow
      teamId:
        type: string
        description: The team ID the user is a member of
      userId:
        type: string
        description: Unique identifier for the user
      sessions:
        type: array
        description: List of sessions associated to this participant
        items:
          $ref: '#/definitions/AnalyticsSession'
  AnalyticsProperty:
    type: object
    properties:
      property:
        type: string
        description: >-
          User-defined rather than intrinsic system-observed values. These are
          tagged onto segments by other components within PureCloud or by API
          users directly.  This is the name of the user-defined property.
      propertyType:
        type: string
        description: >-
          Indicates what the data type is (e.g. integer vs string) and therefore
          how to evaluate what would constitute a match
        enum:
          - bool
          - integer
          - real
          - date
          - string
          - uuid
      value:
        type: string
        description: What property value to match against
  AnalyticsProposedAgent:
    type: object
    properties:
      agentRank:
        type: integer
        format: int32
        description: >-
          Proposed agent rank for this conversation from predictive routing
          (lower is better)
      proposedAgentId:
        type: string
        description: >-
          Unique identifier for the agent that was proposed by predictive
          routing
  AnalyticsResolution:
    type: object
    properties:
      eventTime:
        type: string
        format: date-time
        description: >-
          Specifies when an event occurred. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      queueId:
        type: string
        description: The ID of the last queue on which the conversation was handled.
      userId:
        type: string
        description: The ID of the last user who handled the conversation.
      nNextContactAvoided:
        type: integer
        format: int64
  AnalyticsScoredAgent:
    type: object
    properties:
      agentScore:
        type: integer
        format: int32
        description: >-
          Assigned agent score for this conversation (0 - 100, higher being
          better)
      scoredAgentId:
        type: string
        description: Unique identifier for the agent that was scored for this conversation
  AnalyticsSession:
    type: object
    properties:
      activeSkillIds:
        type: array
        description: ID(s) of Skill(s) that are active on the conversation
        items:
          type: string
      acwSkipped:
        type: boolean
        description: Marker for an agent that skipped after call work
      addressFrom:
        type: string
        description: The address that initiated an action
      addressOther:
        type: string
        description: >-
          The email address for the participant on the other side of the email
          conversation
      addressSelf:
        type: string
        description: >-
          The email address for the participant on this side of the email
          conversation
      addressTo:
        type: string
        description: The address receiving an action
      agentAssistantId:
        type: string
        description: Unique identifier of the active virtual agent assistant
      agentBullseyeRing:
        type: integer
        format: int32
        description: Bullseye ring of the targeted agent
      agentOwned:
        type: boolean
        description: Flag indicating an agent-owned callback
      ani:
        type: string
        description: Automatic Number Identification (caller's number)
      assignerId:
        type: string
        description: ID of the user that manually assigned a conversation
      authenticated:
        type: boolean
        description: >-
          Flag that indicates that the identity of the customer has been
          asserted as verified by the provider.
      bargedParticipantId:
        type: string
        description: >-
          The participantId being barged in on (if someone (e.g. an agent) is
          being barged in on, this would correspond to one of the other
          participantIds present in the conversation)
      bcc:
        type: array
        description: Blind carbon copy email address(es)
        items:
          type: string
      callbackNumbers:
        type: array
        description: Callback phone number(s)
        items:
          type: string
      callbackScheduledTime:
        type: string
        format: date-time
        description: >-
          Scheduled callback date/time. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      callbackUserName:
        type: string
        description: The name of the user requesting a call back
      cc:
        type: array
        description: Carbon copy email address(es)
        items:
          type: string
      cleared:
        type: boolean
        description: >-
          Flag that indicates that the conversation has been cleared by the
          customer
      coachedParticipantId:
        type: string
        description: >-
          The participantId being coached (if someone (e.g. an agent) is being
          coached, this would correspond to one of the other participantIds
          present in the conversation)
      cobrowseRole:
        type: string
        description: Describes side of the cobrowse (sharer or viewer)
      cobrowseRoomId:
        type: string
        description: A unique identifier for a PureCloud cobrowse room
      deliveryStatus:
        type: string
        description: The email or SMS delivery status
        enum:
          - DeliveryFailed
          - DeliverySuccess
          - Failed
          - Queued
          - Read
          - Received
          - Sent
      deliveryStatusChangeDate:
        type: string
        format: date-time
        description: >-
          Date and time of the most recent delivery status change. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      destinationAddresses:
        type: array
        description: Destination address(es) of transfers or consults
        items:
          type: string
      direction:
        type: string
        description: The direction of the communication
        enum:
          - inbound
          - outbound
      dispositionAnalyzer:
        type: string
        description: (Dialer) Analyzer (for example speech.person)
      dispositionName:
        type: string
        description: >-
          (Dialer) Result of the analysis (for example
          disposition.classification.callable.machine)
      dnis:
        type: string
        description: >-
          Dialed number identification service (number dialed by the calling
          party)
      edgeId:
        type: string
        description: Unique identifier of the edge device
      eligibleAgentCounts:
        type: array
        description: Number of eligible agents for each predictive routing attempt
        items:
          type: integer
          format: int32
      extendedDeliveryStatus:
        type: string
        description: Extended delivery status
      flowInType:
        type: string
        description: Type of flow in that occurred when entering ACD.
      flowOutType:
        type: string
        description: Type of flow out that occurred when emitting tFlowOut.
      journeyActionId:
        type: string
        description: Identifier of the journey action.
      journeyActionMapId:
        type: string
        description: Identifier of the journey action map that triggered the action.
      journeyActionMapVersion:
        type: integer
        format: int32
        description: Version of the journey action map that triggered the action.
      journeyCustomerId:
        type: string
        description: >-
          Primary identifier of the journey customer in the source where the
          activities originate from.
      journeyCustomerIdType:
        type: string
        description: Type of primary identifier of the journey customer (e.g. cookie).
      journeyCustomerSessionId:
        type: string
        description: Unique identifier of the journey session.
      journeyCustomerSessionIdType:
        type: string
        description: >-
          Type or category of journey sessions (e.g. web, ticket, delivery,
          atm).
      mediaBridgeId:
        type: string
        description: >-
          Media bridge ID for the conference session consistent across all
          participants
      mediaCount:
        type: integer
        format: int32
        description: Count of any media (images, files, etc) included in this session
      mediaType:
        type: string
        description: The session media type
        enum:
          - callback
          - chat
          - cobrowse
          - email
          - message
          - screenshare
          - unknown
          - video
          - voice
      messageType:
        type: string
        description: >-
          Message type for messaging services. E.g.: sms, facebook, twitter,
          line
      monitoredParticipantId:
        type: string
        description: >-
          The participantId being monitored (if someone (e.g. an agent) is being
          monitored, this would correspond to one of the other participantIds
          present in the conversation)
      outboundCampaignId:
        type: string
        description: (Dialer) Unique identifier of the outbound campaign
      outboundContactId:
        type: string
        description: (Dialer) Unique identifier of the contact
      outboundContactListId:
        type: string
        description: >-
          (Dialer) Unique identifier of the contact list that this contact
          belongs to
      peerId:
        type: string
        description: >-
          This identifies pairs of related sessions on a conversation. E.g. an
          external session’s peerId will be the session that the call originally
          connected to, e.g. if an IVR was dialed, the IVR session, which will
          also have the external session’s ID as its peer. After that point, any
          transfers of that session to other internal components (acd, agent,
          etc.) will all spawn new sessions whose peerIds point back to that
          original external session.
      protocolCallId:
        type: string
        description: The original voice protocol call ID, e.g. a SIP call ID
      provider:
        type: string
        description: The source provider for the communication.
      recording:
        type: boolean
        description: Flag determining if an audio recording was started or not
      remote:
        type: string
        description: Name, phone number, or email address of the remote party.
      remoteNameDisplayable:
        type: string
        description: Unique identifier for the remote party
      removedSkillIds:
        type: array
        description: ID(s) of Skill(s) that have been removed by bullseye routing
        items:
          type: string
      requestedRoutings:
        type: array
        description: Routing type(s) for requested/attempted routing methods.
        items:
          type: string
          enum:
            - Bullseye
            - Conditional
            - Direct
            - Last
            - Manual
            - Predictive
            - Preferred
            - Standard
            - Vip
      roomId:
        type: string
        description: Unique identifier for the room
      routingRing:
        type: integer
        format: int32
        description: Routing ring for bullseye or preferred agent routing
      screenShareAddressSelf:
        type: string
        description: Direct ScreenShare address
      screenShareRoomId:
        type: string
        description: A unique identifier for a PureCloud ScreenShare room
      scriptId:
        type: string
        description: A unique identifier for a script
      selectedAgentId:
        type: string
        description: Selected agent ID
      selectedAgentRank:
        type: integer
        format: int32
        description: Selected agent GPR rank
      sessionDnis:
        type: string
        description: >-
          Dialed number for the current session; this can be different from
          dnis, e.g. if the call was transferred
      sessionId:
        type: string
        description: The unique identifier of this session
      sharingScreen:
        type: boolean
        description: Flag determining if screenShare is started or not (true/false)
      skipEnabled:
        type: boolean
        description: (Dialer) Whether the agent can skip the dialer contact
      timeoutSeconds:
        type: integer
        format: int32
        description: >-
          The number of seconds before PureCloud begins the call for a call back
          (0 disables automatic calling)
      usedRouting:
        type: string
        description: Complete routing method
        enum:
          - Bullseye
          - Conditional
          - Direct
          - Last
          - Manual
          - Predictive
          - Preferred
          - Standard
          - Vip
      videoAddressSelf:
        type: string
        description: Direct Video address
      videoRoomId:
        type: string
        description: A unique identifier for a PureCloud video room
      waitingInteractionCounts:
        type: array
        description: Number of waiting interactions for each predictive routing attempt
        items:
          type: integer
          format: int32
      proposedAgents:
        type: array
        description: Proposed agents
        items:
          $ref: '#/definitions/AnalyticsProposedAgent'
      agentGroups:
        type: array
        description: Conditional group routing agent groups
        items:
          $ref: '#/definitions/AnalyticsAgentGroup'
      mediaEndpointStats:
        type: array
        description: MediaEndpointStats associated with this session
        items:
          $ref: '#/definitions/AnalyticsMediaEndpointStat'
      flow:
        description: IVR flow execution associated with this session
        $ref: '#/definitions/AnalyticsFlow'
      metrics:
        type: array
        description: List of metrics for this session
        items:
          $ref: '#/definitions/AnalyticsSessionMetric'
      segments:
        type: array
        description: List of segments for this session
        items:
          $ref: '#/definitions/AnalyticsConversationSegment'
  AnalyticsSessionMetric:
    type: object
    properties:
      emitDate:
        type: string
        format: date-time
        description: >-
          Metric emission date. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      name:
        type: string
        description: Unique name of this metric
      value:
        type: integer
        format: int64
        description: The metric value
  AnalyticsSurvey:
    type: object
    properties:
      eventTime:
        type: string
        format: date-time
        description: >-
          Specifies when an event occurred. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      queueId:
        type: string
        description: The ID of the associated queue
      surveyCompletedDate:
        type: string
        format: date-time
        description: Completion datetime of the survey in ISO 8601 format
      surveyFormContextId:
        type: string
        description: Unique identifier for the survey form, regardless of version
      surveyFormId:
        type: string
        description: ID of the survey form used
      surveyFormName:
        type: string
        description: Name of the survey form used
      surveyId:
        type: string
        description: ID of the survey
      surveyPromoterScore:
        type: integer
        format: int32
        description: Score of the survey used with NPS
      surveyStatus:
        type: string
        description: The status of the survey
      userId:
        type: string
        description: ID of the agent the survey was performed against
      oSurveyTotalScore:
        type: integer
        format: int64
  ConversationAggregateDataContainer:
    type: object
    properties:
      group:
        type: object
        description: A mapping from dimension to value
        additionalProperties:
          type: string
      data:
        type: array
        items:
          $ref: '#/definitions/StatisticalResponse'
  ConversationAggregateQueryResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/ConversationAggregateDataContainer'
  ConversationAggregateQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/ConversationAggregateQueryPredicate'
  ConversationAggregateQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/ConversationAggregateQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/ConversationAggregateQueryPredicate'
  ConversationAggregateQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - activeSkillId
          - addressFrom
          - addressTo
          - agentAssistantId
          - agentBullseyeRing
          - agentOwned
          - agentRank
          - agentScore
          - ani
          - assignerId
          - authenticated
          - canonicalExternalContactId
          - conversationId
          - conversationInitiator
          - convertedFrom
          - convertedTo
          - customerParticipation
          - deliveryStatus
          - destinationAddress
          - direction
          - disconnectType
          - divisionId
          - dnis
          - edgeId
          - eligibleAgentCount
          - errorCode
          - extendedDeliveryStatus
          - externalContactId
          - externalMediaCount
          - externalOrganizationId
          - externalTag
          - firstQueue
          - flaggedReason
          - flowInType
          - flowOutType
          - groupId
          - interactionType
          - journeyActionId
          - journeyActionMapId
          - journeyActionMapVersion
          - journeyCustomerId
          - journeyCustomerIdType
          - journeyCustomerSessionId
          - journeyCustomerSessionIdType
          - knowledgeBaseId
          - mediaCount
          - mediaType
          - messageType
          - originatingDirection
          - outboundCampaignId
          - outboundContactId
          - outboundContactListId
          - participantName
          - peerId
          - proposedAgentId
          - provider
          - purpose
          - queueId
          - remote
          - removedSkillId
          - reoffered
          - requestedLanguageId
          - requestedRouting
          - requestedRoutingSkillId
          - roomId
          - routingPriority
          - routingRing
          - scoredAgentId
          - selectedAgentId
          - selectedAgentRank
          - selfServed
          - sessionDnis
          - sessionId
          - stationId
          - teamId
          - usedRouting
          - userId
          - waitingInteractionCount
          - wrapUpCode
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension predicates
        $ref: '#/definitions/NumericRange'
  ConversationAggregationQuery:
    type: object
    required:
      - interval
      - metrics
    properties:
      interval:
        type: string
        description: >-
          Behaves like one clause in a SQL WHERE. Specifies the date and time
          range of data being queried. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      granularity:
        type: string
        description: >-
          Granularity aggregates metrics into subpartitions within the time
          interval specified. The default granularity is the same duration as
          the interval. Periods are represented as an ISO-8601 string. For
          example: P1D or P1DT12H
      timeZone:
        type: string
        description: >-
          Time zone context used to calculate response intervals (this allows
          resolving DST changes). The interval offset is used even when timeZone
          is specified. Default is UTC. Time zones are represented as a string
          of the zone name as found in the IANA time zone database. For example:
          UTC, Etc/UTC, or Europe/London
      groupBy:
        type: array
        description: >-
          Behaves like a SQL GROUPBY. Allows for multiple levels of grouping as
          a list of dimensions. Partitions resulting aggregate computations into
          distinct named subgroups rather than across the entire result set as
          if it were one group.
        items:
          type: string
          enum:
            - activeSkillId
            - addressFrom
            - addressTo
            - agentAssistantId
            - agentBullseyeRing
            - agentOwned
            - agentRank
            - agentScore
            - ani
            - assignerId
            - authenticated
            - conversationId
            - conversationInitiator
            - convertedFrom
            - convertedTo
            - customerParticipation
            - deliveryStatus
            - destinationAddress
            - direction
            - disconnectType
            - divisionId
            - dnis
            - edgeId
            - eligibleAgentCount
            - errorCode
            - extendedDeliveryStatus
            - externalContactId
            - externalMediaCount
            - externalOrganizationId
            - externalTag
            - firstQueue
            - flaggedReason
            - flowInType
            - flowOutType
            - groupId
            - interactionType
            - journeyActionId
            - journeyActionMapId
            - journeyActionMapVersion
            - journeyCustomerId
            - journeyCustomerIdType
            - journeyCustomerSessionId
            - journeyCustomerSessionIdType
            - knowledgeBaseId
            - mediaCount
            - mediaType
            - messageType
            - originatingDirection
            - outboundCampaignId
            - outboundContactId
            - outboundContactListId
            - participantName
            - peerId
            - proposedAgentId
            - provider
            - purpose
            - queueId
            - remote
            - removedSkillId
            - reoffered
            - requestedLanguageId
            - requestedRouting
            - requestedRoutingSkillId
            - roomId
            - routingPriority
            - routingRing
            - scoredAgentId
            - selectedAgentId
            - selectedAgentRank
            - selfServed
            - sessionDnis
            - sessionId
            - stationId
            - teamId
            - usedRouting
            - userId
            - waitingInteractionCount
            - wrapUpCode
      filter:
        description: >-
          Behaves like a SQL WHERE clause. This is ANDed with the interval
          parameter. Expresses boolean logical predicates as well as dimensional
          filters
        $ref: '#/definitions/ConversationAggregateQueryFilter'
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Only named metrics will be
          retrieved.
        items:
          type: string
          enum:
            - nBlindTransferred
            - nCobrowseSessions
            - nConnected
            - nConsult
            - nConsultTransferred
            - nError
            - nOffered
            - nOutbound
            - nOutboundAbandoned
            - nOutboundAttempted
            - nOutboundConnected
            - nOverSla
            - nStateTransitionError
            - nTransferred
            - oExternalMediaCount
            - oMediaCount
            - oMessageTurn
            - oServiceLevel
            - oServiceTarget
            - tAbandon
            - tAcd
            - tActiveCallback
            - tActiveCallbackComplete
            - tAcw
            - tAgentResponseTime
            - tAlert
            - tAnswered
            - tBarging
            - tCallback
            - tCallbackComplete
            - tCoaching
            - tCoachingComplete
            - tConnected
            - tContacting
            - tDialing
            - tFirstConnect
            - tFirstDial
            - tFlowOut
            - tHandle
            - tHeld
            - tHeldComplete
            - tIvr
            - tMonitoring
            - tMonitoringComplete
            - tNotResponding
            - tShortAbandon
            - tTalk
            - tTalkComplete
            - tUserResponseTime
            - tVoicemail
            - tWait
      flattenMultivaluedDimensions:
        type: boolean
        description: >-
          Flattens any multivalued dimensions used in response groups (e.g.
          ['a','b','c']->'a,b,c')
      views:
        type: array
        description: Custom derived metric views
        items:
          $ref: '#/definitions/ConversationAggregationView'
      alternateTimeDimension:
        type: string
        description: >-
          Dimension to use as the alternative timestamp for data in the
          aggregate.  Choosing "eventTime" uses the actual time of the data
          event.
        enum:
          - eventTime
  ConversationAggregationView:
    type: object
    required:
      - function
      - name
      - target
    properties:
      target:
        type: string
        description: Target metric name
        enum:
          - nBlindTransferred
          - nCobrowseSessions
          - nConnected
          - nConsult
          - nConsultTransferred
          - nError
          - nOffered
          - nOutbound
          - nOutboundAbandoned
          - nOutboundAttempted
          - nOutboundConnected
          - nOverSla
          - nStateTransitionError
          - nTransferred
          - oExternalMediaCount
          - oMediaCount
          - oMessageTurn
          - oServiceLevel
          - oServiceTarget
          - tAbandon
          - tAcd
          - tActiveCallback
          - tActiveCallbackComplete
          - tAcw
          - tAgentResponseTime
          - tAlert
          - tAnswered
          - tBarging
          - tCallback
          - tCallbackComplete
          - tCoaching
          - tCoachingComplete
          - tConnected
          - tContacting
          - tDialing
          - tFirstConnect
          - tFirstDial
          - tFlowOut
          - tHandle
          - tHeld
          - tHeldComplete
          - tIvr
          - tMonitoring
          - tMonitoringComplete
          - tNotResponding
          - tShortAbandon
          - tTalk
          - tTalkComplete
          - tUserResponseTime
          - tVoicemail
          - tWait
      name:
        type: string
        description: >-
          A unique name for this view. Must be distinct from other views and
          built-in metric names.
      function:
        type: string
        description: Type of view you wish to create
        enum:
          - rangeBound
      range:
        description: Range of numbers for slicing up data
        $ref: '#/definitions/AggregationRange'
  QueryDivision:
    type: object
    properties: {}
  AggregationResult:
    type: object
    properties:
      type:
        type: string
        enum:
          - termFrequency
          - numericRange
      dimension:
        type: string
        description: For termFrequency aggregations
      metric:
        type: string
        description: For numericRange aggregations
      count:
        type: integer
        format: int64
      results:
        type: array
        items:
          $ref: '#/definitions/AggregationResultEntry'
  AggregationResultEntry:
    type: object
    properties:
      count:
        type: integer
        format: int64
      value:
        type: string
        description: For termFrequency aggregations
      gte:
        type: number
        description: For numericRange aggregations
      lt:
        type: number
        description: For numericRange aggregations
  AnalyticsConversationQueryResponse:
    type: object
    properties:
      aggregations:
        type: array
        items:
          $ref: '#/definitions/AggregationResult'
      conversations:
        type: array
        items:
          $ref: '#/definitions/AnalyticsConversationWithoutAttributes'
      totalHits:
        type: integer
        format: int32
  AnalyticsQueryAggregation:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - termFrequency
          - numericRange
      dimension:
        type: string
        description: For use with termFrequency aggregations
      metric:
        type: string
        description: For use with numericRange aggregations
      size:
        type: integer
        format: int32
        description: For use with termFrequency aggregations
      ranges:
        type: array
        description: For use with numericRange aggregations
        items:
          $ref: '#/definitions/AggregationRange'
  ConversationDetailQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/ConversationDetailQueryPredicate'
  ConversationDetailQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/ConversationDetailQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/ConversationDetailQueryPredicate'
  ConversationDetailQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - conversationEnd
          - conversationId
          - conversationInitiator
          - conversationStart
          - customerParticipation
          - divisionId
          - externalTag
          - mediaStatsMinConversationMos
          - originatingDirection
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      metric:
        type: string
        description: Left hand side for metric predicates
        enum:
          - nBlindTransferred
          - nCobrowseSessions
          - nConnected
          - nConsult
          - nConsultTransferred
          - nError
          - nFlow
          - nFlowMilestone
          - nFlowOutcome
          - nFlowOutcomeFailed
          - nOffered
          - nOutbound
          - nOutboundAbandoned
          - nOutboundAttempted
          - nOutboundConnected
          - nOverSla
          - nStateTransitionError
          - nTransferred
          - oExternalMediaCount
          - oFlowMilestone
          - oMediaCount
          - oMessageTurn
          - tAbandon
          - tAcd
          - tActiveCallback
          - tActiveCallbackComplete
          - tAcw
          - tAgentResponseTime
          - tAlert
          - tAnswered
          - tBarging
          - tCallback
          - tCallbackComplete
          - tCoaching
          - tCoachingComplete
          - tConnected
          - tContacting
          - tConversationDuration
          - tDialing
          - tFirstConnect
          - tFirstDial
          - tFlow
          - tFlowDisconnect
          - tFlowExit
          - tFlowOut
          - tFlowOutcome
          - tHandle
          - tHeld
          - tHeldComplete
          - tIvr
          - tMonitoring
          - tMonitoringComplete
          - tNotResponding
          - tShortAbandon
          - tTalk
          - tTalkComplete
          - tUserResponseTime
          - tVoicemail
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension or metric predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension or metric predicates
        $ref: '#/definitions/NumericRange'
  ConversationQuery:
    type: object
    required:
      - interval
    properties:
      conversationFilters:
        type: array
        description: Filters that target conversation-level data
        items:
          $ref: '#/definitions/ConversationDetailQueryFilter'
      segmentFilters:
        type: array
        description: Filters that target individual segments within a conversation
        items:
          $ref: '#/definitions/SegmentDetailQueryFilter'
      evaluationFilters:
        type: array
        description: Filters that target evaluations
        items:
          $ref: '#/definitions/EvaluationDetailQueryFilter'
      surveyFilters:
        type: array
        description: Filters that target surveys
        items:
          $ref: '#/definitions/SurveyDetailQueryFilter'
      resolutionFilters:
        type: array
        description: Filters that target resolutions
        items:
          $ref: '#/definitions/ResolutionDetailQueryFilter'
      order:
        type: string
        description: >-
          Sort the result set in ascending/descending order. Default is
          ascending
        enum:
          - asc
          - desc
          - unordered
      orderBy:
        type: string
        description: >-
          Specify which data element within the result set to use for sorting.
          The options  to use as a basis for sorting the results:
          conversationStart, segmentStart, and segmentEnd. If not specified, the
          default is conversationStart
        enum:
          - conversationStart
          - conversationEnd
          - segmentStart
          - segmentEnd
      interval:
        type: string
        description: >-
          Specifies the date and time range of data being queried. Results will
          only include conversations that started on a day touched by the
          interval. Intervals are represented as an ISO-8601 string. For
          example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      aggregations:
        type: array
        description: >-
          Include faceted search and aggregate roll-ups describing your search
          results. This does not function as a filter, but rather, summary data
          about the data matching your filters
        items:
          $ref: '#/definitions/AnalyticsQueryAggregation'
      paging:
        description: >-
          Page size and number to control iterating through large result sets.
          Default page size is 25
        $ref: '#/definitions/PagingSpec'
  EvaluationDetailQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/EvaluationDetailQueryPredicate'
  EvaluationDetailQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/EvaluationDetailQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/EvaluationDetailQueryPredicate'
  EvaluationDetailQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - assigneeId
          - calibrationId
          - contextId
          - deleted
          - evaluationId
          - evaluationStatus
          - evaluatorId
          - eventTime
          - formId
          - formName
          - queueId
          - released
          - rescored
          - userId
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      metric:
        type: string
        description: Left hand side for metric predicates
        enum:
          - oTotalCriticalScore
          - oTotalScore
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension or metric predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension or metric predicates
        $ref: '#/definitions/NumericRange'
  PagingSpec:
    type: object
    required:
      - pageNumber
      - pageSize
    properties:
      pageSize:
        type: integer
        format: int32
        description: How many results per page
      pageNumber:
        type: integer
        format: int32
        description: How many pages in
  ResolutionDetailQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/ResolutionDetailQueryPredicate'
  ResolutionDetailQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/ResolutionDetailQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/ResolutionDetailQueryPredicate'
  ResolutionDetailQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      metric:
        type: string
        description: Left hand side for metric predicates
        enum:
          - nNextContactAvoided
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for metric predicates
      range:
        description: Right hand side for metric predicates
        $ref: '#/definitions/NumericRange'
  SegmentDetailQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/SegmentDetailQueryPredicate'
  SegmentDetailQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/SegmentDetailQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/SegmentDetailQueryPredicate'
  SegmentDetailQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - addressFrom
          - addressTo
          - agentAssistantId
          - agentOwned
          - ani
          - authenticated
          - bargedParticipantId
          - callbackNumber
          - callbackScheduledTime
          - canonicalExternalContactId
          - cleared
          - coachedParticipantId
          - conference
          - deliveryStatus
          - destinationAddress
          - destinationConversationId
          - direction
          - disconnectType
          - dnis
          - edgeId
          - errorCode
          - exitReason
          - extendedDeliveryStatus
          - externalContactId
          - externalOrganizationId
          - flaggedReason
          - flowId
          - flowName
          - flowOutType
          - flowOutcome
          - flowOutcomeId
          - flowOutcomeValue
          - flowVersion
          - groupId
          - journeyActionId
          - journeyActionMapId
          - journeyCustomerId
          - journeyCustomerIdType
          - journeyCustomerSessionId
          - mediaCount
          - mediaType
          - messageType
          - monitoredParticipantId
          - outboundCampaignId
          - outboundContactId
          - outboundContactListId
          - participantName
          - protocolCallId
          - provider
          - purpose
          - queueId
          - recording
          - remote
          - remoteNameDisplayable
          - requestedLanguageId
          - requestedRouting
          - requestedRoutingSkillId
          - scoredAgentId
          - scriptId
          - segmentEnd
          - segmentType
          - sessionDnis
          - sipResponseCode
          - subject
          - teamId
          - transferTargetAddress
          - transferTargetName
          - transferType
          - usedRouting
          - userId
          - wrapUpCode
          - wrapUpNote
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      propertyType:
        type: string
        description: Left hand side for property predicates
        enum:
          - bool
          - integer
          - real
          - date
          - string
          - uuid
      property:
        type: string
        description: Left hand side for property predicates
      metric:
        type: string
        description: Left hand side for metric predicates
        enum:
          - tSegmentDuration
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension, metric, or property predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension, metric, or property predicates
        $ref: '#/definitions/NumericRange'
  SurveyDetailQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/SurveyDetailQueryPredicate'
  SurveyDetailQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/SurveyDetailQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/SurveyDetailQueryPredicate'
  SurveyDetailQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - eventTime
          - queueId
          - surveyCompletedDate
          - surveyFormContextId
          - surveyFormId
          - surveyId
          - surveyPromoterScore
          - surveyStatus
          - userId
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      metric:
        type: string
        description: Left hand side for metric predicates
        enum:
          - oSurveyTotalScore
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension or metric predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension or metric predicates
        $ref: '#/definitions/NumericRange'
  AnalyticsConversationWithoutAttributesMultiGetResponse:
    type: object
    properties:
      conversations:
        type: array
        items:
          $ref: '#/definitions/AnalyticsConversationWithoutAttributes'
  PropertyIndexRequest:
    type: object
    required:
      - properties
      - sessionId
      - targetDate
    properties:
      sessionId:
        type: string
        description: Attach properties to a segment in the indicated session
      targetDate:
        type: string
        format: date-time
        description: >-
          Attach properties to a segment covering a specific point in time. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      properties:
        type: array
        description: The list of properties to index
        items:
          $ref: '#/definitions/AnalyticsProperty'
  AsyncConversationQuery:
    type: object
    required:
      - interval
    properties:
      conversationFilters:
        type: array
        description: Filters that target conversation-level data
        items:
          $ref: '#/definitions/ConversationDetailQueryFilter'
      segmentFilters:
        type: array
        description: Filters that target individual segments within a conversation
        items:
          $ref: '#/definitions/SegmentDetailQueryFilter'
      evaluationFilters:
        type: array
        description: Filters that target evaluations
        items:
          $ref: '#/definitions/EvaluationDetailQueryFilter'
      surveyFilters:
        type: array
        description: Filters that target surveys
        items:
          $ref: '#/definitions/SurveyDetailQueryFilter'
      resolutionFilters:
        type: array
        description: Filters that target resolutions
        items:
          $ref: '#/definitions/ResolutionDetailQueryFilter'
      order:
        type: string
        description: >-
          Sort the result set in ascending/descending order. Default is
          ascending
        enum:
          - asc
          - desc
          - unordered
      orderBy:
        type: string
        description: >-
          Specify which data element within the result set to use for sorting.
          The options  to use as a basis for sorting the results:
          conversationStart, segmentStart, and segmentEnd. If not specified, the
          default is conversationStart
        enum:
          - conversationStart
          - conversationEnd
          - segmentStart
          - segmentEnd
      interval:
        type: string
        description: >-
          Specifies the date and time range of data being queried. Results will
          include all conversations that had activity during the interval.
          Intervals are represented as an ISO-8601 string. For example:
          YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      limit:
        type: integer
        format: int32
        description: Specify number of results to be returned
      startOfDayIntervalMatching:
        type: boolean
        description: >-
          Add a filter to only include conversations that started after the
          beginning of the interval start date (UTC)
  AnalyticsConversation:
    type: object
    properties:
      conferenceStart:
        type: string
        format: date-time
        description: >-
          The start time of a conference call. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationEnd:
        type: string
        format: date-time
        description: >-
          The end time of a conversation. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: Unique identifier for the conversation
      conversationInitiator:
        type: string
        description: >-
          Indicates the participant purpose of the participant initiating a
          message conversation
        enum:
          - acd
          - agent
          - api
          - botflow
          - campaign
          - customer
          - dialer
          - external
          - fax
          - group
          - inbound
          - ivr
          - manual
          - outbound
          - station
          - user
          - voicemail
          - workflow
      conversationStart:
        type: string
        format: date-time
        description: >-
          The start time of a conversation. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      customerParticipation:
        type: boolean
        description: >-
          Indicates a messaging conversation in which the customer participated
          by sending at least one message
      divisionIds:
        type: array
        description: Identifier(s) of division(s) associated with a conversation
        items:
          type: string
      externalTag:
        type: string
        description: External tag for the conversation
      knowledgeBaseIds:
        type: array
        description: The unique identifier(s) of the knowledge base(s) used
        items:
          type: string
      mediaStatsMinConversationMos:
        type: number
        format: double
        description: >-
          The lowest estimated average MOS among all the audio streams belonging
          to this conversation
      mediaStatsMinConversationRFactor:
        type: number
        format: double
        description: >-
          The lowest R-factor value among all of the audio streams belonging to
          this conversation
      originatingDirection:
        type: string
        description: The original direction of the conversation
        enum:
          - inbound
          - outbound
      selfServed:
        type: boolean
        description: Indicates whether all flow sessions were self serviced
      evaluations:
        type: array
        description: Evaluations associated with this conversation
        items:
          $ref: '#/definitions/AnalyticsEvaluation'
      surveys:
        type: array
        description: Surveys associated with this conversation
        items:
          $ref: '#/definitions/AnalyticsSurvey'
      resolutions:
        type: array
        description: Resolutions associated with this conversation
        items:
          $ref: '#/definitions/AnalyticsResolution'
      participants:
        type: array
        description: Participants in the conversation
        items:
          $ref: '#/definitions/AnalyticsParticipant'
  AnalyticsConversationAsyncQueryResponse:
    type: object
    properties:
      cursor:
        type: string
        description: Optional cursor to indicate where to resume the results
      dataAvailabilityDate:
        type: string
        format: date-time
        description: >-
          Data available up to at least this datetime. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversations:
        type: array
        items:
          $ref: '#/definitions/AnalyticsConversation'
  AnalyticsParticipant:
    type: object
    properties:
      externalContactId:
        type: string
        description: External contact identifier
      externalOrganizationId:
        type: string
        description: External organization identifier
      flaggedReason:
        type: string
        description: Reason for which participant flagged conversation
        enum:
          - general
      participantId:
        type: string
        description: Unique identifier for the participant
      participantName:
        type: string
        description: A human readable name identifying the participant
      purpose:
        type: string
        description: The participant's purpose
        enum:
          - acd
          - agent
          - api
          - botflow
          - campaign
          - customer
          - dialer
          - external
          - fax
          - group
          - inbound
          - ivr
          - manual
          - outbound
          - station
          - user
          - voicemail
          - workflow
      teamId:
        type: string
        description: The team ID the user is a member of
      userId:
        type: string
        description: Unique identifier for the user
      sessions:
        type: array
        description: List of sessions associated to this participant
        items:
          $ref: '#/definitions/AnalyticsSession'
      attributes:
        type: object
        description: List of attributes associated to this participant
        additionalProperties:
          type: string
  DataAvailabilityResponse:
    type: object
    properties:
      dataAvailabilityDate:
        type: string
        format: date-time
        description: >-
          Date and time before which data is guaranteed to be available in the
          datalake. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  EvaluationAggregateDataContainer:
    type: object
    properties:
      group:
        type: object
        description: A mapping from dimension to value
        additionalProperties:
          type: string
      data:
        type: array
        items:
          $ref: '#/definitions/StatisticalResponse'
  EvaluationAggregateQueryResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/EvaluationAggregateDataContainer'
  EvaluationAggregateQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/EvaluationAggregateQueryPredicate'
  EvaluationAggregateQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/EvaluationAggregateQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/EvaluationAggregateQueryPredicate'
  EvaluationAggregateQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - assigneeId
          - calibrationId
          - contextId
          - conversationId
          - conversationStart
          - divisionId
          - evaluationContextId
          - evaluationCreatedDate
          - evaluationId
          - evaluationReleaseDate
          - evaluatorId
          - formId
          - queueId
          - released
          - rescored
          - teamId
          - userId
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension predicates
        $ref: '#/definitions/NumericRange'
  EvaluationAggregationQuery:
    type: object
    required:
      - interval
      - metrics
    properties:
      interval:
        type: string
        description: >-
          Behaves like one clause in a SQL WHERE. Specifies the date and time
          range of data being queried. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      granularity:
        type: string
        description: >-
          Granularity aggregates metrics into subpartitions within the time
          interval specified. The default granularity is the same duration as
          the interval. Periods are represented as an ISO-8601 string. For
          example: P1D or P1DT12H
      timeZone:
        type: string
        description: >-
          Time zone context used to calculate response intervals (this allows
          resolving DST changes). The interval offset is used even when timeZone
          is specified. Default is UTC. Time zones are represented as a string
          of the zone name as found in the IANA time zone database. For example:
          UTC, Etc/UTC, or Europe/London
      groupBy:
        type: array
        description: >-
          Behaves like a SQL GROUPBY. Allows for multiple levels of grouping as
          a list of dimensions. Partitions resulting aggregate computations into
          distinct named subgroups rather than across the entire result set as
          if it were one group.
        items:
          type: string
          enum:
            - assigneeId
            - calibrationId
            - contextId
            - conversationId
            - divisionId
            - evaluationContextId
            - evaluationId
            - evaluatorId
            - formId
            - queueId
            - released
            - rescored
            - teamId
            - userId
      filter:
        description: >-
          Behaves like a SQL WHERE clause. This is ANDed with the interval
          parameter. Expresses boolean logical predicates as well as dimensional
          filters
        $ref: '#/definitions/EvaluationAggregateQueryFilter'
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Only named metrics will be
          retrieved.
        items:
          type: string
          enum:
            - nEvaluations
            - nEvaluationsDeleted
            - nEvaluationsRescored
            - oTotalCriticalScore
            - oTotalScore
      flattenMultivaluedDimensions:
        type: boolean
        description: >-
          Flattens any multivalued dimensions used in response groups (e.g.
          ['a','b','c']->'a,b,c')
      views:
        type: array
        description: Custom derived metric views
        items:
          $ref: '#/definitions/EvaluationAggregationView'
      alternateTimeDimension:
        type: string
        description: >-
          Dimension to use as the alternative timestamp for data in the
          aggregate.  Choosing "eventTime" uses the actual time of the data
          event.
        enum:
          - conversationStart
          - evaluationCreatedDate
          - evaluationReleaseDate
          - eventTime
  EvaluationAggregationView:
    type: object
    required:
      - function
      - name
      - target
    properties:
      target:
        type: string
        description: Target metric name
        enum:
          - nEvaluations
          - nEvaluationsDeleted
          - nEvaluationsRescored
          - oTotalCriticalScore
          - oTotalScore
      name:
        type: string
        description: >-
          A unique name for this view. Must be distinct from other views and
          built-in metric names.
      function:
        type: string
        description: Type of view you wish to create
        enum:
          - rangeBound
      range:
        description: Range of numbers for slicing up data
        $ref: '#/definitions/AggregationRange'
  FlowAggregateDataContainer:
    type: object
    properties:
      group:
        type: object
        description: A mapping from dimension to value
        additionalProperties:
          type: string
      data:
        type: array
        items:
          $ref: '#/definitions/StatisticalResponse'
  FlowAggregateQueryResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/FlowAggregateDataContainer'
  FlowAggregateQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/FlowAggregateQueryPredicate'
  FlowAggregateQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/FlowAggregateQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/FlowAggregateQueryPredicate'
  FlowAggregateQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - activeSkillId
          - addressFrom
          - addressTo
          - agentAssistantId
          - agentBullseyeRing
          - agentOwned
          - agentRank
          - agentScore
          - ani
          - assignerId
          - authenticated
          - canonicalExternalContactId
          - conversationId
          - conversationInitiator
          - convertedFrom
          - convertedTo
          - customerParticipation
          - deliveryStatus
          - destinationAddress
          - direction
          - disconnectType
          - divisionId
          - dnis
          - edgeId
          - eligibleAgentCount
          - endingLanguage
          - entryReason
          - entryType
          - errorCode
          - exitReason
          - extendedDeliveryStatus
          - externalContactId
          - externalMediaCount
          - externalOrganizationId
          - externalTag
          - firstQueue
          - flaggedReason
          - flowId
          - flowInType
          - flowMilestoneId
          - flowName
          - flowOutType
          - flowOutcome
          - flowOutcomeId
          - flowOutcomeValue
          - flowType
          - flowVersion
          - groupId
          - interactionType
          - journeyActionId
          - journeyActionMapId
          - journeyActionMapVersion
          - journeyCustomerId
          - journeyCustomerIdType
          - journeyCustomerSessionId
          - journeyCustomerSessionIdType
          - knowledgeBaseId
          - mediaCount
          - mediaType
          - messageType
          - originatingDirection
          - outboundCampaignId
          - outboundContactId
          - outboundContactListId
          - participantName
          - peerId
          - proposedAgentId
          - provider
          - purpose
          - queueId
          - recognitionFailureReason
          - remote
          - removedSkillId
          - reoffered
          - requestedLanguageId
          - requestedRouting
          - requestedRoutingSkillId
          - roomId
          - routingPriority
          - routingRing
          - scoredAgentId
          - selectedAgentId
          - selectedAgentRank
          - selfServed
          - sessionDnis
          - sessionId
          - startingLanguage
          - stationId
          - teamId
          - transferTargetAddress
          - transferTargetName
          - transferType
          - usedRouting
          - userId
          - waitingInteractionCount
          - wrapUpCode
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension predicates
        $ref: '#/definitions/NumericRange'
  FlowAggregationQuery:
    type: object
    required:
      - interval
      - metrics
    properties:
      interval:
        type: string
        description: >-
          Behaves like one clause in a SQL WHERE. Specifies the date and time
          range of data being queried. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      granularity:
        type: string
        description: >-
          Granularity aggregates metrics into subpartitions within the time
          interval specified. The default granularity is the same duration as
          the interval. Periods are represented as an ISO-8601 string. For
          example: P1D or P1DT12H
      timeZone:
        type: string
        description: >-
          Time zone context used to calculate response intervals (this allows
          resolving DST changes). The interval offset is used even when timeZone
          is specified. Default is UTC. Time zones are represented as a string
          of the zone name as found in the IANA time zone database. For example:
          UTC, Etc/UTC, or Europe/London
      groupBy:
        type: array
        description: >-
          Behaves like a SQL GROUPBY. Allows for multiple levels of grouping as
          a list of dimensions. Partitions resulting aggregate computations into
          distinct named subgroups rather than across the entire result set as
          if it were one group.
        items:
          type: string
          enum:
            - activeSkillId
            - addressFrom
            - addressTo
            - agentAssistantId
            - agentBullseyeRing
            - agentOwned
            - agentRank
            - agentScore
            - ani
            - assignerId
            - authenticated
            - conversationId
            - conversationInitiator
            - convertedFrom
            - convertedTo
            - customerParticipation
            - deliveryStatus
            - destinationAddress
            - direction
            - disconnectType
            - divisionId
            - dnis
            - edgeId
            - eligibleAgentCount
            - endingLanguage
            - entryReason
            - entryType
            - errorCode
            - exitReason
            - extendedDeliveryStatus
            - externalContactId
            - externalMediaCount
            - externalOrganizationId
            - externalTag
            - firstQueue
            - flaggedReason
            - flowId
            - flowInType
            - flowMilestoneId
            - flowName
            - flowOutType
            - flowOutcome
            - flowOutcomeId
            - flowOutcomeValue
            - flowType
            - flowVersion
            - groupId
            - interactionType
            - journeyActionId
            - journeyActionMapId
            - journeyActionMapVersion
            - journeyCustomerId
            - journeyCustomerIdType
            - journeyCustomerSessionId
            - journeyCustomerSessionIdType
            - knowledgeBaseId
            - mediaCount
            - mediaType
            - messageType
            - originatingDirection
            - outboundCampaignId
            - outboundContactId
            - outboundContactListId
            - participantName
            - peerId
            - proposedAgentId
            - provider
            - purpose
            - queueId
            - recognitionFailureReason
            - remote
            - removedSkillId
            - reoffered
            - requestedLanguageId
            - requestedRouting
            - requestedRoutingSkillId
            - roomId
            - routingPriority
            - routingRing
            - scoredAgentId
            - selectedAgentId
            - selectedAgentRank
            - selfServed
            - sessionDnis
            - sessionId
            - startingLanguage
            - stationId
            - teamId
            - transferTargetAddress
            - transferTargetName
            - transferType
            - usedRouting
            - userId
            - waitingInteractionCount
            - wrapUpCode
      filter:
        description: >-
          Behaves like a SQL WHERE clause. This is ANDed with the interval
          parameter. Expresses boolean logical predicates as well as dimensional
          filters
        $ref: '#/definitions/FlowAggregateQueryFilter'
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Only named metrics will be
          retrieved.
        items:
          type: string
          enum:
            - nFlow
            - nFlowMilestone
            - nFlowOutcome
            - nFlowOutcomeFailed
            - oFlowMilestone
            - tFlow
            - tFlowDisconnect
            - tFlowExit
            - tFlowOutcome
      flattenMultivaluedDimensions:
        type: boolean
        description: >-
          Flattens any multivalued dimensions used in response groups (e.g.
          ['a','b','c']->'a,b,c')
      views:
        type: array
        description: Custom derived metric views
        items:
          $ref: '#/definitions/FlowAggregationView'
      alternateTimeDimension:
        type: string
        description: >-
          Dimension to use as the alternative timestamp for data in the
          aggregate.  Choosing "eventTime" uses the actual time of the data
          event.
        enum:
          - eventTime
  FlowAggregationView:
    type: object
    required:
      - function
      - name
      - target
    properties:
      target:
        type: string
        description: Target metric name
        enum:
          - nFlow
          - nFlowMilestone
          - nFlowOutcome
          - nFlowOutcomeFailed
          - oFlowMilestone
          - tFlow
          - tFlowDisconnect
          - tFlowExit
          - tFlowOutcome
      name:
        type: string
        description: >-
          A unique name for this view. Must be distinct from other views and
          built-in metric names.
      function:
        type: string
        description: Type of view you wish to create
        enum:
          - rangeBound
      range:
        description: Range of numbers for slicing up data
        $ref: '#/definitions/AggregationRange'
  FlowObservationDataContainer:
    type: object
    properties:
      group:
        type: object
        description: A mapping from dimension to value
        additionalProperties:
          type: string
      data:
        type: array
        items:
          $ref: '#/definitions/ObservationMetricData'
  FlowObservationQueryResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/FlowObservationDataContainer'
  ObservationMetricData:
    type: object
    properties:
      metric:
        type: string
      qualifier:
        type: string
      stats:
        $ref: '#/definitions/StatisticalSummary'
      truncated:
        type: boolean
        description: >-
          Flag for a truncated list of observations. If truncated, the first
          half of the list of observations will contain the oldest observations
          and the second half the newest observations.
      observations:
        type: array
        description: >-
          List of observations sorted by timestamp in ascending order. This list
          may be truncated.
        items:
          $ref: '#/definitions/ObservationValue'
  ObservationValue:
    type: object
    required:
      - observationDate
    properties:
      observationDate:
        type: string
        format: date-time
        description: >-
          The time at which the observation occurred. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationId:
        type: string
        description: Unique identifier for the conversation
      sessionId:
        type: string
        description: The unique identifier of this session
      requestedRoutingSkillIds:
        type: array
        description: Unique identifier for a skill requested for an interaction
        uniqueItems: true
        items:
          type: string
      requestedLanguageId:
        type: string
        description: Unique identifier for the language requested for an interaction
      routingPriority:
        type: integer
        format: int64
        description: Routing priority for the current interaction
      participantName:
        type: string
        description: A human readable name identifying the participant
      userId:
        type: string
        description: Unique identifier for the user
      direction:
        type: string
        description: The direction of the communication
        enum:
          - inbound
          - outbound
      convertedFrom:
        type: string
        description: >-
          Session media type that was converted from in case of a media type
          conversion
      convertedTo:
        type: string
        description: >-
          Session media type that was converted to in case of a media type
          conversion
      addressFrom:
        type: string
        description: The address that initiated an action
      addressTo:
        type: string
        description: The address receiving an action
      ani:
        type: string
        description: Automatic Number Identification (caller's number)
      dnis:
        type: string
        description: >-
          Dialed number identification service (number dialed by the calling
          party)
      teamId:
        type: string
        description: The team id the user is a member of
      requestedRoutings:
        type: array
        description: All routing types for requested/attempted routing methods
        uniqueItems: true
        items:
          type: string
          enum:
            - Bullseye
            - Conditional
            - Direct
            - Last
            - Manual
            - Predictive
            - Preferred
            - Standard
            - Vip
      usedRouting:
        type: string
        description: Complete routing method
        enum:
          - Bullseye
          - Conditional
          - Direct
          - Last
          - Manual
          - Predictive
          - Preferred
          - Standard
          - Vip
      scoredAgents:
        type: array
        items:
          $ref: '#/definitions/AnalyticsScoredAgent'
  FlowObservationQuery:
    type: object
    required:
      - filter
      - metrics
    properties:
      filter:
        description: >-
          Filter to return a subset of observations. Expresses boolean logical
          predicates as well as dimensional filters
        $ref: '#/definitions/FlowObservationQueryFilter'
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Only named metrics will be
          retrieved.
        items:
          type: string
          enum:
            - oFlow
      detailMetrics:
        type: array
        description: Metrics for which to include additional detailed observations
        items:
          type: string
          enum:
            - oFlow
  FlowObservationQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/FlowObservationQueryPredicate'
  FlowObservationQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/FlowObservationQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/FlowObservationQueryPredicate'
  FlowObservationQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - flowId
          - mediaType
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension predicates
        $ref: '#/definitions/NumericRange'
  JourneyAggregateDataContainer:
    type: object
    properties:
      group:
        type: object
        description: A mapping from dimension to value
        additionalProperties:
          type: string
      data:
        type: array
        items:
          $ref: '#/definitions/StatisticalResponse'
  JourneyAggregateQueryResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/JourneyAggregateDataContainer'
  JourneyAggregateQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/JourneyAggregateQueryPredicate'
  JourneyAggregateQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/JourneyAggregateQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/JourneyAggregateQueryPredicate'
  JourneyAggregateQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - containsAllCondition
          - containsAnyCondition
          - endsWithCondition
          - equalCondition
          - journeyActionId
          - journeyActionMapId
          - journeyActionMapVersion
          - journeyActionMediaType
          - journeyActionTargetId
          - journeyActionTemplateId
          - journeyBlockingActionMapId
          - journeyBlockingEmergencyScheduleGroupId
          - journeyBlockingReason
          - journeyBlockingScheduleGroupId
          - journeyDeviceCategory
          - journeyDeviceType
          - journeyFrequencyCapReason
          - journeyIpGeolocationCountry
          - journeyOutcomeId
          - journeySegmentId
          - journeySegmentScope
          - journeySessionId
          - journeySessionSegmentId
          - journeySessionType
          - notContainsAllCondition
          - notContainsAnyCondition
          - notEqualCondition
          - startsWithCondition
          - touchpointActionMapId
          - touchpointAgentId
          - touchpointAttributionScope
          - touchpointChannelMessageType
          - touchpointChannelPlatform
          - touchpointChannelType
          - touchpointConversationId
          - touchpointInteractionType
          - touchpointQueueId
          - touchpointRequestedRouting
          - touchpointUsedRouting
          - touchpointWrapupCode
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension predicates
        $ref: '#/definitions/NumericRange'
  JourneyAggregationQuery:
    type: object
    required:
      - interval
      - metrics
    properties:
      interval:
        type: string
        description: >-
          Behaves like one clause in a SQL WHERE. Specifies the date and time
          range of data being queried. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      granularity:
        type: string
        description: >-
          Granularity aggregates metrics into subpartitions within the time
          interval specified. The default granularity is the same duration as
          the interval. Periods are represented as an ISO-8601 string. For
          example: P1D or P1DT12H
      timeZone:
        type: string
        description: >-
          Time zone context used to calculate response intervals (this allows
          resolving DST changes). The interval offset is used even when timeZone
          is specified. Default is UTC. Time zones are represented as a string
          of the zone name as found in the IANA time zone database. For example:
          UTC, Etc/UTC, or Europe/London
      groupBy:
        type: array
        description: >-
          Behaves like a SQL GROUPBY. Allows for multiple levels of grouping as
          a list of dimensions. Partitions resulting aggregate computations into
          distinct named subgroups rather than across the entire result set as
          if it were one group.
        items:
          type: string
          enum:
            - containsAllCondition
            - containsAnyCondition
            - endsWithCondition
            - equalCondition
            - journeyActionId
            - journeyActionMapId
            - journeyActionMapVersion
            - journeyActionMediaType
            - journeyActionTargetId
            - journeyActionTemplateId
            - journeyBlockingActionMapId
            - journeyBlockingEmergencyScheduleGroupId
            - journeyBlockingReason
            - journeyBlockingScheduleGroupId
            - journeyDeviceCategory
            - journeyDeviceType
            - journeyFrequencyCapReason
            - journeyIpGeolocationCountry
            - journeyOutcomeId
            - journeySegmentId
            - journeySegmentScope
            - journeySessionId
            - journeySessionSegmentId
            - journeySessionType
            - notContainsAllCondition
            - notContainsAnyCondition
            - notEqualCondition
            - startsWithCondition
            - touchpointActionMapId
            - touchpointAgentId
            - touchpointAttributionScope
            - touchpointChannelMessageType
            - touchpointChannelPlatform
            - touchpointChannelType
            - touchpointConversationId
            - touchpointInteractionType
            - touchpointQueueId
            - touchpointRequestedRouting
            - touchpointUsedRouting
            - touchpointWrapupCode
      filter:
        description: >-
          Behaves like a SQL WHERE clause. This is ANDed with the interval
          parameter. Expresses boolean logical predicates as well as dimensional
          filters
        $ref: '#/definitions/JourneyAggregateQueryFilter'
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Only named metrics will be
          retrieved.
        items:
          type: string
          enum:
            - nDistinctJourneyActions
            - nDistinctJourneySessions
            - nJourneyActionsBlocked
            - nJourneyOutcomesAchieved
            - nJourneyOutcomesAttributed
            - nJourneySegmentsAssigned
            - nJourneySessions
            - nWebActionsAbandoned
            - nWebActionsAccepted
            - nWebActionsEngaged
            - nWebActionsErrored
            - nWebActionsFrequencyCapReached
            - nWebActionsIgnored
            - nWebActionsOffered
            - nWebActionsOfferedOutsideSchedule
            - nWebActionsQualified
            - nWebActionsQualifiedOutsideSchedule
            - nWebActionsRejected
            - nWebActionsStarted
            - nWebActionsTimedout
            - oJourneyOutcomeTouchpointValue
            - oJourneyOutcomeValue
      flattenMultivaluedDimensions:
        type: boolean
        description: >-
          Flattens any multivalued dimensions used in response groups (e.g.
          ['a','b','c']->'a,b,c')
      views:
        type: array
        description: Custom derived metric views
        items:
          $ref: '#/definitions/JourneyAggregationView'
      alternateTimeDimension:
        type: string
        description: >-
          Dimension to use as the alternative timestamp for data in the
          aggregate.  Choosing "eventTime" uses the actual time of the data
          event.
        enum:
          - eventTime
  JourneyAggregationView:
    type: object
    required:
      - function
      - name
      - target
    properties:
      target:
        type: string
        description: Target metric name
        enum:
          - nDistinctJourneyActions
          - nDistinctJourneySessions
          - nJourneyActionsBlocked
          - nJourneyOutcomesAchieved
          - nJourneyOutcomesAttributed
          - nJourneySegmentsAssigned
          - nJourneySessions
          - nWebActionsAbandoned
          - nWebActionsAccepted
          - nWebActionsEngaged
          - nWebActionsErrored
          - nWebActionsFrequencyCapReached
          - nWebActionsIgnored
          - nWebActionsOffered
          - nWebActionsOfferedOutsideSchedule
          - nWebActionsQualified
          - nWebActionsQualifiedOutsideSchedule
          - nWebActionsRejected
          - nWebActionsStarted
          - nWebActionsTimedout
          - oJourneyOutcomeTouchpointValue
          - oJourneyOutcomeValue
      name:
        type: string
        description: >-
          A unique name for this view. Must be distinct from other views and
          built-in metric names.
      function:
        type: string
        description: Type of view you wish to create
        enum:
          - rangeBound
      range:
        description: Range of numbers for slicing up data
        $ref: '#/definitions/AggregationRange'
  QueueObservationDataContainer:
    type: object
    properties:
      group:
        type: object
        description: A mapping from dimension to value
        additionalProperties:
          type: string
      data:
        type: array
        items:
          $ref: '#/definitions/ObservationMetricData'
  QueueObservationQueryResponse:
    type: object
    properties:
      systemToOrganizationMappings:
        type: object
        description: A mapping from system presence to a list of organization presence ids
        additionalProperties:
          type: array
          items:
            type: string
      results:
        type: array
        items:
          $ref: '#/definitions/QueueObservationDataContainer'
  QueueObservationQuery:
    type: object
    required:
      - filter
      - metrics
    properties:
      filter:
        description: >-
          Filter to return a subset of observations. Expresses boolean logical
          predicates as well as dimensional filters
        $ref: '#/definitions/QueueObservationQueryFilter'
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Only named metrics will be
          retrieved.
        items:
          type: string
          enum:
            - oActiveUsers
            - oAlerting
            - oInteracting
            - oMemberUsers
            - oOffQueueUsers
            - oOnQueueUsers
            - oUserPresences
            - oUserRoutingStatuses
            - oWaiting
      detailMetrics:
        type: array
        description: Metrics for which to include additional detailed observations
        items:
          type: string
          enum:
            - oActiveUsers
            - oAlerting
            - oInteracting
            - oMemberUsers
            - oOffQueueUsers
            - oOnQueueUsers
            - oUserPresences
            - oUserRoutingStatuses
            - oWaiting
  QueueObservationQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/QueueObservationQueryPredicate'
  QueueObservationQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/QueueObservationQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/QueueObservationQueryPredicate'
  QueueObservationQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - mediaType
          - queueId
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension predicates
        $ref: '#/definitions/NumericRange'
  SurveyAggregateDataContainer:
    type: object
    properties:
      group:
        type: object
        description: A mapping from dimension to value
        additionalProperties:
          type: string
      data:
        type: array
        items:
          $ref: '#/definitions/StatisticalResponse'
  SurveyAggregateQueryResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/SurveyAggregateDataContainer'
  SurveyAggregateQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/SurveyAggregateQueryPredicate'
  SurveyAggregateQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/SurveyAggregateQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/SurveyAggregateQueryPredicate'
  SurveyAggregateQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - conversationId
          - divisionId
          - externalContactId
          - mediaType
          - queueId
          - requestedLanguageId
          - requestedRoutingSkillId
          - surveyAnswerId
          - surveyCreatedDate
          - surveyErrorReason
          - surveyFormContextId
          - surveyFormId
          - surveyFormName
          - surveyId
          - surveyPreviousStatus
          - surveyPromoterScore
          - surveyQuestionGroupId
          - surveyQuestionId
          - surveyStatus
          - teamId
          - userId
          - wrapUpCode
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension predicates
        $ref: '#/definitions/NumericRange'
  SurveyAggregationQuery:
    type: object
    required:
      - interval
      - metrics
    properties:
      interval:
        type: string
        description: >-
          Behaves like one clause in a SQL WHERE. Specifies the date and time
          range of data being queried. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      granularity:
        type: string
        description: >-
          Granularity aggregates metrics into subpartitions within the time
          interval specified. The default granularity is the same duration as
          the interval. Periods are represented as an ISO-8601 string. For
          example: P1D or P1DT12H
      timeZone:
        type: string
        description: >-
          Time zone context used to calculate response intervals (this allows
          resolving DST changes). The interval offset is used even when timeZone
          is specified. Default is UTC. Time zones are represented as a string
          of the zone name as found in the IANA time zone database. For example:
          UTC, Etc/UTC, or Europe/London
      groupBy:
        type: array
        description: >-
          Behaves like a SQL GROUPBY. Allows for multiple levels of grouping as
          a list of dimensions. Partitions resulting aggregate computations into
          distinct named subgroups rather than across the entire result set as
          if it were one group.
        items:
          type: string
          enum:
            - conversationId
            - divisionId
            - externalContactId
            - mediaType
            - queueId
            - requestedLanguageId
            - requestedRoutingSkillId
            - surveyAnswerId
            - surveyErrorReason
            - surveyFormContextId
            - surveyFormId
            - surveyFormName
            - surveyId
            - surveyPreviousStatus
            - surveyPromoterScore
            - surveyQuestionGroupId
            - surveyQuestionId
            - surveyStatus
            - teamId
            - userId
            - wrapUpCode
      filter:
        description: >-
          Behaves like a SQL WHERE clause. This is ANDed with the interval
          parameter. Expresses boolean logical predicates as well as dimensional
          filters
        $ref: '#/definitions/SurveyAggregateQueryFilter'
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Only named metrics will be
          retrieved.
        items:
          type: string
          enum:
            - nSurveyErrors
            - nSurveyNpsDetractors
            - nSurveyNpsPromoters
            - nSurveyNpsResponses
            - nSurveyQuestionGroupResponses
            - nSurveyQuestionResponses
            - nSurveyResponses
            - nSurveysAbandoned
            - nSurveysDeleted
            - nSurveysExpired
            - nSurveysSent
            - nSurveysStarted
            - oSurveyQuestionGroupScore
            - oSurveyQuestionScore
            - oSurveyTotalScore
      flattenMultivaluedDimensions:
        type: boolean
        description: >-
          Flattens any multivalued dimensions used in response groups (e.g.
          ['a','b','c']->'a,b,c')
      views:
        type: array
        description: Custom derived metric views
        items:
          $ref: '#/definitions/SurveyAggregationView'
      alternateTimeDimension:
        type: string
        description: >-
          Dimension to use as the alternative timestamp for data in the
          aggregate.  Choosing "eventTime" uses the actual time of the data
          event.
        enum:
          - eventTime
          - surveyCreatedDate
  SurveyAggregationView:
    type: object
    required:
      - function
      - name
      - target
    properties:
      target:
        type: string
        description: Target metric name
        enum:
          - nSurveyErrors
          - nSurveyNpsDetractors
          - nSurveyNpsPromoters
          - nSurveyNpsResponses
          - nSurveyQuestionGroupResponses
          - nSurveyQuestionResponses
          - nSurveyResponses
          - nSurveysAbandoned
          - nSurveysDeleted
          - nSurveysExpired
          - nSurveysSent
          - nSurveysStarted
          - oSurveyQuestionGroupScore
          - oSurveyQuestionScore
          - oSurveyTotalScore
      name:
        type: string
        description: >-
          A unique name for this view. Must be distinct from other views and
          built-in metric names.
      function:
        type: string
        description: Type of view you wish to create
        enum:
          - rangeBound
      range:
        description: Range of numbers for slicing up data
        $ref: '#/definitions/AggregationRange'
  TranscriptAggregateDataContainer:
    type: object
    properties:
      group:
        type: object
        description: A mapping from dimension to value
        additionalProperties:
          type: string
      data:
        type: array
        items:
          $ref: '#/definitions/StatisticalResponse'
  TranscriptAggregateQueryResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/TranscriptAggregateDataContainer'
  TranscriptAggregateQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/TranscriptAggregateQueryPredicate'
  TranscriptAggregateQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/TranscriptAggregateQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/TranscriptAggregateQueryPredicate'
  TranscriptAggregateQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - addressFrom
          - addressTo
          - ani
          - channel
          - conversationId
          - direction
          - divisionId
          - dnis
          - flowId
          - flowVersion
          - mediaType
          - messageType
          - queueId
          - resultsBy
          - teamId
          - topicId
          - userId
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension predicates
        $ref: '#/definitions/NumericRange'
  TranscriptAggregationQuery:
    type: object
    required:
      - interval
      - metrics
    properties:
      interval:
        type: string
        description: >-
          Behaves like one clause in a SQL WHERE. Specifies the date and time
          range of data being queried. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      granularity:
        type: string
        description: >-
          Granularity aggregates metrics into subpartitions within the time
          interval specified. The default granularity is the same duration as
          the interval. Periods are represented as an ISO-8601 string. For
          example: P1D or P1DT12H
      timeZone:
        type: string
        description: >-
          Time zone context used to calculate response intervals (this allows
          resolving DST changes). The interval offset is used even when timeZone
          is specified. Default is UTC. Time zones are represented as a string
          of the zone name as found in the IANA time zone database. For example:
          UTC, Etc/UTC, or Europe/London
      groupBy:
        type: array
        description: >-
          Behaves like a SQL GROUPBY. Allows for multiple levels of grouping as
          a list of dimensions. Partitions resulting aggregate computations into
          distinct named subgroups rather than across the entire result set as
          if it were one group.
        items:
          type: string
          enum:
            - addressFrom
            - addressTo
            - ani
            - channel
            - conversationId
            - direction
            - divisionId
            - dnis
            - flowId
            - flowVersion
            - mediaType
            - messageType
            - queueId
            - teamId
            - topicId
            - userId
      filter:
        description: >-
          Behaves like a SQL WHERE clause. This is ANDed with the interval
          parameter. Expresses boolean logical predicates as well as dimensional
          filters
        $ref: '#/definitions/TranscriptAggregateQueryFilter'
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Only named metrics will be
          retrieved.
        items:
          type: string
          enum:
            - nTopicCommunications
            - oCustomerSentiment
            - oSentimentScore
      flattenMultivaluedDimensions:
        type: boolean
        description: >-
          Flattens any multivalued dimensions used in response groups (e.g.
          ['a','b','c']->'a,b,c')
      views:
        type: array
        description: Custom derived metric views
        items:
          $ref: '#/definitions/TranscriptAggregationView'
      alternateTimeDimension:
        type: string
        description: >-
          Dimension to use as the alternative timestamp for data in the
          aggregate.  Choosing "eventTime" uses the actual time of the data
          event.
        enum:
          - eventTime
  TranscriptAggregationView:
    type: object
    required:
      - function
      - name
      - target
    properties:
      target:
        type: string
        description: Target metric name
        enum:
          - nTopicCommunications
          - oCustomerSentiment
          - oSentimentScore
      name:
        type: string
        description: >-
          A unique name for this view. Must be distinct from other views and
          built-in metric names.
      function:
        type: string
        description: Type of view you wish to create
        enum:
          - rangeBound
      range:
        description: Range of numbers for slicing up data
        $ref: '#/definitions/AggregationRange'
  UserAggregateDataContainer:
    type: object
    properties:
      group:
        type: object
        description: A mapping from dimension to value
        additionalProperties:
          type: string
      data:
        type: array
        items:
          $ref: '#/definitions/StatisticalResponse'
  UserAggregateQueryResponse:
    type: object
    properties:
      systemToOrganizationMappings:
        type: object
        description: A mapping from system presence to a list of organization presence ids
        additionalProperties:
          type: array
          items:
            type: string
      results:
        type: array
        items:
          $ref: '#/definitions/UserAggregateDataContainer'
  UserAggregateQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/UserAggregateQueryPredicate'
  UserAggregateQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/UserAggregateQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/UserAggregateQueryPredicate'
  UserAggregateQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - userId
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension predicates
        $ref: '#/definitions/NumericRange'
  UserAggregationQuery:
    type: object
    required:
      - interval
      - metrics
    properties:
      interval:
        type: string
        description: >-
          Behaves like one clause in a SQL WHERE. Specifies the date and time
          range of data being queried. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      granularity:
        type: string
        description: >-
          Granularity aggregates metrics into subpartitions within the time
          interval specified. The default granularity is the same duration as
          the interval. Periods are represented as an ISO-8601 string. For
          example: P1D or P1DT12H
      timeZone:
        type: string
        description: >-
          Time zone context used to calculate response intervals (this allows
          resolving DST changes). The interval offset is used even when timeZone
          is specified. Default is UTC. Time zones are represented as a string
          of the zone name as found in the IANA time zone database. For example:
          UTC, Etc/UTC, or Europe/London
      groupBy:
        type: array
        description: >-
          Behaves like a SQL GROUPBY. Allows for multiple levels of grouping as
          a list of dimensions. Partitions resulting aggregate computations into
          distinct named subgroups rather than across the entire result set as
          if it were one group.
        items:
          type: string
          enum:
            - userId
      filter:
        description: >-
          Behaves like a SQL WHERE clause. This is ANDed with the interval
          parameter. Expresses boolean logical predicates as well as dimensional
          filters
        $ref: '#/definitions/UserAggregateQueryFilter'
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Only named metrics will be
          retrieved.
        items:
          type: string
          enum:
            - tAgentRoutingStatus
            - tOrganizationPresence
            - tSystemPresence
      flattenMultivaluedDimensions:
        type: boolean
        description: >-
          Flattens any multivalued dimensions used in response groups (e.g.
          ['a','b','c']->'a,b,c')
      views:
        type: array
        description: Custom derived metric views
        items:
          $ref: '#/definitions/UserAggregationView'
      alternateTimeDimension:
        type: string
        description: >-
          Dimension to use as the alternative timestamp for data in the
          aggregate.  Choosing "eventTime" uses the actual time of the data
          event.
        enum:
          - eventTime
  UserAggregationView:
    type: object
    required:
      - function
      - name
      - target
    properties:
      target:
        type: string
        description: Target metric name
        enum:
          - tAgentRoutingStatus
          - tOrganizationPresence
          - tSystemPresence
      name:
        type: string
        description: >-
          A unique name for this view. Must be distinct from other views and
          built-in metric names.
      function:
        type: string
        description: Type of view you wish to create
        enum:
          - rangeBound
      range:
        description: Range of numbers for slicing up data
        $ref: '#/definitions/AggregationRange'
  AnalyticsRoutingStatusRecord:
    type: object
    properties:
      startTime:
        type: string
        format: date-time
        description: >-
          The start time of the record. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endTime:
        type: string
        format: date-time
        description: >-
          The end time of the record. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      routingStatus:
        type: string
        description: The user's ACD routing status
        enum:
          - OFF_QUEUE
          - IDLE
          - INTERACTING
          - NOT_RESPONDING
          - COMMUNICATING
  AnalyticsUserDetail:
    type: object
    properties:
      userId:
        type: string
        description: The identifier for the user
      primaryPresence:
        type: array
        description: The presence records for the user
        items:
          $ref: '#/definitions/AnalyticsUserPresenceRecord'
      routingStatus:
        type: array
        description: The ACD routing status records for the user
        items:
          $ref: '#/definitions/AnalyticsRoutingStatusRecord'
  AnalyticsUserDetailsQueryResponse:
    type: object
    properties:
      userDetails:
        type: array
        items:
          $ref: '#/definitions/AnalyticsUserDetail'
      aggregations:
        type: array
        items:
          $ref: '#/definitions/AggregationResult'
      totalHits:
        type: integer
        format: int32
  AnalyticsUserPresenceRecord:
    type: object
    properties:
      startTime:
        type: string
        format: date-time
        description: >-
          The start time of the record. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endTime:
        type: string
        format: date-time
        description: >-
          The end time of the record. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      systemPresence:
        type: string
        description: The user's system presence
        enum:
          - AVAILABLE
          - AWAY
          - BUSY
          - OFFLINE
          - IDLE
          - ON_QUEUE
          - MEAL
          - TRAINING
          - MEETING
          - BREAK
      organizationPresenceId:
        type: string
        description: The identifier for the user's organization presence
  PresenceDetailQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/PresenceDetailQueryPredicate'
  PresenceDetailQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/PresenceDetailQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/PresenceDetailQueryPredicate'
  PresenceDetailQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - organizationPresenceId
          - systemPresence
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension predicates
        $ref: '#/definitions/NumericRange'
  RoutingStatusDetailQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/RoutingStatusDetailQueryPredicate'
  RoutingStatusDetailQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/RoutingStatusDetailQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/RoutingStatusDetailQueryPredicate'
  RoutingStatusDetailQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - routingStatus
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension predicates
        $ref: '#/definitions/NumericRange'
  UserDetailQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/UserDetailQueryPredicate'
  UserDetailQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/UserDetailQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/UserDetailQueryPredicate'
  UserDetailQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - userId
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension predicates
        $ref: '#/definitions/NumericRange'
  UserDetailsQuery:
    type: object
    required:
      - interval
    properties:
      interval:
        type: string
        description: >-
          Specifies the date and time range of data being queried. Conversations
          MUST have started within this time range to potentially be included
          within the result set. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      userFilters:
        type: array
        description: Filters that target the users to retrieve data for
        items:
          $ref: '#/definitions/UserDetailQueryFilter'
      presenceFilters:
        type: array
        description: Filters that target system and organization presence-level data
        items:
          $ref: '#/definitions/PresenceDetailQueryFilter'
      routingStatusFilters:
        type: array
        description: Filters that target agent routing status-level data
        items:
          $ref: '#/definitions/RoutingStatusDetailQueryFilter'
      order:
        type: string
        description: >-
          Sort the result set in ascending/descending order. Default is
          ascending
        enum:
          - asc
          - desc
          - unordered
      presenceAggregations:
        type: array
        description: >-
          Include faceted search and aggregate roll-ups of presence data in your
          search results. This does not function as a filter, but rather,
          summary data about the presence results matching your filters
        items:
          $ref: '#/definitions/AnalyticsQueryAggregation'
      routingStatusAggregations:
        type: array
        description: >-
          Include faceted search and aggregate roll-ups of agent routing status
          data in your search results. This does not function as a filter, but
          rather, summary data about the agent routing status results matching
          your filters
        items:
          $ref: '#/definitions/AnalyticsQueryAggregation'
      paging:
        description: >-
          Page size and number to control iterating through large result sets.
          Default page size is 25
        $ref: '#/definitions/PagingSpec'
  UserObservationDataContainer:
    type: object
    properties:
      group:
        type: object
        description: A mapping from dimension to value
        additionalProperties:
          type: string
      data:
        type: array
        items:
          $ref: '#/definitions/ObservationMetricData'
  UserObservationQueryResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/UserObservationDataContainer'
  UserObservationQuery:
    type: object
    required:
      - filter
      - metrics
    properties:
      filter:
        description: >-
          Filter to return a subset of observations. Expresses boolean logical
          predicates as well as dimensional filters
        $ref: '#/definitions/UserObservationQueryFilter'
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Only named metrics will be
          retrieved.
        items:
          type: string
          enum:
            - oActiveQueues
            - oMemberQueues
      detailMetrics:
        type: array
        description: Metrics for which to include additional detailed observations
        items:
          type: string
          enum:
            - oActiveQueues
            - oMemberQueues
  UserObservationQueryClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates
        enum:
          - and
          - or
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/UserObservationQueryPredicate'
  UserObservationQueryFilter:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Boolean operation to apply to the provided predicates and clauses
        enum:
          - and
          - or
      clauses:
        type: array
        description: Boolean 'and/or' logic with up to two-levels of nesting
        items:
          $ref: '#/definitions/UserObservationQueryClause'
      predicates:
        type: array
        description: >-
          Like a three-word sentence: (attribute-name) (operator)
          (target-value).
        items:
          $ref: '#/definitions/UserObservationQueryPredicate'
  UserObservationQueryPredicate:
    type: object
    properties:
      type:
        type: string
        description: Optional type, can usually be inferred
        enum:
          - dimension
          - property
          - metric
      dimension:
        type: string
        description: Left hand side for dimension predicates
        enum:
          - userId
        x-genesys-entity-type:
          value: DIMENSION_TYPE
      operator:
        type: string
        description: Optional operator, default is matches
        enum:
          - matches
          - exists
          - notExists
      value:
        type: string
        description: Right hand side for dimension predicates
        x-genesys-entity-type:
          value: DIMENSION_SELECTOR
      range:
        description: Right hand side for dimension predicates
        $ref: '#/definitions/NumericRange'
  AsyncUserDetailsQuery:
    type: object
    required:
      - interval
    properties:
      interval:
        type: string
        description: >-
          Specifies the date and time range of data being queried. Conversations
          MUST have started within this time range to potentially be included
          within the result set. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      userFilters:
        type: array
        description: Filters that target the users to retrieve data for
        items:
          $ref: '#/definitions/UserDetailQueryFilter'
      presenceFilters:
        type: array
        description: Filters that target system and organization presence-level data
        items:
          $ref: '#/definitions/PresenceDetailQueryFilter'
      routingStatusFilters:
        type: array
        description: Filters that target agent routing status-level data
        items:
          $ref: '#/definitions/RoutingStatusDetailQueryFilter'
      order:
        type: string
        description: >-
          Sort the result set in ascending/descending order. Default is
          ascending
        enum:
          - asc
          - desc
          - unordered
      limit:
        type: integer
        format: int32
        description: Specify number of results to be returned
  AnalyticsUserDetailsAsyncQueryResponse:
    type: object
    properties:
      userDetails:
        type: array
        items:
          $ref: '#/definitions/AnalyticsUserDetail'
      cursor:
        type: string
        description: Optional cursor to indicate where to resume the results
      dataAvailabilityDate:
        type: string
        format: date-time
        description: >-
          Data available up to at least this datetime. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  ReportingTurn:
    type: object
    properties:
      userInput:
        type: string
        description: The chosen user input associated with this reporting turn.
      botPrompts:
        type: array
        description: The bot prompts associated with this reporting turn.
        items:
          type: string
      sessionId:
        type: string
        description: The bot session ID that this reporting turn is grouped under.
      askAction:
        description: >-
          The bot flow 'ask' action associated with this reporting turn (e.g.
          AskForIntent).
        $ref: '#/definitions/ReportingTurnAction'
      intent:
        description: The intent and associated slots detected during this reporting turn.
        $ref: '#/definitions/ReportingTurnIntent'
      knowledge:
        description: The knowledge data captured during this reporting turn.
        $ref: '#/definitions/ReportingTurnKnowledge'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the original turn was created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      askActionResult:
        type: string
        description: Result of the bot flow 'ask' action.
        enum:
          - SuccessCollection
          - SuccessConfirmationYes
          - SuccessConfirmationNo
          - NoMatchCollection
          - NoMatchConfirmation
          - AgentRequestedByUser
          - ConfirmationRequired
          - Error
          - ExpressionError
          - NoInputCollection
          - NoInputConfirmation
          - DisambiguationRequired
          - SuccessDisambiguation
          - SuccessDisambiguationNone
          - NoMatchDisambiguation
          - NoInputDisambiguation
      sessionEndDetails:
        description: The details related to end of bot flow session.
        $ref: '#/definitions/SessionEndDetails'
      conversation:
        description: >-
          The conversation details, across potentially multiple Bot Flow
          sessions.
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
  ReportingTurnAction:
    type: object
    properties:
      actionId:
        type: string
        description: The ID of the action in the bot flow.
      actionName:
        type: string
        description: The name of the action in the bot flow.
      actionNumber:
        type: integer
        format: int32
        description: The number of the action in the bot flow.
      actionType:
        type: string
        enum:
          - AddFlowMilestoneAction
          - AskForNLUIntentAction
          - AskForBooleanAction
          - AskForSlotAction
          - AskForNLUNextIntentAction
          - BotState
          - CallTaskAction
          - ClearSlotAction
          - DisconnectAction
          - EndTaskAction
          - ExitBotFlowAction
          - UpdateVariableAction
          - CommunicateAction
          - DecisionAction
          - FindGrammarAction
          - FindGroupAction
          - FindLanguageSkillAction
          - FindQueueAction
          - FindQueueByIdAction
          - FindSkillAction
          - FindSystemPromptAction
          - FindUserAction
          - FindUserByIdAction
          - FindUsersByIdAction
          - FindUserPromptAction
          - SwitchAction
          - DataAction
          - DataTableLookupAction
          - GetExternalContactAction
          - GetExternalOrganizationAction
          - LoopAction
          - ExitLoopAction
          - NextLoopAction
          - LoopUntilAction
          - SetActiveIntentAction
          - SetFlowOutcomeAction
          - InitializeFlowOutcomeAction
          - AskForStringAction
          - SendResponseAction
          - GetResponseAction
          - ExtractSecureDataAction
          - SecureAction
          - TransferTaskAction
          - DigitalMenuAction
          - WaitForInputAction
          - ShowKnowledgeArticleAction
          - SetLocaleAction
          - TransferPureMatchAction
          - Unknown
  ReportingTurnIntent:
    type: object
    properties:
      name:
        type: string
        description: The name of the intent detected during this reporting turn.
      confidence:
        type: number
        format: double
        description: >-
          The confidence score of the intent detected during this reporting
          turn.
      slots:
        type: array
        description: The slots detected during this reporting turn.
        items:
          $ref: '#/definitions/ReportingTurnIntentSlot'
  ReportingTurnIntentSlot:
    type: object
    properties:
      name:
        type: string
        description: The name of the slot.
      value:
        type: string
        description: The value of the slot.
      type:
        type: string
        description: The NLU entity type of the slot (either builtin or user defined)
      confidence:
        type: number
        format: double
        description: The confidence score this slot received during detection.
  ReportingTurnKnowledge:
    type: object
    properties:
      knowledgeBaseId:
        type: string
        description: The Knowledge Base ID that the captured knowledge data relates to.
      feedback:
        description: >-
          The knowledge feedback data that was captured during this reporting
          turn.
        $ref: '#/definitions/ReportingTurnKnowledgeFeedback'
      search:
        description: >-
          The knowledge search data that was captured during this reporting
          turn.
        $ref: '#/definitions/ReportingTurnKnowledgeSearch'
  ReportingTurnKnowledgeDocument:
    type: object
    properties:
      id:
        type: string
        description: The ID of the knowledge document.
      question:
        type: string
        description: The the question that was used to match against the search query.
      answer:
        type: string
        description: The corresponding answer to the question.
      confidence:
        type: number
        format: double
        description: >-
          The confidence score of how well the question matched the search
          query.
  ReportingTurnKnowledgeFeedback:
    type: object
    properties:
      searchId:
        type: string
        description: The ID of the original knowledge search that this feedback relates to.
      rating:
        type: integer
        format: int32
        description: >-
          The feedback rating for the search (1.0 - 5.0). 1 = Negative, 5 =
          Positive.
      documents:
        type: array
        description: The list of search documents that the feedback applies to.
        items:
          $ref: '#/definitions/ReportingTurnKnowledgeDocument'
  ReportingTurnKnowledgeSearch:
    type: object
    properties:
      searchId:
        type: string
        description: The ID of this knowledge search.
      documents:
        type: array
        description: The list of search documents captured during this reporting turn.
        items:
          $ref: '#/definitions/ReportingTurnKnowledgeDocument'
      query:
        type: string
        description: >-
          The search query that was used to search the Knowledge Base documents
          for a matching question.
  ReportingTurnsResponse:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ReportingTurn'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  SessionEndDetails:
    type: object
    properties:
      type:
        type: string
        description: >-
          The type of termination handling that resulted in the session end. It
          can be either Exit or Disconnect
        enum:
          - Disconnect
          - Exit
      reason:
        type: string
        description: >-
          The reason for termination action. It can be due to an error or normal
          flow execution
  TextBotUserAgent:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: The name of the user agent.
        enum:
          - Phone
          - SMS
          - GenesysWebWidget
          - FacebookMessenger
          - WeChat
          - Whatsapp
          - AppleBusinessChat
          - Telegram
          - Slack
          - Signal
          - Line
          - Discord
          - TwitterDirectMessage
          - Other
          - Unknown
    description: Information about the caller executing a bot flow.
  AnalyticsDataRetentionResponse:
    type: object
    properties:
      retentionDays:
        type: integer
        format: int32
        description: Analytics data retention period in days for the organization.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date and time when the analytics data retention was set. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date and time when the analytics data retention was last modified.
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  UpdateAnalyticsDataRetentionRequest:
    type: object
    required:
      - retentionDays
    properties:
      retentionDays:
        type: integer
        format: int32
        description: Analytics data retention period in days to set for the organization.
  AnalyticsReportingSettings:
    type: object
    properties:
      piiMaskingEnabled:
        type: boolean
        description: >-
          Indication of whether or not personal data is masked in data export
          and the Analytics/Reporting UI
      queueAgentAccessObfuscation:
        type: boolean
        description: >-
          Indication of whether or not to obfuscate export data from the Queue
          Agent Details view based on User ACL
  ConversationProperties:
    type: object
    properties:
      isWaiting:
        type: boolean
        description: Indicates filtering for waiting
      isActive:
        type: boolean
        description: Indicates filtering for active
      isAcd:
        type: boolean
        description: Indicates filtering for Acd
      isPreferred:
        type: boolean
        description: Indicates filtering for Preferred Agent Routing
      isScreenshare:
        type: boolean
        description: Indicates filtering for screenshare
      isCobrowse:
        type: boolean
        description: Indicates filtering for Cobrowse
      isVoicemail:
        type: boolean
        description: Indicates filtering for Voice mail
      isFlagged:
        type: boolean
        description: Indicates filtering for flagged
      isMonitored:
        type: boolean
        description: Indicates filtering for monitored
      filterWrapUpNotes:
        type: boolean
        description: Indicates filtering for WrapUpNotes
      matchAll:
        type: boolean
        description: >-
          Indicates comparison operation, TRUE indicates filters will use AND
          logic, FALSE indicates OR logic
  TranscriptTopics:
    type: object
    properties:
      includes:
        type: array
        description: >-
          List of topics which need to be included in exact match criteria. This
          field is not mutually exclusive with excludes topic list.
        items:
          type: string
      excludes:
        type: array
        description: >-
          List of topics which need to be excluded in exact match criteria. This
          field is not mutually exclusive with includes topic list.
        items:
          type: string
  Transcripts:
    type: object
    properties:
      exactMatch:
        type: array
        description: >-
          List of transcript contents which needs to satisfy exact match
          criteria
        items:
          type: string
      contains:
        type: array
        description: List of transcript contents which needs to satisfy contains criteria
        items:
          type: string
      doesNotContain:
        type: array
        description: >-
          List of transcript contents which needs to satisfy does not contain
          criteria
        items:
          type: string
  ViewFilter:
    type: object
    properties:
      mediaTypes:
        type: array
        description: The media types are used to filter the view
        items:
          type: string
          enum:
            - callback
            - chat
            - cobrowse
            - email
            - message
            - screenshare
            - unknown
            - video
            - voice
      queueIds:
        type: array
        description: The queue ids are used to filter the view
        items:
          type: string
        x-genesys-entity-type:
          value: QUEUE_ID
      skillIds:
        type: array
        description: The skill ids are used to filter the view
        items:
          type: string
      skillGroups:
        type: array
        description: The skill groups used to filter the view
        items:
          type: string
      languageIds:
        type: array
        description: The language ids are used to filter the view
        items:
          type: string
      languageGroups:
        type: array
        description: The language groups used to filter the view
        items:
          type: string
      directions:
        type: array
        description: The directions are used to filter the view
        items:
          type: string
          enum:
            - inbound
            - outbound
      originatingDirections:
        type: array
        description: The list of orginating directions used to filter the view
        items:
          type: string
          enum:
            - inbound
            - outbound
      wrapUpCodes:
        type: array
        description: The wrap up codes are used to filter the view
        items:
          type: string
      dnisList:
        type: array
        description: The dnis list is used to filter the view
        items:
          type: string
      sessionDnisList:
        type: array
        description: The list of session dnis used to filter the view
        items:
          type: string
      filterQueuesByUserIds:
        type: array
        description: The user ids are used to fetch associated queues for the view
        items:
          type: string
        x-genesys-entity-type:
          value: USER_ID
      filterUsersByQueueIds:
        type: array
        description: The queue ids are used to fetch associated users for the view
        items:
          type: string
        x-genesys-entity-type:
          value: QUEUE_ID
      userIds:
        type: array
        description: The user ids are used to filter the view
        items:
          type: string
        x-genesys-entity-type:
          value: USER_ID
      managementUnitIds:
        type: array
        description: The management unit ids are used to filter the view
        items:
          type: string
      addressTos:
        type: array
        description: The address To values are used to filter the view
        items:
          type: string
      addressFroms:
        type: array
        description: The address from values are used to filter the view
        items:
          type: string
      outboundCampaignIds:
        type: array
        description: The outbound campaign ids are used to filter the view
        items:
          type: string
      outboundContactListIds:
        type: array
        description: The outbound contact list ids are used to filter the view
        items:
          type: string
      contactIds:
        type: array
        description: The contact ids are used to filter the view
        items:
          type: string
      externalContactIds:
        type: array
        description: The external contact ids are used to filter the view
        items:
          type: string
      externalOrgIds:
        type: array
        description: The external org ids are used to filter the view
        items:
          type: string
      aniList:
        type: array
        description: The ani list ids are used to filter the view
        items:
          type: string
      durationsMilliseconds:
        type: array
        description: The durations in milliseconds used to filter the view
        items:
          $ref: '#/definitions/NumericRange'
      acdDurationsMilliseconds:
        type: array
        description: The acd durations in milliseconds used to filter the view
        items:
          $ref: '#/definitions/NumericRange'
      talkDurationsMilliseconds:
        type: array
        description: The talk durations in milliseconds used to filter the view
        items:
          $ref: '#/definitions/NumericRange'
      acwDurationsMilliseconds:
        type: array
        description: The acw durations in milliseconds used to filter the view
        items:
          $ref: '#/definitions/NumericRange'
      handleDurationsMilliseconds:
        type: array
        description: The handle durations in milliseconds used to filter the view
        items:
          $ref: '#/definitions/NumericRange'
      holdDurationsMilliseconds:
        type: array
        description: The hold durations in milliseconds used to filter the view
        items:
          $ref: '#/definitions/NumericRange'
      abandonDurationsMilliseconds:
        type: array
        description: The abandon durations in milliseconds used to filter the view
        items:
          $ref: '#/definitions/NumericRange'
      evaluationScore:
        description: The evaluationScore is used to filter the view
        $ref: '#/definitions/NumericRange'
      evaluationCriticalScore:
        description: The evaluationCriticalScore is used to filter the view
        $ref: '#/definitions/NumericRange'
      evaluationFormIds:
        type: array
        description: The evaluation form ids are used to filter the view
        items:
          type: string
      evaluatedAgentIds:
        type: array
        description: The evaluated agent ids are used to filter the view
        items:
          type: string
      evaluatorIds:
        type: array
        description: The evaluator ids are used to filter the view
        items:
          type: string
      transferred:
        type: boolean
        description: Indicates filtering for transfers
      abandoned:
        type: boolean
        description: Indicates filtering for abandons
      answered:
        type: boolean
        description: Indicates filtering for answered interactions
      messageTypes:
        type: array
        description: The message media types used to filter the view
        items:
          type: string
          enum:
            - sms
            - twitter
            - line
            - facebook
            - whatsapp
            - webmessaging
            - open
            - instagram
      divisionIds:
        type: array
        description: The divison Ids used to filter the view
        items:
          type: string
        x-genesys-entity-type:
          value: DIVISION_ID
      surveyFormIds:
        type: array
        description: The survey form ids used to filter the view
        items:
          type: string
      surveyTotalScore:
        description: The survey total score used to filter the view
        $ref: '#/definitions/NumericRange'
      surveyNpsScore:
        description: The survey NPS score used to filter the view
        $ref: '#/definitions/NumericRange'
      mos:
        description: The desired range for mos values
        $ref: '#/definitions/NumericRange'
      surveyQuestionGroupScore:
        description: The survey question group score used to filter the view
        $ref: '#/definitions/NumericRange'
      surveyPromoterScore:
        description: The survey promoter score used to filter the view
        $ref: '#/definitions/NumericRange'
      surveyFormContextIds:
        type: array
        description: The list of survey form context ids used to filter the view
        items:
          type: string
      conversationIds:
        type: array
        description: The list of conversation ids used to filter the view
        items:
          type: string
      sipCallIds:
        type: array
        description: The list of SIP call ids used to filter the view
        items:
          type: string
      isEnded:
        type: boolean
        description: Indicates filtering for ended
      isSurveyed:
        type: boolean
        description: Indicates filtering for survey
      surveyScores:
        type: array
        description: The list of survey score ranges used to filter the view
        items:
          $ref: '#/definitions/NumericRange'
      promoterScores:
        type: array
        description: The list of promoter score ranges used to filter the view
        items:
          $ref: '#/definitions/NumericRange'
      isCampaign:
        type: boolean
        description: Indicates filtering for campaign
      surveyStatuses:
        type: array
        description: The list of survey statuses used to filter the view
        items:
          type: string
      conversationProperties:
        description: A grouping of conversation level filters
        $ref: '#/definitions/ConversationProperties'
      isBlindTransferred:
        type: boolean
        description: Indicates filtering for blind transferred
      isConsulted:
        type: boolean
        description: Indicates filtering for consulted
      isConsultTransferred:
        type: boolean
        description: Indicates filtering for consult transferred
      remoteParticipants:
        type: array
        description: The list of remote participants used to filter the view
        items:
          type: string
      flowIds:
        type: array
        description: The list of flow Ids
        items:
          type: string
      flowOutcomeIds:
        type: array
        description: A list of outcome ids of the flow
        items:
          type: string
      flowOutcomeValues:
        type: array
        description: A list of outcome values of the flow
        items:
          type: string
          enum:
            - SUCCESS
            - FAILURE
      flowDestinationTypes:
        type: array
        description: The list of destination types of the flow
        items:
          type: string
          enum:
            - ACD
            - USER
            - GROUP
            - NUMBER
            - FLOW
            - SECURE_FLOW
            - ACD_VOICEMAIL
            - USER_VOICEMAIL
            - GROUP_VOICEMAIL
            - RETURN_TO_AGENT
      flowDisconnectReasons:
        type: array
        description: The list of reasons for the flow to disconnect
        items:
          type: string
          enum:
            - FLOW_DISCONNECT
            - FLOW_ERROR_DISCONNECT
            - DISCONNECT
      flowTypes:
        type: array
        description: A list of types of the flow
        items:
          type: string
          enum:
            - bot
            - commonmodule
            - digitalbot
            - inboundcall
            - inboundchat
            - inboundemail
            - inboundshortmessage
            - inqueuecall
            - inqueueshortmessage
            - inqueueemail
            - outboundcall
            - securecall
            - surveyinvite
            - voice
            - voicemail
            - workflow
            - workitem
      flowEntryTypes:
        type: array
        description: A list of types of the flow entry
        items:
          type: string
          enum:
            - agent
            - direct
            - dnis
            - flow
            - outbound
      flowEntryReasons:
        type: array
        description: A list of reasons of flow entry
        items:
          type: string
      flowVersions:
        type: array
        description: A list of versions of a flow
        items:
          type: string
      groupIds:
        type: array
        description: A list of directory group ids
        items:
          type: string
      hasJourneyCustomerId:
        type: boolean
        description: Indicates filtering for journey customer id
      hasJourneyActionMapId:
        type: boolean
        description: Indicates filtering for Journey action map id
      hasJourneyVisitId:
        type: boolean
        description: Indicates filtering for Journey visit id
      hasMedia:
        type: boolean
        description: Indicates filtering for presence of MMS media
      roleIds:
        type: array
        description: The role Ids used to filter the view
        items:
          type: string
      reportsTos:
        type: array
        description: The report to user IDs used to filter the view
        items:
          type: string
      locationIds:
        type: array
        description: The location Ids used to filter the view
        items:
          type: string
      flowOutTypes:
        type: array
        description: A list of flow out types
        items:
          type: string
      providerList:
        type: array
        description: A list of providers
        items:
          type: string
      callbackNumberList:
        type: array
        description: >-
          A list of callback numbers or substrings of numbers (ex: ["317",
          "13172222222"])
        items:
          type: string
      callbackInterval:
        type: string
        description: >-
          An interval of time to filter for scheduled callbacks. Intervals are
          represented as an ISO-8601 string. For example:
          YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      usedRoutingTypes:
        type: array
        description: A list of routing types used
        items:
          type: string
          enum:
            - Bullseye
            - Conditional
            - Direct
            - Last
            - Manual
            - Predictive
            - Preferred
            - Standard
            - Vip
      requestedRoutingTypes:
        type: array
        description: A list of routing types requested
        items:
          type: string
          enum:
            - Bullseye
            - Conditional
            - Direct
            - Last
            - Manual
            - Predictive
            - Preferred
            - Standard
            - Vip
      hasAgentAssistId:
        type: boolean
        description: Indicates filtering for agent assist id
      transcripts:
        type: array
        description: A list of transcript contents requested
        items:
          $ref: '#/definitions/Transcripts'
      transcriptLanguages:
        type: array
        description: A list of transcript languages requested
        items:
          type: string
      participantPurposes:
        type: array
        description: A list of participant purpose requested
        items:
          type: string
          enum:
            - internal
            - external
      showFirstQueue:
        type: boolean
        description: Indicates filtering for first queue data
      teamIds:
        type: array
        description: The team ids used to filter the view data
        items:
          type: string
      filterUsersByTeamIds:
        type: array
        description: The team ids are used to fetch associated users for the view
        items:
          type: string
      journeyActionMapIds:
        type: array
        description: >-
          The journey action map ids are used to fetch action maps for the
          associated view
        items:
          type: string
      journeyOutcomeIds:
        type: array
        description: >-
          The journey outcome ids are used to fetch outcomes for the associated
          view
        items:
          type: string
      journeySegmentIds:
        type: array
        description: >-
          The journey segment ids are used to fetch segments for the associated
          view
        items:
          type: string
      journeyActionMapTypes:
        type: array
        description: >-
          The journey action map types are used to filter action map data for
          the associated view
        items:
          type: string
          enum:
            - webchat
            - webMessagingOffer
            - contentOffer
            - integrationAction
            - architectFlow
            - openAction
      developmentRoleList:
        type: array
        description: The list of development roles used to filter agent development view
        items:
          type: string
          enum:
            - Creator
            - Facilitator
            - Attendee
      developmentTypeList:
        type: array
        description: The list of development types used to filter agent development view
        items:
          type: string
          enum:
            - Informational
            - Coaching
            - Assessment
            - AssessedContent
      developmentStatusList:
        type: array
        description: The list of development status used to filter agent development view
        items:
          type: string
          enum:
            - Planned
            - Scheduled
            - InvalidSchedule
            - InProgress
            - Completed
            - NotCompleted
      developmentModuleIds:
        type: array
        description: >-
          The list of development moduleIds used to filter agent development
          view
        items:
          type: string
      developmentActivityOverdue:
        type: boolean
        description: Indicates filtering for development activities
      customerSentimentScore:
        description: The customer sentiment score used to filter the view
        $ref: '#/definitions/NumericRange'
      customerSentimentTrend:
        description: The customer sentiment trend used to filter the view
        $ref: '#/definitions/NumericRange'
      flowTransferTargets:
        type: array
        description: The list of transfer targets used to filter flow data
        items:
          type: string
      developmentName:
        type: string
        description: Filter for development name
      topicIds:
        type: array
        description: Represents the topics detected in the transcript
        items:
          type: string
      externalTags:
        type: array
        description: The list of external Tags used to filter conversation data
        items:
          type: string
      isNotResponding:
        type: boolean
        description: Indicates filtering for not responding users
      isAuthenticated:
        type: boolean
        description: Indicates filtering for the authenticated chat
      botIds:
        type: array
        description: The list of bot IDs used to filter bot views
        items:
          type: string
      botVersions:
        type: array
        description: The list of bot versions used to filter bot views
        items:
          type: string
      botMessageTypes:
        type: array
        description: The list of bot message types used to filter bot views
        items:
          type: string
          enum:
            - Unknown
            - Phone
            - SMS
            - GenesysChatWidget
            - FacebookMessenger
            - WeChat
            - Whatsapp
            - AppleBusinessChat
            - Telegram
            - Slack
            - Signal
            - Line
            - Discord
            - TwitterDirectMessage
            - Other
      botProviderList:
        type: array
        description: The list of bot providers used to filter bot views
        items:
          type: string
          enum:
            - Unknown
            - Genesys
            - Amazon
            - Google
            - Nuance
      botProductList:
        type: array
        description: The list of bot products used to filter bot views
        items:
          type: string
          enum:
            - Unknown
            - GenesysDialogEngine
            - AmazonLex
            - GoogleDialogFlow
            - GoogleDialogFlowResell
            - GenesysBotFlow
            - NuanceDlg
            - GoogleDialogFlowCx
            - GenesysByob
            - AmazonLexV2
            - GoogleDialogFlowCxResell
            - GoogleSttBotFlow
            - MicrosoftSttBotFlow
      botRecognitionFailureReasonList:
        type: array
        description: The list of bot recognition failure reasons used to filter bot views
        items:
          type: string
          enum:
            - Unknown
            - NoInputCollection
            - NoInputConfirmation
            - NoInputDisambiguation
            - NoMatchCollection
            - NoMatchConfirmation
            - NoMatchDisambiguation
            - MaxWrongMatch
      botIntentList:
        type: array
        description: The list of bot intents used to filter bot views
        items:
          type: string
      botFinalIntentList:
        type: array
        description: The list of bot final intents used to filter bot views
        items:
          type: string
      botSlotList:
        type: array
        description: The list of bot slots used to filter bot views
        items:
          type: string
      botResultList:
        type: array
        description: The list of bot results used to filter bot views
        items:
          type: string
          enum:
            - Unknown
            - ExitRequestedByUser
            - ExitRequestedByBot
            - ExitError
            - ExitRecognitionFailure
            - DisconnectRequestedByUser
            - DisconnectRequestedByBot
            - DisconnectSessionExpired
            - DisconnectError
            - DisconnectRecognitionFailure
            - TransferToACD
      blockedReasons:
        type: array
        description: The list of blocked reason used to filter action map constraints views
        items:
          type: string
          enum:
            - PageUrlConditionsNotMatching
            - AlreadyExistingOffer
            - TriggerDateInFuture
            - MultipleSimultaneousOffers
            - FrequencyCapping
            - OfferedOutsideSchedule
            - ServiceLevelThrottling
            - NoAvailableAgents
      isRecorded:
        type: boolean
        description: Indicates filtering for recorded
      hasEvaluation:
        type: boolean
        description: Indicates filtering for evaluation
      hasScoredEvaluation:
        type: boolean
        description: Indicates filtering for scored evaluation
      emailDeliveryStatusList:
        type: array
        description: The list of email delivery statuses used to filter views
        items:
          type: string
          enum:
            - DeliveryFailed
            - DeliverySuccess
            - Failed
            - Queued
            - Read
            - Received
            - Sent
      isAgentOwnedCallback:
        type: boolean
        description: Indicates filtering for agent owned callback interactions
      agentCallbackOwnerIds:
        type: array
        description: The list of callback owners used to filter interactions
        items:
          type: string
      transcriptTopics:
        type: array
        description: The list of transcript topics requested in filter
        items:
          $ref: '#/definitions/TranscriptTopics'
      journeyFrequencyCapReasons:
        type: array
        description: The list of frequency cap reasons to filter offer constraints
        items:
          type: string
      journeyBlockingActionMapIds:
        type: array
        description: The list of blocking action maps to filter offer constraints
        items:
          type: string
      journeyActionTargetIds:
        type: array
        description: The list of action targets to filter offer constraints
        items:
          type: string
      journeyBlockingScheduleGroupIds:
        type: array
        description: The list of blocking schedule groups to filter offer constraints
        items:
          type: string
      journeyBlockingEmergencyScheduleGroupIds:
        type: array
        description: The list of emergency schedule groups to filter offer constraints
        items:
          type: string
      journeyUrlEqualConditions:
        type: array
        description: The list of url equal conditions to filter offer constraints
        items:
          type: string
      journeyUrlNotEqualConditions:
        type: array
        description: The list of url not equal conditions to filter offer constraints
        items:
          type: string
      journeyUrlStartsWithConditions:
        type: array
        description: The list of url starts with conditions to filter offer constraints
        items:
          type: string
      journeyUrlEndsWithConditions:
        type: array
        description: The list of url ends with conditions to filter offer constraints
        items:
          type: string
      journeyUrlContainsAnyConditions:
        type: array
        description: The list of url contains any conditions to filter offer constraints
        items:
          type: string
      journeyUrlNotContainsAnyConditions:
        type: array
        description: >-
          The list of url not contains any conditions to filter offer
          constraints
        items:
          type: string
      journeyUrlContainsAllConditions:
        type: array
        description: The list of url contains all conditions to filter offer constraints
        items:
          type: string
      journeyUrlNotContainsAllConditions:
        type: array
        description: >-
          The list of url not contains all conditions to filter offer
          constraints
        items:
          type: string
      flowMilestoneIds:
        type: array
        description: The list of flow milestones to filter exports
        items:
          type: string
      isAssessmentPassed:
        type: boolean
        description: Filter to indicate if Agent passed assessment or not
      conversationInitiators:
        type: array
        description: >-
          The list to filter based on Brands (Bot/User/Agent) or End User who
          initiated the first message in the conversation
        items:
          type: string
      hasCustomerParticipated:
        type: boolean
        description: >-
          Indicates if the customer has participated in an initiated
          conversation
      isAcdInteraction:
        type: boolean
        description: Filter to indicate if interaction was ACD or non-ACD
      hasFax:
        type: boolean
        description: Filters to indicate if interaction has FAX
      dataActionIds:
        type: array
        description: 'The list of Data Action IDs '
        items:
          type: string
      actionCategoryName:
        type: string
        description: Deprecated - Please use integrationIds instead
      integrationIds:
        type: array
        description: The list of integration IDs for Data Action
        items:
          type: string
      responseStatuses:
        type: array
        description: The list of Response codes for Data Action
        items:
          type: string
      availableDashboard:
        type: string
        description: >-
          Filter to indicate the availability of the dashboard is public or
          private.
        enum:
          - Public
          - Private
      favouriteDashboard:
        type: boolean
        description: Filter to indicate whether the dashboard is favorite or unfavorite.
      myDashboard:
        type: boolean
        description: Filter to indicate the dashboard owned by the user.
      stationErrors:
        type: array
        description: The list of agent errors that are related to station
        items:
          type: string
      canonicalContactIds:
        type: array
        description: The canonical contact ids are used to filter the view
        items:
          type: string
      alertRuleIds:
        type: array
        description: The list of Alert Rule IDs
        items:
          type: string
      evaluationFormContextIds:
        type: array
        description: The list of Evaluation Form Context IDs
        items:
          type: string
      evaluationStatuses:
        type: array
        description: The evaluation statuses that are used to filter the view
        items:
          type: string
          enum:
            - Finished
            - InProgress
            - InReview
            - Pending
            - Retracted
      workbinIds:
        type: array
        description: The list of Workbin IDs
        items:
          type: string
      worktypeIds:
        type: array
        description: The list of Worktype IDs
        items:
          type: string
      workitemIds:
        type: array
        description: The list of Workitem IDs
        items:
          type: string
      workitemAssigneeIds:
        type: array
        description: The list of Workitem Assignee IDs
        items:
          type: string
      workitemStatuses:
        type: array
        description: The list of Workitem Statuses IDs
        items:
          type: string
      isAnalyzedForSensitiveData:
        type: boolean
        description: >-
          Filter to indicate the transcript has been analyzed for sensitive
          data.
      hasSensitiveData:
        type: boolean
        description: Filter to indicate the transcript contains sensitive data.
      subPath:
        type: string
        description: Filter for Sub Path
      userState:
        type: string
        description: The user supplied state value in the view
        enum:
          - ActiveAndInactive
          - Active
          - Inactive
          - Deleted
      isClearedByCustomer:
        type: boolean
        description: Filter to indicate if the customer cleared the conversation.
      evaluationAssigneeIds:
        type: array
        description: The evaluation assignee ids that are used to filter the view.
        items:
          type: string
      evaluationAssigned:
        type: boolean
        description: Filter to indicate that the user has no assigned evaluation.
      assistantIds:
        type: array
        description: The assistant ids that are used to filter the view.
        items:
          type: string
      knowledgeBaseIds:
        type: array
        description: The knowledge base ids that are used to filter the view.
        items:
          type: string
  Empty:
    type: object
  ReportRunEntry:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      reportId:
        type: string
      runTime:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      runStatus:
        type: string
        enum:
          - RUNNING
          - COMPLETED
          - COMPLETED_WITH_ERRORS
          - FAILED
          - FAILED_TIMEOUT
          - FAILED_DATALIMIT
          - UNABLE_TO_COMPLETE
      errorMessage:
        type: string
      runDurationMsec:
        type: integer
        format: int64
      reportUrl:
        type: string
      reportFormat:
        type: string
      scheduleUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ReportRunEntryEntityDomainListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ReportRunEntry'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ReportSchedule:
    type: object
    required:
      - interval
      - quartzCronExpression
      - reportId
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      quartzCronExpression:
        type: string
        description: Quartz Cron Expression
      nextFireTime:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      description:
        type: string
      timeZone:
        type: string
      timePeriod:
        type: string
      interval:
        type: string
        description: >-
          Interval. Intervals are represented as an ISO-8601 string. For
          example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      reportFormat:
        type: string
      locale:
        type: string
      enabled:
        type: boolean
      reportId:
        type: string
        description: Report ID
      parameters:
        type: object
        additionalProperties:
          type: object
      lastRun:
        $ref: '#/definitions/ReportRunEntry'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ReportScheduleEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ReportSchedule'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  Parameter:
    type: object
    properties:
      name:
        type: string
      parameterType:
        type: string
        enum:
          - UUID
          - STRING
          - UUIDLIST
          - STRINGLIST
      domain:
        type: string
        enum:
          - USERID
          - QUEUEID
          - MEDIATYPE
          - DIALERCAMPAIGNID
          - QMEVALFORMID
          - UNKNOWN
      required:
        type: boolean
  ReportMetaData:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      title:
        type: string
      description:
        type: string
      keywords:
        type: array
        items:
          type: string
      availableLocales:
        type: array
        items:
          type: string
      parameters:
        type: array
        items:
          $ref: '#/definitions/Parameter'
      exampleUrl:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ReportMetaDataEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ReportMetaData'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  RunNowResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ReportingExportJobResponse:
    type: object
    required:
      - createdDateTime
      - exportFormat
      - filter
      - interval
      - locale
      - modifiedDateTime
      - percentageComplete
      - period
      - read
      - runId
      - status
      - timeZone
      - viewType
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      runId:
        type: string
        description: The unique run id of the export schedule execute
      status:
        type: string
        description: The current status of the export request
        enum:
          - SUBMITTED
          - RUNNING
          - CANCELLING
          - CANCELLED
          - COMPLETED
          - COMPLETED_WITH_PARTIAL_RESULTS
          - FAILED
      timeZone:
        type: string
        description: >-
          The requested timezone of the exported data. Time zones are
          represented as a string of the zone name as found in the IANA time
          zone database. For example: UTC, Etc/UTC, or Europe/London
      exportFormat:
        type: string
        description: The requested format of the exported data
        enum:
          - CSV
          - PDF
      interval:
        type: string
        description: >-
          The time period used to limit the the exported data. Intervals are
          represented as an ISO-8601 string. For example:
          YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      downloadUrl:
        type: string
        description: The url to download the request if it's status is completed
      viewType:
        type: string
        description: The type of view export job to be created
        enum:
          - QUEUE_PERFORMANCE_SUMMARY_VIEW
          - QUEUE_PERFORMANCE_DETAIL_VIEW
          - INTERACTION_SEARCH_VIEW
          - AGENT_PERFORMANCE_SUMMARY_VIEW
          - AGENT_PERFORMANCE_DETAIL_VIEW
          - AGENT_STATUS_SUMMARY_VIEW
          - AGENT_STATUS_DETAIL_VIEW
          - AGENT_EVALUATION_SUMMARY_VIEW
          - AGENT_EVALUATION_DETAIL_VIEW
          - AGENT_QUEUE_DETAIL_VIEW
          - AGENT_INTERACTION_DETAIL_VIEW
          - ABANDON_INSIGHTS_VIEW
          - SKILLS_PERFORMANCE_VIEW
          - SURVEY_FORM_PERFORMANCE_SUMMARY_VIEW
          - SURVEY_FORM_PERFORMANCE_DETAIL_VIEW
          - DNIS_PERFORMANCE_SUMMARY_VIEW
          - DNIS_PERFORMANCE_DETAIL_VIEW
          - WRAP_UP_PERFORMANCE_SUMMARY_VIEW
          - AGENT_WRAP_UP_PERFORMANCE_DETAIL_VIEW
          - QUEUE_ACTIVITY_SUMMARY_VIEW
          - QUEUE_ACTIVITY_DETAIL_VIEW
          - AGENT_QUEUE_ACTIVITY_SUMMARY_VIEW
          - QUEUE_AGENT_DETAIL_VIEW
          - QUEUE_INTERACTION_DETAIL_VIEW
          - AGENT_SCHEDULE_DETAIL_VIEW
          - IVR_PERFORMANCE_SUMMARY_VIEW
          - IVR_PERFORMANCE_DETAIL_VIEW
          - ANSWER_INSIGHTS_VIEW
          - HANDLE_INSIGHTS_VIEW
          - TALK_INSIGHTS_VIEW
          - HOLD_INSIGHTS_VIEW
          - ACW_INSIGHTS_VIEW
          - WAIT_INSIGHTS_VIEW
          - AGENT_WRAP_UP_PERFORMANCE_INTERVAL_DETAIL_VIEW
          - FLOW_OUTCOME_SUMMARY_VIEW
          - FLOW_OUTCOME_PERFORMANCE_DETAIL_VIEW
          - FLOW_OUTCOME_PERFORMANCE_INTERVAL_DETAIL_VIEW
          - FLOW_DESTINATION_SUMMARY_VIEW
          - FLOW_DESTINATION_DETAIL_VIEW
          - API_USAGE_VIEW
          - SCHEDULED_CALLBACKS_VIEW
          - CONTENT_SEARCH_VIEW
          - LANDING_PAGE
          - DASHBOARD_SUMMARY
          - DASHBOARD_DETAIL
          - DASHBOARD_USERS
          - JOURNEY_ACTION_MAP_SUMMARY_VIEW
          - JOURNEY_OUTCOME_SUMMARY_VIEW
          - JOURNEY_SEGMENT_SUMMARY_VIEW
          - AGENT_DEVELOPMENT_DETAIL_VIEW
          - AGENT_DEVELOPMENT_DETAIL_ME_VIEW
          - AGENT_DEVELOPMENT_SUMMARY_VIEW
          - AGENT_PERFORMANCE_ME_VIEW
          - AGENT_STATUS_ME_VIEW
          - AGENT_EVALUATION_ME_VIEW
          - AGENT_SCORECARD_VIEW
          - AGENT_SCORECARD_ME_VIEW
          - AGENT_GAMIFICATION_LEADERSHIP_VIEW
          - AGENT_SCHEDULE_ME_VIEW
          - BOT_PERFORMANCE_SUMMARY_VIEW
          - BOT_PERFORMANCE_DETAIL_VIEW
          - SCHEDULED_EXPORTS_VIEW
          - TOPIC_TREND_SUMMARY_VIEW
          - TOPIC_TREND_DETAIL_VIEW
          - ACTION_MAP_BLOCKED_CONSTRAINTS_DETAIL_VIEW
          - ACTION_MAP_BLOCKED_CONSTRAINTS_INTERVAL_DETAIL_VIEW
          - FLOW_MILESTONE_PERFORMANCE_DETAIL_VIEW
          - FLOW_MILESTONE_PERFORMANCE_INTERVAL_DETAIL_VIEW
          - AGENT_TOPIC_SUMMARY_VIEW
          - AGENT_TOPIC_DETAIL_VIEW
          - QUEUE_TOPIC_SUMMARY_VIEW
          - QUEUE_TOPIC_DETAIL_VIEW
          - FLOW_TOPIC_SUMMARY_VIEW
          - FLOW_TOPIC_DETAIL_VIEW
          - AGENT_INTERACTIONS_ME_VIEW
          - ALERT_RULES_VIEW
          - CONFIGURE_ALERT_RULE_VIEW
          - PREDICTIVE_ROUTING_VIEW
          - PREDICTIVE_ROUTING_QUEUE_OVERVIEW
          - PREDICTIVE_ROUTING_MODEL_VIEW
          - PREDICTIVE_ROUTING_IMPACT_VIEW
          - DATA_ACTIONS_PERFORMANCE_SUMMARY_VIEW
          - DATA_ACTIONS_PERFORMANCE_DETAIL_VIEW
          - AGENT_TIMELINE_SUMMARY_VIEW
          - AGENT_TIMELINE_DETAIL_VIEW
          - AGENT_LOGIN_LOGOUT_SUMMARY_VIEW
          - AGENT_LOGIN_LOGOUT_DETAIL_VIEW
          - CAMPAIGN_PERFORMANCE_SUMMARY_VIEW
          - CAMPAIGN_PERFORMANCE_DETAIL_VIEW
          - KNOWLEDGE_PERFORMANCE_VIEW
          - AGENT_SCORECARD_INSIGHTS_SUMMARY_VIEW
          - AGENT_SCORECARD_INSIGHTS_DETAIL_VIEW
          - QUEUE_WRAPUP_DETAIL_VIEW
          - INTERACTION_DETAIL_VIEW
          - CAMPAIGN_INTERACTION_DETAIL_VIEW
          - CAMPAIGN_ATTEMPT_DETAIL_VIEW
          - WORKITEM_PERFORMANCE_SUMMARY_VIEW
          - AGENT_ASSIST_PERFORMANCE_VIEW
          - CONTACT_CENTER_PERFORMANCE_VIEW
      exportErrorMessagesType:
        type: string
        description: The error message in case the export request failed
        enum:
          - FAILED_CONVERTING_EXPORT_JOB
          - FAILED_NO_DATA_EXPORT_JOB_FOUND
          - FAILED_GETTING_DATA_FROM_SERVICE
          - FAILED_GENERATING_TEMP_FILE
          - FAILED_SAVING_FILE_TO_S3
          - FAILED_NOTIFYING_SKYWALKER_OF_DOWNLOAD
          - FAILED_BUILDING_DOWNLOAD_URL_FROM_SKYWALKER_RESPONSE
          - FAILED_CONVERTING_EXPORT_JOB_TO_QUEUE_PERFORMANCE_JOB
          - EXPORT_TYPE_NOT_IMPLEMENTED
          - REACHED_MAXIMUM_ATTEMPT_OF_RETRY
          - FAILED_LONG_RUNNING_EXPORT
          - TOO_MANY_REQUESTS_FROM_AN_ORGANIZATION
          - FAILED_AS_EXPORT_FILE_SIZE_IS_GREATER_THAN_10MB
          - NOT_AUTHORIZED_TO_VIEW_EXPORT
      period:
        type: string
        description: >-
          The Period of the request in which to break down the intervals.
          Periods are represented as an ISO-8601 string. For example: P1D or
          P1DT12H
      filter:
        description: Filters to apply to create the view
        $ref: '#/definitions/ViewFilter'
      read:
        type: boolean
        description: Indicates if the request has been marked as read
      createdDateTime:
        type: string
        format: date-time
        description: >-
          The created date/time of the request. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedDateTime:
        type: string
        format: date-time
        description: >-
          The last modified date/time of the request. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      locale:
        type: string
        description: >-
          The locale use for localization of the exported data, i.e. en-us,
          es-mx  
      percentageComplete:
        type: number
        format: double
        description: The percentage of the job that has completed processing
      hasFormatDurations:
        type: boolean
        description: Indicates if durations are formatted in hh:mm:ss format instead of ms
      hasSplitFilters:
        type: boolean
        description: Indicates if filters will be split in aggregate detail exports
      excludeEmptyRows:
        type: boolean
        description: Excludes empty rows from the exports
      hasSplitByMedia:
        type: boolean
        description: Indicates if media type will be split in aggregate detail exports
      hasSummaryRow:
        type: boolean
        description: Indicates if summary row needs to be present in exports
      csvDelimiter:
        type: string
        description: >-
          The user supplied csv delimiter string value either of type 'comma' or
          'semicolon' permitted for the export request
        enum:
          - SEMICOLON
          - COMMA
      selectedColumns:
        type: array
        description: The list of ordered selected columns from the export view by the user
        items:
          $ref: '#/definitions/SelectedColumns'
      hasCustomParticipantAttributes:
        type: boolean
        description: Indicates if custom participant attributes will be exported
      recipientEmails:
        type: array
        description: The list of email recipients for the exports
        items:
          type: string
      emailStatuses:
        type: object
        description: The status of individual email addresses as a map
        additionalProperties:
          type: string
          enum:
            - Sent
            - Pending
            - Failed
      emailErrorDescription:
        type: string
        description: The optional error message in case the export fail to email
      includeDurationFormatInHeader:
        type: boolean
        description: >-
          Indicates whether to include selected duration format to the column
          headers
      durationFormat:
        type: string
        description: Indicates the duration format for the exports
        enum:
          - Seconds
          - Milliseconds
          - Hhmmss
          - Hms
      enabled:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SelectedColumns:
    type: object
    properties:
      columnOrder:
        type: integer
        format: int32
        description: Indicates the order/position of the selected column
      columnName:
        type: string
        description: Indicates enum name of the column from the export view
  ReportingExportJobListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ReportingExportJobResponse'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ReportingExportMetadataJobListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ReportingExportMetadataJobResponse'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ReportingExportMetadataJobResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      viewType:
        type: string
        description: The view type of the export metadata
        enum:
          - QUEUE_PERFORMANCE_SUMMARY_VIEW
          - QUEUE_PERFORMANCE_DETAIL_VIEW
          - INTERACTION_SEARCH_VIEW
          - AGENT_PERFORMANCE_SUMMARY_VIEW
          - AGENT_PERFORMANCE_DETAIL_VIEW
          - AGENT_STATUS_SUMMARY_VIEW
          - AGENT_STATUS_DETAIL_VIEW
          - AGENT_EVALUATION_SUMMARY_VIEW
          - AGENT_EVALUATION_DETAIL_VIEW
          - AGENT_QUEUE_DETAIL_VIEW
          - AGENT_INTERACTION_DETAIL_VIEW
          - ABANDON_INSIGHTS_VIEW
          - SKILLS_PERFORMANCE_VIEW
          - SURVEY_FORM_PERFORMANCE_SUMMARY_VIEW
          - SURVEY_FORM_PERFORMANCE_DETAIL_VIEW
          - DNIS_PERFORMANCE_SUMMARY_VIEW
          - DNIS_PERFORMANCE_DETAIL_VIEW
          - WRAP_UP_PERFORMANCE_SUMMARY_VIEW
          - AGENT_WRAP_UP_PERFORMANCE_DETAIL_VIEW
          - QUEUE_ACTIVITY_SUMMARY_VIEW
          - QUEUE_ACTIVITY_DETAIL_VIEW
          - AGENT_QUEUE_ACTIVITY_SUMMARY_VIEW
          - QUEUE_AGENT_DETAIL_VIEW
          - QUEUE_INTERACTION_DETAIL_VIEW
          - AGENT_SCHEDULE_DETAIL_VIEW
          - IVR_PERFORMANCE_SUMMARY_VIEW
          - IVR_PERFORMANCE_DETAIL_VIEW
          - ANSWER_INSIGHTS_VIEW
          - HANDLE_INSIGHTS_VIEW
          - TALK_INSIGHTS_VIEW
          - HOLD_INSIGHTS_VIEW
          - ACW_INSIGHTS_VIEW
          - WAIT_INSIGHTS_VIEW
          - AGENT_WRAP_UP_PERFORMANCE_INTERVAL_DETAIL_VIEW
          - FLOW_OUTCOME_SUMMARY_VIEW
          - FLOW_OUTCOME_PERFORMANCE_DETAIL_VIEW
          - FLOW_OUTCOME_PERFORMANCE_INTERVAL_DETAIL_VIEW
          - FLOW_DESTINATION_SUMMARY_VIEW
          - FLOW_DESTINATION_DETAIL_VIEW
          - API_USAGE_VIEW
          - SCHEDULED_CALLBACKS_VIEW
          - CONTENT_SEARCH_VIEW
          - LANDING_PAGE
          - DASHBOARD_SUMMARY
          - DASHBOARD_DETAIL
          - DASHBOARD_USERS
          - JOURNEY_ACTION_MAP_SUMMARY_VIEW
          - JOURNEY_OUTCOME_SUMMARY_VIEW
          - JOURNEY_SEGMENT_SUMMARY_VIEW
          - AGENT_DEVELOPMENT_DETAIL_VIEW
          - AGENT_DEVELOPMENT_DETAIL_ME_VIEW
          - AGENT_DEVELOPMENT_SUMMARY_VIEW
          - AGENT_PERFORMANCE_ME_VIEW
          - AGENT_STATUS_ME_VIEW
          - AGENT_EVALUATION_ME_VIEW
          - AGENT_SCORECARD_VIEW
          - AGENT_SCORECARD_ME_VIEW
          - AGENT_GAMIFICATION_LEADERSHIP_VIEW
          - AGENT_SCHEDULE_ME_VIEW
          - BOT_PERFORMANCE_SUMMARY_VIEW
          - BOT_PERFORMANCE_DETAIL_VIEW
          - SCHEDULED_EXPORTS_VIEW
          - TOPIC_TREND_SUMMARY_VIEW
          - TOPIC_TREND_DETAIL_VIEW
          - ACTION_MAP_BLOCKED_CONSTRAINTS_DETAIL_VIEW
          - ACTION_MAP_BLOCKED_CONSTRAINTS_INTERVAL_DETAIL_VIEW
          - FLOW_MILESTONE_PERFORMANCE_DETAIL_VIEW
          - FLOW_MILESTONE_PERFORMANCE_INTERVAL_DETAIL_VIEW
          - AGENT_TOPIC_SUMMARY_VIEW
          - AGENT_TOPIC_DETAIL_VIEW
          - QUEUE_TOPIC_SUMMARY_VIEW
          - QUEUE_TOPIC_DETAIL_VIEW
          - FLOW_TOPIC_SUMMARY_VIEW
          - FLOW_TOPIC_DETAIL_VIEW
          - AGENT_INTERACTIONS_ME_VIEW
          - ALERT_RULES_VIEW
          - CONFIGURE_ALERT_RULE_VIEW
          - PREDICTIVE_ROUTING_VIEW
          - PREDICTIVE_ROUTING_QUEUE_OVERVIEW
          - PREDICTIVE_ROUTING_MODEL_VIEW
          - PREDICTIVE_ROUTING_IMPACT_VIEW
          - DATA_ACTIONS_PERFORMANCE_SUMMARY_VIEW
          - DATA_ACTIONS_PERFORMANCE_DETAIL_VIEW
          - AGENT_TIMELINE_SUMMARY_VIEW
          - AGENT_TIMELINE_DETAIL_VIEW
          - AGENT_LOGIN_LOGOUT_SUMMARY_VIEW
          - AGENT_LOGIN_LOGOUT_DETAIL_VIEW
          - CAMPAIGN_PERFORMANCE_SUMMARY_VIEW
          - CAMPAIGN_PERFORMANCE_DETAIL_VIEW
          - KNOWLEDGE_PERFORMANCE_VIEW
          - AGENT_SCORECARD_INSIGHTS_SUMMARY_VIEW
          - AGENT_SCORECARD_INSIGHTS_DETAIL_VIEW
          - QUEUE_WRAPUP_DETAIL_VIEW
          - INTERACTION_DETAIL_VIEW
          - CAMPAIGN_INTERACTION_DETAIL_VIEW
          - CAMPAIGN_ATTEMPT_DETAIL_VIEW
          - WORKITEM_PERFORMANCE_SUMMARY_VIEW
          - AGENT_ASSIST_PERFORMANCE_VIEW
          - CONTACT_CENTER_PERFORMANCE_VIEW
      dateLimitations:
        type: string
        description: The date limitations of the export metadata
      requiredFilters:
        type: array
        description: The list of required filters for the export metadata
        items:
          type: string
      supportedFilters:
        type: array
        description: The list of supported filters for the export metadata
        items:
          type: string
      requiredColumnIds:
        type: array
        description: The list of required column ids for the export metadata
        items:
          type: string
      dependentColumnIds:
        type: object
        description: The list of dependent column ids for the export metadata
        additionalProperties:
          type: array
          items:
            type: string
      availableColumnIds:
        type: array
        description: The list of available column ids for the export metadata
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ReportingExportJobRequest:
    type: object
    required:
      - exportFormat
      - filter
      - interval
      - locale
      - name
      - period
      - timeZone
      - viewType
    properties:
      name:
        type: string
        description: The user supplied name of the export request
      timeZone:
        type: string
        description: >-
          The requested timezone of the exported data. Time zones are
          represented as a string of the zone name as found in the IANA time
          zone database. For example: UTC, Etc/UTC, or Europe/London
      exportFormat:
        type: string
        description: The requested format of the exported data
        enum:
          - CSV
          - PDF
      interval:
        type: string
        description: >-
          The time period used to limit the the exported data. Intervals are
          represented as an ISO-8601 string. For example:
          YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      period:
        type: string
        description: >-
          The Period of the request in which to break down the intervals.
          Periods are represented as an ISO-8601 string. For example: P1D or
          P1DT12H
      viewType:
        type: string
        description: The type of view export job to be created
        enum:
          - QUEUE_PERFORMANCE_SUMMARY_VIEW
          - QUEUE_PERFORMANCE_DETAIL_VIEW
          - INTERACTION_SEARCH_VIEW
          - AGENT_PERFORMANCE_SUMMARY_VIEW
          - AGENT_PERFORMANCE_DETAIL_VIEW
          - AGENT_STATUS_SUMMARY_VIEW
          - AGENT_STATUS_DETAIL_VIEW
          - AGENT_EVALUATION_SUMMARY_VIEW
          - AGENT_EVALUATION_DETAIL_VIEW
          - AGENT_QUEUE_DETAIL_VIEW
          - AGENT_INTERACTION_DETAIL_VIEW
          - ABANDON_INSIGHTS_VIEW
          - SKILLS_PERFORMANCE_VIEW
          - SURVEY_FORM_PERFORMANCE_SUMMARY_VIEW
          - SURVEY_FORM_PERFORMANCE_DETAIL_VIEW
          - DNIS_PERFORMANCE_SUMMARY_VIEW
          - DNIS_PERFORMANCE_DETAIL_VIEW
          - WRAP_UP_PERFORMANCE_SUMMARY_VIEW
          - AGENT_WRAP_UP_PERFORMANCE_DETAIL_VIEW
          - QUEUE_ACTIVITY_SUMMARY_VIEW
          - QUEUE_ACTIVITY_DETAIL_VIEW
          - AGENT_QUEUE_ACTIVITY_SUMMARY_VIEW
          - QUEUE_AGENT_DETAIL_VIEW
          - QUEUE_INTERACTION_DETAIL_VIEW
          - AGENT_SCHEDULE_DETAIL_VIEW
          - IVR_PERFORMANCE_SUMMARY_VIEW
          - IVR_PERFORMANCE_DETAIL_VIEW
          - ANSWER_INSIGHTS_VIEW
          - HANDLE_INSIGHTS_VIEW
          - TALK_INSIGHTS_VIEW
          - HOLD_INSIGHTS_VIEW
          - ACW_INSIGHTS_VIEW
          - WAIT_INSIGHTS_VIEW
          - AGENT_WRAP_UP_PERFORMANCE_INTERVAL_DETAIL_VIEW
          - FLOW_OUTCOME_SUMMARY_VIEW
          - FLOW_OUTCOME_PERFORMANCE_DETAIL_VIEW
          - FLOW_OUTCOME_PERFORMANCE_INTERVAL_DETAIL_VIEW
          - FLOW_DESTINATION_SUMMARY_VIEW
          - FLOW_DESTINATION_DETAIL_VIEW
          - API_USAGE_VIEW
          - SCHEDULED_CALLBACKS_VIEW
          - CONTENT_SEARCH_VIEW
          - LANDING_PAGE
          - DASHBOARD_SUMMARY
          - DASHBOARD_DETAIL
          - DASHBOARD_USERS
          - JOURNEY_ACTION_MAP_SUMMARY_VIEW
          - JOURNEY_OUTCOME_SUMMARY_VIEW
          - JOURNEY_SEGMENT_SUMMARY_VIEW
          - AGENT_DEVELOPMENT_DETAIL_VIEW
          - AGENT_DEVELOPMENT_DETAIL_ME_VIEW
          - AGENT_DEVELOPMENT_SUMMARY_VIEW
          - AGENT_PERFORMANCE_ME_VIEW
          - AGENT_STATUS_ME_VIEW
          - AGENT_EVALUATION_ME_VIEW
          - AGENT_SCORECARD_VIEW
          - AGENT_SCORECARD_ME_VIEW
          - AGENT_GAMIFICATION_LEADERSHIP_VIEW
          - AGENT_SCHEDULE_ME_VIEW
          - BOT_PERFORMANCE_SUMMARY_VIEW
          - BOT_PERFORMANCE_DETAIL_VIEW
          - SCHEDULED_EXPORTS_VIEW
          - TOPIC_TREND_SUMMARY_VIEW
          - TOPIC_TREND_DETAIL_VIEW
          - ACTION_MAP_BLOCKED_CONSTRAINTS_DETAIL_VIEW
          - ACTION_MAP_BLOCKED_CONSTRAINTS_INTERVAL_DETAIL_VIEW
          - FLOW_MILESTONE_PERFORMANCE_DETAIL_VIEW
          - FLOW_MILESTONE_PERFORMANCE_INTERVAL_DETAIL_VIEW
          - AGENT_TOPIC_SUMMARY_VIEW
          - AGENT_TOPIC_DETAIL_VIEW
          - QUEUE_TOPIC_SUMMARY_VIEW
          - QUEUE_TOPIC_DETAIL_VIEW
          - FLOW_TOPIC_SUMMARY_VIEW
          - FLOW_TOPIC_DETAIL_VIEW
          - AGENT_INTERACTIONS_ME_VIEW
          - ALERT_RULES_VIEW
          - CONFIGURE_ALERT_RULE_VIEW
          - PREDICTIVE_ROUTING_VIEW
          - PREDICTIVE_ROUTING_QUEUE_OVERVIEW
          - PREDICTIVE_ROUTING_MODEL_VIEW
          - PREDICTIVE_ROUTING_IMPACT_VIEW
          - DATA_ACTIONS_PERFORMANCE_SUMMARY_VIEW
          - DATA_ACTIONS_PERFORMANCE_DETAIL_VIEW
          - AGENT_TIMELINE_SUMMARY_VIEW
          - AGENT_TIMELINE_DETAIL_VIEW
          - AGENT_LOGIN_LOGOUT_SUMMARY_VIEW
          - AGENT_LOGIN_LOGOUT_DETAIL_VIEW
          - CAMPAIGN_PERFORMANCE_SUMMARY_VIEW
          - CAMPAIGN_PERFORMANCE_DETAIL_VIEW
          - KNOWLEDGE_PERFORMANCE_VIEW
          - AGENT_SCORECARD_INSIGHTS_SUMMARY_VIEW
          - AGENT_SCORECARD_INSIGHTS_DETAIL_VIEW
          - QUEUE_WRAPUP_DETAIL_VIEW
          - INTERACTION_DETAIL_VIEW
          - CAMPAIGN_INTERACTION_DETAIL_VIEW
          - CAMPAIGN_ATTEMPT_DETAIL_VIEW
          - WORKITEM_PERFORMANCE_SUMMARY_VIEW
          - AGENT_ASSIST_PERFORMANCE_VIEW
          - CONTACT_CENTER_PERFORMANCE_VIEW
      filter:
        description: Filters to apply to create the view
        $ref: '#/definitions/ViewFilter'
      read:
        type: boolean
        description: Indicates if the request has been marked as read
      locale:
        type: string
        description: The locale used for localization of the exported data, i.e. en-US, es
      hasFormatDurations:
        type: boolean
        description: Indicates if durations are formatted in hh:mm:ss format instead of ms
      hasSplitFilters:
        type: boolean
        description: Indicates if filters will be split in aggregate detail exports
      excludeEmptyRows:
        type: boolean
        description: Excludes empty rows from the exports
      hasSplitByMedia:
        type: boolean
        description: Indicates if media type will be split in aggregate detail exports
      hasSummaryRow:
        type: boolean
        description: Indicates if summary row needs to be present in exports
      csvDelimiter:
        type: string
        description: >-
          The user supplied csv delimiter string value either of type 'comma' or
          'semicolon' permitted for the export request
        enum:
          - SEMICOLON
          - COMMA
      selectedColumns:
        type: array
        description: The list of ordered selected columns from the export view by the user
        items:
          $ref: '#/definitions/SelectedColumns'
      hasCustomParticipantAttributes:
        type: boolean
        description: Indicates if custom participant attributes will be exported
      recipientEmails:
        type: array
        description: The list of email recipients for the exports
        items:
          type: string
      includeDurationFormatInHeader:
        type: boolean
        description: >-
          Indicates whether to include selected duration format to the column
          headers
      durationFormat:
        type: string
        description: Indicates the duration format for the exports
        enum:
          - Seconds
          - Milliseconds
          - Hhmmss
          - Hms
  FieldList:
    type: object
    properties:
      customLabels:
        type: boolean
      instructionText:
        type: string
      key:
        type: string
      labelKeys:
        type: array
        items:
          type: string
      params:
        type: object
        additionalProperties:
          type: object
      repeatable:
        type: boolean
      state:
        type: string
      type:
        type: string
      required:
        type: boolean
      gdpr:
        type: boolean
  Section:
    type: object
    properties:
      fieldList:
        type: array
        items:
          $ref: '#/definitions/FieldList'
      instructionText:
        type: string
      key:
        type: string
      state:
        type: string
  KnowledgeBaseReference:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The globally unique identifier for the knowledge base.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UserReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  AuditQueryExecutionStatusResponse:
    type: object
    properties:
      id:
        type: string
        description: Id of the audit query execution request.
      state:
        type: string
        description: Status of the audit query execution request.
        enum:
          - Queued
          - Running
          - Succeeded
          - Failed
          - Cancelled
      startDate:
        type: string
        format: date-time
        description: >-
          Start date and time of the audit query execution. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      interval:
        type: string
        description: >-
          Interval for the audit query. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      serviceName:
        type: string
        description: Service name for the audit query.
      filters:
        type: array
        description: Filters for the audit query.
        items:
          $ref: '#/definitions/AuditQueryFilter'
      sort:
        type: array
        description: Sort parameter for the audit query.
        items:
          $ref: '#/definitions/AuditQuerySort'
  AuditQueryFilter:
    type: object
    required:
      - property
      - value
    properties:
      property:
        type: string
        description: Name of the property to filter.
        enum:
          - UserId
          - TrusteeOrganizationId
          - ClientId
          - Action
          - EntityType
          - EntityId
      value:
        type: string
        description: Value of the property to filter.
  AuditQuerySort:
    type: object
    required:
      - name
      - sortOrder
    properties:
      name:
        type: string
        description: Name of the property to sort.
        enum:
          - Timestamp
      sortOrder:
        type: string
        description: Sort Order
        enum:
          - ascending
          - descending
  AuditQueryRequest:
    type: object
    required:
      - interval
      - serviceName
    properties:
      interval:
        type: string
        description: >-
          Date and time range of data to query. Intervals are represented as an
          ISO-8601 string. For example:
          YYYY-MM-DDThh:mm:ssZ/YYYY-MM-DDThh:mm:ssZ
      serviceName:
        type: string
        description: Name of the service to query audits for.
      filters:
        type: array
        description: Additional filters for the query.
        items:
          $ref: '#/definitions/AuditQueryFilter'
      sort:
        type: array
        description: Sort parameter for the query.
        items:
          $ref: '#/definitions/AuditQuerySort'
  AuditLogMessage:
    type: object
    properties:
      id:
        type: string
        description: Id of the audit message.
      userHomeOrgId:
        type: string
        description: Home Organization Id associated with this audit message.
      user:
        description: User associated with this audit message.
        $ref: '#/definitions/DomainEntityRef'
      client:
        description: Client associated with this audit message.
        $ref: '#/definitions/AddressableEntityRef'
      remoteIp:
        type: array
        description: >-
          List of IP addresses of systems that originated or handled the
          request.
        items:
          type: string
      serviceName:
        type: string
        description: Name of the service that logged this audit message.
      level:
        type: string
        description: Level of this audit message, USER or SYSTEM.
        enum:
          - USER
          - SYSTEM
      eventDate:
        type: string
        format: date-time
        description: >-
          Date and time of when the audit message was logged. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      message:
        description: Message describing the event being audited.
        $ref: '#/definitions/MessageInfo'
      action:
        type: string
        description: Action that took place.
      entity:
        description: Entity that was impacted.
        $ref: '#/definitions/DomainEntityRef'
      entityType:
        type: string
        description: Type of the entity that was impacted.
      status:
        type: string
        description: Status of the event being audited
        enum:
          - SUCCESS
          - FAILURE
          - WARNING
      application:
        type: string
        description: Name of the application used to perform the audit's action
      initiatingAction:
        description: Id and action of the audit initiating the transaction
        $ref: '#/definitions/InitiatingAction'
      transactionInitiator:
        type: boolean
        description: Whether the current audit is the initiator of the transaction
      propertyChanges:
        type: array
        description: >-
          List of properties that were changed and changes made to those
          properties.
        items:
          $ref: '#/definitions/PropertyChange'
      context:
        type: object
        description: Additional context for this message.
        additionalProperties:
          type: string
      entityChanges:
        type: array
        description: List of entities that were changed and changes made to those entities.
        items:
          $ref: '#/definitions/EntityChange'
  AuditQueryExecutionResultsResponse:
    type: object
    properties:
      id:
        type: string
        description: Id of the audit query execution request.
      pageSize:
        type: integer
        format: int32
        description: Number of results in a page.
      cursor:
        type: string
        description: Optional cursor to indicate where to resume the results.
      entities:
        type: array
        description: List of audit messages.
        items:
          $ref: '#/definitions/AuditLogMessage'
  EntityChange:
    type: object
    properties:
      entityId:
        type: string
        description: Id of the entity that was changed
      entityName:
        type: string
        description: Name of the entity that was changed
      entityType:
        type: string
        description: Type of the entity that was changed
      oldValues:
        type: array
        description: Previous values for the entity.
        items:
          type: string
      newValues:
        type: array
        description: New values for the entity.
        items:
          type: string
  InitiatingAction:
    type: object
    properties:
      transactionId:
        type: string
        description: Id of the audit initiating the transaction
      actionContext:
        type: string
        description: Action of the audit initiating the transaction
  MessageInfo:
    type: object
    properties:
      localizableMessageCode:
        type: string
        description: Key that can be used to localize the message.
      message:
        type: string
        description: Description of the message.
      messageWithParams:
        type: string
        description: Message with template fields for variable replacement.
      messageParams:
        type: object
        description: Map with fields for variable replacement.
        additionalProperties:
          type: string
  PropertyChange:
    type: object
    properties:
      property:
        type: string
        description: The property that was changed
      oldValues:
        type: array
        description: Previous values for the property.
        items:
          type: string
      newValues:
        type: array
        description: New values for the property.
        items:
          type: string
  AuditRealtimeQueryResultsResponse:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/AuditLogMessage'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      pageCount:
        type: integer
        format: int32
  AuditRealtimeQueryRequest:
    type: object
    required:
      - interval
      - serviceName
    properties:
      interval:
        type: string
        description: >-
          Date and time range of data to query. Intervals are represented as an
          ISO-8601 string. For example:
          YYYY-MM-DDThh:mm:ssZ/YYYY-MM-DDThh:mm:ssZ
      serviceName:
        type: string
        description: Name of the service to query audits for.
      filters:
        type: array
        description: Additional filters for the query.
        items:
          $ref: '#/definitions/AuditQueryFilter'
      sort:
        type: array
        description: Sort parameter for the query.
        items:
          $ref: '#/definitions/AuditQuerySort'
      pageNumber:
        type: integer
        format: int32
        description: Page number
      pageSize:
        type: integer
        format: int32
        description: Page size
  AuditQueryEntity:
    type: object
    properties:
      name:
        type: string
        description: Name of the Entity
      actions:
        type: array
        description: List of Actions
        items:
          type: string
  AuditQueryService:
    type: object
    properties:
      name:
        type: string
        description: Name of the Service
      entities:
        type: array
        description: List of Entities
        items:
          $ref: '#/definitions/AuditQueryEntity'
  AuditQueryServiceMapping:
    type: object
    properties:
      services:
        type: array
        description: List of Services
        items:
          $ref: '#/definitions/AuditQueryService'
  AuthzGrant:
    type: object
    properties:
      subjectId:
        type: string
      division:
        $ref: '#/definitions/AuthzDivision'
      role:
        $ref: '#/definitions/AuthzGrantRole'
      grantMadeAt:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  AuthzGrantPolicy:
    type: object
    properties:
      actions:
        type: array
        uniqueItems: true
        items:
          type: string
      condition:
        type: string
      domain:
        type: string
      entityName:
        type: string
  AuthzGrantRole:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      description:
        type: string
      policies:
        type: array
        items:
          $ref: '#/definitions/AuthzGrantPolicy'
      default:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  AuthzSubject:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      grants:
        type: array
        items:
          $ref: '#/definitions/AuthzGrant'
      version:
        type: integer
        format: int32
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  RoleDivisionGrants:
    type: object
    required:
      - grants
    properties:
      grants:
        type: array
        description: A list containing pairs of role and division IDs
        items:
          $ref: '#/definitions/RoleDivisionPair'
  RoleDivisionPair:
    type: object
    required:
      - divisionId
      - roleId
    properties:
      roleId:
        type: string
        description: The ID of the role
      divisionId:
        type: string
        description: The ID of the division
  UserEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/User'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  AuthzDivisionGrantEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/AuthzGrant'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      pageCount:
        type: integer
        format: int32
  DivsPermittedEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/AuthzDivision'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      allDivsPermitted:
        type: boolean
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  AuthorizationSettings:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      analysisEnabled:
        type: boolean
        description: >-
          Boolean showing if organization is opted in or not to unused role/perm
          analysis
      analysisDays:
        type: integer
        format: int32
        description: Integer number of days to analyze user usage
      dateLastCalculated:
        type: string
        format: date-time
        description: >-
          The date and time of the most recent unused role calculation. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateLastActive:
        type: string
        format: date
        description: >-
          The date of the most recent org activity used for analysis. Dates are
          represented as an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Actions:
    type: object
    properties:
      skillsToRemove:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/SkillsToRemove'
  AcwSettings:
    type: object
    properties:
      wrapupPrompt:
        type: string
        description: This field controls how the UI prompts the agent for a wrapup.
        enum:
          - MANDATORY
          - OPTIONAL
          - MANDATORY_TIMEOUT
          - MANDATORY_FORCED_TIMEOUT
          - AGENT_REQUESTED
      timeoutMs:
        type: integer
        format: int32
        description: >-
          The amount of time the agent can stay in ACW (Min: 1 sec, Max: 1
          day).  Can only be used when ACW is MANDATORY_TIMEOUT or
          MANDATORY_FORCED_TIMEOUT.
  AgentOwnedRouting:
    type: object
    properties:
      enableAgentOwnedCallbacks:
        type: boolean
        description: Indicates if Agent Owned Callbacks are enabled for the queue
      maxOwnedCallbackHours:
        type: integer
        format: int32
        description: >-
          The max amount of time a callback can be owned (in hours); Allowable
          range 1 - 168 hour(s) (inclusive)
      maxOwnedCallbackDelayHours:
        type: integer
        format: int32
        description: >-
          The max amount of time a callback can be scheduled out into the future
          (in hours); Allowable range 1 - 720 hour(s) (inclusive)
  BaseMediaSettings:
    type: object
    properties:
      enableAutoAnswer:
        type: boolean
        description: >-
          Indicates if auto-answer is enabled for the given media type or
          subtype (default is false).  Subtype settings take precedence over
          media type settings.
  Bullseye:
    type: object
    properties:
      rings:
        type: array
        description: The bullseye rings configured for this queue.
        items:
          $ref: '#/definitions/Ring'
  CallbackMediaSettings:
    type: object
    properties:
      enableAutoAnswer:
        type: boolean
        description: >-
          Indicates if auto-answer is enabled for the given media type or
          subtype (default is false).  Subtype settings take precedence over
          media type settings.
      alertingTimeoutSeconds:
        type: integer
        format: int32
      serviceLevel:
        $ref: '#/definitions/ServiceLevel'
      subTypeSettings:
        type: object
        description: Map of media subtype to media subtype specific settings.
        additionalProperties:
          $ref: '#/definitions/BaseMediaSettings'
  ConditionalGroupRouting:
    type: object
    properties:
      rules:
        type: array
        description: The set of rules that defines Conditional Group Routing for this queue
        items:
          $ref: '#/definitions/ConditionalGroupRoutingRule'
  ConditionalGroupRoutingRule:
    type: object
    properties:
      queue:
        description: >-
          The queue being evaluated for this rule.  For rule 1, this is always
          the current queue, so should not be specified.
        $ref: '#/definitions/DomainEntityRef'
      metric:
        type: string
        description: The queue metric being evaluated
        enum:
          - EstimatedWaitTime
      operator:
        type: string
        description: >-
          The operator that compares the actual value against the condition
          value
        enum:
          - GreaterThan
          - GreaterThanOrEqualTo
          - LessThan
          - LessThanOrEqualTo
      conditionValue:
        type: number
        format: double
        description: The limit value, beyond which a rule evaluates as true
      groups:
        type: array
        description: The group(s) to activate if the rule evaluates as true
        uniqueItems: true
        items:
          $ref: '#/definitions/MemberGroup'
      waitSeconds:
        type: integer
        format: int32
        description: >-
          The number of seconds to wait in this rule, if it evaluates as true,
          before evaluating the next rule.  For the final rule, this is ignored,
          so need not be specified.
  DirectRouting:
    type: object
    properties:
      callMediaSettings:
        description: Direct Routing Settings specific to Call media.
        $ref: '#/definitions/DirectRoutingCallMediaSettings'
      emailMediaSettings:
        description: Direct Routing Settings specific to Email media.
        $ref: '#/definitions/DirectRoutingMediaSettings'
      messageMediaSettings:
        description: Direct Routing Settings specific to Message media.
        $ref: '#/definitions/DirectRoutingMediaSettings'
      backupQueueId:
        type: string
        description: >-
          ID of queue to be used as the default backup if an agent does not have
          their Backup Settings configured.
      waitForAgent:
        type: boolean
        description: >-
          Flag indicating if Direct Routing interactions should wait for Direct
          Routing agent or go immediately to selected backup.
      agentWaitSeconds:
        type: integer
        format: int32
        description: >-
          Time (in seconds) that a Direct Routing interaction will wait for
          Direct Routing agent before going to selected backup. Valid range [60,
          864000].
  DirectRoutingCallMediaSettings:
    type: object
    properties:
      enabled:
        type: boolean
        description: Toggle that enables Direct Routing for this media type.
      inboundFlow:
        description: The Direct Routing inbound flow id for this media type.
        $ref: '#/definitions/AddressableEntityRef'
      voicemailFlow:
        description: >-
          ID of the in-queue flow that handles voicemails for Direct Routing and
          to transfer calls to ACD voicemail.
        $ref: '#/definitions/AddressableEntityRef'
  DirectRoutingMediaSettings:
    type: object
    properties:
      enabled:
        type: boolean
        description: Toggle that enables Direct Routing for this media type.
      inboundFlow:
        description: The Direct Routing inbound flow id for this media type.
        $ref: '#/definitions/AddressableEntityRef'
  DomainOrganizationRole:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      description:
        type: string
      defaultRoleId:
        type: string
      permissions:
        type: array
        uniqueItems: true
        items:
          type: string
      unusedPermissions:
        type: array
        description: A collection of the permissions the role is not using
        readOnly: true
        uniqueItems: true
        items:
          type: string
      permissionPolicies:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/DomainPermissionPolicy'
      userCount:
        type: integer
        format: int32
      roleNeedsUpdate:
        type: boolean
        description: Optional unless patch operation.
      base:
        type: boolean
      default:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DomainPermissionPolicy:
    type: object
    properties:
      domain:
        type: string
      entityName:
        type: string
      policyName:
        type: string
      policyDescription:
        type: string
      actionSet:
        type: array
        uniqueItems: true
        items:
          type: string
      namedResources:
        type: array
        uniqueItems: true
        items:
          type: string
      allowConditions:
        type: boolean
      resourceConditionNode:
        $ref: '#/definitions/DomainResourceConditionNode'
  DomainResourceConditionNode:
    type: object
    properties:
      variableName:
        type: string
      operator:
        type: string
        enum:
          - EQ
          - IN
          - GE
          - GT
          - LE
          - LT
      operands:
        type: array
        items:
          $ref: '#/definitions/DomainResourceConditionValue'
      conjunction:
        type: string
        enum:
          - AND
          - OR
      terms:
        type: array
        items:
          $ref: '#/definitions/DomainResourceConditionNode'
  DomainResourceConditionValue:
    type: object
    properties:
      user:
        $ref: '#/definitions/User'
      queue:
        $ref: '#/definitions/Queue'
      value:
        type: string
      type:
        type: string
        enum:
          - SCALAR
          - VARIABLE
          - USER
          - QUEUE
  EmailAddress:
    type: object
    properties:
      email:
        type: string
      name:
        type: string
  ExpansionCriterium:
    type: object
    properties:
      type:
        type: string
        enum:
          - TIMEOUT_SECONDS
      threshold:
        type: number
        format: double
  InboundRoute:
    type: object
    required:
      - fromName
      - pattern
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      pattern:
        type: string
        description: The search pattern that the mailbox name should match.
      queue:
        description: The queue to route the emails to.
        $ref: '#/definitions/DomainEntityRef'
      priority:
        type: integer
        format: int32
        description: The priority to use for routing.
      skills:
        type: array
        description: The skills to use for routing.
        items:
          $ref: '#/definitions/DomainEntityRef'
      language:
        description: The language to use for routing.
        $ref: '#/definitions/DomainEntityRef'
      fromName:
        type: string
        description: The sender name to use for outgoing replies.
      fromEmail:
        type: string
        description: The sender email to use for outgoing replies.
      flow:
        description: The flow to use for processing the email.
        $ref: '#/definitions/DomainEntityRef'
      replyEmailAddress:
        description: The route to use for email replies.
        $ref: '#/definitions/QueueEmailAddress'
      autoBcc:
        type: array
        description: >-
          The recipients that should be automatically blind copied on outbound
          emails associated with this InboundRoute.
        items:
          $ref: '#/definitions/EmailAddress'
      spamFlow:
        description: >-
          The flow to use for processing inbound emails that have been marked as
          spam.
        $ref: '#/definitions/DomainEntityRef'
      signature:
        description: >-
          The configuration for the canned response signature that will be
          appended to outbound emails sent via this route
        $ref: '#/definitions/Signature'
      historyInclusion:
        type: string
        description: >-
          The configuration to indicate how the history of a conversation has to
          be included in a draft
        enum:
          - Include
          - Exclude
          - Optional
      allowMultipleActions:
        type: boolean
        description: >-
          Control if multiple actions are allowed on this route. When true the
          disconnect has to be done manually. When false a conversation will be
          disconnected by the system after every action
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  MediaSettings:
    type: object
    properties:
      enableAutoAnswer:
        type: boolean
        description: >-
          Indicates if auto-answer is enabled for the given media type or
          subtype (default is false).  Subtype settings take precedence over
          media type settings.
      alertingTimeoutSeconds:
        type: integer
        format: int32
      serviceLevel:
        $ref: '#/definitions/ServiceLevel'
      subTypeSettings:
        type: object
        description: Map of media subtype to media subtype specific settings.
        additionalProperties:
          $ref: '#/definitions/BaseMediaSettings'
  MemberGroup:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      name:
        type: string
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      type:
        type: string
        description: The group type
        enum:
          - TEAM
          - GROUP
          - SKILLGROUP
      memberCount:
        type: integer
        format: int32
        description: The number of members in this group
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Page:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      versionId:
        type: string
      createdDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      rootContainer:
        type: object
        additionalProperties:
          type: object
      properties:
        type: object
        additionalProperties:
          type: object
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PredictiveRouting:
    type: object
    properties:
      respectSkills:
        type: boolean
        description: A switch used to determine if agent skills will be considered.
      enableConversationScoreBiasing:
        type: boolean
        description: >-
          A switch used to determine if conversations are weighted by
          conversation score when the system attempts to assign an agent a new
          conversation.
  Queue:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The queue description.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the queue was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the queue. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedBy:
        type: string
        description: The ID of the user that last modified the queue.
      createdBy:
        type: string
        description: The ID of the user that created the queue.
      memberCount:
        type: integer
        format: int32
        description: The total number of members in the queue.
        readOnly: true
      userMemberCount:
        type: integer
        format: int32
        description: The number of user members (i.e., non-group members) in the queue.
        readOnly: true
      joinedMemberCount:
        type: integer
        format: int32
        description: The number of joined members in the queue.
        readOnly: true
      mediaSettings:
        description: The media settings for the queue.
        $ref: '#/definitions/QueueMediaSettings'
      routingRules:
        type: array
        description: The routing rules for the queue, used for Preferred Agent Routing.
        items:
          $ref: '#/definitions/RoutingRule'
      conditionalGroupRouting:
        description: The Conditional Group Routing settings for the queue.
        $ref: '#/definitions/ConditionalGroupRouting'
      bullseye:
        description: The bullseye settings for the queue.
        $ref: '#/definitions/Bullseye'
      acwSettings:
        description: The ACW settings for the queue.
        $ref: '#/definitions/AcwSettings'
      skillEvaluationMethod:
        type: string
        description: The skill evaluation method to use when routing conversations.
        enum:
          - NONE
          - BEST
          - ALL
      memberGroups:
        type: array
        description: >-
          The groups of agents associated with the queue, if any.  Queue
          membership will update to match group membership changes.
        uniqueItems: true
        items:
          $ref: '#/definitions/MemberGroup'
      queueFlow:
        description: The in-queue flow to use for call conversations waiting in queue.
        $ref: '#/definitions/DomainEntityRef'
      emailInQueueFlow:
        description: The in-queue flow to use for email conversations waiting in queue.
        $ref: '#/definitions/DomainEntityRef'
      messageInQueueFlow:
        description: The in-queue flow to use for message conversations waiting in queue.
        $ref: '#/definitions/DomainEntityRef'
      whisperPrompt:
        description: The prompt used for whisper on the queue, if configured.
        $ref: '#/definitions/DomainEntityRef'
      onHoldPrompt:
        description: >-
          The audio to be played when calls on this queue are on hold. If not
          configured, the default on-hold music will play.
        $ref: '#/definitions/DomainEntityRef'
      autoAnswerOnly:
        type: boolean
        description: >-
          Specifies whether the configured whisper should play for all ACD
          calls, or only for those which are auto-answered.
      enableTranscription:
        type: boolean
        description: Indicates whether voice transcription is enabled for this queue.
      enableManualAssignment:
        type: boolean
        description: Indicates whether manual assignment is enabled for this queue.
      agentOwnedRouting:
        description: The Agent Owned Routing settings for the queue
        $ref: '#/definitions/AgentOwnedRouting'
      directRouting:
        description: The Direct Routing settings for the queue
        $ref: '#/definitions/DirectRouting'
      callingPartyName:
        type: string
        description: >-
          The name to use for caller identification for outbound calls from this
          queue.
      callingPartyNumber:
        type: string
        description: >-
          The phone number to use for caller identification for outbound calls
          from this queue.
      defaultScripts:
        type: object
        description: The default script Ids for the communication types.
        additionalProperties:
          $ref: '#/definitions/Script'
      outboundMessagingAddresses:
        description: The messaging addresses for the queue.
        $ref: '#/definitions/QueueMessagingAddresses'
      outboundEmailAddress:
        $ref: '#/definitions/QueueEmailAddress'
      peerId:
        type: string
        description: The ID of an associated external queue.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  QueueEmailAddress:
    type: object
    properties:
      domain:
        $ref: '#/definitions/DomainEntityRef'
      route:
        $ref: '#/definitions/InboundRoute'
  QueueMediaSettings:
    type: object
    properties:
      call:
        description: The queue media settings for call interactions.
        $ref: '#/definitions/MediaSettings'
      callback:
        description: The queue media settings for callback interactions.
        $ref: '#/definitions/CallbackMediaSettings'
      chat:
        description: The queue media settings for chat interactions.
        $ref: '#/definitions/MediaSettings'
      email:
        description: The queue media settings for email interactions.
        $ref: '#/definitions/MediaSettings'
      message:
        description: The queue media settings for message interactions.
        $ref: '#/definitions/MediaSettings'
  QueueMessagingAddresses:
    type: object
    properties:
      smsAddress:
        $ref: '#/definitions/DomainEntityRef'
      openMessagingRecipient:
        $ref: '#/definitions/DomainEntityRef'
      whatsAppRecipient:
        $ref: '#/definitions/DomainEntityRef'
  Ring:
    type: object
    properties:
      expansionCriteria:
        type: array
        description: >-
          The conditions that will trigger conversations to move to the next
          bullseye ring.
        items:
          $ref: '#/definitions/ExpansionCriterium'
      actions:
        description: >-
          The actions that will be performed just before moving conversations to
          the next bullseye ring.
        $ref: '#/definitions/Actions'
      memberGroups:
        type: array
        description: >-
          The groups of agents associated with the ring, if any.  Ring
          membership will update to match group membership changes.
        uniqueItems: true
        items:
          $ref: '#/definitions/MemberGroup'
  RoutingRule:
    type: object
    properties:
      operator:
        type: string
        description: >-
          matching operator.  MEETS_THRESHOLD matches any agent with a score at
          or above the rule's threshold.  ANY matches all specified agents,
          regardless of score.
        enum:
          - MEETS_THRESHOLD
          - ANY
      threshold:
        type: integer
        format: int32
        description: >-
          threshold required for routing attempt (generally an agent score). 
          may be null for operator ANY.
      waitSeconds:
        type: number
        format: double
        description: seconds to wait in this rule before moving to the next
  Script:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      versionId:
        type: string
      createdDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      publishedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      versionDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      startPageId:
        type: string
      startPageName:
        type: string
      features:
        type: object
      variables:
        type: object
      customActions:
        type: object
      pages:
        type: array
        items:
          $ref: '#/definitions/Page'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ServiceLevel:
    type: object
    properties:
      percentage:
        type: number
        format: double
        description: The desired Service Level. A value between 0 and 1.
      durationMs:
        type: integer
        format: int64
        description: Service Level target in milliseconds.
  Signature:
    type: object
    properties:
      enabled:
        type: boolean
        description: A toggle to enable the signature on email send.
      cannedResponseId:
        type: string
        description: The identifier referring to an email signature canned response.
      alwaysIncluded:
        type: boolean
        description: >-
          A toggle that defines if a signature is always included or only set on
          the first email in an email chain.
      inclusionType:
        type: string
        description: >-
          The configuration to indicate when the signature of a conversation has
          to be included
        enum:
          - Draft
          - Send
          - SendOnce
  SkillsToRemove:
    type: object
    properties:
      name:
        type: string
      id:
        type: string
      selfUri:
        type: string
        format: uri
  SubjectDivisions:
    type: object
    required:
      - divisionIds
      - subjectIds
    properties:
      subjectIds:
        type: array
        description: A collection of subject IDs to associate with the given divisions
        items:
          type: string
      divisionIds:
        type: array
        description: A collection of division IDs to associate with the given subjects
        items:
          type: string
  DomainOrganizationRoleUpdate:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the role
      description:
        type: string
      defaultRoleId:
        type: string
      permissions:
        type: array
        uniqueItems: true
        items:
          type: string
      unusedPermissions:
        type: array
        description: A collection of the permissions the role is not using
        readOnly: true
        uniqueItems: true
        items:
          type: string
      permissionPolicies:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/DomainPermissionPolicy'
      userCount:
        type: integer
        format: int32
      roleNeedsUpdate:
        type: boolean
        description: Optional unless patch operation.
      base:
        type: boolean
      default:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DomainOrganizationRoleCreate:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The role name
      description:
        type: string
      defaultRoleId:
        type: string
      permissions:
        type: array
        uniqueItems: true
        items:
          type: string
      unusedPermissions:
        type: array
        description: A collection of the permissions the role is not using
        readOnly: true
        uniqueItems: true
        items:
          type: string
      permissionPolicies:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/DomainPermissionPolicy'
      userCount:
        type: integer
        format: int32
      roleNeedsUpdate:
        type: boolean
        description: Optional unless patch operation.
      base:
        type: boolean
      default:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OrganizationRoleEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DomainOrganizationRole'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  DomainPermission:
    type: object
    properties:
      domain:
        type: string
      entityType:
        type: string
      action:
        type: string
      label:
        type: string
      allowsConditions:
        type: boolean
      divisionAware:
        type: boolean
  DomainPermissionCollection:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      domain:
        type: string
      permissionMap:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/DomainPermission'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PermissionCollectionEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DomainPermissionCollection'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  DomainOrganizationProduct:
    type: object
    properties:
      id:
        type: string
  OrganizationProductEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DomainOrganizationProduct'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      pageCount:
        type: integer
        format: int32
  DomainOrgRoleDifference:
    type: object
    properties:
      removedPermissionPolicies:
        type: array
        items:
          $ref: '#/definitions/DomainPermissionPolicy'
      addedPermissionPolicies:
        type: array
        items:
          $ref: '#/definitions/DomainPermissionPolicy'
      samePermissionPolicies:
        type: array
        items:
          $ref: '#/definitions/DomainPermissionPolicy'
      userOrgRole:
        $ref: '#/definitions/DomainOrganizationRole'
      roleFromDefault:
        $ref: '#/definitions/DomainOrganizationRole'
  SubjectDivisionGrants:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      divisions:
        type: array
        items:
          $ref: '#/definitions/Division'
      type:
        type: string
        enum:
          - PC_USER
          - PC_GROUP
          - PC_OAUTH_CLIENT
          - PC_TRUSTEE_USER
          - PC_TRUSTEE_GROUP
          - UNKNOWN
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SubjectDivisionGrantsEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/SubjectDivisionGrants'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  Detail:
    type: object
    properties:
      errorCode:
        type: string
      fieldName:
        type: string
      entityId:
        type: string
      entityName:
        type: string
  ErrorBody:
    type: object
    properties:
      message:
        type: string
      code:
        type: string
      status:
        type: integer
        format: int32
      entityId:
        type: string
      entityName:
        type: string
      messageWithParams:
        type: string
      messageParams:
        type: object
        additionalProperties:
          type: string
      contextId:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/Detail'
      errors:
        type: array
        items:
          $ref: '#/definitions/ErrorBody'
      limit:
        $ref: '#/definitions/Limit'
  Limit:
    type: object
    properties:
      key:
        type: string
      namespace:
        type: string
        enum:
          - agent.assistant
          - analytics.alerting
          - analytics
          - analytics.realtime
          - analytics.reporting.settings
          - architect
          - audiohook
          - audit
          - auth.api
          - authorization
          - automation.testing
          - bots
          - bots.voice
          - callback
          - cobrowse
          - content.management
          - conversation
          - dataactions
          - datatables
          - directory
          - email
          - event.orchestration
          - external.contacts
          - gcv
          - gdpr
          - groups
          - historical.adherence
          - infrastructureascode
          - integrations
          - intent.miner
          - journey
          - knowledge
          - language.understanding
          - limit.registry
          - marketplace
          - messaging
          - notifications
          - onboarding
          - outbound
          - platform.api
          - predictive.routing
          - presence
          - quality
          - recording
          - response.management
          - routing
          - scim
          - search
          - secondary.automation.testing
          - skills
          - speech.and.text.analytics
          - speech.integration
          - supportability
          - task.management
          - telephony.configuration
          - usage
          - users
          - web.deployments
          - web.messaging
          - webchat
          - webhooks
          - workforce.management
      value:
        type: integer
        format: int64
  SearchAggregation:
    type: object
    properties:
      field:
        type: string
        description: The field used for aggregation
      name:
        type: string
        description: The name of the aggregation. The response aggregation uses this name.
      type:
        type: string
        description: The type of aggregation to perform
        enum:
          - COUNT
          - SUM
          - AVERAGE
          - TERM
          - CONTAINS
          - STARTS_WITH
          - ENDS_WITH
      value:
        type: string
        description: A value to use for aggregation
      size:
        type: integer
        format: int32
        description: The number aggregations results to return out of the entire result set
      order:
        type: array
        description: The order in which aggregation results are sorted
        items:
          type: string
          enum:
            - VALUE_DESC
            - VALUE_ASC
            - COUNT_DESC
            - COUNT_ASC
  SearchSort:
    type: object
    properties:
      sortOrder:
        type: string
        description: The sort order for results
        enum:
          - ASC
          - DESC
          - SCORE
      sortBy:
        type: string
        description: The field in the resource that you want to sort the results by
  SignedData:
    type: object
    properties:
      jwt:
        type: string
  UrlResponse:
    type: object
    properties:
      url:
        type: string
  BillingUsage:
    type: object
    required:
      - name
      - resources
      - totalUsage
    properties:
      name:
        type: string
        description: Identifies the billable usage.
      totalUsage:
        type: string
        description: >-
          The total amount of usage, expressed as a decimal number in string
          format.
      resources:
        type: array
        description: >-
          The resources for which usage was observed (e.g. license users,
          devices).
        items:
          $ref: '#/definitions/BillingUsageResource'
  BillingUsageReport:
    type: object
    required:
      - endDate
      - startDate
      - usages
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      startDate:
        type: string
        format: date-time
        description: >-
          The period start date. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endDate:
        type: string
        format: date-time
        description: >-
          The period end date. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      status:
        type: string
        description: Generation status of report
        enum:
          - InProgress
          - Complete
      usages:
        type: array
        description: The usages for the given period.
        items:
          $ref: '#/definitions/BillingUsage'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BillingUsageResource:
    type: object
    required:
      - date
      - name
    properties:
      name:
        type: string
        description: Identifies the resource (e.g. license user, device).
      date:
        type: string
        format: date-time
        description: >-
          The date that the usage was first observed by the billing subsystem.
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  SubscriptionOverviewUsage:
    type: object
    required:
      - grouping
      - name
      - partNumber
      - prepayQuantity
      - unitOfMeasureType
      - usageQuantity
    properties:
      name:
        type: string
        description: Product charge name
      partNumber:
        type: string
        description: Product part number
      grouping:
        type: string
        description: UI grouping key
      unitOfMeasureType:
        type: string
        description: UI unit of measure
      usageQuantity:
        type: string
        description: Usage count for specified period
      overagePrice:
        type: string
        description: Price for usage / overage charge
      prepayQuantity:
        type: string
        description: Items prepaid for specified period
      prepayPrice:
        type: string
        description: Price for prepay charge
      usageNotes:
        type: string
        description: Notes about the usage/charge item
      isCancellable:
        type: boolean
        description: Indicates whether the item is cancellable
      bundleQuantity:
        type: string
        description: Quantity multiplier for this charge
      isThirdParty:
        type: boolean
        description: A charge from a third party entity
  TrusteeBillingOverview:
    type: object
    required:
      - currency
      - enabledProducts
      - organization
      - subscriptionType
      - usages
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      organization:
        description: Organization
        $ref: '#/definitions/NamedEntity'
      currency:
        type: string
        description: The currency type.
      enabledProducts:
        type: array
        description: >-
          The charge short names for products enabled during the specified
          period.
        items:
          type: string
      subscriptionType:
        type: string
        description: The subscription type.
        enum:
          - ININ
          - MONTH_TO_MONTH
          - FREE_TRIAL_MONTH_TO_MONTH
          - PREPAY_MONTHLY_COMMITMENT
          - PREPAY
          - DEV_ORG_MONTH_TO_MONTH
          - DEV_ORG_PREPAY_MONTHLY_COMMITMENT
          - DEV_ORG_PREPAY
      rampPeriodStartDate:
        type: string
        format: date-time
        description: >-
          Date-time the ramp period starts. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      rampPeriodEndDate:
        type: string
        format: date-time
        description: >-
          Date-time the ramp period ends. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      billingPeriodStartDate:
        type: string
        format: date-time
        description: >-
          Date-time the billing period started. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      billingPeriodEndDate:
        type: string
        format: date-time
        description: >-
          Date-time the billing period ended. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      usages:
        type: array
        description: Usages for the specified period.
        items:
          $ref: '#/definitions/SubscriptionOverviewUsage'
      contractAmendmentDate:
        type: string
        format: date-time
        description: >-
          Date-time the contract was last amended. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      contractEffectiveDate:
        type: string
        format: date-time
        description: >-
          Date-time the contract became effective. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      contractEndDate:
        type: string
        format: date-time
        description: >-
          Date-time the contract ends. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      minimumMonthlyAmount:
        type: string
        description: Minimum amount that will be charged for the month
      inRampPeriod:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CallForwarding:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      user:
        $ref: '#/definitions/User'
      enabled:
        type: boolean
        description: Whether or not CallForwarding is enabled
      phoneNumber:
        type: string
        description: This property is deprecated. Please use the calls property
      calls:
        type: array
        description: >-
          An ordered list of CallRoutes to be executed when CallForwarding is
          enabled
        items:
          $ref: '#/definitions/CallRoute'
      voicemail:
        type: string
        description: The type of voicemail to use with the callForwarding configuration
        enum:
          - PURECLOUD
          - LASTCALL
          - NONE
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CallRoute:
    type: object
    properties:
      targets:
        type: array
        description: A list of CallTargets to be called when the CallRoute is executed
        items:
          $ref: '#/definitions/CallTarget'
  CallTarget:
    type: object
    properties:
      type:
        type: string
        description: The type of call
        enum:
          - STATION
          - PHONENUMBER
      value:
        type: string
        description: The id of the station or an E.164 formatted phone number
  EmergencyLocation:
    type: object
    required:
      - address
      - did
      - source
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      address:
        description: Emergency address
        $ref: '#/definitions/LocationAddress'
      did:
        type: string
        description: Phone number in E164 format
      source:
        type: string
        description: source
        enum:
          - Admin
          - User
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ErrorInfo:
    type: object
    properties:
      message:
        type: string
      code:
        type: string
  Organization:
    type: object
    required:
      - version
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      defaultLanguage:
        type: string
        description: 'The default language for this organization. Example: ''en'''
      defaultCountryCode:
        type: string
        description: 'The default country code for this organization. Example: ''US'''
      thirdPartyOrgName:
        type: string
        description: >-
          The short name for the organization. This field is globally unique and
          cannot be changed.
        readOnly: true
      thirdPartyURI:
        type: string
        format: uri
      domain:
        type: string
      version:
        type: integer
        format: int32
        description: The current version of the organization.
      state:
        type: string
        description: The current state. Examples are active, inactive, deleted.
        enum:
          - active
          - inactive
          - deleted
      defaultSiteId:
        type: string
      supportURI:
        type: string
        description: Email address where support tickets are sent to.
      voicemailEnabled:
        type: boolean
      productPlatform:
        type: string
        description: Organizations Originating Platform.
        readOnly: true
        enum:
          - GenesysCloud
          - PureCloud
          - PureEngage
          - PureEngageCloud
          - PureConnect
          - PureConnectCloud
          - Unknown
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      features:
        type: object
        description: The state of features available for the organization.
        readOnly: true
        additionalProperties:
          type: boolean
  DomainEntity:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DomainEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DomainEntity'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  EntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          type: object
  CertificateDetails:
    type: object
    properties:
      issuer:
        type: string
        description: >-
          Information about the issuer of the certificate.  The value of this
          property is a comma separated key=value format.  Each key is one of
          the attribute names supported by X.500.
      subject:
        type: string
        description: >-
          Information about the subject of the certificate.  The value of this
          property is a comma separated key=value format.  Each key is one of
          the attribute names supported by X.500.
      expirationDate:
        type: string
        format: date-time
        description: >-
          The expiration date of the certificate. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      issueDate:
        type: string
        format: date-time
        description: >-
          The issue date of the certificate. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      expired:
        type: boolean
        description: True if the certificate is expired, false otherwise.
      valid:
        type: boolean
      signatureValid:
        type: boolean
    description: Represents the details of a parsed certificate.
  ParsedCertificate:
    type: object
    properties:
      certificateDetails:
        type: array
        description: The details of the certificates that were parsed correctly.
        items:
          $ref: '#/definitions/CertificateDetails'
    description: Represents the parsed certificate information.
  Certificate:
    type: object
    required:
      - certificate
    properties:
      certificate:
        type: string
        description: The certificate to parse.
    description: Represents a certificate to parse.
  ChatSettings:
    type: object
    properties:
      messageRetentionPeriodDays:
        type: integer
        format: int32
        description: Retention time for messages in days
  CobrowseWebMessagingSession:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      joinCode:
        type: string
        description: Cobrowse session join code
        readOnly: true
      websocketUrl:
        type: string
        description: WebSocket URL for the JS client
        readOnly: true
      dateOfferEnds:
        type: string
        format: date-time
        description: >-
          Date when Cobrowse Offer Expires. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      communicationType:
        type: string
        description: CommunicationType for Cobrowse Session
        readOnly: true
        enum:
          - Call
          - Message
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ExportScriptResponse:
    type: object
    properties:
      url:
        type: string
  ExportScriptRequest:
    type: object
    properties:
      fileName:
        type: string
        description: >-
          The final file name (no extension) of the script download:
          <fileName>.script
      versionId:
        type: string
        description: >-
          The UUID version of the script to be exported.  Defaults to the
          current editable version.
    description: Creating an exported script via Download Service
  ImportScriptStatusResponse:
    type: object
    properties:
      url:
        type: string
        format: uri
      succeeded:
        type: boolean
      message:
        type: string
  ScriptEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Script'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ConversationEncryptionConfiguration:
    type: object
    required:
      - keyConfigurationType
      - url
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      url:
        type: string
        description: >-
          keyConfigurationType is always KmsSymmetric, and should be the arn to
          the key alias for the master key
      keyConfigurationType:
        type: string
        description: >-
          Type should be 'KmsSymmetric' when create or update Key
          configurations, 'None' to disable configuration.
        enum:
          - KmsSymmetric
          - LocalKeyManager
          - Native
          - None
      lastError:
        description: The error message related to the configuration
        $ref: '#/definitions/ErrorBody'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ConversationEncryptionConfigurationListing:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/ConversationEncryptionConfiguration'
      selfUri:
        type: string
        format: uri
  AnswerOption:
    type: object
    properties:
      id:
        type: string
      text:
        type: string
      value:
        type: integer
        format: int32
      assistanceConditions:
        type: array
        description: >-
          List of assistance conditions which are combined together with a
          logical AND operator. Eg ( assistanceCondtion1 && assistanceCondition2
          ) wherein assistanceCondition could be ( EXISTS topic1 || topic2 ||
          ... ) or (NOTEXISTS topic3 || topic4 || ...).
        items:
          $ref: '#/definitions/AssistanceCondition'
  ArchiveRetention:
    type: object
    properties:
      days:
        type: integer
        format: int32
      storageMedium:
        type: string
        enum:
          - CLOUDARCHIVE
  AssistanceCondition:
    type: object
    properties:
      operator:
        type: string
        description: >-
          The operator for the assistance condition. The operator defines
          whether the listed topicIds should EXIST or NOTEXIST for the condition
          to be evaluated as true.
        enum:
          - EXISTS
          - NOTEXISTS
      topicIds:
        type: array
        description: >-
          List of topicIds within the assistance condition which would be
          combined together using logical OR operator. Eg ( topicId_1 ||
          topicId_2 ) .
        items:
          type: string
  CalibrationAssignment:
    type: object
    properties:
      calibrator:
        $ref: '#/definitions/User'
      evaluators:
        type: array
        items:
          $ref: '#/definitions/User'
      evaluationForm:
        $ref: '#/definitions/EvaluationForm'
      expertEvaluator:
        $ref: '#/definitions/User'
  CallMediaPolicy:
    type: object
    properties:
      actions:
        description: Actions applied when specified conditions are met
        $ref: '#/definitions/PolicyActions'
      conditions:
        description: Conditions for when actions should be applied
        $ref: '#/definitions/CallMediaPolicyConditions'
  CallMediaPolicyConditions:
    type: object
    properties:
      forUsers:
        type: array
        items:
          $ref: '#/definitions/User'
      dateRanges:
        type: array
        items:
          type: string
      forQueues:
        type: array
        items:
          $ref: '#/definitions/Queue'
      wrapupCodes:
        type: array
        items:
          $ref: '#/definitions/WrapupCode'
      languages:
        type: array
        items:
          $ref: '#/definitions/Language'
      timeAllowed:
        $ref: '#/definitions/TimeAllowed'
      directions:
        type: array
        items:
          type: string
          enum:
            - INBOUND
            - OUTBOUND
      duration:
        $ref: '#/definitions/DurationCondition'
  ChatMediaPolicy:
    type: object
    properties:
      actions:
        description: Actions applied when specified conditions are met
        $ref: '#/definitions/PolicyActions'
      conditions:
        description: Conditions for when actions should be applied
        $ref: '#/definitions/ChatMediaPolicyConditions'
  ChatMediaPolicyConditions:
    type: object
    properties:
      forUsers:
        type: array
        items:
          $ref: '#/definitions/User'
      dateRanges:
        type: array
        items:
          type: string
      forQueues:
        type: array
        items:
          $ref: '#/definitions/Queue'
      wrapupCodes:
        type: array
        items:
          $ref: '#/definitions/WrapupCode'
      languages:
        type: array
        items:
          $ref: '#/definitions/Language'
      timeAllowed:
        $ref: '#/definitions/TimeAllowed'
      duration:
        $ref: '#/definitions/DurationCondition'
  DeleteRetention:
    type: object
    properties:
      days:
        type: integer
        format: int32
  DomainEntityListingEvaluationForm:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/EvaluationForm'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  DurationCondition:
    type: object
    properties:
      durationTarget:
        type: string
        enum:
          - DURATION
          - DURATION_RANGE
      durationOperator:
        type: string
      durationRange:
        type: string
      durationMode:
        type: string
        enum:
          - Between
          - Over
          - Under
  EmailMediaPolicy:
    type: object
    properties:
      actions:
        description: Actions applied when specified conditions are met
        $ref: '#/definitions/PolicyActions'
      conditions:
        description: Conditions for when actions should be applied
        $ref: '#/definitions/EmailMediaPolicyConditions'
  EmailMediaPolicyConditions:
    type: object
    properties:
      forUsers:
        type: array
        items:
          $ref: '#/definitions/User'
      dateRanges:
        type: array
        items:
          type: string
      forQueues:
        type: array
        items:
          $ref: '#/definitions/Queue'
      wrapupCodes:
        type: array
        items:
          $ref: '#/definitions/WrapupCode'
      languages:
        type: array
        items:
          $ref: '#/definitions/Language'
      timeAllowed:
        $ref: '#/definitions/TimeAllowed'
      customerParticipation:
        type: string
        enum:
          - 'YES'
          - 'NO'
  EvaluationAssignment:
    type: object
    properties:
      evaluationForm:
        $ref: '#/definitions/EvaluationForm'
      user:
        $ref: '#/definitions/User'
  EvaluationForm:
    type: object
    required:
      - name
      - questionGroups
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The evaluation form name
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      published:
        type: boolean
      contextId:
        type: string
      questionGroups:
        type: array
        description: A list of question groups
        items:
          $ref: '#/definitions/EvaluationQuestionGroup'
      publishedVersions:
        $ref: '#/definitions/DomainEntityListingEvaluationForm'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EvaluationQuestion:
    type: object
    properties:
      id:
        type: string
      text:
        type: string
      helpText:
        type: string
      type:
        type: string
        enum:
          - multipleChoiceQuestion
          - freeTextQuestion
          - npsQuestion
          - readOnlyTextBlockQuestion
      naEnabled:
        type: boolean
      commentsRequired:
        type: boolean
      visibilityCondition:
        $ref: '#/definitions/VisibilityCondition'
      answerOptions:
        type: array
        description: >-
          Options from which to choose an answer for this question. Only used by
          Multiple Choice type questions.
        items:
          $ref: '#/definitions/AnswerOption'
      isKill:
        type: boolean
      isCritical:
        type: boolean
  EvaluationQuestionGroup:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
      defaultAnswersToHighest:
        type: boolean
      defaultAnswersToNA:
        type: boolean
      naEnabled:
        type: boolean
      weight:
        type: number
        format: float
      manualWeight:
        type: boolean
      questions:
        type: array
        items:
          $ref: '#/definitions/EvaluationQuestion'
      visibilityCondition:
        $ref: '#/definitions/VisibilityCondition'
  EvaluationSettings:
    type: object
    properties: {}
  EvaluationSettingsAssignee:
    type: object
    properties: {}
  InitiateScreenRecording:
    type: object
    properties:
      recordACW:
        type: boolean
      archiveRetention:
        $ref: '#/definitions/ArchiveRetention'
      deleteRetention:
        $ref: '#/definitions/DeleteRetention'
  IntegrationExport:
    type: object
    required:
      - integration
    properties:
      integration:
        description: >-
          The aws-s3-recording-bulk-actions-integration that the policy uses for
          exports.
        $ref: '#/definitions/DomainEntityRef'
      shouldExportScreenRecordings:
        type: boolean
        description: >-
          True if the policy should export screen recordings in addition to the
          other conversation media. Default = true
  Language:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The language name.
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      state:
        type: string
        enum:
          - active
          - inactive
          - deleted
      version:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  MediaPolicies:
    type: object
    properties:
      callPolicy:
        description: Conditions and actions for calls
        $ref: '#/definitions/CallMediaPolicy'
      chatPolicy:
        description: Conditions and actions for chats
        $ref: '#/definitions/ChatMediaPolicy'
      emailPolicy:
        description: Conditions and actions for emails
        $ref: '#/definitions/EmailMediaPolicy'
      messagePolicy:
        description: Conditions and actions for messages
        $ref: '#/definitions/MessageMediaPolicy'
  MediaTranscription:
    type: object
    properties:
      displayName:
        type: string
      transcriptionProvider:
        type: string
        enum:
          - VOCI
          - CALLJOURNEY
      integrationId:
        type: string
  MessageMediaPolicy:
    type: object
    properties:
      actions:
        description: Actions applied when specified conditions are met
        $ref: '#/definitions/PolicyActions'
      conditions:
        description: Conditions for when actions should be applied
        $ref: '#/definitions/MessageMediaPolicyConditions'
  MessageMediaPolicyConditions:
    type: object
    properties:
      forUsers:
        type: array
        items:
          $ref: '#/definitions/User'
      dateRanges:
        type: array
        items:
          type: string
      forQueues:
        type: array
        items:
          $ref: '#/definitions/Queue'
      wrapupCodes:
        type: array
        items:
          $ref: '#/definitions/WrapupCode'
      languages:
        type: array
        items:
          $ref: '#/definitions/Language'
      timeAllowed:
        $ref: '#/definitions/TimeAllowed'
      customerParticipation:
        type: string
        enum:
          - 'YES'
          - 'NO'
  MeteredAssignmentByAgent:
    type: object
    properties:
      evaluationContextId:
        type: string
      evaluators:
        type: array
        items:
          $ref: '#/definitions/User'
      maxNumberEvaluations:
        type: integer
        format: int32
      evaluationForm:
        $ref: '#/definitions/EvaluationForm'
      timeInterval:
        $ref: '#/definitions/TimeInterval'
      timeZone:
        type: string
  MeteredEvaluationAssignment:
    type: object
    properties:
      evaluationContextId:
        type: string
      evaluators:
        type: array
        items:
          $ref: '#/definitions/User'
      maxNumberEvaluations:
        type: integer
        format: int32
      evaluationForm:
        $ref: '#/definitions/EvaluationForm'
      assignToActiveUser:
        type: boolean
      timeInterval:
        $ref: '#/definitions/TimeInterval'
  Policy:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      order:
        type: integer
        format: int32
      description:
        type: string
      enabled:
        type: boolean
      mediaPolicies:
        description: Conditions and actions per media type
        $ref: '#/definitions/MediaPolicies'
      conditions:
        description: Conditions
        $ref: '#/definitions/PolicyConditions'
      actions:
        description: Actions
        $ref: '#/definitions/PolicyActions'
      policyErrors:
        $ref: '#/definitions/PolicyErrors'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PolicyActions:
    type: object
    properties:
      retainRecording:
        type: boolean
        description: >-
          true to retain the recording associated with the conversation. Default
          = true
      deleteRecording:
        type: boolean
        description: >-
          true to delete the recording associated with the conversation. If
          retainRecording = true, this will be ignored. Default = false
      alwaysDelete:
        type: boolean
        description: >-
          true to delete the recording associated with the conversation
          regardless of the values of retainRecording or deleteRecording.
          Default = false
      assignEvaluations:
        type: array
        items:
          $ref: '#/definitions/EvaluationAssignment'
      assignMeteredEvaluations:
        type: array
        items:
          $ref: '#/definitions/MeteredEvaluationAssignment'
      assignMeteredAssignmentByAgent:
        type: array
        items:
          $ref: '#/definitions/MeteredAssignmentByAgent'
      assignCalibrations:
        type: array
        items:
          $ref: '#/definitions/CalibrationAssignment'
      assignSurveys:
        type: array
        items:
          $ref: '#/definitions/SurveyAssignment'
      retentionDuration:
        $ref: '#/definitions/RetentionDuration'
      initiateScreenRecording:
        $ref: '#/definitions/InitiateScreenRecording'
      mediaTranscriptions:
        type: array
        items:
          $ref: '#/definitions/MediaTranscription'
      integrationExport:
        description: >-
          Policy action for exporting recordings using an integration to 3rd
          party s3.
        $ref: '#/definitions/IntegrationExport'
  PolicyConditions:
    type: object
    properties:
      forUsers:
        type: array
        items:
          $ref: '#/definitions/User'
      directions:
        type: array
        items:
          type: string
          enum:
            - INBOUND
            - OUTBOUND
      dateRanges:
        type: array
        items:
          type: string
      mediaTypes:
        type: array
        items:
          type: string
          enum:
            - CALL
            - CHAT
      forQueues:
        type: array
        items:
          $ref: '#/definitions/Queue'
      duration:
        $ref: '#/definitions/DurationCondition'
      wrapupCodes:
        type: array
        items:
          $ref: '#/definitions/WrapupCode'
      timeAllowed:
        $ref: '#/definitions/TimeAllowed'
      customerParticipation:
        type: string
        description: >-
          This condition is to filter out conversation with and without customer
          participation.
        enum:
          - 'YES'
          - 'NO'
  PolicyEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Policy'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  PolicyErrorMessage:
    type: object
    properties:
      statusCode:
        type: integer
        format: int32
      userMessage:
        type: object
      userParamsMessage:
        type: string
      errorCode:
        type: string
      correlationId:
        type: string
      userParams:
        type: array
        items:
          $ref: '#/definitions/UserParam'
      insertDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  PolicyErrors:
    type: object
    properties:
      policyErrorMessages:
        type: array
        items:
          $ref: '#/definitions/PolicyErrorMessage'
  PublishedSurveyFormReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      contextId:
        type: string
        description: The context id of this form.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  RetentionDuration:
    type: object
    properties:
      archiveRetention:
        $ref: '#/definitions/ArchiveRetention'
      deleteRetention:
        $ref: '#/definitions/DeleteRetention'
  StarrableDivision:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SurveyAssignment:
    type: object
    required:
      - sendingDomain
    properties:
      surveyForm:
        description: The survey form used for this survey.
        $ref: '#/definitions/PublishedSurveyFormReference'
      flow:
        description: The URI reference to the flow associated with this survey.
        $ref: '#/definitions/DomainEntityRef'
      inviteTimeInterval:
        type: string
        description: >-
          An ISO 8601 repeated interval consisting of the number of repetitions,
          the start datetime, and the interval (e.g.
          R2/2018-03-01T13:00:00Z/P1M10DT2H30M). Total duration must not exceed
          90 days.
      sendingUser:
        type: string
        description: >-
          User together with sendingDomain used to send email, null to use
          no-reply
      sendingDomain:
        type: string
        description: Validated email domain, required
  TimeAllowed:
    type: object
    properties:
      timeSlots:
        type: array
        items:
          $ref: '#/definitions/TimeSlot'
      timeZoneId:
        type: string
      empty:
        type: boolean
  TimeInterval:
    type: object
    properties:
      months:
        type: integer
        format: int32
      weeks:
        type: integer
        format: int32
      days:
        type: integer
        format: int32
      hours:
        type: integer
        format: int32
  TimeSlot:
    type: object
    properties:
      startTime:
        type: string
        description: start time in xx:xx:xx.xxx format
      stopTime:
        type: string
        description: stop time in xx:xx:xx.xxx format
      day:
        type: integer
        format: int32
        description: Day for this time slot, Monday = 1 ... Sunday = 7
  UserParam:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  UserReferenceWithName:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      name:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  VisibilityCondition:
    type: object
    properties:
      combiningOperation:
        type: string
        enum:
          - AND
          - OR
      predicates:
        type: array
        description: >-
          A list of strings, each representing the location in the form of the
          Answer Option to depend on. In the format of
          "/form/questionGroup/{questionGroupIndex}/question/{questionIndex}/answer/{answerIndex}"
          or, to assume the current question group,
          "../question/{questionIndex}/answer/{answerIndex}". Note: Indexes are
          zero-based
        items:
          type: object
  WrapupCode:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The wrap-up code name.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/StarrableDivision'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date when the wrap-up code was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date when the wrap-up code was last modified. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        type: string
        description: The ID of the user that created the wrap-up code.
      modifiedBy:
        type: string
        description: The ID of the user that modified the wrap-up code.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CrossPlatformCallMediaPolicy:
    type: object
    properties:
      actions:
        description: Actions applied when specified conditions are met
        $ref: '#/definitions/CrossPlatformPolicyActions'
      conditions:
        description: Conditions for when actions should be applied
        $ref: '#/definitions/CallMediaPolicyConditions'
  CrossPlatformChatMediaPolicy:
    type: object
    properties:
      actions:
        description: Actions applied when specified conditions are met
        $ref: '#/definitions/CrossPlatformPolicyActions'
      conditions:
        description: Conditions for when actions should be applied
        $ref: '#/definitions/ChatMediaPolicyConditions'
  CrossPlatformEmailMediaPolicy:
    type: object
    properties:
      actions:
        description: Actions applied when specified conditions are met
        $ref: '#/definitions/CrossPlatformPolicyActions'
      conditions:
        description: Conditions for when actions should be applied
        $ref: '#/definitions/EmailMediaPolicyConditions'
  CrossPlatformMediaPolicies:
    type: object
    properties:
      callPolicy:
        description: Conditions and actions for calls
        $ref: '#/definitions/CrossPlatformCallMediaPolicy'
      chatPolicy:
        description: Conditions and actions for chats
        $ref: '#/definitions/CrossPlatformChatMediaPolicy'
      emailPolicy:
        description: Conditions and actions for emails
        $ref: '#/definitions/CrossPlatformEmailMediaPolicy'
      messagePolicy:
        description: Conditions and actions for messages
        $ref: '#/definitions/CrossPlatformMessageMediaPolicy'
  CrossPlatformMessageMediaPolicy:
    type: object
    properties:
      actions:
        description: Actions applied when specified conditions are met
        $ref: '#/definitions/CrossPlatformPolicyActions'
      conditions:
        description: Conditions for when actions should be applied
        $ref: '#/definitions/MessageMediaPolicyConditions'
  CrossPlatformPolicy:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      order:
        type: integer
        format: int32
      description:
        type: string
      enabled:
        type: boolean
      mediaPolicies:
        description: Conditions and actions per media type
        $ref: '#/definitions/CrossPlatformMediaPolicies'
      conditions:
        description: Conditions
        $ref: '#/definitions/PolicyConditions'
      actions:
        description: Actions
        $ref: '#/definitions/CrossPlatformPolicyActions'
      policyErrors:
        $ref: '#/definitions/PolicyErrors'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CrossPlatformPolicyActions:
    type: object
    properties:
      retainRecording:
        type: boolean
        description: >-
          true to retain the recording associated with the conversation. Default
          = true
      deleteRecording:
        type: boolean
        description: >-
          true to delete the recording associated with the conversation. If
          retainRecording = true, this will be ignored. Default = false
      alwaysDelete:
        type: boolean
        description: >-
          true to delete the recording associated with the conversation
          regardless of the values of retainRecording or deleteRecording.
          Default = false
      assignEvaluations:
        type: array
        items:
          $ref: '#/definitions/EvaluationAssignment'
      assignMeteredEvaluations:
        type: array
        items:
          $ref: '#/definitions/MeteredEvaluationAssignment'
      assignMeteredAssignmentByAgent:
        type: array
        items:
          $ref: '#/definitions/MeteredAssignmentByAgent'
      assignCalibrations:
        type: array
        items:
          $ref: '#/definitions/CalibrationAssignment'
      retentionDuration:
        $ref: '#/definitions/RetentionDuration'
      mediaTranscriptions:
        type: array
        items:
          $ref: '#/definitions/MediaTranscription'
      integrationExport:
        description: >-
          Policy action for exporting recordings using an integration to 3rd
          party s3.
        $ref: '#/definitions/IntegrationExport'
  CrossPlatformPolicyCreate:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The policy name.
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      order:
        type: integer
        format: int32
      description:
        type: string
      enabled:
        type: boolean
      mediaPolicies:
        description: Conditions and actions per media type
        $ref: '#/definitions/CrossPlatformMediaPolicies'
      conditions:
        description: Conditions
        $ref: '#/definitions/PolicyConditions'
      actions:
        description: Actions
        $ref: '#/definitions/CrossPlatformPolicyActions'
      policyErrors:
        $ref: '#/definitions/PolicyErrors'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CrossPlatformPolicyUpdate:
    type: object
    properties:
      enabled:
        type: boolean
  PolicyCreate:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The policy name.
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      order:
        type: integer
        format: int32
      description:
        type: string
      enabled:
        type: boolean
      mediaPolicies:
        description: Conditions and actions per media type
        $ref: '#/definitions/MediaPolicies'
      conditions:
        description: Conditions
        $ref: '#/definitions/PolicyConditions'
      actions:
        description: Actions
        $ref: '#/definitions/PolicyActions'
      policyErrors:
        $ref: '#/definitions/PolicyErrors'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PolicyUpdate:
    type: object
    properties:
      enabled:
        type: boolean
  EncryptionKey:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      createDate:
        type: string
        format: date-time
        description: >-
          create date of the key pair. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      keydataSummary:
        type: string
        description: key data summary (base 64 encoded public key)
      user:
        description: user that requested generation of public key
        $ref: '#/definitions/User'
      localEncryptionConfiguration:
        description: Local configuration
        $ref: '#/definitions/LocalEncryptionConfiguration'
      keyConfigurationType:
        type: string
        description: Key type used in this configuration
        enum:
          - KmsSymmetric
          - LocalKeyManager
          - Native
          - None
      kmsKeyArn:
        type: string
        description: ARN of internal key to be wrapped by AWS KMS Symmetric key
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EncryptionKeyEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/EncryptionKey'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  LocalEncryptionConfiguration:
    type: object
    required:
      - apiId
      - apiKey
      - url
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      url:
        type: string
        description: >-
          The url for decryption. This must specify the path to where Purecloud
          can requests decryption
      apiId:
        type: string
        description: The api id for Hawk Authentication.
      apiKey:
        type: string
        description: The api shared symmetric key used for hawk authentication
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KeyRotationSchedule:
    type: object
    required:
      - period
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      period:
        type: string
        description: Value to set schedule to
        enum:
          - DISABLED
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LocalEncryptionKeyRequest:
    type: object
    required:
      - configId
      - keypairId
      - publicKey
    properties:
      configId:
        type: string
        description: >-
          The local configuration id that contains metadata on private local
          service
      publicKey:
        type: string
        description: Base 64 encoded public key, generated by the local service.
      keypairId:
        type: string
        description: The key pair id from the local service.
  RecordingEncryptionConfiguration:
    type: object
    required:
      - keyConfigurationType
      - url
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      url:
        type: string
        description: >-
          When keyConfigurationType is LocalKeyManager, this should be the url
          for decryption and must specify the path to where GenesysCloud can
          requests decryption. When keyConfigurationType is KmsSymmetric, this
          should be the arn to the key alias for the master key
      apiId:
        type: string
        description: >-
          The api id for Hawk Authentication. Null if keyConfigurationType is
          KmsSymmetric
      apiKey:
        type: string
        description: >-
          The api shared symmetric key used for hawk authentication. Null if
          keyConfigurationType is KmsSymmetric
      keyConfigurationType:
        type: string
        description: >-
          Type should be LocalKeyManager or KmsSymmetric when create or update
          Key configurations; 'Native' for disabling configuration.
        enum:
          - KmsSymmetric
          - LocalKeyManager
          - Native
          - None
      lastError:
        description: The error message related to the configuration
        $ref: '#/definitions/ErrorBody'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  RecordingEncryptionConfigurationListing:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/RecordingEncryptionConfiguration'
      selfUri:
        type: string
        format: uri
  BulkContactsResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/BulkResponseResultExternalContactExternalContact'
      errorCount:
        type: integer
        format: int32
      errorIndexes:
        type: array
        items:
          type: integer
          format: int32
  BulkError:
    type: object
    properties:
      message:
        type: string
        description: Error message of the bulk operation result.
      code:
        type: string
        description: Error code of the bulk operation result.
  BulkErrorDetail:
    type: object
    properties:
      fieldName:
        type: string
      value:
        type: string
      message:
        type: string
  BulkErrorExternalContact:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      status:
        type: integer
        format: int32
      retryable:
        type: boolean
      entity:
        $ref: '#/definitions/ExternalContact'
      details:
        type: array
        items:
          $ref: '#/definitions/BulkErrorDetail'
  BulkResponseResultExternalContactExternalContact:
    type: object
    properties:
      id:
        type: string
      success:
        type: boolean
      entity:
        $ref: '#/definitions/ExternalContact'
      error:
        $ref: '#/definitions/BulkErrorExternalContact'
  ContactAddress:
    type: object
    properties:
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      state:
        type: string
      postalCode:
        type: string
      countryCode:
        type: string
  ContactAddressableEntityRef:
    type: object
    properties:
      id:
        type: string
      selfUri:
        type: string
        format: uri
  DataSchema:
    type: object
    required:
      - jsonSchema
      - version
    properties:
      id:
        type: string
        description: >-
          The globally unique identifier for the schema.  Only required if a
          schema is used for custom fields during external entity creation or
          updates.
      name:
        type: string
      version:
        type: integer
        format: int32
        description: The schema's version, a positive integer. Required for updates.
      appliesTo:
        type: array
        description: >-
          One of "CONTACT" or "EXTERNAL_ORGANIZATION".  Indicates the built-in
          entity type to which this schema applies.
        readOnly: true
        items:
          type: string
          enum:
            - CONTACT
            - EXTERNAL_ORGANIZATION
            - OPEN_ACTION
            - WORKITEM
      enabled:
        type: boolean
        description: >-
          The schema's enabled/disabled status. A disabled schema cannot be
          assigned to any other entities, but the data on those entities from
          the schema still exists.
      createdBy:
        description: The URI of the user that created this schema.
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date and time this schema was created. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      jsonSchema:
        example: |-
          {
              "appliesTo": [
                  "CONTACT"
              ],
              "jsonSchema": {
                  "title": "Example schema",
                  "description": "Uses all of the core types for illustrative purposes",
                  "properties": {
                      "field1_text": {
                          "title": "Field 1",
                          "description": "field1",
                          "allOf": [ { "$ref": "#/definitions/text" } ],
                          "minLength": 0,
                          "maxLength": 39
                      },
                      "field2_longtext": {
                          "title": "Field 2",
                          "description": "field2",
                          "allOf": [ { "$ref": "#/definitions/longtext" } ],
                          "minLength": 0,
                          "maxLength": 1000
                      },
                      "field3_enum": {
                          "title": "Field 3",
                          "description": "Field 3",
                          "allOf": [ { "$ref": "#/definitions/enum" } ],
                          "enum": [
                              "enum1",
                              "enum2"
                          ]
                      },
                      "field4_identifier": {
                          "title": "field4",
                          "description": "Field 4",
                          "allOf": [ { "$ref": "#/definitions/identifier" } ],
                          "minLength": 0,
                          "maxLength": 37
                      },
                      "field5_integer": {
                          "title": "field5",
                          "description": "Field 5",
                          "allOf": [ { "$ref": "#/definitions/integer" } ],
                          "minimum": 1,
                          "maximum": 24
                      },
                      "field6_number": {
                          "title": "field6",
                          "description": "Field 6",
                          "allOf": [ { "$ref": "#/definitions/number" } ],
                          "minimum": 2.7,
                          "maximum": 31.3
                      },
                      "field7_date": {
                          "title": "field7",
                          "description": "Field 7",
                          "allOf": [ { "$ref": "#/definitions/date"}]
                      },
                      "field8_datetime": {
                          "title": "field8",
                          "description": "Field 8",
                          "allOf": [ { "$ref": "#/definitions/datetime"}]
                      },
                      "field9_checkbox": {
                          "title": "field9",
                          "description": "Field 9",
                          "allOf": [ { "$ref": "#/definitions/checkbox"}]
                      },
                      "field10_tag": {
                          "title": "field10",
                          "description": "Field 10",
                          "allOf": [ { "$ref": "#/definitions/tag" } ],
                          "items": {
                              "minLength": 1,
                              "maxLength": 20
                          },
                          "minItems": 0,
                          "maxItems": 10,
                          "uniqueItems": true
                      }
                  },
                  "$schema": "http://json-schema.org/draft-04/schema#"
              }
          }
        description: A JSON schema defining the extension to the built-in entity type.
        $ref: '#/definitions/JsonSchemaDocument'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ExternalContact:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      firstName:
        type: string
        description: The first name of the contact.
      middleName:
        type: string
      lastName:
        type: string
        description: The last name of the contact.
      salutation:
        type: string
      title:
        type: string
      workPhone:
        $ref: '#/definitions/PhoneNumber'
      cellPhone:
        $ref: '#/definitions/PhoneNumber'
      homePhone:
        $ref: '#/definitions/PhoneNumber'
      otherPhone:
        $ref: '#/definitions/PhoneNumber'
      workEmail:
        type: string
      personalEmail:
        type: string
      otherEmail:
        type: string
      address:
        $ref: '#/definitions/ContactAddress'
      twitterId:
        $ref: '#/definitions/TwitterId'
      lineId:
        $ref: '#/definitions/LineId'
      whatsAppId:
        $ref: '#/definitions/WhatsAppId'
      facebookId:
        $ref: '#/definitions/FacebookId'
      modifyDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      externalOrganization:
        $ref: '#/definitions/ExternalOrganization'
      surveyOptOut:
        type: boolean
      externalSystemUrl:
        type: string
        description: >-
          A string that identifies an external system-of-record resource that
          may have more detailed information on the contact. It should be a
          valid URL (including the http/https protocol, port, and path [if
          any]). The value is automatically trimmed of any leading and trailing
          whitespace.
      schema:
        description: The schema defining custom fields for this contact
        $ref: '#/definitions/DataSchema'
      customFields:
        type: object
        description: >-
          Custom fields defined in the schema referenced by schemaId and
          schemaVersion.
        additionalProperties:
          type: object
      externalDataSources:
        type: array
        description: >-
          Links to the sources of data (e.g. one source might be a CRM) that
          contributed data to this record.  Read-only, and only populated when
          requested via expand param.
        readOnly: true
        items:
          $ref: '#/definitions/ExternalDataSource'
      type:
        type: string
        description: The type of contact
        readOnly: true
        enum:
          - Ephemeral
          - Identified
          - Curated
      canonicalContact:
        description: >-
          The contact at the head of the merge tree. If null, this contact is
          not a part of any merge.
        readOnly: true
        $ref: '#/definitions/ContactAddressableEntityRef'
      mergeSet:
        type: array
        description: >-
          The set of all contacts that are a part of the merge tree. If null,
          this contact is not a part of any merge.
        readOnly: true
        items:
          $ref: '#/definitions/ContactAddressableEntityRef'
      mergeOperation:
        description: >-
          Information about the merge history of this contact. If null, this
          contact is not a part of any merge.
        readOnly: true
        $ref: '#/definitions/MergeOperation'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ExternalDataSource:
    type: object
    properties:
      platform:
        type: string
        description: >-
          The platform that was the source of the data.  Example: a CRM like
          SALESFORCE.
        enum:
          - SALESFORCE
      url:
        type: string
        description: >-
          An URL that links to the source record that contributed data to the
          associated entity.
    description: >-
      Describes a link to a record in an external system that contributed data
      to a Relate record
  ExternalOrganization:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      name:
        type: string
        description: The name of the company.
      companyType:
        type: string
      industry:
        type: string
      primaryContactId:
        type: string
      address:
        $ref: '#/definitions/ContactAddress'
      phoneNumber:
        $ref: '#/definitions/PhoneNumber'
      faxNumber:
        $ref: '#/definitions/PhoneNumber'
      employeeCount:
        type: integer
        format: int64
      revenue:
        type: integer
        format: int64
      tags:
        type: array
        items:
          type: string
      websites:
        type: array
        items:
          type: string
      tickers:
        type: array
        items:
          $ref: '#/definitions/Ticker'
      twitterId:
        $ref: '#/definitions/TwitterId'
      externalSystemUrl:
        type: string
        description: >-
          A string that identifies an external system-of-record resource that
          may have more detailed information on the organization. It should be a
          valid URL (including the http/https protocol, port, and path [if
          any]). The value is automatically trimmed of any leading and trailing
          whitespace.
      modifyDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      trustor:
        $ref: '#/definitions/Trustor'
      schema:
        description: The schema defining custom fields for this contact
        $ref: '#/definitions/DataSchema'
      customFields:
        type: object
        description: >-
          Custom fields defined in the schema referenced by schemaId and
          schemaVersion.
        additionalProperties:
          type: object
      externalDataSources:
        type: array
        description: >-
          Links to the sources of data (e.g. one source might be a CRM) that
          contributed data to this record.  Read-only, and only populated when
          requested via expand param.
        readOnly: true
        items:
          $ref: '#/definitions/ExternalDataSource'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  FacebookId:
    type: object
    properties:
      ids:
        type: array
        description: >-
          The set of scopedIds that this person has. Each scopedId is specific
          to a page or app that the user interacts with.
        uniqueItems: true
        items:
          $ref: '#/definitions/FacebookScopedId'
      displayName:
        type: string
        description: >-
          The displayName of this person's Facebook account. Roughly translates
          to user.first_name + ' ' + user.last_name in the Facebook API.
    description: User information for a Facebook user interacting with a page or app
  FacebookScopedId:
    type: object
    properties:
      scopedId:
        type: string
        description: The unique page/app-specific scopedId for the user
    description: Scoped ID for a Facebook user interacting with a page or app
  InstagramId:
    type: object
    properties:
      ids:
        type: array
        description: >-
          The set of scopedIds that this person has. Each scopedId is specific
          to an Instagram page or app that the user interacts with.
        uniqueItems: true
        items:
          $ref: '#/definitions/InstagramScopedId'
      displayName:
        type: string
        description: The displayName of the person who owns this Instagram account
    description: User information for an Instagram account
  InstagramScopedId:
    type: object
    properties:
      scopedId:
        type: string
        description: The unique page/app-specific scopedId for the user
    description: Scoped ID for an Instagram user interacting with a page or app
  JsonSchemaDocument:
    type: object
    properties:
      id:
        type: string
      $schema:
        type: string
      title:
        type: string
      description:
        type: string
      type:
        type: string
      required:
        type: array
        items:
          type: string
      properties:
        type: object
        additionalProperties:
          type: object
      additionalProperties:
        type: object
    description: A JSON Schema document.
  LineId:
    type: object
    properties:
      ids:
        type: array
        description: >-
          The set of Line userIds that this person has. Each userId is specific
          to the Line channel that the user interacts with.
        uniqueItems: true
        items:
          $ref: '#/definitions/LineUserId'
      displayName:
        type: string
        description: The displayName of this person's account in Line
    description: User information for a Line account
  LineUserId:
    type: object
    properties:
      userId:
        type: string
        description: The unique channel-specific userId for the user
    description: Channel-specific User ID for Line accounts
  MergeOperation:
    type: object
    properties:
      sourceContact:
        description: The source contact for the merge operation
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      targetContact:
        description: The target contact for the merge operation
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      resultingContact:
        description: The contact created as a result of the merge operation
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
  OrgUser:
    type: object
    required:
      - version
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      chat:
        $ref: '#/definitions/Chat'
      department:
        type: string
      email:
        type: string
      primaryContactInfo:
        type: array
        description: Auto populated from addresses.
        readOnly: true
        items:
          $ref: '#/definitions/Contact'
      addresses:
        type: array
        description: Email addresses and phone numbers for this user
        items:
          $ref: '#/definitions/Contact'
      state:
        type: string
        description: The current state for this user.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      title:
        type: string
      username:
        type: string
      manager:
        $ref: '#/definitions/User'
      images:
        type: array
        items:
          $ref: '#/definitions/UserImage'
      version:
        type: integer
        format: int32
        description: >-
          Required when updating a user, this value should be the current
          version of the user.  The current version can be obtained with a GET
          on the user before doing a PATCH.
      certifications:
        type: array
        items:
          type: string
      biography:
        $ref: '#/definitions/Biography'
      employerInfo:
        $ref: '#/definitions/EmployerInfo'
      routingStatus:
        description: ACD routing status
        readOnly: true
        $ref: '#/definitions/RoutingStatus'
      presence:
        description: Active presence
        readOnly: true
        $ref: '#/definitions/UserPresence'
      integrationPresence:
        description: Integration presence
        readOnly: true
        $ref: '#/definitions/UserPresence'
      conversationSummary:
        description: Summary of conversion statistics for conversation types.
        readOnly: true
        $ref: '#/definitions/UserConversationSummary'
      outOfOffice:
        description: Determine if out of office is enabled
        readOnly: true
        $ref: '#/definitions/OutOfOffice'
      geolocation:
        description: Current geolocation position
        readOnly: true
        $ref: '#/definitions/Geolocation'
      station:
        description: Effective, default, and last station information
        readOnly: true
        $ref: '#/definitions/UserStations'
      authorization:
        description: Roles and permissions assigned to the user
        readOnly: true
        $ref: '#/definitions/UserAuthorization'
      profileSkills:
        type: array
        description: Profile skills possessed by the user
        readOnly: true
        items:
          type: string
      locations:
        type: array
        description: The user placement at each site location.
        readOnly: true
        items:
          $ref: '#/definitions/Location'
      groups:
        type: array
        description: The groups the user is a member of
        readOnly: true
        items:
          $ref: '#/definitions/Group'
      team:
        description: The team the user is a member of
        readOnly: true
        $ref: '#/definitions/Team'
      skills:
        type: array
        description: Routing (ACD) skills possessed by the user
        readOnly: true
        items:
          $ref: '#/definitions/UserRoutingSkill'
      languages:
        type: array
        description: Routing (ACD) languages possessed by the user
        readOnly: true
        items:
          $ref: '#/definitions/UserRoutingLanguage'
      acdAutoAnswer:
        type: boolean
        description: acd auto answer
      languagePreference:
        type: string
        description: preferred language by the user
        readOnly: true
      lastTokenIssued:
        $ref: '#/definitions/OAuthLastTokenIssued'
      dateLastLogin:
        type: string
        format: date-time
        description: >-
          The last time the user logged in using username and password. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      organization:
        $ref: '#/definitions/Organization'
  PhoneNumber:
    type: object
    properties:
      display:
        type: string
      extension:
        type: integer
        format: int64
      acceptsSMS:
        type: boolean
      userInput:
        type: string
      e164:
        type: string
      countryCode:
        type: string
  Ticker:
    type: object
    required:
      - exchange
      - symbol
    properties:
      symbol:
        type: string
        description: >-
          The ticker symbol for this organization. Example: ININ, AAPL, MSFT,
          etc.
      exchange:
        type: string
        description: >-
          The exchange for this ticker symbol. Examples: NYSE, FTSE, NASDAQ,
          etc.
  TrusteeAuthorization:
    type: object
    properties:
      permissions:
        type: array
        description: Permissions that the trustee user has in the trustor organization
        readOnly: true
        items:
          type: string
  Trustor:
    type: object
    required:
      - enabled
    properties:
      id:
        type: string
        description: Organization Id for this trust.
        readOnly: true
      enabled:
        type: boolean
        description: >-
          If disabled no trustee user will have access, even if they were
          previously added.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date Trust was created. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      createdBy:
        description: User that created trust.
        readOnly: true
        $ref: '#/definitions/OrgUser'
      organization:
        description: Organization associated with this trust.
        readOnly: true
        $ref: '#/definitions/Organization'
      authorization:
        description: Authorization for the trustee user has in this trustor organization
        readOnly: true
        $ref: '#/definitions/TrusteeAuthorization'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TwitterId:
    type: object
    properties:
      id:
        type: string
        description: twitter user.id_str
      name:
        type: string
        description: twitter user.name
      screenName:
        type: string
        description: twitter user.screen_name
      verified:
        type: boolean
        description: whether this data has been verified using the twitter API
        readOnly: true
      profileUrl:
        type: string
        description: url of user's twitter profile
        readOnly: true
    description: User information for a twitter account
  WhatsAppId:
    type: object
    properties:
      phoneNumber:
        description: The phone number associated with this WhatsApp account
        $ref: '#/definitions/PhoneNumber'
      displayName:
        type: string
        description: The displayName of this person's account in WhatsApp
    description: User information for a WhatsApp account
  BulkContactsRequest:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ExternalContact'
  BulkDeleteResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/BulkResponseResultVoidEntity'
      errorCount:
        type: integer
        format: int32
      errorIndexes:
        type: array
        items:
          type: integer
          format: int32
  BulkErrorEntity:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      status:
        type: integer
        format: int32
      retryable:
        type: boolean
      entity:
        $ref: '#/definitions/Entity'
      details:
        type: array
        items:
          $ref: '#/definitions/BulkErrorDetail'
  BulkResponseResultVoidEntity:
    type: object
    properties:
      id:
        type: string
      success:
        type: boolean
      entity:
        $ref: '#/definitions/Void'
      error:
        $ref: '#/definitions/BulkErrorEntity'
  Void:
    type: object
  BulkIdsRequest:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WritableEntity'
  WritableEntity:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
  BulkFetchContactsResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/BulkResponseResultExternalContactEntity'
      errorCount:
        type: integer
        format: int32
      errorIndexes:
        type: array
        items:
          type: integer
          format: int32
  BulkResponseResultExternalContactEntity:
    type: object
    properties:
      id:
        type: string
      success:
        type: boolean
      entity:
        $ref: '#/definitions/ExternalContact'
      error:
        $ref: '#/definitions/BulkErrorEntity'
  BulkErrorNote:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      status:
        type: integer
        format: int32
      retryable:
        type: boolean
      entity:
        $ref: '#/definitions/Note'
      details:
        type: array
        items:
          $ref: '#/definitions/BulkErrorDetail'
  BulkNotesResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/BulkResponseResultNoteNote'
      errorCount:
        type: integer
        format: int32
      errorIndexes:
        type: array
        items:
          type: integer
          format: int32
  BulkResponseResultNoteNote:
    type: object
    properties:
      id:
        type: string
      success:
        type: boolean
      entity:
        $ref: '#/definitions/Note'
      error:
        $ref: '#/definitions/BulkErrorNote'
  Note:
    type: object
    required:
      - createdBy
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      entityId:
        type: string
        description: >-
          The id of the contact or organization to which this note refers. This
          only needs to be set for input when using the Bulk APIs.
      entityType:
        type: string
        description: >-
          This is only need to be set when using Bulk API. Using any other value
          than contact or organization will result in null being used.
        enum:
          - contact
          - organization
      noteText:
        type: string
      modifyDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: >-
          When creating or updating a note, only User.id is required. User
          object is fully populated when expanding a note.
        $ref: '#/definitions/User'
      externalDataSources:
        type: array
        description: >-
          Links to the sources of data (e.g. one source might be a CRM) that
          contributed data to this record.  Read-only, and only populated when
          requested via expand param.
        readOnly: true
        items:
          $ref: '#/definitions/ExternalDataSource'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BulkNotesRequest:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Note'
  BulkFetchNotesResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/BulkResponseResultNoteEntity'
      errorCount:
        type: integer
        format: int32
      errorIndexes:
        type: array
        items:
          type: integer
          format: int32
  BulkResponseResultNoteEntity:
    type: object
    properties:
      id:
        type: string
      success:
        type: boolean
      entity:
        $ref: '#/definitions/Note'
      error:
        $ref: '#/definitions/BulkErrorEntity'
  BulkFetchOrganizationsResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/BulkResponseResultExternalOrganizationEntity'
      errorCount:
        type: integer
        format: int32
      errorIndexes:
        type: array
        items:
          type: integer
          format: int32
  BulkResponseResultExternalOrganizationEntity:
    type: object
    properties:
      id:
        type: string
      success:
        type: boolean
      entity:
        $ref: '#/definitions/ExternalOrganization'
      error:
        $ref: '#/definitions/BulkErrorEntity'
  BulkErrorExternalOrganization:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      status:
        type: integer
        format: int32
      retryable:
        type: boolean
      entity:
        $ref: '#/definitions/ExternalOrganization'
      details:
        type: array
        items:
          $ref: '#/definitions/BulkErrorDetail'
  BulkOrganizationsResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: >-
            #/definitions/BulkResponseResultExternalOrganizationExternalOrganization
      errorCount:
        type: integer
        format: int32
      errorIndexes:
        type: array
        items:
          type: integer
          format: int32
  BulkResponseResultExternalOrganizationExternalOrganization:
    type: object
    properties:
      id:
        type: string
      success:
        type: boolean
      entity:
        $ref: '#/definitions/ExternalOrganization'
      error:
        $ref: '#/definitions/BulkErrorExternalOrganization'
  BulkOrganizationsRequest:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ExternalOrganization'
  BulkErrorRelationship:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      status:
        type: integer
        format: int32
      retryable:
        type: boolean
      entity:
        $ref: '#/definitions/Relationship'
      details:
        type: array
        items:
          $ref: '#/definitions/BulkErrorDetail'
  BulkRelationshipsResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/BulkResponseResultRelationshipRelationship'
      errorCount:
        type: integer
        format: int32
      errorIndexes:
        type: array
        items:
          type: integer
          format: int32
  BulkResponseResultRelationshipRelationship:
    type: object
    properties:
      id:
        type: string
      success:
        type: boolean
      entity:
        $ref: '#/definitions/Relationship'
      error:
        $ref: '#/definitions/BulkErrorRelationship'
  Relationship:
    type: object
    required:
      - externalOrganization
      - relationship
      - user
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      user:
        description: >-
          The user associated with the external organization. When creating or
          updating a relationship, only User.id is required. User object is
          fully populated when expanding a note.
        $ref: '#/definitions/User'
      externalOrganization:
        description: The external organization this relationship is attached to
        $ref: '#/definitions/ExternalOrganization'
      relationship:
        type: string
        description: >-
          The relationship or role of the user to this external
          organization.Examples: Account Manager, Sales Engineer, Implementation
          Consultant
      externalDataSources:
        type: array
        description: >-
          Links to the sources of data (e.g. one source might be a CRM) that
          contributed data to this record.  Read-only, and only populated when
          requested via expand param.
        readOnly: true
        items:
          $ref: '#/definitions/ExternalDataSource'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BulkRelationshipsRequest:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Relationship'
  BulkFetchRelationshipsResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/BulkResponseResultRelationshipEntity'
      errorCount:
        type: integer
        format: int32
      errorIndexes:
        type: array
        items:
          type: integer
          format: int32
  BulkResponseResultRelationshipEntity:
    type: object
    properties:
      id:
        type: string
      success:
        type: boolean
      entity:
        $ref: '#/definitions/Relationship'
      error:
        $ref: '#/definitions/BulkErrorEntity'
  NoteListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Note'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      partialResults:
        type: boolean
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ContactIdentifier:
    type: object
    required:
      - type
      - value
    properties:
      type:
        type: string
        description: The type of this identifier
        enum:
          - SocialLine
          - SocialFacebook
          - SocialTwitter
          - SocialWhatsapp
          - Email
          - Phone
          - Cookie
      value:
        type: string
        description: The string value of the identifier. Will vary in syntax by type.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  IdentifierClaimRequest:
    type: object
    required:
      - identifier
      - operation
    properties:
      operation:
        type: string
        description: The operation to perform claim/release
        enum:
          - Claim
          - Release
      identifier:
        description: The identifier that should be claimed/released from a contact
        $ref: '#/definitions/ContactIdentifier'
  DataSchemaListing:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/DataSchema'
      selfUri:
        type: string
        format: uri
  MergeRequest:
    type: object
    required:
      - sourceContactId
      - targetContactId
    properties:
      sourceContactId:
        type: string
        description: The ID of the source contact for the merge operation
      targetContactId:
        type: string
        description: The ID of the target contact for the merge operation
  ContactListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ExternalContact'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      partialResults:
        type: boolean
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CursorContactListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ExternalContact'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
      cursors:
        description: The cursor that points to the next set of entities being returned.
        $ref: '#/definitions/Cursors'
  Cursors:
    type: object
    properties:
      before:
        type: string
      after:
        type: string
  ConversationAssociation:
    type: object
    required:
      - communicationId
      - conversationId
      - mediaType
    properties:
      externalContactId:
        type: string
        description: >-
          An external contact ID.  If not supplied, implies the conversation
          should be disassociated with any external contact.
      conversationId:
        type: string
        description: Conversation ID
      communicationId:
        type: string
        description: Communication ID
      mediaType:
        type: string
        description: Media type
        enum:
          - CALL
          - CALLBACK
          - CHAT
          - COBROWSE
          - EMAIL
          - MESSAGE
          - SOCIAL_EXPRESSION
          - VIDEO
          - SCREENSHARE
  RelationshipListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Relationship'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      partialResults:
        type: boolean
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ExternalOrganizationTrustorLink:
    type: object
    properties:
      externalOrganizationId:
        type: string
        description: >-
          The id of a PureCloud External Organization entity in the External
          Contacts system that will be used to represent the trustor org
      trustorOrgId:
        type: string
        description: >-
          The id of a PureCloud organization that has granted trust to this
          PureCloud organization
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      externalOrganizationUri:
        type: string
        format: uri
        description: >-
          The URI for the External Organization that is linked to the trustor
          org
        readOnly: true
  ExternalOrganizationListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ExternalOrganization'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      partialResults:
        type: boolean
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CursorOrganizationListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ExternalOrganization'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
      cursors:
        description: The cursor that points to the next set of entities being returned.
        $ref: '#/definitions/Cursors'
  AchievedOutcome:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  AssignedSegment:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Browser:
    type: object
    required:
      - family
      - version
    properties:
      family:
        type: string
        description: Browser family (e.g. Chrome, Safari, Firefox).
      version:
        type: string
        description: Browser version (e.g. 68.0.3440.84).
      lang:
        type: string
        description: Language the browser is set to. Must conform to BCP 47.
      fingerprint:
        type: string
        description: Fingerprint generated by looking at the individual browser features.
      isMobile:
        type: boolean
        description: Flag that is true for mobile devices.
      viewHeight:
        type: integer
        format: int32
        description: Browser's viewport height.
      viewWidth:
        type: integer
        format: int32
        description: Browser's viewport width.
      featuresFlash:
        type: boolean
        description: Whether Flash is installed.
      featuresJava:
        type: boolean
        description: Whether Java is installed.
      featuresPdf:
        type: boolean
        description: Whether the browser recognizes PDFs.
      featuresWebrtc:
        type: boolean
        description: Whether WebRTC is supported.
  ConnectedQueue:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ConnectedUser:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ConversationChannel:
    type: object
    properties:
      type:
        type: string
        description: The type or category of this channel.
        enum:
          - Unknown
          - Call
          - Callback
          - Email
          - GenericObject
          - Messaging
          - Social
          - Webchat
          - Voice
          - Chat
          - Cobrowse
          - Video
          - Screenshare
          - Message
      messageType:
        type: string
        description: Message type for messaging conversations.
        enum:
          - Unknown
          - Sms
          - Twitter
          - Facebook
          - Line
          - WhatsApp
          - WebMessaging
          - Open
          - Instagram
      platform:
        type: string
        description: >-
          The source provider for the conversation (e.g. Edge, PureCloud
          Messaging, PureCloud Email).
  ConversationUserDisposition:
    type: object
    properties:
      code:
        type: string
        description: User-defined wrap-up code for the conversation.
      notes:
        type: string
        description: Text entered by the user to describe the call or disposition.
      user:
        description: The user that wrapped up the conversation.
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
  CustomEventAttribute:
    type: object
    required:
      - dataType
      - value
    properties:
      dataType:
        type: string
        description: The data type of the custom attribute.
      value:
        type: string
        description: The value of the custom attribute.
  CustomEventAttributeList:
    type: object
    required:
      - dataType
      - values
    properties:
      dataType:
        type: string
        description: The data type of the custom attributes.
      values:
        type: array
        description: The list of custom event attribute values.
        items:
          type: string
  Device:
    type: object
    required:
      - category
      - osFamily
      - osVersion
      - type
    properties:
      category:
        type: string
        description: Device category.
        enum:
          - desktop
          - mobile
          - tablet
          - other
      type:
        type: string
        description: Device type (e.g. iPad, iPhone, Other).
      isMobile:
        type: boolean
        description: Flag that is true for mobile devices.
      screenHeight:
        type: integer
        format: int32
        description: Device's screen height.
      screenWidth:
        type: integer
        format: int32
        description: Device's screen width.
      fingerprint:
        type: string
        description: Fingerprint generated by looking at the individual device features.
      osFamily:
        type: string
        description: Operating system family.
      osVersion:
        type: string
        description: Operating system version.
  JourneyApp:
    type: object
    required:
      - buildNumber
      - name
      - namespace
      - version
    properties:
      name:
        type: string
        description: Name of the application (e.g. mybankingapp).
      namespace:
        type: string
        description: Namespace of the application (e.g. com.genesys.bancodinero).
      version:
        type: string
        description: Version of the application (e.g. 5.9.27).
      buildNumber:
        type: string
        description: Build number of the application (e.g. 701).
  JourneyCampaign:
    type: object
    properties:
      content:
        type: string
        description: Differentiate ads or links that point to the same URL (e.g. textlink).
      medium:
        type: string
        description: Identify a medium such as email or cost-per-click (e.g. CPC).
      name:
        type: string
        description: >-
          Identify a specific product promotion or strategic campaign (e.g.
          320banner).
      source:
        type: string
        description: >-
          Identify a search engine, newsletter name, or other source (e.g.
          Google).
      term:
        type: string
        description: Note the keywords for this ad (e.g. running+shoes).
      clickId:
        type: string
        description: >-
          The click ID (unique number that is generated when a potential
          customer clicks on an affiliate link).
      network:
        type: string
        description: The ad network to which the click ID belongs.
  JourneyGeolocation:
    type: object
    properties:
      country:
        type: string
        description: Geolocation's ISO 3166-1 alpha-2 country code.
      countryName:
        type: string
        description: Geolocation's country name.
      latitude:
        type: number
        format: double
        description: Geolocation's latitude.
      longitude:
        type: number
        format: double
        description: Geolocation's longitude.
      locality:
        type: string
        description: Geolocation's locality or city.
      postalCode:
        type: string
        description: Geolocation's postal code or ZIP code.
      region:
        type: string
        description: Geolocation's ISO-3166-2 region code.
      regionName:
        type: string
        description: Geolocation's region name.
      source:
        type: string
        description: The source that was used to determine the geolocation information.
      timezone:
        type: string
        description: Geolocation's timezone.
  JourneyPage:
    type: object
    required:
      - domain
      - hostname
      - pathname
      - url
    properties:
      url:
        type: string
        description: The page URL.
      title:
        type: string
        description: Title of the page.
      domain:
        type: string
        description: Domain of the page's URL.
      fragment:
        type: string
        description: Fragment or hash of the page's URL.
      hostname:
        type: string
        description: Hostname of the page's URL.
      keywords:
        type: string
        description: Keywords from the HTML {@code <meta>} tag of the page.
      lang:
        type: string
        description: >-
          ISO 639-1 language code for the page as defined in the {@code <html>}
          tag.
      pathname:
        type: string
        description: Path name of the page for the event.
      queryString:
        type: string
        description: Query string that is passed to the page in the current event.
      breadcrumb:
        type: array
        description: Hierarchy of the current page in relation to the website's structure.
        items:
          type: string
  NetworkConnectivity:
    type: object
    required:
      - bluetoothEnabled
      - cellularEnabled
      - wifiEnabled
    properties:
      carrier:
        type: string
        description: The name of the network carrier.
      bluetoothEnabled:
        type: boolean
        description: Whether Bluetooth is enabled.
      cellularEnabled:
        type: boolean
        description: Whether Cellular is enabled.
      wifiEnabled:
        type: boolean
        description: Whether Wi-Fi is enabled.
  OutcomeAchievement:
    type: object
    properties:
      outcome:
        description: The outcome that was achieved.
        $ref: '#/definitions/AchievedOutcome'
      achievedDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the outcome was achieved. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  Referrer:
    type: object
    required:
      - domain
      - hostname
      - pathname
      - url
    properties:
      url:
        type: string
        description: Referrer URL.
      domain:
        type: string
        description: Referrer URL domain.
      hostname:
        type: string
        description: Referrer URL hostname.
      keywords:
        type: string
        description: Referrer keywords.
      pathname:
        type: string
        description: Referrer URL pathname.
      queryString:
        type: string
        description: Referrer URL querystring.
      fragment:
        type: string
        description: Referrer URL fragment.
      name:
        type: string
        description: Name of referrer (e.g. Yahoo!, Google, InfoSpace).
      medium:
        type: string
        description: Type of referrer (e.g. search, social).
        enum:
          - internal
          - search
          - social
          - email
          - unknown
          - paid
  SdkLibrary:
    type: object
    required:
      - name
      - version
    properties:
      name:
        type: string
        description: The name of the SDK.
      version:
        type: string
        description: The version of the SDK.
  Session:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      customerId:
        type: string
        description: >-
          Primary identifier of the customer in the source where the events for
          the session originate from.
      customerIdType:
        type: string
        description: Type of source customer identifier (e.g. cookie, email, phone).
      type:
        type: string
        description: >-
          Session types indicate the type or category of sessions (e.g. web,
          app).
      externalId:
        type: string
        description: >-
          Unique identifier in the external system where the events for the
          session originate from.
      externalUrl:
        type: string
        description: >-
          A URL that identifies an external system-of-record resource that may
          have more detailed information on the session.
      shortId:
        type: string
        description: Shortened numeric identifier of 4-6 digits.
      outcomeAchievements:
        type: array
        description: List of the outcome achievements by the customer in this session.
        items:
          $ref: '#/definitions/OutcomeAchievement'
      segmentAssignments:
        type: array
        description: List of the segment assignments to the customer in this session.
        items:
          $ref: '#/definitions/SessionSegmentAssignment'
      attributes:
        type: object
        description: Attributes projected from the session's event stream.
        additionalProperties:
          $ref: '#/definitions/CustomEventAttribute'
      attributeLists:
        type: object
        description: List-type attributes projected from the session's event stream.
        additionalProperties:
          $ref: '#/definitions/CustomEventAttributeList'
      browser:
        description: Customer's browser.
        $ref: '#/definitions/Browser'
      device:
        description: Customer's device.
        $ref: '#/definitions/Device'
      geolocation:
        description: Customer's geolocation.
        $ref: '#/definitions/JourneyGeolocation'
      ipAddress:
        type: string
        description: Customer's IP address.
      ipOrganization:
        type: string
        description: Customer's IP-based organization or ISP name.
      lastPage:
        description: The webpage where the customer's last web interaction occurred.
        $ref: '#/definitions/JourneyPage'
      mktCampaign:
        description: Marketing / traffic source information.
        $ref: '#/definitions/JourneyCampaign'
      referrer:
        description: >-
          Identifies the page URL that originally generated the request for the
          current page being viewed.
        $ref: '#/definitions/Referrer'
      searchTerms:
        type: array
        description: Search terms associated with the session.
        items:
          type: string
      userAgentString:
        type: string
        description: String identifying the user agent.
      durationInSeconds:
        type: integer
        format: int32
        description: >-
          Indicates how long the session has been active (valid for an
          individual device).
      eventCount:
        type: integer
        format: int32
        description: The count of all events performed during the session.
      pageviewCount:
        type: integer
        format: int32
        description: The count of all pageviews performed during the session.
      screenviewCount:
        type: integer
        format: int32
        description: The count of all screenviews performed during the session.
      lastEvent:
        description: Information about the most recent event in this session.
        $ref: '#/definitions/SessionLastEvent'
      lastConnectedQueue:
        description: The last queue connected to this session.
        $ref: '#/definitions/ConnectedQueue'
      lastConnectedUser:
        description: The last user connected to this session.
        $ref: '#/definitions/ConnectedUser'
      lastUserDisposition:
        description: The last user disposition connected to this session.
        $ref: '#/definitions/ConversationUserDisposition'
      conversationChannels:
        type: array
        description: Represents the channels used for this conversation.
        items:
          $ref: '#/definitions/ConversationChannel'
      originatingDirection:
        type: string
        description: The original direction of the conversation.
        enum:
          - Unknown
          - Inbound
          - Outbound
      conversationSubject:
        type: string
        description: The subject for the conversation, for example an email subject.
      lastUserDisconnectType:
        type: string
        description: Disconnect reason for the last user connected to the conversation.
        enum:
          - Unknown
          - Endpoint
          - Client
          - System
          - Transfer
          - Error
          - Peer
          - Other
          - Spam
          - Timeout
          - TransportFailure
          - ConferenceTransfer
          - ConsultTransfer
          - ForwardTransfer
          - NoAnswerTransfer
          - NotAvailableTransfer
          - Uncallable
      lastAcdOutcome:
        type: string
        description: Last ACD outcome for the conversation.
        enum:
          - Unknown
          - Abandon
          - Answered
          - FlowOut
      authenticated:
        type: boolean
        description: Indicates whether or not the session is authenticated.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      createdDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the session was created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endedDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the session was ended. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      externalContact:
        description: The external contact associated with this session.
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      awayDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the visitor should be considered as away.
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      idleDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the visitor should be considered as idle.
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversation:
        description: The conversation for this session.
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
  SessionLastEvent:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      eventName:
        type: string
        description: The name of the event.
      createdDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the event was published. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  SessionListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Session'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  SessionSegmentAssignment:
    type: object
    properties:
      segment:
        description: The segment that was assigned.
        $ref: '#/definitions/AssignedSegment'
      assignedDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the segment was assigned. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  CursorNoteListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Note'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
      cursors:
        description: The cursor that points to the next set of entities being returned.
        $ref: '#/definitions/Cursors'
  CursorRelationshipListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Relationship'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
      cursors:
        description: The cursor that points to the next set of entities being returned.
        $ref: '#/definitions/Cursors'
  ReverseWhitepagesLookupResult:
    type: object
    properties:
      contacts:
        type: array
        items:
          $ref: '#/definitions/ExternalContact'
      externalOrganizations:
        type: array
        items:
          $ref: '#/definitions/ExternalOrganization'
  DomainEntityListingQueryResult:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/QueryResult'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  FacetEntry:
    type: object
    properties:
      attribute:
        $ref: '#/definitions/TermAttribute'
      statistics:
        $ref: '#/definitions/FacetStatistics'
      other:
        type: integer
        format: int64
      total:
        type: integer
        format: int64
      missing:
        type: integer
        format: int64
      termCount:
        type: integer
        format: int32
      termType:
        type: string
        enum:
          - TERM
          - NUMBERRANGE
          - NUMBERHISTOGRAM
          - DATERANGE
          - DATEHISTOGRAM
          - ID
      terms:
        type: array
        items:
          $ref: '#/definitions/FacetTerm'
  FacetKeyAttribute:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      count:
        type: integer
        format: int32
  FacetStatistics:
    type: object
    properties:
      count:
        type: integer
        format: int64
      min:
        type: number
        format: double
      max:
        type: number
        format: double
      mean:
        type: number
        format: double
      stdDeviation:
        type: number
        format: double
      dateMin:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateMax:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  FacetTerm:
    type: object
    properties:
      term:
        type: string
      key:
        type: integer
        format: int64
      id:
        type: string
      name:
        type: string
      count:
        type: integer
        format: int64
      time:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  QueryFacetInfo:
    type: object
    properties:
      attributes:
        type: array
        items:
          $ref: '#/definitions/FacetKeyAttribute'
      facets:
        type: array
        items:
          $ref: '#/definitions/FacetEntry'
  QueryResult:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      body:
        $ref: '#/definitions/DomainEntity'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  QueryResults:
    type: object
    properties:
      results:
        $ref: '#/definitions/DomainEntityListingQueryResult'
      facetInfo:
        $ref: '#/definitions/QueryFacetInfo'
  TermAttribute:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
        enum:
          - NUMBER
          - STRING
          - DATE
          - BOOLEAN
          - LIST
  ContentAttributeFilterItem:
    type: object
    properties:
      id:
        type: string
      operator:
        type: string
        enum:
          - IN
          - RANGE
          - EQUALS
          - NOTEQUALS
          - LESSTHAN
          - LESSTHANEQUALS
          - GREATERTHAN
          - GREATERTHANEQUALS
          - CONTAINS
      values:
        type: array
        items:
          type: string
  ContentFacetFilterItem:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
        enum:
          - NUMBER
          - STRING
          - DATE
          - BOOLEAN
          - LIST
      operator:
        type: string
        enum:
          - IN
          - RANGE
          - EQUALS
          - NOTEQUALS
          - LESSTHAN
          - LESSTHANEQUALS
          - GREATERTHAN
          - GREATERTHANEQUALS
          - CONTAINS
      values:
        type: array
        items:
          type: string
  ContentQueryRequest:
    type: object
    properties:
      queryPhrase:
        type: string
      pageNumber:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
      facetNameRequests:
        type: array
        items:
          type: string
      sort:
        type: array
        items:
          $ref: '#/definitions/ContentSortItem'
      filters:
        type: array
        items:
          $ref: '#/definitions/ContentFacetFilterItem'
      attributeFilters:
        type: array
        items:
          $ref: '#/definitions/ContentAttributeFilterItem'
      includeShares:
        type: boolean
  ContentSortItem:
    type: object
    properties:
      name:
        type: string
      ascending:
        type: boolean
  AuditChange:
    type: object
    properties:
      property:
        type: string
      entity:
        $ref: '#/definitions/AuditEntityReference'
      oldValues:
        type: array
        items:
          type: string
      newValues:
        type: array
        items:
          type: string
  AuditEntityReference:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      selfUri:
        type: string
        format: uri
      type:
        type: string
        enum:
          - ATTRIBUTE
          - ATTRIBUTE_GROUP_INSTANCE
          - DOCUMENT
          - DOWNLOAD
          - FAX
          - GROUP
          - RECORDING
          - TAG
          - WORKSPACE
          - USER
          - PUBLIC
      action:
        type: string
  DocumentAudit:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      user:
        $ref: '#/definitions/DomainEntityRef'
      workspace:
        $ref: '#/definitions/DomainEntityRef'
      transactionId:
        type: string
      transactionInitiator:
        type: boolean
      application:
        type: string
      serviceName:
        type: string
      level:
        type: string
        enum:
          - USER
          - SYSTEM
      timestamp:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      status:
        type: string
        enum:
          - SUCCESS
          - FAILURE
          - WARNING
      actionContext:
        type: string
        enum:
          - CREATE
          - READ
          - UPDATE
          - DELETE
          - DOWNLOAD
          - VIEW
          - UPLOAD
          - SAVE
          - MOVE
          - COPY
          - ADD
          - REMOVE
          - RECEIVE
          - CONVERT
          - FAX
          - CREATE_COVERPAGE
          - USER_ADD
          - USER_REMOVE
          - MEMBER_ADD
          - MEMBER_REMOVE
          - MEMBER_UPDATE
          - TAG_ADD
          - TAG_REMOVE
          - TAG_UPDATE
          - ATTRIBUTE_ADD
          - ATTRIBUTE_REMOVE
          - ATTRIBUTE_UPDATE
          - ATTRIBUTE_GROUP_INSTANCE_ADD
          - ATTRIBUTE_GROUP_INSTANCE_REMOVE
          - ATTRIBUTE_GROUP_INSTANCE_UPDATE
          - INDEX_SAVE
          - INDEX_DELETE
          - INDEX_CREATE
          - FILE_SAVE
          - FILE_DELETE
          - FILE_READ
          - THUMBNAIL_CREATE
          - TEXT_EXTRACT
          - SHARE_ADD
          - SHARE_REMOVE
          - VERSION_CREATE
      action:
        type: string
        enum:
          - CREATE
          - READ
          - UPDATE
          - DELETE
          - DOWNLOAD
          - VIEW
          - UPLOAD
          - SAVE
          - MOVE
          - COPY
          - ADD
          - REMOVE
          - RECEIVE
          - CONVERT
          - FAX
          - CREATE_COVERPAGE
          - USER_ADD
          - USER_REMOVE
          - MEMBER_ADD
          - MEMBER_REMOVE
          - MEMBER_UPDATE
          - TAG_ADD
          - TAG_REMOVE
          - TAG_UPDATE
          - ATTRIBUTE_ADD
          - ATTRIBUTE_REMOVE
          - ATTRIBUTE_UPDATE
          - ATTRIBUTE_GROUP_INSTANCE_ADD
          - ATTRIBUTE_GROUP_INSTANCE_REMOVE
          - ATTRIBUTE_GROUP_INSTANCE_UPDATE
          - INDEX_SAVE
          - INDEX_DELETE
          - INDEX_CREATE
          - FILE_SAVE
          - FILE_DELETE
          - FILE_READ
          - THUMBNAIL_CREATE
          - TEXT_EXTRACT
          - SHARE_ADD
          - SHARE_REMOVE
          - VERSION_CREATE
      entity:
        $ref: '#/definitions/AuditEntityReference'
      changes:
        type: array
        items:
          $ref: '#/definitions/AuditChange'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DocumentAuditEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DocumentAudit'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  DocumentThumbnail:
    type: object
    properties:
      resolution:
        type: string
      imageUri:
        type: string
      height:
        type: integer
        format: int32
      width:
        type: integer
        format: int32
  DownloadResponse:
    type: object
    properties:
      contentLocationUri:
        type: string
      imageUri:
        type: string
      thumbnails:
        type: array
        items:
          $ref: '#/definitions/DocumentThumbnail'
  ReplaceResponse:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      changeNumber:
        type: integer
        format: int32
      uploadStatus:
        $ref: '#/definitions/DomainEntityRef'
      uploadDestinationUri:
        type: string
        format: uri
      uploadMethod:
        type: string
        enum:
          - SINGLE_PUT
          - MULTIPART_POST
  ReplaceRequest:
    type: object
    properties:
      changeNumber:
        type: integer
        format: int32
      name:
        type: string
      authToken:
        type: string
  Attribute:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The attribute name.
      version:
        type: integer
        format: int32
      description:
        type: string
      createdBy:
        $ref: '#/definitions/DomainEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedBy:
        $ref: '#/definitions/DomainEntityRef'
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Document:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      changeNumber:
        type: integer
        format: int32
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateUploaded:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      contentUri:
        type: string
        format: uri
      workspace:
        $ref: '#/definitions/DomainEntityRef'
      createdBy:
        $ref: '#/definitions/DomainEntityRef'
      uploadedBy:
        $ref: '#/definitions/DomainEntityRef'
      sharingUri:
        type: string
        format: uri
      contentType:
        type: string
      contentLength:
        type: integer
        format: int64
      systemType:
        type: string
        enum:
          - DOCUMENT
          - FAX
          - RECORDING
      filename:
        type: string
      pageCount:
        type: integer
        format: int64
      read:
        type: boolean
      callerAddress:
        type: string
      receiverAddress:
        type: string
      tags:
        type: array
        items:
          type: string
      tagValues:
        type: array
        items:
          $ref: '#/definitions/TagValue'
      attributes:
        type: array
        items:
          $ref: '#/definitions/DocumentAttribute'
      thumbnails:
        type: array
        items:
          $ref: '#/definitions/DocumentThumbnail'
      uploadStatus:
        $ref: '#/definitions/DomainEntityRef'
      uploadDestinationUri:
        type: string
        format: uri
      uploadMethod:
        type: string
        enum:
          - SINGLE_PUT
          - MULTIPART_POST
      lockInfo:
        $ref: '#/definitions/LockInfo'
      acl:
        type: array
        description: A list of permitted action rights for the user making the request
        items:
          type: string
      sharingStatus:
        type: string
        enum:
          - NONE
          - LIMITED
          - PUBLIC
      downloadSharingUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DocumentAttribute:
    type: object
    properties:
      attribute:
        $ref: '#/definitions/Attribute'
      values:
        type: array
        items:
          type: string
  LockInfo:
    type: object
    properties:
      lockedBy:
        $ref: '#/definitions/DomainEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateExpires:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      action:
        type: string
        enum:
          - UPDATE
          - DELETE
          - COPY
          - MOVE
          - REPLACE
          - THUMBNAIL
          - TEXT_EXTRACTION
  TagValue:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The workspace tag name.
      inUse:
        type: boolean
      acl:
        type: array
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DocumentUpdate:
    type: object
    required:
      - name
    properties:
      changeNumber:
        type: integer
        format: int32
      name:
        type: string
        description: The name of the document
      read:
        type: boolean
      addTags:
        type: array
        items:
          type: string
      removeTags:
        type: array
        items:
          type: string
      addTagIds:
        type: array
        items:
          type: string
      removeTagIds:
        type: array
        items:
          type: string
      updateAttributes:
        type: array
        items:
          $ref: '#/definitions/DocumentAttribute'
      removeAttributes:
        type: array
        items:
          type: string
  DocumentUpload:
    type: object
    required:
      - name
      - workspace
    properties:
      name:
        type: string
        description: The name of the document
      workspace:
        description: The workspace the document will be uploaded to
        $ref: '#/definitions/DomainEntityRef'
      tags:
        type: array
        items:
          type: string
      tagIds:
        type: array
        items:
          type: string
  DocumentEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Document'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  AttributeFilterItem:
    type: object
    properties:
      id:
        type: string
      operator:
        type: string
        enum:
          - IN
          - RANGE
          - EQUALS
          - NOTEQUALS
          - LESSTHAN
          - LESSTHANEQUALS
          - GREATERTHAN
          - GREATERTHANEQUALS
          - CONTAINS
      values:
        type: array
        items:
          type: string
  ContentFilterItem:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
        enum:
          - NUMBER
          - STRING
          - DATE
          - BOOLEAN
          - LIST
      operator:
        type: string
        enum:
          - IN
          - RANGE
          - EQUALS
          - NOTEQUALS
          - LESSTHAN
          - LESSTHANEQUALS
          - GREATERTHAN
          - GREATERTHANEQUALS
          - CONTAINS
      values:
        type: array
        items:
          type: string
  QueryRequest:
    type: object
    properties:
      queryPhrase:
        type: string
      pageNumber:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
      facetNameRequests:
        type: array
        items:
          type: string
      sort:
        type: array
        items:
          $ref: '#/definitions/SortItem'
      filters:
        type: array
        items:
          $ref: '#/definitions/ContentFilterItem'
      attributeFilters:
        type: array
        items:
          $ref: '#/definitions/AttributeFilterItem'
      includeShares:
        type: boolean
  SortItem:
    type: object
    properties:
      name:
        type: string
      ascending:
        type: boolean
  SecurityProfile:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      permissions:
        type: array
        uniqueItems: true
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SecurityProfileEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/SecurityProfile'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  Share:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      sharedEntityType:
        type: string
        enum:
          - DOCUMENT
      sharedEntity:
        $ref: '#/definitions/DomainEntityRef'
      memberType:
        type: string
        enum:
          - USER
          - GROUP
          - PUBLIC
      member:
        $ref: '#/definitions/DomainEntityRef'
      sharedBy:
        $ref: '#/definitions/DomainEntityRef'
      workspace:
        $ref: '#/definitions/DomainEntityRef'
      user:
        $ref: '#/definitions/User'
      group:
        $ref: '#/definitions/Group'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SharedResponse:
    type: object
    properties:
      id:
        type: string
      downloadUri:
        type: string
        format: uri
      viewUri:
        type: string
        format: uri
      document:
        $ref: '#/definitions/Document'
      share:
        $ref: '#/definitions/Share'
  CreateShareResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      sharedEntityType:
        type: string
        enum:
          - DOCUMENT
      sharedEntity:
        $ref: '#/definitions/DomainEntityRef'
      memberType:
        type: string
        enum:
          - USER
          - GROUP
          - PUBLIC
      member:
        $ref: '#/definitions/DomainEntityRef'
      sharedBy:
        $ref: '#/definitions/DomainEntityRef'
      workspace:
        $ref: '#/definitions/DomainEntityRef'
      succeeded:
        type: array
        items:
          $ref: '#/definitions/Share'
      failed:
        type: array
        items:
          $ref: '#/definitions/Share'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CreateShareRequest:
    type: object
    required:
      - sharedEntity
      - sharedEntityType
    properties:
      sharedEntityType:
        type: string
        description: The share entity type
        enum:
          - DOCUMENT
      sharedEntity:
        description: The entity that will be shared
        $ref: '#/definitions/SharedEntity'
      memberType:
        type: string
        enum:
          - USER
          - GROUP
          - PUBLIC
      member:
        description: >-
          The member that will have access to this share. Only required if a
          list of members is not provided.
        $ref: '#/definitions/SharedEntity'
      members:
        type: array
        items:
          $ref: '#/definitions/CreateShareRequestMember'
  CreateShareRequestMember:
    type: object
    properties:
      memberType:
        type: string
        enum:
          - USER
          - GROUP
          - PUBLIC
      member:
        $ref: '#/definitions/MemberEntity'
  MemberEntity:
    type: object
    properties:
      id:
        type: string
  SharedEntity:
    type: object
    properties:
      id:
        type: string
  ShareEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Share'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CommandStatus:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      expiration:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      userId:
        type: string
      statusCode:
        type: string
        enum:
          - INPROGRESS
          - COMPLETE
          - ERROR
          - CANCELING
          - CANCELED
      commandType:
        type: string
        enum:
          - UPLOAD
          - COPYDOCUMENT
          - MOVEDOCUMENT
          - DELETEWORKSPACE
          - DELETEDOCUMENT
          - DELETETAG
          - UPDATETAG
          - REINDEX
          - CLEANUP
          - REPLACEDOCUMENT
      document:
        $ref: '#/definitions/Document'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CommandStatusEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CommandStatus'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  TagValueEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/TagValue'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  TagQueryRequest:
    type: object
    properties:
      query:
        type: string
      pageNumber:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
  Usage:
    type: object
    properties:
      types:
        type: array
        items:
          $ref: '#/definitions/UsageItem'
  UsageItem:
    type: object
    properties:
      type:
        type: string
        enum:
          - RECORDING
          - FAX
          - DOCUMENT
          - ALL
      totalDocumentByteCount:
        type: integer
        format: int64
      totalDocumentCount:
        type: integer
        format: int64
  WorkspaceMember:
    type: object
    required:
      - memberType
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      workspace:
        $ref: '#/definitions/DomainEntityRef'
      memberType:
        type: string
        description: The workspace member type.
        enum:
          - USER
          - GROUP
      member:
        $ref: '#/definitions/DomainEntityRef'
      user:
        $ref: '#/definitions/User'
      group:
        $ref: '#/definitions/Group'
      securityProfile:
        $ref: '#/definitions/SecurityProfile'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WorkspaceMemberEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WorkspaceMember'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  Workspace:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The current name of the workspace.
      type:
        type: string
        enum:
          - USER
          - GROUP
      isCurrentUserWorkspace:
        type: boolean
      user:
        $ref: '#/definitions/DomainEntityRef'
      bucket:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      summary:
        $ref: '#/definitions/WorkspaceSummary'
      acl:
        type: array
        items:
          type: string
      description:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WorkspaceSummary:
    type: object
    properties:
      totalDocumentCount:
        type: integer
        format: int64
      totalDocumentByteCount:
        type: integer
        format: int64
  WorkspaceEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Workspace'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  WorkspaceCreate:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: The workspace name
      bucket:
        type: string
      description:
        type: string
  Address:
    type: object
    properties:
      name:
        type: string
        description: >-
          This will be nameRaw if present, or a locality lookup of the address
          field otherwise.
      nameRaw:
        type: string
        description: The name as close to the bits on the wire as possible.
      addressNormalized:
        type: string
        description: >-
          The normalized address. This field is acquired from the Address
          Normalization Table.  The addressRaw could have gone through some
          transformations, such as only using the numeric portion, before being
          run through the Address Normalization Table.
      addressRaw:
        type: string
        description: The address as close to the bits on the wire as possible.
      addressDisplayable:
        type: string
        description: >-
          The displayable address. This field is acquired from the Address
          Normalization Table.  The addressRaw could have gone through some
          transformations, such as only using the numeric portion, before being
          run through the Address Normalization Table.
  AdjustableLiveSpeakerDetection:
    type: object
    properties:
      mode:
        type: string
        description: Modes to tune between speed to live speaker detection vs accuracy.
        enum:
          - unknown
          - disabled
          - low
          - medium
          - high
      preconnectDuration:
        type: string
        description: >-
          ISO 8601 formatted relative duration (e.g., PT30.8427419S for 30.8
          seconds), calculated on line connect.
      eventName:
        type: string
        description: >-
          The name of the event that triggered the ALSD evaluation (e.g.,
          line.connect, speech.generic).
      isPersonLikely:
        type: boolean
        description: >-
          The output of the ALSD detector, evaluating whether there is likely a
          person on the call based on the above inputs, and if so, a person is
          detected early (person disposition name and speech.person analyzer
          result) and the associated action taken (e.g., speech.person
          postconnect entry in the disposition table has the action to transfer
          to a queue).
      totalRingbacks:
        type: integer
        format: int32
        description: >-
          Number of tone.ring.* analyzer events detected during the call
          (expected mostly during pre-connect but the last ringback tone
          detection could potentially complete after line connect, which will
          increment totalRingbacks still).
      lineConnected:
        type: boolean
        description: >-
          Protocol line connect received (answered by a person, machine, busy,
          fax).
  AfterCallWork:
    type: object
    properties:
      startTime:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endTime:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      state:
        type: string
        enum:
          - unknown
          - notApplicable
          - skipped
          - pending
          - complete
  Attachment:
    type: object
    properties:
      attachmentId:
        type: string
        description: The unique identifier for the attachment.
      name:
        type: string
        description: The name of the attachment.
      contentUri:
        type: string
        description: >-
          The content uri of the attachment. If set, this is commonly a public
          api download location.
      contentType:
        type: string
        description: The type of file the attachment is.
      contentLength:
        type: integer
        format: int32
        description: The length of the attachment file.
      inlineImage:
        type: boolean
        description: Whether or not the attachment was attached inline.,
  Calibration:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      calibrator:
        $ref: '#/definitions/User'
      agent:
        $ref: '#/definitions/User'
      conversation:
        $ref: '#/definitions/ConversationReference'
      evaluationForm:
        $ref: '#/definitions/EvaluationForm'
      contextId:
        type: string
      averageScore:
        type: integer
        format: int32
      highScore:
        type: integer
        format: int32
      lowScore:
        type: integer
        format: int32
      createdDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      evaluations:
        type: array
        items:
          $ref: '#/definitions/Evaluation'
      evaluators:
        type: array
        items:
          $ref: '#/definitions/User'
      scoringIndex:
        $ref: '#/definitions/Evaluation'
      expertEvaluator:
        $ref: '#/definitions/User'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Call:
    type: object
    properties:
      state:
        type: string
        description: The connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - converting
          - uploading
          - transmitting
          - none
      initialState:
        type: string
        description: The initial connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - converting
          - uploading
          - transmitting
          - none
      id:
        type: string
        description: A globally unique identifier for this communication.
      direction:
        type: string
        description: The direction of the call
        enum:
          - inbound
          - outbound
      recording:
        type: boolean
        description: True if this call is being recorded.
      recordingState:
        type: string
        description: State of recording on this call.
        enum:
          - none
          - active
          - paused
      muted:
        type: boolean
        description: >-
          True if this call is muted so that remote participants can't hear any
          audio from this end.
      confined:
        type: boolean
        description: >-
          True if this call is held and the person on this side hears hold
          music.
      held:
        type: boolean
        description: True if this call is held and the person on this side hears silence.
      securePause:
        type: boolean
        description: True when the recording of this call is in secure pause status.
      recordingId:
        type: string
        description: >-
          A globally unique identifier for the recording associated with this
          call.
      segments:
        type: array
        description: >-
          The time line of the participant's call, divided into activity
          segments.
        items:
          $ref: '#/definitions/Segment'
      errorInfo:
        $ref: '#/definitions/ErrorInfo'
      disconnectType:
        type: string
        description: >-
          System defined string indicating what caused the communication to
          disconnect. Will be null until the communication disconnects.
        enum:
          - endpoint
          - client
          - system
          - timeout
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
          - uncallable
      startHoldTime:
        type: string
        format: date-time
        description: >-
          The timestamp the call was placed on hold in the cloud clock if the
          call is currently on hold. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      documentId:
        type: string
        description: >-
          If call is an outbound fax of a document from content management, then
          this is the id in content management.
      startAlertingTime:
        type: string
        format: date-time
        description: >-
          The timestamp the communication has when it is first put into an
          alerting state. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication was connected in the cloud
          clock. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      disconnectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication disconnected from the
          conversation in the provider clock. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      disconnectReasons:
        type: array
        description: >-
          List of reasons that this call was disconnected. This will be set once
          the call disconnects.
        items:
          $ref: '#/definitions/DisconnectReason'
      faxStatus:
        description: Extra information on fax transmission.
        $ref: '#/definitions/FaxStatus'
      provider:
        type: string
        description: The source provider for the call.
      scriptId:
        type: string
        description: The UUID of the script to use.
      peerId:
        type: string
        description: >-
          The id of the peer communication corresponding to a matching leg for
          this communication.
      uuiData:
        type: string
        description: >-
          User to User Information (UUI) data managed by SIP session
          application.
      self:
        description: Address and name data for a call endpoint.
        $ref: '#/definitions/Address'
      other:
        description: Address and name data for a call endpoint.
        $ref: '#/definitions/Address'
      wrapup:
        description: Call wrap up or disposition data.
        $ref: '#/definitions/Wrapup'
      afterCallWork:
        description: After-call work for the communication.
        $ref: '#/definitions/AfterCallWork'
      afterCallWorkRequired:
        type: boolean
        description: >-
          Indicates if after-call work is required for a communication. Only
          used when the ACW Setting is Agent Requested.
      agentAssistantId:
        type: string
        description: >-
          UUID of virtual agent assistant that provide suggestions to the agent
          participant during the conversation.
      disposition:
        description: Call resolution data for Dialer bulk make calls commands.
        $ref: '#/definitions/Disposition'
  Callback:
    type: object
    properties:
      state:
        type: string
        description: The connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - scheduled
          - none
      initialState:
        type: string
        description: The initial connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - scheduled
          - none
      id:
        type: string
        description: A globally unique identifier for this communication.
      segments:
        type: array
        description: >-
          The time line of the participant's callback, divided into activity
          segments.
        items:
          $ref: '#/definitions/Segment'
      direction:
        type: string
        description: The direction of the call
        enum:
          - inbound
          - outbound
      held:
        type: boolean
        description: True if this call is held and the person on this side hears silence.
      disconnectType:
        type: string
        description: >-
          System defined string indicating what caused the communication to
          disconnect. Will be null until the communication disconnects.
        enum:
          - endpoint
          - client
          - system
          - timeout
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
          - uncallable
      startHoldTime:
        type: string
        format: date-time
        description: >-
          The timestamp the callback was placed on hold in the cloud clock if
          the callback is currently on hold. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dialerPreview:
        description: The preview data to be used when this callback is a Preview.
        $ref: '#/definitions/DialerPreview'
      voicemail:
        description: The voicemail data to be used when this callback is an ACD voicemail.
        $ref: '#/definitions/Voicemail'
      callbackNumbers:
        type: array
        description: The phone number(s) to use to place the callback.
        items:
          type: string
      callbackUserName:
        type: string
        description: The name of the user requesting a callback.
      scriptId:
        type: string
        description: The UUID of the script to use.
      externalCampaign:
        type: boolean
        description: True if the call for the callback uses external dialing.
      skipEnabled:
        type: boolean
        description: True if the ability to skip a callback should be enabled.
      timeoutSeconds:
        type: integer
        format: int32
        description: >-
          The number of seconds before the system automatically places a call
          for a callback.  0 means the automatic placement is disabled.
      startAlertingTime:
        type: string
        format: date-time
        description: >-
          The timestamp the communication has when it is first put into an
          alerting state. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication was connected in the cloud
          clock. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      disconnectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication disconnected from the
          conversation in the provider clock. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      callbackScheduledTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication is scheduled in the provider
          clock. If this value is missing it indicates the callback will be
          placed immediately. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      automatedCallbackConfigId:
        type: string
        description: >-
          The id of the config for automatically placing the callback (and
          handling the disposition). If null, the callback will not be placed
          automatically but routed to an agent as per normal.
      provider:
        type: string
        description: The source provider for the callback.
      peerId:
        type: string
        description: >-
          The id of the peer communication corresponding to a matching leg for
          this communication.
      wrapup:
        description: Call wrap up or disposition data.
        $ref: '#/definitions/Wrapup'
      afterCallWork:
        description: After-call work for the communication.
        $ref: '#/definitions/AfterCallWork'
      afterCallWorkRequired:
        type: boolean
        description: >-
          Indicates if after-call work is required for a communication. Only
          used when the ACW Setting is Agent Requested.
      callerId:
        type: string
        description: >-
          The phone number displayed to recipients of the phone call. The value
          should conform to the E164 format.
      callerIdName:
        type: string
        description: The name displayed to recipients of the phone call.
  Cobrowsesession:
    type: object
    properties:
      state:
        type: string
        description: The connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - scheduled
          - none
      initialState:
        type: string
        description: The initial connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - scheduled
          - none
      id:
        type: string
        description: A globally unique identifier for this communication.
      disconnectType:
        type: string
        description: >-
          System defined string indicating what caused the communication to
          disconnect. Will be null until the communication disconnects.
        enum:
          - endpoint
          - client
          - system
          - timeout
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transport.failure
          - error
          - peer
          - other
          - spam
          - uncallable
      self:
        description: Address and name data for a call endpoint.
        $ref: '#/definitions/Address'
      cobrowseSessionId:
        type: string
        description: The co-browse session ID.
      cobrowseRole:
        type: string
        description: >-
          This value identifies the role of the co-browse client within the
          co-browse session (a client is a sharer or a viewer).
      controlling:
        type: array
        description: >-
          ID of co-browse participants for which this client has been granted
          control (list is empty if this client cannot control any shared
          pages).
        items:
          type: string
      viewerUrl:
        type: string
        description: The URL that can be used to open co-browse session in web browser.
      providerEventTime:
        type: string
        format: date-time
        description: >-
          The time when the provider event which triggered this conversation
          update happened in the corrected provider clock (milliseconds since
          1970-01-01 00:00:00 UTC). Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      startAlertingTime:
        type: string
        format: date-time
        description: >-
          The timestamp the communication has when it is first put into an
          alerting state. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication was connected in the cloud
          clock. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      disconnectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication disconnected from the
          conversation in the provider clock. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      provider:
        type: string
        description: The source provider for the co-browse session.
      peerId:
        type: string
        description: >-
          The id of the peer communication corresponding to a matching leg for
          this communication.
      segments:
        type: array
        description: >-
          The time line of the participant's call, divided into activity
          segments.
        items:
          $ref: '#/definitions/Segment'
      wrapup:
        description: Call wrap up or disposition data.
        $ref: '#/definitions/Wrapup'
      afterCallWork:
        description: After-call work for the communication.
        $ref: '#/definitions/AfterCallWork'
      afterCallWorkRequired:
        type: boolean
        description: >-
          Indicates if after-call work is required for a communication. Only
          used when the ACW Setting is Agent Requested.
  Conversation:
    type: object
    required:
      - participants
      - startTime
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      externalTag:
        type: string
        description: The external tag associated with the conversation.
      startTime:
        type: string
        format: date-time
        description: >-
          The time when the conversation started. This will be the time when the
          first participant joined the conversation. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endTime:
        type: string
        format: date-time
        description: >-
          The time when the conversation ended. This will be the time when the
          last participant left the conversation, or null when the conversation
          is still active. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      address:
        type: string
        description: >-
          The address of the conversation as seen from an external participant.
          For phone calls this will be the DNIS for inbound calls and the ANI
          for outbound calls. For other media types this will be the address of
          the destination participant for inbound and the address of the
          initiating participant for outbound.
      participants:
        type: array
        description: The list of all participants in the conversation.
        items:
          $ref: '#/definitions/Participant'
      conversationIds:
        type: array
        description: >-
          A list of conversations to merge into this conversation to create a
          conference. This field is null except when being used to create a
          conference.
        items:
          type: string
      maxParticipants:
        type: integer
        format: int32
        description: >-
          If this is a conference conversation, then this field indicates the
          maximum number of participants allowed to participant in the
          conference.
      recordingState:
        type: string
        description: >-
          On update, 'paused' initiates a secure pause, 'active' resumes any
          paused recordings; otherwise indicates state of conversation
          recording.
        enum:
          - ACTIVE
          - PAUSED
          - NONE
      state:
        type: string
        description: The conversation's state
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - converting
          - uploading
          - transmitting
          - none
      divisions:
        type: array
        description: Identifiers of divisions associated with this conversation
        items:
          $ref: '#/definitions/ConversationDivisionMembership'
      recentTransfers:
        type: array
        description: >-
          The list of the most recent 20 transfer commands applied to this
          conversation.
        items:
          $ref: '#/definitions/TransferResponse'
      securePause:
        type: boolean
        description: >-
          True when the recording of this conversation is in secure pause
          status.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ConversationChat:
    type: object
    properties:
      state:
        type: string
        description: The connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - none
      initialState:
        type: string
        description: The initial connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - none
      id:
        type: string
        description: A globally unique identifier for this communication.
      roomId:
        type: string
        description: The room id for the chat.
      recordingId:
        type: string
        description: >-
          A globally unique identifier for the recording associated with this
          chat.
      segments:
        type: array
        description: >-
          The time line of the participant's chat, divided into activity
          segments.
        items:
          $ref: '#/definitions/Segment'
      held:
        type: boolean
        description: True if this call is held and the person on this side hears silence.
      direction:
        type: string
        description: The direction of the chat
        enum:
          - inbound
          - outbound
      disconnectType:
        type: string
        description: >-
          System defined string indicating what caused the communication to
          disconnect. Will be null until the communication disconnects.
        enum:
          - endpoint
          - client
          - system
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - error
          - peer
          - other
          - uncallable
          - timeout
      startHoldTime:
        type: string
        format: date-time
        description: >-
          The timestamp the chat was placed on hold in the cloud clock if the
          chat is currently on hold. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      startAlertingTime:
        type: string
        format: date-time
        description: >-
          The timestamp the communication has when it is first put into an
          alerting state. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication was connected in the cloud
          clock. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      disconnectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication disconnected from the
          conversation in the provider clock. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      provider:
        type: string
        description: The source provider for the email.
      scriptId:
        type: string
        description: The UUID of the script to use.
      peerId:
        type: string
        description: >-
          The id of the peer communication corresponding to a matching leg for
          this communication.
      avatarImageUrl:
        type: string
        description: If available, the URI to the avatar image of this communication.
      journeyContext:
        description: >-
          A subset of the Journey System's data relevant to a part of a
          conversation (for external linkage and internal usage/context).
        $ref: '#/definitions/JourneyContext'
      wrapup:
        description: Call wrap up or disposition data.
        $ref: '#/definitions/Wrapup'
      afterCallWork:
        description: After-call work for the communication.
        $ref: '#/definitions/AfterCallWork'
      afterCallWorkRequired:
        type: boolean
        description: >-
          Indicates if after-call work is required for a communication. Only
          used when the ACW Setting is Agent Requested.
  ConversationDivisionMembership:
    type: object
    properties:
      division:
        description: A division the conversation belongs to.
        $ref: '#/definitions/DomainEntityRef'
      entities:
        type: array
        description: >-
          The entities on the conversation within the division. These are the
          users, queues, work flows, etc. that can be on conversations and and
          be assigned to different divisions.
        items:
          $ref: '#/definitions/DomainEntityRef'
  ConversationMessageMetadata:
    type: object
    properties:
      type:
        type: string
        description: Message type.
        enum:
          - Text
          - Structured
          - Receipt
          - Event
          - Message
          - Unknown
      events:
        type: array
        description: List of events metadata
        items:
          $ref: '#/definitions/ConversationMessageMetadataEvent'
      content:
        type: array
        description: List of message content
        items:
          $ref: '#/definitions/ConversationMessageMetadataContent'
    description: Metadata information about a message.
  ConversationMessageMetadataContent:
    type: object
    properties:
      contentType:
        type: string
        description: Type of this content element.
        enum:
          - Attachment
          - Location
          - QuickReply
          - Notification
          - ButtonResponse
          - Story
          - Mention
          - Card
          - Carousel
          - Text
          - QuickReplyV2
          - Unknown
      subType:
        type: string
        description: Content subtype
        enum:
          - Image
          - Video
          - Audio
          - File
          - Link
          - Mention
          - Reply
          - Button
          - QuickReply
          - Postback
          - Unknown
    description: Metadata information about a message content.
  ConversationMessageMetadataEvent:
    type: object
    properties:
      eventType:
        type: string
        description: Type of this event element
        enum:
          - CoBrowse
          - Typing
          - Presence
          - Unknown
      subType:
        type: string
        description: Event subtype
        enum:
          - 'On'
          - Join
          - Offering
          - OfferingExpired
          - OfferingAccepted
          - OfferingRejected
          - Disconnect
          - Clear
          - Unknown
    description: Metadata information about a message event.
  ConversationReference:
    type: object
    properties:
      id:
        type: string
      selfUri:
        type: string
        format: uri
  ConversationRoutingData:
    type: object
    properties:
      queue:
        description: The queue to use for routing decisions
        $ref: '#/definitions/AddressableEntityRef'
      language:
        description: The language to use for routing decisions
        $ref: '#/definitions/AddressableEntityRef'
      priority:
        type: integer
        format: int32
        description: The priority of the conversation to use for routing decisions
      skills:
        type: array
        description: The skills to use for routing decisions
        items:
          $ref: '#/definitions/AddressableEntityRef'
      scoredAgents:
        type: array
        description: >-
          A collection of agents and their assigned scores for this conversation
          (0 - 100, higher being better), for use in routing to preferred agents
        items:
          $ref: '#/definitions/ScoredAgent'
  DialerPreview:
    type: object
    properties:
      id:
        type: string
      contactId:
        type: string
        description: The contact associated with this preview data pop
      contactListId:
        type: string
        description: The contactList associated with this preview data pop.
      campaignId:
        type: string
        description: The campaignId associated with this preview data pop.
      phoneNumberColumns:
        type: array
        description: The phone number columns associated with this campaign
        items:
          $ref: '#/definitions/PhoneNumberColumn'
  DisconnectReason:
    type: object
    properties:
      type:
        type: string
        description: Disconnect reason protocol type.
        enum:
          - q850
          - sip
      code:
        type: integer
        format: int32
        description: Protocol specific reason code. See the Q.850 and SIP specs.
      phrase:
        type: string
        description: Human readable English description of the disconnect reason.
  Disposition:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: >-
          Name of the disposition. Either a platform predefined value, or the
          name of the disposition in the disposition table..
      analyzer:
        type: string
        description: >-
          The final media analyzer result that triggered the disposition result,
          if any.
      dispositionParameters:
        description: Contains various parameters related to call analysis.
        $ref: '#/definitions/DispositionParameters'
  DispositionParameters:
    type: object
    properties:
      adjustableLiveSpeakerDetection:
        description: >-
          ALSD evaluation inputs and output (isPersonalLikely) of the ALSD
          detector the last time it ran on the call (could be multiple times)
        $ref: '#/definitions/AdjustableLiveSpeakerDetection'
  Email:
    type: object
    properties:
      state:
        type: string
        description: The connection state of this communication.
        enum:
          - alerting
          - connected
          - disconnected
          - none
          - transmitting
      initialState:
        type: string
        description: The initial connection state of this communication.
        enum:
          - alerting
          - connected
          - disconnected
          - none
          - transmitting
      id:
        type: string
        description: A globally unique identifier for this communication.
      held:
        type: boolean
        description: True if this call is held and the person on this side hears silence.
      subject:
        type: string
        description: The subject for the initial email that started this conversation.
      messagesSent:
        type: integer
        format: int32
        description: The number of email messages sent by this participant.
      segments:
        type: array
        description: >-
          The time line of the participant's email, divided into activity
          segments.
        items:
          $ref: '#/definitions/Segment'
      direction:
        type: string
        description: The direction of the email
        enum:
          - inbound
          - outbound
      recordingId:
        type: string
        description: >-
          A globally unique identifier for the recording associated with this
          call.
      errorInfo:
        $ref: '#/definitions/ErrorBody'
      disconnectType:
        type: string
        description: >-
          System defined string indicating what caused the communication to
          disconnect. Will be null until the communication disconnects.
        enum:
          - endpoint
          - client
          - system
          - timeout
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
          - uncallable
      startHoldTime:
        type: string
        format: date-time
        description: >-
          The timestamp the email was placed on hold in the cloud clock if the
          email is currently on hold. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      startAlertingTime:
        type: string
        format: date-time
        description: >-
          The timestamp the communication has when it is first put into an
          alerting state. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication was connected in the cloud
          clock. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      disconnectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication disconnected from the
          conversation in the provider clock. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      autoGenerated:
        type: boolean
        description: >-
          Indicates that the email was auto-generated like an Out of Office
          reply.
      provider:
        type: string
        description: The source provider for the email.
      scriptId:
        type: string
        description: The UUID of the script to use.
      peerId:
        type: string
        description: >-
          The id of the peer communication corresponding to a matching leg for
          this communication.
      messageId:
        type: string
        description: >-
          A globally unique identifier for the stored content of this
          communication.
      draftAttachments:
        type: array
        description: A list of uploaded attachments on the email draft.
        items:
          $ref: '#/definitions/Attachment'
      spam:
        type: boolean
        description: Indicates if the inbound email was marked as spam.
      wrapup:
        description: Call wrap up or disposition data.
        $ref: '#/definitions/Wrapup'
      afterCallWork:
        description: After-call work for the communication.
        $ref: '#/definitions/AfterCallWork'
      afterCallWorkRequired:
        type: boolean
        description: >-
          Indicates if after-call work is required for a communication. Only
          used when the ACW Setting is Agent Requested.
  Evaluation:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      conversation:
        $ref: '#/definitions/ConversationReference'
      evaluationForm:
        description: Evaluation form used for evaluation.
        $ref: '#/definitions/EvaluationForm'
      evaluator:
        $ref: '#/definitions/User'
      agent:
        $ref: '#/definitions/User'
      calibration:
        $ref: '#/definitions/Calibration'
      status:
        type: string
        enum:
          - PENDING
          - INPROGRESS
          - FINISHED
          - INREVIEW
          - RETRACTED
      answers:
        $ref: '#/definitions/EvaluationScoringSet'
      agentHasRead:
        type: boolean
      assignee:
        $ref: '#/definitions/User'
      releaseDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      assignedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      changedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      queue:
        $ref: '#/definitions/Queue'
      mediaType:
        type: array
        description: List of different communication types used in conversation.
        items:
          type: string
          enum:
            - CALL
            - CALLBACK
            - CHAT
            - COBROWSE
            - EMAIL
            - MESSAGE
            - SOCIAL_EXPRESSION
            - VIDEO
            - SCREENSHARE
      rescore:
        type: boolean
        description: Is only true when evaluation is re-scored.
      conversationDate:
        type: string
        format: date-time
        description: >-
          Date of conversation. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationEndDate:
        type: string
        format: date-time
        description: >-
          End date of conversation if it had completed before evaluation
          creation. Null if created before the conversation ended. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      neverRelease:
        type: boolean
        description: >-
          Signifies if the evaluation is never to be released. This cannot be
          set true if release date is also set.
      assigned:
        type: boolean
        description: >-
          Set to false to unassign the evaluation. This cannot be set to false
          when assignee is also set.
      dateAssigneeChanged:
        type: string
        format: date-time
        description: >-
          Date when the assignee was last changed. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      resourceId:
        type: string
        description: >-
          Only used for email evaluations. Will be null for all other
          evaluations.
      resourceType:
        type: string
        description: >-
          The type of resource. Only used for email evaluations. Will be null
          for evaluations on all other resources.
        enum:
          - EMAIL
      redacted:
        type: boolean
        description: >-
          Is only true when the user making the request does not have sufficient
          permissions to see evaluation
      isScoringIndex:
        type: boolean
      authorizedActions:
        type: array
        description: >-
          List of user authorized actions on evaluation. Possible values:
          assign, edit, editScore, editAgentSignoff, delete, release, viewAudit
        items:
          type: string
      hasAssistanceFailed:
        type: boolean
        description: Is true when evaluation assistance didn't execute successfully
      evaluationSource:
        description: The source that created the evaluation.
        readOnly: true
        $ref: '#/definitions/EvaluationSource'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EvaluationQuestionGroupScore:
    type: object
    properties:
      questionGroupId:
        type: string
      totalScore:
        type: number
        format: float
        description: Score of all questions in the group
      maxTotalScore:
        type: number
        format: float
        description: Maximum possible score of all questions in the group
      markedNA:
        type: boolean
      totalCriticalScore:
        type: number
        format: float
        description: Score of only the critical questions in the group
      maxTotalCriticalScore:
        type: number
        format: float
        description: Maximum possible score of only the critical questions in the group
      totalNonCriticalScore:
        type: number
        format: float
        description: Score of only the non critical questions in the group
      maxTotalNonCriticalScore:
        type: number
        format: float
        description: Maximum possible score of only the non critical questions in the group
      totalScoreUnweighted:
        type: number
        format: float
        description: Unweighted score of all questions in the group
      maxTotalScoreUnweighted:
        type: number
        format: float
        description: Maximum possible unweighted score of all questions in the group
      totalCriticalScoreUnweighted:
        type: number
        format: float
        description: Unweighted score of only the critical questions in the group
      maxTotalCriticalScoreUnweighted:
        type: number
        format: float
        description: >-
          Maximum possible unweighted score of only the critical questions in
          the group
      totalNonCriticalScoreUnweighted:
        type: number
        format: float
        description: Unweighted score of only the non critical questions in the group
      maxTotalNonCriticalScoreUnweighted:
        type: number
        format: float
        description: >-
          Maximum possible unweighted score of only the non critical questions
          in the group
      questionScores:
        type: array
        items:
          $ref: '#/definitions/EvaluationQuestionScore'
  EvaluationQuestionScore:
    type: object
    properties:
      questionId:
        type: string
      answerId:
        type: string
      score:
        type: integer
        format: int32
        description: Unweighted score of the question
      markedNA:
        type: boolean
      assistedAnswerId:
        type: string
        description: AnswerId found with evaluation assistance conditions
      failedKillQuestion:
        type: boolean
        description: >-
          Applicable only on fatal questions. Indicates that the answer selected
          was not the highest score available for the question
      comments:
        type: string
        description: Comments from the evaluator specific to this question
  EvaluationReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EvaluationScoringSet:
    type: object
    properties:
      totalScore:
        type: number
        format: float
        description: Score of all questions
      totalCriticalScore:
        type: number
        format: float
        description: Score of only the critical questions
      totalNonCriticalScore:
        type: number
        format: float
        description: Score of only the non-critical questions
      questionGroupScores:
        type: array
        items:
          $ref: '#/definitions/EvaluationQuestionGroupScore'
      anyFailedKillQuestions:
        type: boolean
        description: >-
          Indicates that at least one fatal question was answered without having
          the highest score available for the question
      comments:
        type: string
        description: Overall comments from the evaluator
      privateComments:
        type: string
        description: Overall private comments from the evaluator
      agentComments:
        type: string
        description: Comments from the agent while reviewing evaluation results
      transcriptTopics:
        type: array
        description: List of topics found within the conversation's transcripts
        items:
          $ref: '#/definitions/TranscriptTopic'
  EvaluationSource:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      type:
        type: string
        description: Type of the evaluation source.
        enum:
          - Policy
          - User
          - Unknown
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EvaluationVersion:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  FaxStatus:
    type: object
    properties:
      direction:
        type: string
        description: The fax direction, either "send" or "receive".
      expectedPages:
        type: integer
        format: int64
        description: Total number of expected pages, if known.
      activePage:
        type: integer
        format: int64
        description: Active page of the transmission.
      linesTransmitted:
        type: integer
        format: int64
        description: Number of lines that have completed transmission.
      bytesTransmitted:
        type: integer
        format: int64
        description: Number of bytes that have competed transmission.
      baudRate:
        type: integer
        format: int64
        description: Current signaling rate of transmission, baud rate.
      pageErrors:
        type: integer
        format: int64
        description: Number of page errors.
      lineErrors:
        type: integer
        format: int64
        description: Number of line errors.
  JourneyAction:
    type: object
    required:
      - actionMap
      - id
    properties:
      id:
        type: string
        description: >-
          The ID of an action from the Journey System (an action is spawned from
          an actionMap)
      actionMap:
        description: >-
          Details about the action map from the Journey System which triggered
          this action
        $ref: '#/definitions/JourneyActionMap'
  JourneyActionMap:
    type: object
    required:
      - id
      - version
    properties:
      id:
        type: string
        description: >-
          The ID of the actionMap in the Journey System which triggered this
          action
      version:
        type: integer
        format: int32
        description: >-
          The version number of the actionMap in the Journey System at the time
          this action was triggered
  JourneyContext:
    type: object
    required:
      - customer
    properties:
      customer:
        description: >-
          A subset of the Journey System's customer data at a point-in-time (for
          external linkage and internal usage/context)
        $ref: '#/definitions/JourneyCustomer'
      customerSession:
        description: >-
          A subset of the Journey System's tracked customer session data at a
          point-in-time (for external linkage and internal usage/context)
        $ref: '#/definitions/JourneyCustomerSession'
      triggeringAction:
        description: >-
          A subset of the Journey System's action data relevant to a part of a
          conversation (for external linkage and internal usage/context)
        $ref: '#/definitions/JourneyAction'
  JourneyCustomer:
    type: object
    required:
      - id
      - idType
    properties:
      id:
        type: string
        description: >-
          An ID of a customer within the Journey System at a point-in-time. 
          Note that a customer entity can have multiple customerIds based on the
          stitching process.  Depending on the context within the PureCloud
          conversation, this may or may not be mutable.
      idType:
        type: string
        description: The type of the customerId within the Journey System (e.g. cookie).
  JourneyCustomerSession:
    type: object
    required:
      - id
      - type
    properties:
      id:
        type: string
        description: >-
          An ID of a Customer/User's session within the Journey System at a
          point-in-time
      type:
        type: string
        description: >-
          The type of the Customer/User's session within the Journey System
          (e.g. web, app)
  Message:
    type: object
    properties:
      state:
        type: string
        description: The connection state of this communication.
        enum:
          - alerting
          - connected
          - disconnected
      initialState:
        type: string
        description: The initial connection state of this communication.
        enum:
          - alerting
          - connected
          - disconnected
      id:
        type: string
        description: A globally unique identifier for this communication.
      held:
        type: boolean
        description: True if this call is held and the person on this side hears silence.
      segments:
        type: array
        description: >-
          The time line of the participant's message, divided into activity
          segments.
        items:
          $ref: '#/definitions/Segment'
      direction:
        type: string
        description: The direction of the message.
        enum:
          - inbound
          - outbound
      recordingId:
        type: string
        description: >-
          A globally unique identifier for the recording associated with this
          message.
      errorInfo:
        $ref: '#/definitions/ErrorBody'
      disconnectType:
        type: string
        description: >-
          System defined string indicating what caused the communication to
          disconnect. Will be null until the communication disconnects.
        enum:
          - endpoint
          - client
          - system
          - timeout
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
          - uncallable
      startHoldTime:
        type: string
        format: date-time
        description: >-
          The timestamp the message was placed on hold in the cloud clock if the
          message is currently on hold. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      startAlertingTime:
        type: string
        format: date-time
        description: >-
          The timestamp the communication has when it is first put into an
          alerting state. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication was connected in the cloud
          clock. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      disconnectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication disconnected from the
          conversation in the provider clock. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      provider:
        type: string
        description: The source provider for the message.
      authenticated:
        type: boolean
        description: If true, the participant member is authenticated.
      type:
        type: string
        description: >-
          Indicates the type of message platform from which the message
          originated.
        enum:
          - unknown
          - sms
          - twitter
          - facebook
          - line
          - whatsapp
          - telegram
          - kakao
          - webmessaging
          - open
          - instagram
      recipientCountry:
        type: string
        description: >-
          Indicates the country where the recipient is associated in ISO 3166-1
          alpha-2 format.
      recipientType:
        type: string
        description: >-
          The type of the recipient. Eg: Provisioned phoneNumber is the
          recipient for sms message type.
      scriptId:
        type: string
        description: The UUID of the script to use.
      peerId:
        type: string
        description: >-
          The id of the peer communication corresponding to a matching leg for
          this communication.
      toAddress:
        description: Address and name data for a call endpoint.
        $ref: '#/definitions/Address'
      fromAddress:
        description: Address and name data for a call endpoint.
        $ref: '#/definitions/Address'
      messages:
        type: array
        description: The messages sent on this communication channel.
        items:
          $ref: '#/definitions/MessageDetails'
      journeyContext:
        description: >-
          A subset of the Journey System's data relevant to a part of a
          conversation (for external linkage and internal usage/context).
        $ref: '#/definitions/JourneyContext'
      wrapup:
        description: Call wrap up or disposition data.
        $ref: '#/definitions/Wrapup'
      afterCallWork:
        description: After-call work for the communication.
        $ref: '#/definitions/AfterCallWork'
      afterCallWorkRequired:
        type: boolean
        description: >-
          Indicates if after-call work is required for a communication. Only
          used when the ACW Setting is Agent Requested.
      agentAssistantId:
        type: string
        description: >-
          UUID of virtual agent assistant that provide suggestions to the agent
          participant during the conversation.
      byoSmsIntegrationId:
        type: string
        description: >-
          The internal id representing the customer supplied sms integration
          message.
  MessageDetails:
    type: object
    properties:
      messageId:
        type: string
        description: UUID identifying the message media.
      messageURI:
        type: string
        format: uri
        description: A URI for this message entity.
      messageStatus:
        type: string
        description: Indicates the delivery status of the message.
        enum:
          - queued
          - sent
          - failed
          - received
          - delivery-success
          - delivery-failed
          - read
          - removed
      messageSegmentCount:
        type: integer
        format: int32
        description: >-
          The message segment count, greater than 1 if the message content was
          split into multiple parts for this message type, e.g. SMS character
          limits.
      messageTime:
        type: string
        format: date-time
        description: >-
          The time when the message was sent or received. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      media:
        type: array
        description: The media (images, files, etc) associated with this message, if any
        items:
          $ref: '#/definitions/MessageMedia'
      stickers:
        type: array
        description: One or more stickers associated with this message, if any
        items:
          $ref: '#/definitions/MessageSticker'
      messageMetadata:
        description: Information that describes the content of the message, if any
        $ref: '#/definitions/ConversationMessageMetadata'
      errorInfo:
        description: Provider specific error information for a communication.
        $ref: '#/definitions/ErrorBody'
  MessageMedia:
    type: object
    properties:
      url:
        type: string
        description: The location of the media, useful for retrieving it
      mediaType:
        type: string
        description: >-
          The optional internet media type of the the media object.  If null
          then the media type should be dictated by the url
      contentLengthBytes:
        type: integer
        format: int32
        description: The optional content length of the the media object, in bytes.
      name:
        type: string
        description: The optional name of the the media object.
      id:
        type: string
        description: The optional id of the the media object.
  MessageSticker:
    type: object
    properties:
      url:
        type: string
        description: The location of the sticker, useful for retrieving it
      id:
        type: string
        description: The unique id of the the sticker object.
  PagelessDomainEntityListingEvaluationVersion:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/EvaluationVersion'
      selfUri:
        type: string
        format: uri
  Participant:
    type: object
    properties:
      id:
        type: string
        description: A globally unique identifier for this conversation.
      startTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant joined the conversation in the
          provider clock. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant disconnected from the conversation
          in the provider clock. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant was connected to the conversation
          in the provider clock. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      name:
        type: string
        description: A human readable name identifying the participant.
      userUri:
        type: string
        description: >-
          If this participant represents a user, then this will be an URI that
          can be used to fetch the user.
      userId:
        type: string
        description: >-
          If this participant represents a user, then this will be the globally
          unique identifier for the user.
      externalContactId:
        type: string
        description: >-
          If this participant represents an external contact, then this will be
          the globally unique identifier for the external contact.
      externalOrganizationId:
        type: string
        description: >-
          If this participant represents an external org, then this will be the
          globally unique identifier for the external org.
      queueId:
        type: string
        description: If present, the queue id that the communication channel came in on.
      groupId:
        type: string
        description: If present, group of users the participant represents.
      teamId:
        type: string
        description: >-
          The team id that this participant is a member of when added to the
          conversation.
      queueName:
        type: string
        description: If present, the queue name that the communication channel came in on.
      purpose:
        type: string
        description: A well known string that specifies the purpose of this participant.
      participantType:
        type: string
        description: A well known string that specifies the type of this participant.
      consultParticipantId:
        type: string
        description: >-
          If this participant is part of a consult transfer, then this will be
          the participant id of the participant being transferred.
      address:
        type: string
        description: >-
          The address for the this participant. For a phone call this will be
          the ANI.
      ani:
        type: string
        description: >-
          The address for the this participant. For a phone call this will be
          the ANI.
      aniName:
        type: string
        description: The ani-based name for this participant.
      dnis:
        type: string
        description: >-
          The address for the this participant. For a phone call this will be
          the ANI.
      locale:
        type: string
        description: An ISO 639 language code specifying the locale for this participant
      wrapupRequired:
        type: boolean
        description: >-
          True iff this participant is required to enter wrapup for this
          conversation.
      wrapupPrompt:
        type: string
        description: This field controls how the UI prompts the agent for a wrapup.
        enum:
          - mandatory
          - optional
          - agentRequested
          - timeout
          - forcedTimeout
      wrapupTimeoutMs:
        type: integer
        format: int32
        description: Specifies how long a timed ACW session will last.
      wrapupSkipped:
        type: boolean
        description: >-
          The UI sets this field when the agent chooses to skip entering a
          wrapup for this participant.
      wrapup:
        description: Call wrap up or disposition data.
        $ref: '#/definitions/Wrapup'
      mediaRoles:
        type: array
        description: >-
          List of roles this participant's media has had on the conversation, ie
          monitor, coach, etc.
        items:
          type: string
      conversationRoutingData:
        description: Information on how a communication should be routed to an agent.
        $ref: '#/definitions/ConversationRoutingData'
      alertingTimeoutMs:
        type: integer
        format: int32
        description: >-
          Specifies how long the agent has to answer an interaction before being
          marked as not responding.
      monitoredParticipantId:
        type: string
        description: >-
          If this participant is a monitor, then this will be the id of the
          participant that is being monitored.
      coachedParticipantId:
        type: string
        description: >-
          If this participant is a coach, then this will be the id of the
          participant that is being coached.
      attributes:
        type: object
        description: Additional participant attributes
        additionalProperties:
          type: string
      calls:
        type: array
        items:
          $ref: '#/definitions/Call'
      callbacks:
        type: array
        items:
          $ref: '#/definitions/Callback'
      chats:
        type: array
        items:
          $ref: '#/definitions/ConversationChat'
      cobrowsesessions:
        type: array
        items:
          $ref: '#/definitions/Cobrowsesession'
      emails:
        type: array
        items:
          $ref: '#/definitions/Email'
      messages:
        type: array
        items:
          $ref: '#/definitions/Message'
      screenshares:
        type: array
        items:
          $ref: '#/definitions/Screenshare'
      socialExpressions:
        type: array
        items:
          $ref: '#/definitions/SocialExpression'
      videos:
        type: array
        items:
          $ref: '#/definitions/Video'
      evaluations:
        type: array
        items:
          $ref: '#/definitions/Evaluation'
      screenRecordingState:
        type: string
        description: The current screen recording state for this participant.
        enum:
          - requested
          - active
          - paused
          - stopped
          - error
          - timeout
      flaggedReason:
        type: string
        description: The reason specifying why participant flagged the conversation.
        enum:
          - general
      startAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant started after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant ended after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      bargedParticipantId:
        type: string
        description: >-
          If this participant barged in a participant's call, then this will be
          the id of the targeted participant.
  PhoneNumberColumn:
    type: object
    properties:
      columnName:
        type: string
      type:
        type: string
  ScoredAgent:
    type: object
    properties:
      agent:
        description: The agent
        $ref: '#/definitions/DomainEntityRef'
      score:
        type: integer
        format: int32
        description: >-
          Agent's score for the current conversation, from 0 - 100, higher being
          better
  Screenshare:
    type: object
    properties:
      state:
        type: string
        description: The connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - none
      initialState:
        type: string
        description: The initial connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - none
      id:
        type: string
        description: A globally unique identifier for this communication.
      context:
        type: string
        description: The room id context (xmpp jid) for the conference session.
      sharing:
        type: boolean
        description: Indicates whether this participant is sharing their screen.
      peerCount:
        type: integer
        format: int32
        description: >-
          The number of peer participants from the perspective of the
          participant in the conference.
      disconnectType:
        type: string
        description: >-
          System defined string indicating what caused the communication to
          disconnect. Will be null until the communication disconnects.
        enum:
          - endpoint
          - client
          - system
          - timeout
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
          - uncallable
      startAlertingTime:
        type: string
        format: date-time
        description: >-
          The timestamp the communication has when it is first put into an
          alerting state. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication was connected in the cloud
          clock. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      disconnectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication disconnected from the
          conversation in the provider clock. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      provider:
        type: string
        description: The source provider for the screen share.
      peerId:
        type: string
        description: >-
          The id of the peer communication corresponding to a matching leg for
          this communication.
      segments:
        type: array
        description: >-
          The time line of the participant's call, divided into activity
          segments.
        items:
          $ref: '#/definitions/Segment'
      wrapup:
        description: Call wrap up or disposition data.
        $ref: '#/definitions/Wrapup'
      afterCallWork:
        description: After-call work for the communication.
        $ref: '#/definitions/AfterCallWork'
      afterCallWorkRequired:
        type: boolean
        description: >-
          Indicates if after-call work is required for a communication. Only
          used when the ACW Setting is Agent Requested.
  Segment:
    type: object
    required:
      - endTime
      - startTime
    properties:
      startTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this segment began. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this segment ended. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      type:
        type: string
        description: The activity taking place for the participant in the segment.
      howEnded:
        type: string
        description: A description of the event that ended the segment.
      disconnectType:
        type: string
        description: A description of the event that disconnected the segment
  SocialExpression:
    type: object
    properties:
      state:
        type: string
        description: The connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - none
      id:
        type: string
        description: A globally unique identifier for this communication.
      socialMediaId:
        type: string
        description: A globally unique identifier for the social media.
      socialMediaHub:
        type: string
        description: The social network of the communication
      socialUserName:
        type: string
        description: The user name for the communication.
      previewText:
        type: string
        description: The text preview of the communication contents
      recordingId:
        type: string
        description: >-
          A globally unique identifier for the recording associated with this
          chat.
      segments:
        type: array
        description: >-
          The time line of the participant's chat, divided into activity
          segments.
        items:
          $ref: '#/definitions/Segment'
      held:
        type: boolean
        description: True if this call is held and the person on this side hears silence.
      disconnectType:
        type: string
        description: >-
          System defined string indicating what caused the communication to
          disconnect. Will be null until the communication disconnects.
        enum:
          - endpoint
          - client
          - system
          - timeout
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
          - uncallable
      startHoldTime:
        type: string
        format: date-time
        description: >-
          The timestamp the chat was placed on hold in the cloud clock if the
          chat is currently on hold. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      startAlertingTime:
        type: string
        format: date-time
        description: >-
          The timestamp the communication has when it is first put into an
          alerting state. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication was connected in the cloud
          clock. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      disconnectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication disconnected from the
          conversation in the provider clock. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      provider:
        type: string
        description: The source provider for the social expression.
      scriptId:
        type: string
        description: The UUID of the script to use.
      peerId:
        type: string
        description: >-
          The id of the peer communication corresponding to a matching leg for
          this communication.
      wrapup:
        description: Call wrap up or disposition data.
        $ref: '#/definitions/Wrapup'
      afterCallWork:
        description: After-call work for the communication.
        $ref: '#/definitions/AfterCallWork'
      afterCallWorkRequired:
        type: boolean
        description: >-
          Indicates if after-call work is required for a communication. Only
          used when the ACW Setting is Agent Requested.
  TopicDuration:
    type: object
    properties:
      totalMilliseconds:
        type: integer
        format: int64
        description: The total duration of the topic phrase within the conversation
        readOnly: true
  TopicOffset:
    type: object
    properties:
      wordCount:
        type: integer
        format: int64
        description: 'Count of words before the topic '
        readOnly: true
      characterCount:
        type: integer
        format: int64
        description: 'Count of characters before the topic '
        readOnly: true
  TranscriptTopic:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the object.
        readOnly: true
      topicPhrase:
        type: string
        description: 'The phrase which detected the topic. '
        readOnly: true
      transcriptPhrase:
        type: string
        description: The transcript phrase which detected the topic.
        readOnly: true
      confidence:
        type: integer
        format: int32
        description: The detection confidence of the topic.
        readOnly: true
      startTimeMilliseconds:
        type: integer
        format: int64
        description: The start time of the topic phrase.
        readOnly: true
      duration:
        $ref: '#/definitions/TopicDuration'
      offset:
        description: Location of the phrase
        readOnly: true
        $ref: '#/definitions/TopicOffset'
      recordingLocation:
        type: integer
        format: int64
        description: Location of the phrase in the recording in milliseconds
        readOnly: true
  TransferDestination:
    type: object
    properties:
      userId:
        type: string
        description: The id of the user if the command destination is a user.
      address:
        type: string
        description: The destination address if the command destination is an endpoint.
  TransferInitiator:
    type: object
    properties:
      userId:
        type: string
        description: >-
          The id of the user who initiated the command if it was initiated by a
          user.
  TransferResponse:
    type: object
    properties:
      id:
        type: string
        description: The id of the command.
      state:
        type: string
        description: The state of the command.
        enum:
          - Pending
          - Active
          - Complete
          - Canceled
          - Failed
          - Timeout
          - Unknown
      dateIssued:
        type: string
        format: date-time
        description: >-
          The date/time that this command was issued. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      initiator:
        description: The initiator of the command.
        $ref: '#/definitions/TransferInitiator'
      modifiedBy:
        description: The user or entity that modified the command.
        $ref: '#/definitions/TransferResponseModifiedBy'
      destination:
        description: The destination of the command.
        $ref: '#/definitions/TransferDestination'
      transferType:
        type: string
        description: The type of transfer to perform.
        enum:
          - Attended
          - Unattended
  TransferResponseModifiedBy:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Video:
    type: object
    properties:
      state:
        type: string
        description: The connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - none
      initialState:
        type: string
        description: The initial connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - none
      id:
        type: string
        description: A globally unique identifier for this communication.
      context:
        type: string
        description: The room id context (xmpp jid) for the conference session.
      audioMuted:
        type: boolean
        description: Indicates whether this participant has muted their outgoing audio.
      videoMuted:
        type: boolean
        description: >-
          Indicates whether this participant has muted/paused their outgoing
          video.
      sharingScreen:
        type: boolean
        description: >-
          Indicates whether this participant is sharing their screen to the
          session.
      peerCount:
        type: integer
        format: int32
        description: >-
          The number of peer participants from the perspective of the
          participant in the conference.
      disconnectType:
        type: string
        description: >-
          System defined string indicating what caused the communication to
          disconnect. Will be null until the communication disconnects.
        enum:
          - endpoint
          - client
          - system
          - timeout
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
          - uncallable
      startAlertingTime:
        type: string
        format: date-time
        description: >-
          The timestamp the communication has when it is first put into an
          alerting state. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication was connected in the cloud
          clock. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      disconnectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication disconnected from the
          conversation in the provider clock. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      provider:
        type: string
        description: The source provider for the video.
      peerId:
        type: string
        description: >-
          The id of the peer communication corresponding to a matching leg for
          this communication.
      msids:
        type: array
        description: List of media stream ids
        items:
          type: string
      self:
        description: Address and name data for a call endpoint.
        $ref: '#/definitions/Address'
      wrapup:
        description: Call wrap up or disposition data.
        $ref: '#/definitions/Wrapup'
      afterCallWork:
        description: After-call work for the communication.
        $ref: '#/definitions/AfterCallWork'
      afterCallWorkRequired:
        type: boolean
        description: >-
          Indicates if after-call work is required for a communication. Only
          used when the ACW Setting is Agent Requested.
  Voicemail:
    type: object
    properties:
      id:
        type: string
        description: The voicemail id
      uploadStatus:
        type: string
        description: current state of the voicemail upload
        enum:
          - pending
          - complete
          - failed
          - timeout
          - none
  Wrapup:
    type: object
    properties:
      code:
        type: string
        description: The user configured wrap up code id.
      name:
        type: string
        description: The user configured wrap up code name.
      notes:
        type: string
        description: Text entered by the agent to describe the call or disposition.
      tags:
        type: array
        description: >-
          List of tags selected by the agent to describe the call or
          disposition.
        items:
          type: string
      durationSeconds:
        type: integer
        format: int32
        description: >-
          The length of time in seconds that the agent spent doing after call
          work.
      endTime:
        type: string
        format: date-time
        description: >-
          The timestamp when the wrapup was finished. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      provisional:
        type: boolean
        description: >-
          Indicates if this is a pending save and should not require a code to
          be specified.  This allows someone to save some temporary wrapup that
          will be used later.
  ArrayNode:
    type: object
  JsonCursorSearchResponse:
    type: object
    required:
      - results
      - types
    properties:
      types:
        type: array
        description: Resource types the search was performed against
        items:
          type: string
      results:
        description: Search results
        $ref: '#/definitions/ArrayNode'
      aggregations:
        $ref: '#/definitions/ArrayNode'
      cursor:
        type: string
        description: The page cursor
  ConversationParticipantSearchCriteria:
    type: object
    required:
      - type
    properties:
      endValue:
        type: string
        description: The end value of the range. This field is used for range search types.
      values:
        type: array
        description: A list of values for the search to match against
        items:
          type: string
      startValue:
        type: string
        description: >-
          The start value of the range. This field is used for range search
          types.
      value:
        type: string
        description: A value for the search to match against
      operator:
        type: string
        description: How to apply this search criteria against other criteria
        enum:
          - AND
          - OR
          - NOT
      group:
        type: array
        description: Groups multiple conditions
        items:
          $ref: '#/definitions/ConversationParticipantSearchCriteria'
      dateFormat:
        type: string
        description: >-
          Set date format for criteria values when using date range search
          type.  Supports Java date format syntax, example
          yyyy-MM-dd'T'HH:mm:ss.SSSX.
      type:
        type: string
        description: Search Type
        enum:
          - EXACT
          - DATE_RANGE
      fields:
        type: array
        description: Field names to search against
        items:
          type: string
  ConversationParticipantSearchRequest:
    type: object
    properties:
      sortOrder:
        type: string
        description: The sort order for results
        enum:
          - ASC
          - DESC
          - SCORE
      sortBy:
        type: string
        description: The field in the resource that you want to sort the results by
      sort:
        type: array
        description: Multi-value sort order, list of multiple sort values
        items:
          $ref: '#/definitions/SearchSort'
      returnFields:
        type: array
        items:
          type: string
      query:
        type: array
        items:
          $ref: '#/definitions/ConversationParticipantSearchCriteria'
      cursor:
        type: string
  ConversationUser:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The globally unique identifier for this user.
  ConversationTagsUpdate:
    type: object
    required:
      - externalTag
    properties:
      externalTag:
        type: string
        description: The external tag associated with the conversation.
  ConversationSecureAttributes:
    type: object
    properties:
      attributes:
        type: object
        description: The map of attribute keys to values.
        additionalProperties:
          type: string
      version:
        type: integer
        format: int32
        description: >-
          The version used to detect conflicting updates when using PUT. Not
          used for PATCH.
  ConversationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Conversation'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  FaxSendResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      uploadDestinationUri:
        type: string
        format: uri
      uploadMethodType:
        type: string
        enum:
          - SINGLE_PUT
          - MULTIPART_POST
      headers:
        type: object
        additionalProperties:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CoverSheet:
    type: object
    properties:
      notes:
        type: string
        description: Text to be added to the coversheet
      locale:
        type: string
        description: Locale, e.g. = en-US
  FaxSendRequest:
    type: object
    required:
      - addresses
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      addresses:
        type: array
        description: >-
          A list of outbound fax dialing addresses. E.g. +13175555555 or
          3175555555
        items:
          type: string
      documentId:
        type: string
        description: >-
          DocumentId of Content Management artifact. If Content Management
          document is not used for faxing, documentId should be null
      contentType:
        type: string
        description: >-
          The content type that is going to be uploaded. If Content Management
          document is used for faxing, contentType will be ignored
        enum:
          - application/pdf
          - image/tiff
          - application/msword
          - application/vnd.oasis.opendocument.text
          - >-
            application/vnd.openxmlformats-officedocument.wordprocessingml.document
      workspace:
        description: >-
          Workspace in which the document should be stored. If Content
          Management document is used for faxing, workspace will be ignored
        $ref: '#/definitions/Workspace'
      coverSheet:
        description: Data for coversheet generation.
        $ref: '#/definitions/CoverSheet'
      timeZoneOffsetMinutes:
        type: integer
        format: int32
        description: Time zone offset minutes from GMT
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Settings:
    type: object
    properties:
      communicationBasedACW:
        type: boolean
        description: Communication Based ACW
      includeNonAgentConversationSummary:
        type: boolean
        description: Display communication summary
      allowCallbackQueueSelection:
        type: boolean
        description: Allow Callback Queue Selection
      completeAcwWhenAgentTransitionsOffline:
        type: boolean
        description: Complete ACW When Agent Transitions Offline
      totalActiveCallback:
        type: boolean
        description: >-
          Exclude the 'interacting' duration from the handle calculations of
          callbacks
  AfterCallWorkUpdate:
    type: object
    required:
      - afterCallWorkRequired
    properties:
      afterCallWorkRequired:
        type: boolean
        description: >-
          Indicates whether or not after-call work must be completed for the
          communication. Can only be updated for connected communications.
  BulkCallbackPatchResponse:
    type: object
    properties:
      results:
        type: array
        description: A list of the results from the bulk operation.
        items:
          $ref: '#/definitions/BulkResult'
      errorCount:
        type: integer
        format: int32
        description: The number of errors from the bulk operation.
      errorIndexes:
        type: array
        description: An index of where the errors are in the listing.
        items:
          type: integer
          format: int32
  BulkResult:
    type: object
    properties:
      error:
        description: Error details if the operation failed.
        $ref: '#/definitions/BulkError'
      entity:
        type: object
        description: The result of the operation if it succeeded.
  BulkCallbackPatchRequest:
    type: object
    required:
      - patchCallbackRequests
    properties:
      patchCallbackRequests:
        type: array
        description: The list of requests to update callbacks in bulk
        items:
          $ref: '#/definitions/PatchCallbackRequest'
  PatchCallbackRequest:
    type: object
    required:
      - agentId
      - conversationId
    properties:
      conversationId:
        type: string
        description: The conversationId.
      queueId:
        type: string
        description: The identifier of the queue to be used for the callback.
      agentId:
        type: string
        description: The agentId.
      callbackScheduledTime:
        type: string
        format: date-time
        example: '2015-01-02T16:59:59.000Z'
        description: >-
          The scheduled date-time for the callback. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  BulkCallbackDisconnectRequest:
    type: object
    required:
      - callbackDisconnectIdentifiers
    properties:
      callbackDisconnectIdentifiers:
        type: array
        description: The list of requests to disconnect callbacks in bulk
        items:
          $ref: '#/definitions/CallbackDisconnectIdentifier'
  CallbackDisconnectIdentifier:
    type: object
    required:
      - conversationId
    properties:
      conversationId:
        type: string
        description: The Conversation Id.
      callbackId:
        type: string
        description: The callback id.
  CreateCallResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CreateCallRequest:
    type: object
    properties:
      phoneNumber:
        type: string
        description: The phone number to dial.
      callerId:
        type: string
        description: The caller id phone number for this outbound call.
      callerIdName:
        type: string
        description: The caller id name for this outbound call.
      callFromQueueId:
        type: string
        description: The queue ID to call on behalf of.
      callQueueId:
        type: string
        description: The queue ID to call.
      callUserId:
        type: string
        description: The user ID to call.
      priority:
        type: integer
        format: int32
        description: The priority to assign to this call (if calling a queue).
      languageId:
        type: string
        description: >-
          The language skill ID to use for routing this call (if calling a
          queue).
      routingSkillsIds:
        type: array
        description: The skill ID's to use for routing this call (if calling a queue).
        items:
          type: string
      conversationIds:
        type: array
        description: >-
          The list of existing call conversations to merge into a new ad-hoc
          conference.
        items:
          type: string
      participants:
        type: array
        description: The list of participants to call to create a new ad-hoc conference.
        items:
          $ref: '#/definitions/Destination'
      uuiData:
        type: string
        description: >-
          User to User Information (UUI) data managed by SIP session
          application.
      externalContactId:
        type: string
        description: The external contact with which to associate the call.
  Destination:
    type: object
    required:
      - address
    properties:
      address:
        type: string
        description: Address or phone number.
      name:
        type: string
      userId:
        type: string
      queueId:
        type: string
  CallConversation:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      participants:
        type: array
        description: The list of participants involved in the conversation.
        items:
          $ref: '#/definitions/CallMediaParticipant'
      otherMediaUris:
        type: array
        description: The list of other media channels involved in the conversation.
        items:
          type: string
          format: uri
      recentTransfers:
        type: array
        description: >-
          The list of the most recent 20 transfer commands applied to this
          conversation.
        items:
          $ref: '#/definitions/TransferResponse'
      recordingState:
        type: string
        enum:
          - none
          - active
          - paused
      maxParticipants:
        type: integer
        format: int32
        description: >-
          If this is a conference conversation, then this field indicates the
          maximum number of participants allowed to participant in the
          conference.
      securePause:
        type: boolean
        description: >-
          True when the recording of this conversation is in secure pause
          status.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CallConversationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CallConversation'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CallMediaParticipant:
    type: object
    properties:
      id:
        type: string
        description: The unique participant ID.
      name:
        type: string
        description: The display friendly name of the participant.
      address:
        type: string
        description: The participant address.
      startTime:
        type: string
        format: date-time
        description: >-
          The time when this participant first joined the conversation. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The time when this participant went connected for this media (eg:
          video connected time). Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endTime:
        type: string
        format: date-time
        description: >-
          The time when this participant went disconnected for this media (eg:
          video disconnected time). Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      startHoldTime:
        type: string
        format: date-time
        description: >-
          The time when this participant's hold started. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      purpose:
        type: string
        description: >-
          The participant's purpose.  Values can be: 'agent', 'user',
          'customer', 'external', 'acd', 'ivr
      state:
        type: string
        description: >-
          The participant's state.  Values can be: 'alerting', 'connected',
          'disconnected', 'dialing', 'contacting
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - converting
          - uploading
          - transmitting
          - none
      direction:
        type: string
        description: 'The participant''s direction.  Values can be: ''inbound'' or ''outbound'''
        enum:
          - inbound
          - outbound
      disconnectType:
        type: string
        description: The reason the participant was disconnected from the conversation.
        enum:
          - endpoint
          - client
          - system
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
      held:
        type: boolean
        description: Value is true when the participant is on hold.
      wrapupRequired:
        type: boolean
        description: Value is true when the participant requires wrap-up.
      wrapupPrompt:
        type: string
        description: The wrap-up prompt indicating the type of wrap-up to be performed.
      mediaRoles:
        type: array
        description: >-
          List of roles this participant's media has had on the conversation, ie
          monitor, coach, etc
        items:
          type: string
      user:
        description: The PureCloud user for this participant.
        $ref: '#/definitions/DomainEntityRef'
      queue:
        description: The PureCloud queue for this participant.
        $ref: '#/definitions/DomainEntityRef'
      team:
        description: The PureCloud team for this participant.
        $ref: '#/definitions/DomainEntityRef'
      attributes:
        type: object
        description: A list of ad-hoc attributes for the participant.
        additionalProperties:
          type: string
      errorInfo:
        description: If the conversation ends in error, contains additional error details.
        $ref: '#/definitions/ErrorInfo'
      script:
        description: The Engage script that should be used by this participant.
        $ref: '#/definitions/DomainEntityRef'
      wrapupTimeoutMs:
        type: integer
        format: int32
        description: The amount of time the participant has to complete wrap-up.
      wrapupSkipped:
        type: boolean
        description: Value is true when the participant has skipped wrap-up.
      alertingTimeoutMs:
        type: integer
        format: int32
        description: >-
          Specifies how long the agent has to answer an interaction before being
          marked as not responding.
      provider:
        type: string
        description: The source provider for the communication.
      externalContact:
        description: >-
          If this participant represents an external contact, then this will be
          the reference for the external contact.
        $ref: '#/definitions/DomainEntityRef'
      externalOrganization:
        description: >-
          If this participant represents an external org, then this will be the
          reference for the external org.
        $ref: '#/definitions/DomainEntityRef'
      wrapup:
        description: Wrapup for this participant, if it has been applied.
        $ref: '#/definitions/Wrapup'
      peer:
        type: string
        description: >-
          The peer communication corresponding to a matching leg for this
          communication.
      flaggedReason:
        type: string
        description: The reason specifying why participant flagged the conversation.
        enum:
          - general
      journeyContext:
        description: >-
          Journey System data/context that is applicable to this communication. 
          When used for historical purposes, the context should be immutable. 
          When null, there is no applicable Journey System context.
        $ref: '#/definitions/JourneyContext'
      conversationRoutingData:
        description: Information on how a communication should be routed to an agent.
        $ref: '#/definitions/ConversationRoutingData'
      startAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant started after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant ended after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      muted:
        type: boolean
        description: Value is true when the call is muted.
      confined:
        type: boolean
        description: Value is true when the call is confined.
      recording:
        type: boolean
        description: Value is true when the call is being recorded.
      recordingState:
        type: string
        description: The state of the call recording.
        enum:
          - none
          - active
          - paused
      group:
        description: The group involved in the group ring call.
        $ref: '#/definitions/DomainEntityRef'
      ani:
        type: string
        description: The call ANI.
      dnis:
        type: string
        description: The call DNIS.
      documentId:
        type: string
        description: The ID of the Content Management document if the call is a fax.
      faxStatus:
        description: Extra fax information if the call is a fax.
        $ref: '#/definitions/FaxStatus'
      monitoredParticipantId:
        type: string
        description: >-
          The ID of the participant being monitored when performing a call
          monitor.
      coachedParticipantId:
        type: string
        description: The ID of the participant being coached when performing a call coach.
      bargedParticipantId:
        type: string
        description: >-
          If this participant barged in a participant's call, then this will be
          the id of the targeted participant.
      consultParticipantId:
        type: string
        description: >-
          The ID of the consult transfer target participant when performing a
          consult transfer.
      uuiData:
        type: string
        description: >-
          User-to-User information which maps to a SIP header field defined in
          RFC7433. UUI data is used in the Public Switched Telephone Network
          (PSTN) for use cases described in RFC6567.
      bargedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant was connected to the barge
          conference in the provider clock. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      securePause:
        type: boolean
        description: True when the recording of this call is in secure pause status.
      disposition:
        description: Call resolution data for Dialer bulk make calls commands.
        $ref: '#/definitions/Disposition'
  MediaParticipantRequest:
    type: object
    properties:
      wrapup:
        description: Wrap-up to assign to this participant.
        $ref: '#/definitions/WrapupInput'
      state:
        type: string
        description: >-
          The state to update to set for this participant's communications. 
          Possible values are: 'connected' and 'disconnected'.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - converting
          - uploading
          - transmitting
          - none
      recording:
        type: boolean
        description: >-
          True to enable recording of this participant, otherwise false to
          disable recording.
      muted:
        type: boolean
        description: True to mute this conversation participant.
      confined:
        type: boolean
        description: >-
          True to confine this conversation participant.  Should only be used
          for ad-hoc conferences
      held:
        type: boolean
        description: True to hold this conversation participant.
      wrapupSkipped:
        type: boolean
        description: True to skip wrap-up for this participant.
  WrapupInput:
    type: object
    properties:
      code:
        type: string
        description: The user configured wrap up code id.
      name:
        type: string
        description: The user configured wrap up code name.
      notes:
        type: string
        description: Text entered by the agent to describe the call or disposition.
      tags:
        type: array
        description: >-
          List of tags selected by the agent to describe the call or
          disposition.
        items:
          type: string
      durationSeconds:
        type: integer
        format: int32
        description: >-
          The length of time in seconds that the agent spent doing after call
          work.
      endTime:
        type: string
        format: date-time
        description: >-
          The timestamp when the wrapup was finished. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      provisional:
        type: boolean
        description: >-
          Indicates if this is a pending save and should not require a code to
          be specified.  This allows someone to save some temporary wrapup that
          will be used later.
      disableEndTimeUpdates:
        type: boolean
        description: Prevent updates to wrapup end time when set to true.
  TransferRequest:
    type: object
    properties:
      transferType:
        type: string
        enum:
          - Attended
          - Unattended
      userId:
        type: string
        description: The user ID of the transfer target.
      address:
        type: string
        description: >-
          The user ID or queue ID of the transfer target. Address like a phone
          number can not be used for callbacks, but they can be used for other
          forms of communication.
      userName:
        type: string
        description: The user name of the transfer target.
      queueId:
        type: string
        description: The queue ID of the transfer target.
      voicemail:
        type: boolean
        description: >-
          If true, transfer to the voicemail inbox of the participant that is
          being replaced.
  SetRecordingState:
    type: object
    properties:
      recordingState:
        type: string
        description: The value of the recordingState to set.
        enum:
          - ACTIVE
          - PAUSED
          - NONE
  ParticipantAttributes:
    type: object
    properties:
      attributes:
        type: object
        description: The map of attribute keys to values.
        additionalProperties:
          type: string
  AssignedWrapupCode:
    type: object
    properties:
      code:
        type: string
        description: The user configured wrap up code id.
      notes:
        type: string
        description: Text entered by the agent to describe the call or disposition.
      tags:
        type: array
        description: >-
          List of tags selected by the agent to describe the call or
          disposition.
        items:
          type: string
      durationSeconds:
        type: integer
        format: int32
        description: The duration in seconds of the wrap-up segment.
      endTime:
        type: string
        format: date-time
        description: >-
          The timestamp when the wrap-up segment ended. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  SetUuiDataRequest:
    type: object
    properties:
      uuiData:
        type: string
        description: The value of the uuiData to set.
  MaxParticipants:
    type: object
    properties:
      maxParticipants:
        type: integer
        format: int32
        description: The maximum number of participants that are allowed on a conversation.
  CallHistoryConversation:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      participants:
        type: array
        description: The list of participants involved in the conversation.
        items:
          $ref: '#/definitions/CallHistoryParticipant'
      direction:
        type: string
        description: The direction of the call relating to the current user
        enum:
          - inbound
          - outbound
      wentToVoicemail:
        type: boolean
        description: Did the call end in the current user's voicemail
      missedCall:
        type: boolean
        description: Did the user not answer this conversation
      startTime:
        type: string
        format: date-time
        description: >-
          The time the user joined the conversation. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      wasConference:
        type: boolean
        description: Was this conversation a conference
      wasCallback:
        type: boolean
        description: Was this conversation a callback
      hadScreenShare:
        type: boolean
        description: Did this conversation have a screen share session
      hadCobrowse:
        type: boolean
        description: Did this conversation have a cobrowse session
      wasOutboundCampaign:
        type: boolean
        description: Was this conversation associated with an outbound campaign
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CallHistoryConversationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CallHistoryConversation'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CallHistoryParticipant:
    type: object
    properties:
      id:
        type: string
        description: The unique participant ID.
      name:
        type: string
        description: The display friendly name of the participant.
      address:
        type: string
        description: The participant address.
      startTime:
        type: string
        format: date-time
        description: >-
          The time when this participant first joined the conversation. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endTime:
        type: string
        format: date-time
        description: >-
          The time when this participant went disconnected for this media (eg:
          video disconnected time). Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      purpose:
        type: string
        description: >-
          The participant's purpose.  Values can be: 'agent', 'user',
          'customer', 'external', 'acd', 'ivr
      direction:
        type: string
        description: 'The participant''s direction.  Values can be: ''inbound'' or ''outbound'''
        enum:
          - inbound
          - outbound
      ani:
        type: string
        description: The call ANI.
      dnis:
        type: string
        description: The call DNIS.
      user:
        description: The PureCloud user for this participant.
        $ref: '#/definitions/User'
      queue:
        description: The PureCloud queue for this participant.
        $ref: '#/definitions/Queue'
      group:
        description: The group involved in the group ring call.
        $ref: '#/definitions/Group'
      disconnectType:
        type: string
        description: The reason the participant was disconnected from the conversation.
        enum:
          - endpoint
          - client
          - system
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
      externalContact:
        description: The PureCloud external contact
        $ref: '#/definitions/ExternalContact'
      externalOrganization:
        description: The PureCloud external organization
        $ref: '#/definitions/ExternalOrganization'
      didInteract:
        type: boolean
        description: Indicates whether the contact ever connected
      sipResponseCodes:
        type: array
        description: Indicates SIP Response codes associated with the participant
        items:
          type: integer
          format: int64
      flaggedReason:
        type: string
        description: The reason specifying why participant flagged the conversation.
        enum:
          - general
      outboundCampaign:
        description: The outbound campaign associated with the participant
        $ref: '#/definitions/Campaign'
  Campaign:
    type: object
    required:
      - callerAddress
      - callerName
      - contactList
      - dialingMode
      - name
      - phoneColumns
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the Campaign.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      contactList:
        description: The ContactList for this Campaign to dial.
        $ref: '#/definitions/DomainEntityRef'
      queue:
        description: >-
          The Queue for this Campaign to route calls to. Required for all
          dialing modes except agentless.
        $ref: '#/definitions/DomainEntityRef'
      dialingMode:
        type: string
        description: The strategy this Campaign will use for dialing.
        enum:
          - agentless
          - preview
          - power
          - predictive
          - progressive
          - external
      script:
        description: >-
          The Script to be displayed to agents that are handling outbound calls.
          Required for all dialing modes except agentless.
        $ref: '#/definitions/DomainEntityRef'
      edgeGroup:
        description: >-
          The EdgeGroup that will place the calls. Required for all dialing
          modes except preview.
        $ref: '#/definitions/DomainEntityRef'
      site:
        description: >-
          The identifier of the site to be used for dialing; can be set in place
          of an edge group.
        $ref: '#/definitions/DomainEntityRef'
      campaignStatus:
        type: string
        description: >-
          The current status of the Campaign. A Campaign may be turned 'on' or
          'off'. Required for updates.
        enum:
          - 'on'
          - stopping
          - 'off'
          - complete
          - invalid
          - forced_off
          - forced_stopping
      phoneColumns:
        type: array
        description: >-
          The ContactPhoneNumberColumns on the ContactList that this Campaign
          should dial.
        items:
          $ref: '#/definitions/PhoneColumn'
      abandonRate:
        type: number
        format: double
        description: >-
          The targeted abandon rate percentage. Required for progressive, power,
          and predictive campaigns.
      dncLists:
        type: array
        description: DncLists for this Campaign to check before placing a call.
        items:
          $ref: '#/definitions/DomainEntityRef'
      callableTimeSet:
        description: >-
          The callable time set for this campaign to check before placing a
          call.
        $ref: '#/definitions/DomainEntityRef'
      callAnalysisResponseSet:
        description: >-
          The call analysis response set to handle call analysis results from
          the edge. Required for all dialing modes except preview.
        $ref: '#/definitions/DomainEntityRef'
      errors:
        type: array
        description: A list of current error conditions associated with the campaign.
        readOnly: true
        items:
          $ref: '#/definitions/RestErrorDetail'
      callerName:
        type: string
        description: The caller id name to be displayed on the outbound call.
      callerAddress:
        type: string
        example: (555) 555-5555
        description: The caller id phone number to be displayed on the outbound call.
      outboundLineCount:
        type: integer
        format: int32
        description: >-
          The number of outbound lines to be concurrently dialed. Only
          applicable to non-preview campaigns; only required for agentless.
      ruleSets:
        type: array
        description: Rule sets to be applied while this campaign is dialing.
        items:
          $ref: '#/definitions/DomainEntityRef'
      skipPreviewDisabled:
        type: boolean
        description: >-
          Whether or not agents can skip previews without placing a call. Only
          applicable for preview campaigns.
      previewTimeOutSeconds:
        type: integer
        format: int64
        description: >-
          The number of seconds before a call will be automatically placed on a
          preview. A value of 0 indicates no automatic placement of calls. Only
          applicable to preview campaigns.
      alwaysRunning:
        type: boolean
        description: >-
          Indicates (when true) that the campaign will remain on after contacts
          are depleted, allowing additional contacts to be appended/added to the
          contact list and processed by the still-running campaign. The campaign
          can still be turned off manually.
      contactSort:
        description: The order in which to sort contacts for dialing, based on a column.
        $ref: '#/definitions/ContactSort'
      contactSorts:
        type: array
        description: >-
          The order in which to sort contacts for dialing, based on up to four
          columns.
        items:
          $ref: '#/definitions/ContactSort'
      noAnswerTimeout:
        type: integer
        format: int32
        description: >-
          How long to wait before dispositioning a call as 'no-answer'. Default
          30 seconds. Only applicable to non-preview campaigns.
      callAnalysisLanguage:
        type: string
        description: The language the edge will use to analyze the call.
      priority:
        type: integer
        format: int32
        description: >-
          The priority of this campaign relative to other campaigns that are
          running on the same queue. 5 is the highest priority, 1 the lowest.
      contactListFilters:
        type: array
        description: >-
          Filter to apply to the contact list before dialing. Currently a
          campaign can only have one filter applied.
        items:
          $ref: '#/definitions/DomainEntityRef'
      division:
        description: The division this campaign belongs to.
        $ref: '#/definitions/DomainEntityRef'
      dynamicContactQueueingSettings:
        description: Settings for dynamic queueing of contacts.
        $ref: '#/definitions/DynamicContactQueueingSettings'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ContactSort:
    type: object
    properties:
      fieldName:
        type: string
      direction:
        type: string
        description: The direction in which to sort contacts.
        enum:
          - ASC
          - DESC
      numeric:
        type: boolean
        description: Whether or not the column contains numeric data.
  DynamicContactQueueingSettings:
    type: object
    properties:
      sort:
        type: boolean
        description: Whether to sort contacts dynamically
  PhoneColumn:
    type: object
    required:
      - columnName
      - type
    properties:
      columnName:
        type: string
        description: The name of the phone column.
      type:
        type: string
        description: The type of the phone column. For example, 'cell' or 'home'.
  RestErrorDetail:
    type: object
    required:
      - error
    properties:
      error:
        type: string
        description: name of the error
        readOnly: true
      details:
        type: string
        description: additional information regarding the error
        readOnly: true
  ConsultTransferResponse:
    type: object
    required:
      - destinationParticipantId
    properties:
      destinationParticipantId:
        type: string
        description: Participant ID to whom the call is being transferred.
  ConsultTransfer:
    type: object
    required:
      - destination
      - speakTo
    properties:
      speakTo:
        type: string
        description: >-
          Determines to whom the initiating participant is speaking. Defaults to
          DESTINATION
        enum:
          - DESTINATION
          - OBJECT
          - BOTH
          - CONFERENCE
      consultingUserId:
        type: string
        description: >-
          The user ID of the person who wants to talk before completing the
          transfer. Could be the same of the context user ID
      destination:
        description: Destination phone number and name.
        $ref: '#/definitions/Destination'
  ConsultTransferToAgent:
    type: object
    required:
      - speakTo
    properties:
      speakTo:
        type: string
        description: >-
          Determines to whom the initiating participant is speaking. Defaults to
          DESTINATION
        enum:
          - DESTINATION
          - OBJECT
          - BOTH
          - CONFERENCE
      consultingUserId:
        type: string
        description: >-
          The user ID of the person who wants to talk before completing the
          transfer. Could be the same of the context user ID
      userId:
        type: string
        description: The id of the internal user.
      userDisplayName:
        type: string
        description: The name of the internal user.
  ConsultTransferToQueue:
    type: object
    required:
      - speakTo
    properties:
      speakTo:
        type: string
        description: >-
          Determines to whom the initiating participant is speaking. Defaults to
          DESTINATION
        enum:
          - DESTINATION
          - OBJECT
          - BOTH
          - CONFERENCE
      consultingUserId:
        type: string
        description: >-
          The user ID of the person who wants to talk before completing the
          transfer. Could be the same of the context user ID
      queueId:
        type: string
        description: The id of the queue.
      queueName:
        type: string
        description: The name of the queue.
  ConsultTransferToExternal:
    type: object
    required:
      - speakTo
    properties:
      speakTo:
        type: string
        description: >-
          Determines to whom the initiating participant is speaking. Defaults to
          DESTINATION
        enum:
          - DESTINATION
          - OBJECT
          - BOTH
          - CONFERENCE
      consultingUserId:
        type: string
        description: >-
          The user ID of the person who wants to talk before completing the
          transfer. Could be the same of the context user ID
      address:
        type: string
        description: The address (like phone number) of the external contact.
  ConsultTransferUpdate:
    type: object
    required:
      - speakTo
    properties:
      speakTo:
        type: string
        description: Determines to whom the initiating participant is speaking.
        enum:
          - DESTINATION
          - OBJECT
          - BOTH
          - CONFERENCE
      consultingUserId:
        type: string
        description: >-
          The user ID of the person who wants to talk before completing the
          transfer. Could be the same of the context user ID
  CallCommand:
    type: object
    required:
      - callNumber
    properties:
      callNumber:
        type: string
        description: The phone number to dial for this call.
      phoneColumn:
        type: string
        description: >-
          For a dialer preview or scheduled callback, the phone column
          associated with the phone number
  CallbackConversation:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      participants:
        type: array
        description: The list of participants involved in the conversation.
        items:
          $ref: '#/definitions/CallbackMediaParticipant'
      otherMediaUris:
        type: array
        description: The list of other media channels involved in the conversation.
        items:
          type: string
          format: uri
      recentTransfers:
        type: array
        description: >-
          The list of the most recent 20 transfer commands applied to this
          conversation.
        items:
          $ref: '#/definitions/TransferResponse'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CallbackConversationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CallbackConversation'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CallbackMediaParticipant:
    type: object
    properties:
      id:
        type: string
        description: The unique participant ID.
      name:
        type: string
        description: The display friendly name of the participant.
      address:
        type: string
        description: The participant address.
      startTime:
        type: string
        format: date-time
        description: >-
          The time when this participant first joined the conversation. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The time when this participant went connected for this media (eg:
          video connected time). Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endTime:
        type: string
        format: date-time
        description: >-
          The time when this participant went disconnected for this media (eg:
          video disconnected time). Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      startHoldTime:
        type: string
        format: date-time
        description: >-
          The time when this participant's hold started. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      purpose:
        type: string
        description: >-
          The participant's purpose.  Values can be: 'agent', 'user',
          'customer', 'external', 'acd', 'ivr
      state:
        type: string
        description: >-
          The participant's state.  Values can be: 'alerting', 'connected',
          'disconnected', 'dialing', 'contacting
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - converting
          - uploading
          - transmitting
          - none
      direction:
        type: string
        description: 'The participant''s direction.  Values can be: ''inbound'' or ''outbound'''
        enum:
          - inbound
          - outbound
      disconnectType:
        type: string
        description: The reason the participant was disconnected from the conversation.
        enum:
          - endpoint
          - client
          - system
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
      held:
        type: boolean
        description: Value is true when the participant is on hold.
      wrapupRequired:
        type: boolean
        description: Value is true when the participant requires wrap-up.
      wrapupPrompt:
        type: string
        description: The wrap-up prompt indicating the type of wrap-up to be performed.
      mediaRoles:
        type: array
        description: >-
          List of roles this participant's media has had on the conversation, ie
          monitor, coach, etc
        items:
          type: string
      user:
        description: The PureCloud user for this participant.
        $ref: '#/definitions/DomainEntityRef'
      queue:
        description: The PureCloud queue for this participant.
        $ref: '#/definitions/DomainEntityRef'
      team:
        description: The PureCloud team for this participant.
        $ref: '#/definitions/DomainEntityRef'
      attributes:
        type: object
        description: A list of ad-hoc attributes for the participant.
        additionalProperties:
          type: string
      errorInfo:
        description: If the conversation ends in error, contains additional error details.
        $ref: '#/definitions/ErrorInfo'
      script:
        description: The Engage script that should be used by this participant.
        $ref: '#/definitions/DomainEntityRef'
      wrapupTimeoutMs:
        type: integer
        format: int32
        description: The amount of time the participant has to complete wrap-up.
      wrapupSkipped:
        type: boolean
        description: Value is true when the participant has skipped wrap-up.
      alertingTimeoutMs:
        type: integer
        format: int32
        description: >-
          Specifies how long the agent has to answer an interaction before being
          marked as not responding.
      provider:
        type: string
        description: The source provider for the communication.
      externalContact:
        description: >-
          If this participant represents an external contact, then this will be
          the reference for the external contact.
        $ref: '#/definitions/DomainEntityRef'
      externalOrganization:
        description: >-
          If this participant represents an external org, then this will be the
          reference for the external org.
        $ref: '#/definitions/DomainEntityRef'
      wrapup:
        description: Wrapup for this participant, if it has been applied.
        $ref: '#/definitions/Wrapup'
      peer:
        type: string
        description: >-
          The peer communication corresponding to a matching leg for this
          communication.
      flaggedReason:
        type: string
        description: The reason specifying why participant flagged the conversation.
        enum:
          - general
      journeyContext:
        description: >-
          Journey System data/context that is applicable to this communication. 
          When used for historical purposes, the context should be immutable. 
          When null, there is no applicable Journey System context.
        $ref: '#/definitions/JourneyContext'
      conversationRoutingData:
        description: Information on how a communication should be routed to an agent.
        $ref: '#/definitions/ConversationRoutingData'
      startAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant started after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant ended after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      outboundPreview:
        description: The outbound preview associated with this callback.
        $ref: '#/definitions/DialerPreview'
      voicemail:
        description: The voicemail associated with this callback.
        $ref: '#/definitions/Voicemail'
      callbackNumbers:
        type: array
        description: The list of phone number to use for this callback.
        items:
          type: string
      callbackUserName:
        type: string
        description: The name of the callback target.
      externalCampaign:
        type: boolean
        description: True if the call for the callback uses external dialing.
      skipEnabled:
        type: boolean
        description: If true, the callback can be skipped.
      timeoutSeconds:
        type: integer
        format: int32
        description: Duration in seconds before the callback will be auto-dialed.
      automatedCallbackConfigId:
        type: string
        description: >-
          The id of the config for automatically placing the callback (and
          handling the disposition). If absent, the callback will not be placed
          automatically but routed to an agent as per normal.
      callbackScheduledTime:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  CallbackIdentifier:
    type: object
    required:
      - id
      - type
    properties:
      type:
        type: string
        description: The type of the associated callback participant
        enum:
          - ACD
          - EXTERNAL
      id:
        type: string
        description: The identifier of the callback
  CreateCallbackResponse:
    type: object
    required:
      - callbackIdentifiers
      - conversation
    properties:
      conversation:
        description: The conversation associated with the callback
        $ref: '#/definitions/DomainEntityRef'
      callbackIdentifiers:
        type: array
        description: The list of communication identifiers for the callback participants
        items:
          $ref: '#/definitions/CallbackIdentifier'
  CreateCallbackCommand:
    type: object
    required:
      - callbackNumbers
    properties:
      scriptId:
        type: string
        description: The identifier of the script to be used for the callback
      queueId:
        type: string
        description: >-
          The identifier of the queue to be used for the callback. Either
          queueId or routingData is required.
      routingData:
        description: >-
          The routing data to be used for the callback. Either queueId or
          routingData is required.
        $ref: '#/definitions/RoutingData'
      callbackUserName:
        type: string
        description: The name of the party to be called back.
      callbackNumbers:
        type: array
        description: A list of phone numbers for the callback.
        items:
          type: string
      callbackScheduledTime:
        type: string
        format: date-time
        example: '2015-01-02T16:59:59.000Z'
        description: >-
          The scheduled date-time for the callback as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss.SSSZ
      countryCode:
        type: string
        description: The country code to be associated with the callback numbers.
      validateCallbackNumbers:
        type: boolean
        description: >-
          Whether or not to validate the callback numbers for phone number
          format.
      data:
        type: object
        description: >-
          A map of key-value pairs containing additional data that can be
          associated to the callback. These values will appear in the attributes
          property on the conversation participant. Example: { "notes": "ready
          to close the deal!", "customerPreferredName": "Doc" }
        additionalProperties:
          type: string
      callerId:
        type: string
        description: >-
          The phone number displayed to recipients when a phone call is placed
          as part of the callback. Must conform to the E.164 format. May be
          overridden by other settings in the system such as external trunk
          settings. Telco support for "callerId" varies.
      callerIdName:
        type: string
        description: >-
          The name displayed to recipients when a phone call is placed as part
          of the callback. May be overridden by other settings in the system
          such as external trunk settings. Telco support for "callerIdName"
          varies.
  RoutingData:
    type: object
    required:
      - queueId
    properties:
      queueId:
        type: string
        description: The identifier of the routing queue
      languageId:
        type: string
        description: The identifier of a language to be considered in routing
      priority:
        type: integer
        format: int32
        description: The priority for routing
      skillIds:
        type: array
        description: A list of skill identifiers to be considered in routing
        items:
          type: string
      preferredAgentIds:
        type: array
        description: A list of agents to be preferred in routing
        items:
          type: string
      scoredAgents:
        type: array
        description: >-
          A list of scored agents for routing decisions. For Agent Owned
          Callbacks use one scored agent with a score of 100.
        items:
          $ref: '#/definitions/ScoredAgent'
      routingFlags:
        type: array
        description: >-
          An array of flags indicating how the conversation should be routed.
          Use "AGENT_OWNED_CALLBACK" when creating an Agent Owned Callback.
        items:
          type: string
  PatchCallbackResponse:
    type: object
    required:
      - callbackIdentifiers
      - conversation
    properties:
      conversation:
        description: The conversation associated with the callback
        $ref: '#/definitions/DomainEntityRef'
      callbackIdentifiers:
        type: array
        description: The list of communication identifiers for the callback participants
        items:
          $ref: '#/definitions/CallbackIdentifier'
  WebChatConversation:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      member:
        description: Chat Member
        $ref: '#/definitions/WebChatMemberInfo'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WebChatMemberInfo:
    type: object
    required:
      - role
    properties:
      id:
        type: string
        description: The communicationId of this member.
      displayName:
        type: string
        description: The display name of the member.
      firstName:
        type: string
        description: The first name of the member.
      lastName:
        type: string
        description: The last name of the member.
      email:
        type: string
        description: The email address of the member.
      phoneNumber:
        type: string
        description: The phone number of the member.
      avatarImageUrl:
        type: string
        format: uri
        description: The url to the avatar image of the member.
      role:
        type: string
        description: The role of the member, one of [agent, customer, acd, workflow]
        enum:
          - AGENT
          - CUSTOMER
          - WORKFLOW
          - ACD
      joinDate:
        type: string
        format: date-time
        description: >-
          The time the member joined the conversation. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      leaveDate:
        type: string
        format: date-time
        description: >-
          The time the member left the conversation, or null if the member is
          still active in the conversation. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      authenticatedGuest:
        type: boolean
        description: If true, the guest member is an authenticated guest.
      customFields:
        type: object
        description: Any custom fields of information pertaining to this member.
        additionalProperties:
          type: string
      state:
        type: string
        description: The connection state of this member.
        enum:
          - CONNECTED
          - DISCONNECTED
          - ALERTING
  WebChatMessage:
    type: object
    required:
      - body
      - bodyType
      - conversation
      - sender
      - timestamp
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      conversation:
        description: The identifier of the conversation
        $ref: '#/definitions/WebChatConversation'
      sender:
        description: The member who sent the message
        $ref: '#/definitions/WebChatMemberInfo'
      body:
        type: string
        description: The message body.
      bodyType:
        type: string
        description: >-
          The purpose of the message within the conversation, such as a standard
          text entry versus a greeting.
        enum:
          - standard
          - notice
          - member-join
          - member-leave
          - media-request
      timestamp:
        type: string
        format: date-time
        description: The timestamp of the message, in ISO-8601 format
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WebChatMessageEntityList:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
      entities:
        type: array
        items:
          $ref: '#/definitions/WebChatMessage'
      previousPage:
        type: string
      next:
        type: string
      selfUri:
        type: string
        format: uri
  CreateWebChatMessageRequest:
    type: object
    required:
      - body
    properties:
      body:
        type: string
        description: >-
          The message body. Note that message bodies are limited to 4,000
          characters.
      bodyType:
        type: string
        description: >-
          The purpose of the message within the conversation, such as a standard
          text entry versus a greeting.
        enum:
          - standard
          - notice
          - member-join
          - member-leave
          - media-request
  WebChatTyping:
    type: object
    required:
      - conversation
      - id
      - sender
      - timestamp
    properties:
      id:
        type: string
        description: >-
          The event identifier of this typing indicator event (useful to guard
          against event re-delivery
      conversation:
        description: The identifier of the conversation
        $ref: '#/definitions/WebChatConversation'
      sender:
        description: The member who sent the message
        $ref: '#/definitions/WebChatMemberInfo'
      timestamp:
        type: string
        format: date-time
        description: The timestamp of the message, in ISO-8601 format
  ChatConversation:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      participants:
        type: array
        description: The list of participants involved in the conversation.
        items:
          $ref: '#/definitions/ChatMediaParticipant'
      otherMediaUris:
        type: array
        description: The list of other media channels involved in the conversation.
        items:
          type: string
          format: uri
      recentTransfers:
        type: array
        description: >-
          The list of the most recent 20 transfer commands applied to this
          conversation.
        items:
          $ref: '#/definitions/TransferResponse'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ChatMediaParticipant:
    type: object
    properties:
      id:
        type: string
        description: The unique participant ID.
      name:
        type: string
        description: The display friendly name of the participant.
      address:
        type: string
        description: The participant address.
      startTime:
        type: string
        format: date-time
        description: >-
          The time when this participant first joined the conversation. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The time when this participant went connected for this media (eg:
          video connected time). Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endTime:
        type: string
        format: date-time
        description: >-
          The time when this participant went disconnected for this media (eg:
          video disconnected time). Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      startHoldTime:
        type: string
        format: date-time
        description: >-
          The time when this participant's hold started. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      purpose:
        type: string
        description: >-
          The participant's purpose.  Values can be: 'agent', 'user',
          'customer', 'external', 'acd', 'ivr
      state:
        type: string
        description: >-
          The participant's state.  Values can be: 'alerting', 'connected',
          'disconnected', 'dialing', 'contacting
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - converting
          - uploading
          - transmitting
          - none
      direction:
        type: string
        description: 'The participant''s direction.  Values can be: ''inbound'' or ''outbound'''
        enum:
          - inbound
          - outbound
      disconnectType:
        type: string
        description: The reason the participant was disconnected from the conversation.
        enum:
          - endpoint
          - client
          - system
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
      held:
        type: boolean
        description: Value is true when the participant is on hold.
      wrapupRequired:
        type: boolean
        description: Value is true when the participant requires wrap-up.
      wrapupPrompt:
        type: string
        description: The wrap-up prompt indicating the type of wrap-up to be performed.
      mediaRoles:
        type: array
        description: >-
          List of roles this participant's media has had on the conversation, ie
          monitor, coach, etc
        items:
          type: string
      user:
        description: The PureCloud user for this participant.
        $ref: '#/definitions/DomainEntityRef'
      queue:
        description: The PureCloud queue for this participant.
        $ref: '#/definitions/DomainEntityRef'
      team:
        description: The PureCloud team for this participant.
        $ref: '#/definitions/DomainEntityRef'
      attributes:
        type: object
        description: A list of ad-hoc attributes for the participant.
        additionalProperties:
          type: string
      errorInfo:
        description: If the conversation ends in error, contains additional error details.
        $ref: '#/definitions/ErrorInfo'
      script:
        description: The Engage script that should be used by this participant.
        $ref: '#/definitions/DomainEntityRef'
      wrapupTimeoutMs:
        type: integer
        format: int32
        description: The amount of time the participant has to complete wrap-up.
      wrapupSkipped:
        type: boolean
        description: Value is true when the participant has skipped wrap-up.
      alertingTimeoutMs:
        type: integer
        format: int32
        description: >-
          Specifies how long the agent has to answer an interaction before being
          marked as not responding.
      provider:
        type: string
        description: The source provider for the communication.
      externalContact:
        description: >-
          If this participant represents an external contact, then this will be
          the reference for the external contact.
        $ref: '#/definitions/DomainEntityRef'
      externalOrganization:
        description: >-
          If this participant represents an external org, then this will be the
          reference for the external org.
        $ref: '#/definitions/DomainEntityRef'
      wrapup:
        description: Wrapup for this participant, if it has been applied.
        $ref: '#/definitions/Wrapup'
      peer:
        type: string
        description: >-
          The peer communication corresponding to a matching leg for this
          communication.
      flaggedReason:
        type: string
        description: The reason specifying why participant flagged the conversation.
        enum:
          - general
      journeyContext:
        description: >-
          Journey System data/context that is applicable to this communication. 
          When used for historical purposes, the context should be immutable. 
          When null, there is no applicable Journey System context.
        $ref: '#/definitions/JourneyContext'
      conversationRoutingData:
        description: Information on how a communication should be routed to an agent.
        $ref: '#/definitions/ConversationRoutingData'
      startAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant started after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant ended after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      roomId:
        type: string
        description: The ID of the chat room.
      avatarImageUrl:
        type: string
        description: If available, the URI to the avatar image of this communication.
  CreateWebChatRequest:
    type: object
    required:
      - provider
      - queueId
    properties:
      queueId:
        type: string
        description: The ID of the queue to use for routing the chat conversation.
      provider:
        type: string
        description: The name of the provider that is sourcing the web chat.
      skillIds:
        type: array
        description: The list of skill ID's to use for routing.
        items:
          type: string
      languageId:
        type: string
        description: The ID of the langauge to use for routing.
      priority:
        type: integer
        format: int64
        description: The priority to assign to the conversation for routing.
      attributes:
        type: object
        description: The list of attributes to associate with the customer participant.
        additionalProperties:
          type: string
      customerName:
        type: string
        description: The name of the customer participating in the web chat.
  ChatConversationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ChatConversation'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CobrowseConversation:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      participants:
        type: array
        description: The list of participants involved in the conversation.
        items:
          $ref: '#/definitions/CobrowseMediaParticipant'
      otherMediaUris:
        type: array
        description: The list of other media channels involved in the conversation.
        items:
          type: string
          format: uri
      recentTransfers:
        type: array
        description: >-
          The list of the most recent 20 transfer commands applied to this
          conversation.
        items:
          $ref: '#/definitions/TransferResponse'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CobrowseConversationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CobrowseConversation'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CobrowseMediaParticipant:
    type: object
    properties:
      id:
        type: string
        description: The unique participant ID.
      name:
        type: string
        description: The display friendly name of the participant.
      address:
        type: string
        description: The participant address.
      startTime:
        type: string
        format: date-time
        description: >-
          The time when this participant first joined the conversation. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The time when this participant went connected for this media (eg:
          video connected time). Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endTime:
        type: string
        format: date-time
        description: >-
          The time when this participant went disconnected for this media (eg:
          video disconnected time). Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      startHoldTime:
        type: string
        format: date-time
        description: >-
          The time when this participant's hold started. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      purpose:
        type: string
        description: >-
          The participant's purpose.  Values can be: 'agent', 'user',
          'customer', 'external', 'acd', 'ivr
      state:
        type: string
        description: >-
          The participant's state.  Values can be: 'alerting', 'connected',
          'disconnected', 'dialing', 'contacting
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - converting
          - uploading
          - transmitting
          - none
      direction:
        type: string
        description: 'The participant''s direction.  Values can be: ''inbound'' or ''outbound'''
        enum:
          - inbound
          - outbound
      disconnectType:
        type: string
        description: The reason the participant was disconnected from the conversation.
        enum:
          - endpoint
          - client
          - system
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
      held:
        type: boolean
        description: Value is true when the participant is on hold.
      wrapupRequired:
        type: boolean
        description: Value is true when the participant requires wrap-up.
      wrapupPrompt:
        type: string
        description: The wrap-up prompt indicating the type of wrap-up to be performed.
      mediaRoles:
        type: array
        description: >-
          List of roles this participant's media has had on the conversation, ie
          monitor, coach, etc
        items:
          type: string
      user:
        description: The PureCloud user for this participant.
        $ref: '#/definitions/DomainEntityRef'
      queue:
        description: The PureCloud queue for this participant.
        $ref: '#/definitions/DomainEntityRef'
      team:
        description: The PureCloud team for this participant.
        $ref: '#/definitions/DomainEntityRef'
      attributes:
        type: object
        description: A list of ad-hoc attributes for the participant.
        additionalProperties:
          type: string
      errorInfo:
        description: If the conversation ends in error, contains additional error details.
        $ref: '#/definitions/ErrorInfo'
      script:
        description: The Engage script that should be used by this participant.
        $ref: '#/definitions/DomainEntityRef'
      wrapupTimeoutMs:
        type: integer
        format: int32
        description: The amount of time the participant has to complete wrap-up.
      wrapupSkipped:
        type: boolean
        description: Value is true when the participant has skipped wrap-up.
      alertingTimeoutMs:
        type: integer
        format: int32
        description: >-
          Specifies how long the agent has to answer an interaction before being
          marked as not responding.
      provider:
        type: string
        description: The source provider for the communication.
      externalContact:
        description: >-
          If this participant represents an external contact, then this will be
          the reference for the external contact.
        $ref: '#/definitions/DomainEntityRef'
      externalOrganization:
        description: >-
          If this participant represents an external org, then this will be the
          reference for the external org.
        $ref: '#/definitions/DomainEntityRef'
      wrapup:
        description: Wrapup for this participant, if it has been applied.
        $ref: '#/definitions/Wrapup'
      peer:
        type: string
        description: >-
          The peer communication corresponding to a matching leg for this
          communication.
      flaggedReason:
        type: string
        description: The reason specifying why participant flagged the conversation.
        enum:
          - general
      journeyContext:
        description: >-
          Journey System data/context that is applicable to this communication. 
          When used for historical purposes, the context should be immutable. 
          When null, there is no applicable Journey System context.
        $ref: '#/definitions/JourneyContext'
      conversationRoutingData:
        description: Information on how a communication should be routed to an agent.
        $ref: '#/definitions/ConversationRoutingData'
      startAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant started after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant ended after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      cobrowseSessionId:
        type: string
        description: The co-browse session ID.
      cobrowseRole:
        type: string
        description: >-
          This value identifies the role of the co-browse client within the
          co-browse session (a client is a sharer or a viewer).
      controlling:
        type: array
        description: >-
          ID of co-browse participants for which this client has been granted
          control (list is empty if this client cannot control any shared
          pages).
        items:
          type: string
      viewerUrl:
        type: string
        description: The URL that can be used to open co-browse session in web browser.
      providerEventTime:
        type: string
        format: date-time
        description: >-
          The time when the provider event which triggered this conversation
          update happened in the corrected provider clock. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  EmailMessage:
    type: object
    required:
      - from
      - textBody
      - to
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      to:
        type: array
        description: The recipients of the email message.
        items:
          $ref: '#/definitions/EmailAddress'
      cc:
        type: array
        description: The recipients that were copied on the email message.
        items:
          $ref: '#/definitions/EmailAddress'
      bcc:
        type: array
        description: The recipients that were blind copied on the email message.
        items:
          $ref: '#/definitions/EmailAddress'
      from:
        description: The sender of the email message.
        $ref: '#/definitions/EmailAddress'
      replyTo:
        description: The receiver of the reply email message.
        $ref: '#/definitions/EmailAddress'
      subject:
        type: string
        description: The subject of the email message.
      attachments:
        type: array
        description: The attachments of the email message.
        items:
          $ref: '#/definitions/Attachment'
      textBody:
        type: string
        description: The text body of the email message.
      htmlBody:
        type: string
        description: The html body of the email message.
      time:
        type: string
        format: date-time
        description: >-
          The time when the message was received or sent. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      historyIncluded:
        type: boolean
        description: >-
          Indicates whether the history of previous emails of the conversation
          is included within the email bodies of this message.
      state:
        type: string
        description: The state of the current draft.
        enum:
          - Created
          - Ready
          - Edited
      draftType:
        type: string
        description: The type of draft that need to be treated.
        enum:
          - Reply
          - ReplyAll
          - Forward
      emailSizeBytes:
        type: integer
        format: int32
        description: >-
          Indicates an estimation of the size of the current email as a whole,
          in its final, ready to be sent form.
        readOnly: true
      maxEmailSizeBytes:
        type: integer
        format: int32
        description: >-
          Indicates the maximum allowed size for an email to be send via SMTP
          server, based on the email domain configuration
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EmailConversation:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      participants:
        type: array
        description: The list of participants involved in the conversation.
        items:
          $ref: '#/definitions/EmailMediaParticipant'
      otherMediaUris:
        type: array
        description: The list of other media channels involved in the conversation.
        items:
          type: string
          format: uri
      recentTransfers:
        type: array
        description: >-
          The list of the most recent 20 transfer commands applied to this
          conversation.
        items:
          $ref: '#/definitions/TransferResponse'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EmailConversationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/EmailConversation'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  EmailMediaParticipant:
    type: object
    properties:
      id:
        type: string
        description: The unique participant ID.
      name:
        type: string
        description: The display friendly name of the participant.
      address:
        type: string
        description: The participant address.
      startTime:
        type: string
        format: date-time
        description: >-
          The time when this participant first joined the conversation. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The time when this participant went connected for this media (eg:
          video connected time). Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endTime:
        type: string
        format: date-time
        description: >-
          The time when this participant went disconnected for this media (eg:
          video disconnected time). Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      startHoldTime:
        type: string
        format: date-time
        description: >-
          The time when this participant's hold started. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      purpose:
        type: string
        description: >-
          The participant's purpose.  Values can be: 'agent', 'user',
          'customer', 'external', 'acd', 'ivr
      state:
        type: string
        description: >-
          The participant's state.  Values can be: 'alerting', 'connected',
          'disconnected', 'dialing', 'contacting
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - converting
          - uploading
          - transmitting
          - none
      direction:
        type: string
        description: 'The participant''s direction.  Values can be: ''inbound'' or ''outbound'''
        enum:
          - inbound
          - outbound
      disconnectType:
        type: string
        description: The reason the participant was disconnected from the conversation.
        enum:
          - endpoint
          - client
          - system
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
      held:
        type: boolean
        description: Value is true when the participant is on hold.
      wrapupRequired:
        type: boolean
        description: Value is true when the participant requires wrap-up.
      wrapupPrompt:
        type: string
        description: The wrap-up prompt indicating the type of wrap-up to be performed.
      mediaRoles:
        type: array
        description: >-
          List of roles this participant's media has had on the conversation, ie
          monitor, coach, etc
        items:
          type: string
      user:
        description: The PureCloud user for this participant.
        $ref: '#/definitions/DomainEntityRef'
      queue:
        description: The PureCloud queue for this participant.
        $ref: '#/definitions/DomainEntityRef'
      team:
        description: The PureCloud team for this participant.
        $ref: '#/definitions/DomainEntityRef'
      attributes:
        type: object
        description: A list of ad-hoc attributes for the participant.
        additionalProperties:
          type: string
      errorInfo:
        description: If the conversation ends in error, contains additional error details.
        $ref: '#/definitions/ErrorInfo'
      script:
        description: The Engage script that should be used by this participant.
        $ref: '#/definitions/DomainEntityRef'
      wrapupTimeoutMs:
        type: integer
        format: int32
        description: The amount of time the participant has to complete wrap-up.
      wrapupSkipped:
        type: boolean
        description: Value is true when the participant has skipped wrap-up.
      alertingTimeoutMs:
        type: integer
        format: int32
        description: >-
          Specifies how long the agent has to answer an interaction before being
          marked as not responding.
      provider:
        type: string
        description: The source provider for the communication.
      externalContact:
        description: >-
          If this participant represents an external contact, then this will be
          the reference for the external contact.
        $ref: '#/definitions/DomainEntityRef'
      externalOrganization:
        description: >-
          If this participant represents an external org, then this will be the
          reference for the external org.
        $ref: '#/definitions/DomainEntityRef'
      wrapup:
        description: Wrapup for this participant, if it has been applied.
        $ref: '#/definitions/Wrapup'
      peer:
        type: string
        description: >-
          The peer communication corresponding to a matching leg for this
          communication.
      flaggedReason:
        type: string
        description: The reason specifying why participant flagged the conversation.
        enum:
          - general
      journeyContext:
        description: >-
          Journey System data/context that is applicable to this communication. 
          When used for historical purposes, the context should be immutable. 
          When null, there is no applicable Journey System context.
        $ref: '#/definitions/JourneyContext'
      conversationRoutingData:
        description: Information on how a communication should be routed to an agent.
        $ref: '#/definitions/ConversationRoutingData'
      startAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant started after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant ended after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      subject:
        type: string
        description: The subject of the email.
      messagesSent:
        type: integer
        format: int32
        description: The number of messages that have been sent in this email conversation.
      autoGenerated:
        type: boolean
        description: >-
          Indicates that the email was auto-generated like an Out of Office
          reply.
      draftAttachments:
        type: array
        description: A list of uploaded attachments on the email draft.
        items:
          $ref: '#/definitions/Attachment'
      spam:
        type: boolean
        description: Indicates if the inbound email was marked as spam.
      messageId:
        type: string
        description: >-
          A globally unique identifier for the stored content of this
          communication.
  EmailMessageListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/EmailMessage'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CreateEmailRequest:
    type: object
    required:
      - provider
    properties:
      queueId:
        type: string
        description: >-
          The ID of the queue to use for routing the email conversation. This
          field is mutually exclusive with flowId
      flowId:
        type: string
        description: >-
          The ID of the flow to use for routing email conversation. This field
          is mutually exclusive with queueId
      provider:
        type: string
        description: >-
          The name of the provider that is sourcing the emails. The Provider
          "PureCloud Email" is reserved for native emails.
      skillIds:
        type: array
        description: The list of skill ID's to use for routing.
        items:
          type: string
      languageId:
        type: string
        description: The ID of the language to use for routing.
      priority:
        type: integer
        format: int64
        description: The priority to assign to the conversation for routing.
      attributes:
        type: object
        description: The list of attributes to associate with the customer participant.
        additionalProperties:
          type: string
      toAddress:
        type: string
        description: The email address of the recipient of the email.
      toName:
        type: string
        description: The name of the recipient of the email.
      fromAddress:
        type: string
        description: The email address of the sender of the email.
      fromName:
        type: string
        description: The name of the sender of the email.
      subject:
        type: string
        description: The subject of the email
      direction:
        type: string
        description: >-
          Specify OUTBOUND to send an email on behalf of a queue, or INBOUND to
          create an external conversation. An external conversation is one where
          the provider is not PureCloud based.
        enum:
          - OUTBOUND
          - INBOUND
      htmlBody:
        type: string
        description: An HTML body content of the email.
      textBody:
        type: string
        description: A text body content of the email.
      externalContactId:
        type: string
        description: >-
          The external contact with which the email should be associated. This
          field is only valid for OUTBOUND email.
  EmailsSettings:
    type: object
    properties:
      sendingSizeLimit:
        type: integer
        format: int32
  CopyAttachmentsRequest:
    type: object
    required:
      - attachments
      - sourceMessage
    properties:
      sourceMessage:
        description: >-
          A reference to the email message within the current conversation that
          owns the attachments to be copied
        $ref: '#/definitions/DomainEntityRef'
      attachments:
        type: array
        description: >-
          A list of attachments that will be copied from the source message to
          the current draft
        items:
          $ref: '#/definitions/Attachment'
  DraftManipulationRequest:
    type: object
    properties:
      translate:
        description: >-
          A set of definitions to translate email attributes and correctly
          display date and time, for a given language
        $ref: '#/definitions/HistoryHeadersTranslation'
      draftType:
        type: string
        description: >-
          The kind of draft that as to be treated. Used to prefix response
          subject or auto-include information
        enum:
          - Reply
          - ReplyAll
          - Forward
  HistoryHeadersTranslation:
    type: object
    required:
      - cc
      - forwardPrefix
      - from
      - language
      - replyPrefix
      - sent
      - subject
      - to
    properties:
      from:
        type: string
        description: A translation for the word "from", for the expected language
      to:
        type: string
        description: A translation for the word "to", for the expected language
      cc:
        type: string
        description: A translation for the word "cc", for the expected language
      subject:
        type: string
        description: A translation for the word "subject", for the expected language
      replyPrefix:
        type: string
        description: >-
          A translation for the subject prefix "Reply", for the expected
          language
      forwardPrefix:
        type: string
        description: >-
          A translation for the subject prefix "Forward", for the expected
          language
      sent:
        type: string
        description: A translation for the word "sent", for the expected language
      language:
        type: string
        description: The code of the expected language
      timeZone:
        type: string
        description: >-
          Timezone used by the agent, used to format the sent email date and
          time. If not defined, will default to UTC. Time zones are represented
          as a string of the zone name as found in the IANA time zone database.
          For example: UTC, Etc/UTC, or Europe/London
  EmailMessageReply:
    type: object
    required:
      - from
      - textBody
      - to
    properties:
      to:
        type: array
        description: The recipients of the email message.
        items:
          $ref: '#/definitions/EmailAddress'
      cc:
        type: array
        description: The recipients that were copied on the email message.
        items:
          $ref: '#/definitions/EmailAddress'
      bcc:
        type: array
        description: The recipients that were blind copied on the email message.
        items:
          $ref: '#/definitions/EmailAddress'
      from:
        description: The sender of the email message.
        $ref: '#/definitions/EmailAddress'
      replyTo:
        description: The receiver of the reply email message.
        $ref: '#/definitions/EmailAddress'
      subject:
        type: string
        description: The subject of the email message.
      attachments:
        type: array
        description: The attachments of the email message.
        items:
          $ref: '#/definitions/Attachment'
      textBody:
        type: string
        description: The text body of the email message.
      htmlBody:
        type: string
        description: The html body of the email message.
      time:
        type: string
        format: date-time
        description: >-
          The time when the message was received or sent. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      historyIncluded:
        type: boolean
        description: >-
          Indicates whether the history of previous emails of the conversation
          is included within the email bodies of this message.
      emailSizeBytes:
        type: integer
        format: int32
        description: >-
          Indicates an estimation of the size of the current email as a whole,
          in its final, ready to be sent form.
        readOnly: true
      maxEmailSizeBytes:
        type: integer
        format: int32
        description: >-
          Indicates the maximum allowed size for an email to be send via SMTP
          server, based on the email domain configuration
        readOnly: true
  InboundMessageRequest:
    type: object
    required:
      - provider
    properties:
      queueId:
        type: string
        description: >-
          The ID of the queue to use for routing the email conversation. This
          field is mutually exclusive with flowId
      flowId:
        type: string
        description: >-
          The ID of the flow to use for routing email conversation. This field
          is mutually exclusive with queueId
      provider:
        type: string
        description: >-
          The name of the provider that is sourcing the email such as Oracle,
          Salesforce, etc.
      skillIds:
        type: array
        description: The list of skill ID's to use for routing.
        items:
          type: string
      languageId:
        type: string
        description: The ID of the language to use for routing.
      priority:
        type: integer
        format: int32
        description: The priority to assign to the conversation for routing.
      attributes:
        type: object
        description: The list of attributes to associate with the customer participant.
        additionalProperties:
          type: string
      toAddress:
        type: string
        description: The email address of the recipient of the email.
      toName:
        type: string
        description: The name of the recipient of the email.
      fromAddress:
        type: string
        description: The email address of the sender of the email.
      fromName:
        type: string
        description: The name of the sender of the email.
      subject:
        type: string
        description: The subject of the email
  AgentlessEmailSendResponseDto:
    type: object
    required:
      - conversationId
      - dateCreated
      - fromAddress
      - senderType
      - toAddresses
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      conversationId:
        type: string
        description: The identifier of the conversation.
      senderType:
        type: string
        description: The identifier of the external participant of the given conversation.
        enum:
          - Outbound
          - Inbound
          - Integration
      fromAddress:
        description: The sender of the message.
        $ref: '#/definitions/EmailAddress'
      toAddresses:
        type: array
        description: The recipient(s) of the message.
        items:
          $ref: '#/definitions/EmailAddress'
      replyToAddress:
        description: The address to use for reply.
        $ref: '#/definitions/EmailAddress'
      subject:
        type: string
        description: The subject of the message.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The message creation timestamp. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  AgentlessEmailSendRequestDto:
    type: object
    required:
      - fromAddress
      - senderType
      - toAddresses
    properties:
      senderType:
        type: string
        description: The direction of the message.
        enum:
          - Outbound
          - Inbound
          - Integration
      conversationId:
        type: string
        description: The identifier of the conversation.
      fromAddress:
        description: The sender of the message.
        $ref: '#/definitions/EmailAddress'
      toAddresses:
        type: array
        description: The recipient(s) of the message.
        items:
          $ref: '#/definitions/EmailAddress'
      replyToAddress:
        description: The address to use for reply.
        $ref: '#/definitions/EmailAddress'
      subject:
        type: string
        description: The subject of the message.
      textBody:
        type: string
        description: The Content of the message, in plain text.
      htmlBody:
        type: string
        description: >-
          The Content of the message, in HTML. Links, images and styles are
          allowed
  ConversationChannelMetadata:
    type: object
    properties: {}
    description: Information about the channel.
  ConversationContentAttachment:
    type: object
    required:
      - mediaType
    properties:
      id:
        type: string
        description: Provider specific ID for attachment. For example, a LINE sticker ID.
      mediaType:
        type: string
        description: The type of attachment this instance represents.
        enum:
          - Image
          - Video
          - Audio
          - File
          - Link
      url:
        type: string
        description: URL of the attachment.
      mime:
        type: string
        description: >-
          Attachment mime type
          (https://www.iana.org/assignments/media-types/media-types.xhtml).
      text:
        type: string
        description: Text associated with attachment such as an image caption.
      sha256:
        type: string
        description: Secure hash of the attachment content.
      filename:
        type: string
        description: Suggested file name for attachment.
      contentSizeBytes:
        type: integer
        format: int64
        description: Size in bytes of the attachment content.
    description: Attachment object.
  ConversationContentButtonResponse:
    type: object
    required:
      - payload
      - text
    properties:
      type:
        type: string
        description: Describes the button that resulted in the Button Response.
        enum:
          - Button
          - QuickReply
      text:
        type: string
        description: The response text from the button click.
      payload:
        type: string
        description: The response payload associated with the clicked button.
    description: >-
      Button response object representing the click of a structured message
      button, such as a quick reply.
  ConversationContentCard:
    type: object
    required:
      - actions
      - title
    properties:
      title:
        type: string
        description: Text to show in the title.
      description:
        type: string
        description: Text to show in the description.
      image:
        type: string
        description: URL of an image.
      video:
        type: string
        description: URL of a video.
      defaultAction:
        description: The default button action.
        $ref: '#/definitions/ConversationContentCardAction'
      actions:
        type: array
        description: An array of action objects.
        items:
          $ref: '#/definitions/ConversationContentCardAction'
    description: Card content object.
  ConversationContentCardAction:
    type: object
    properties:
      type:
        type: string
        description: Describes the type of action.
        enum:
          - Link
          - Postback
          - Unknown
      text:
        type: string
        description: The response text from the button click.
      payload:
        type: string
        description: >-
          Text to be returned as the payload from a ButtonResponse when a button
          is clicked. The payload and text are a combination which will have to
          be unique across each card and carousel in order to determine which
          button was clicked in that card or carousel.
      url:
        type: string
        description: A URL of a web page to direct the user to.
    description: A card action that a user can take.
  ConversationContentCarousel:
    type: object
    required:
      - cards
    properties:
      cards:
        type: array
        description: An array of card objects.
        items:
          $ref: '#/definitions/ConversationContentCard'
    description: Carousel content object.
  ConversationContentLocation:
    type: object
    properties:
      url:
        type: string
        description: URL of the Location.
      address:
        type: string
        description: Location postal address.
      text:
        type: string
        description: Location name.
      latitude:
        type: number
        format: double
        description: Latitude of the location.
      longitude:
        type: number
        format: double
        description: Longitude of the location.
    description: Location object.
  ConversationContentNotificationTemplate:
    type: object
    required:
      - body
    properties:
      id:
        type: string
        description: >-
          The identifier of the message template in
          'your-namespace@your-template-id/name' format. For External vendor
          (e.g WhatsApp), 'your-namespace@your-template-name'. For GenesysCloud
          canned response message template use 'cannedresponse' as
          your-namespace and use response ID as your-template-id (e.g. response
          ID=1234 then 'cannedresponse@1234')
      language:
        type: string
        description: Template language.
      header:
        description: The template header.
        $ref: '#/definitions/ConversationNotificationTemplateHeader'
      body:
        description: The template body.
        $ref: '#/definitions/ConversationNotificationTemplateBody'
      footer:
        description: The template footer.
        $ref: '#/definitions/ConversationNotificationTemplateFooter'
    description: Template notification object.
  ConversationContentQuickReply:
    type: object
    required:
      - payload
      - text
    properties:
      text:
        type: string
        description: >-
          Text to show inside the quick reply. This is also used as the response
          text after clicking on the quick reply.
      payload:
        type: string
        description: >-
          Content of the payload included in the quick reply response. Could be
          an ID identifying the quick reply response.
      image:
        type: string
        description: URL of an image associated with the quick reply.
      action:
        type: string
        description: >-
          Specifies the type of action that is triggered upon clicking the quick
          reply.
        enum:
          - Message
    description: Quick reply object.
  ConversationContentQuickReplyV2:
    type: object
    required:
      - actions
      - title
    properties:
      title:
        type: string
        description: Text to show as the title of the quick reply.
      actions:
        type: array
        description: An array of quick reply objects.
        items:
          $ref: '#/definitions/ConversationContentQuickReply'
    description: Quick reply object V2.
  ConversationContentStory:
    type: object
    properties:
      type:
        type: string
        description: Type of ephemeral story attachment.
        enum:
          - Mention
          - Reply
      url:
        type: string
        description: URL to the ephemeral story.
      replyToId:
        type: string
        description: ID of the ephemeral story being replied to.
    description: An ephemeral story.
  ConversationContentText:
    type: object
    required:
      - body
    properties:
      type:
        type: string
        description: Type of text content (Deprecated).
        enum:
          - Text
      body:
        type: string
        description: Text to be shown for this content element.
    description: Message content element containing text only.
  ConversationEventCoBrowse:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Describes the type of CoBrowse event.
        enum:
          - Offering
          - OfferingExpired
          - OfferingAccepted
          - OfferingRejected
      sessionId:
        type: string
        description: The CoBrowse session ID.
      sessionJoinToken:
        type: string
        description: The CoBrowse session join token.
    description: A CoBrowse event.
  ConversationEventPresence:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Describes the type of Presence event.
        enum:
          - Join
          - Disconnect
          - Clear
    description: A Presence event.
  ConversationEventTyping:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Describes the type of Typing event.
        enum:
          - 'On'
      duration:
        type: integer
        format: int64
        description: The duration of the Typing event in milliseconds.
        readOnly: true
    description: A Typing event.
  ConversationMessageContent:
    type: object
    required:
      - contentType
    properties:
      contentType:
        type: string
        description: Type of this content element.
        enum:
          - Attachment
          - Location
          - QuickReply
          - Notification
          - ButtonResponse
          - Story
          - Mention
          - Card
          - Carousel
          - Text
          - QuickReplyV2
          - Unknown
      location:
        description: Location content.
        $ref: '#/definitions/ConversationContentLocation'
      attachment:
        description: Attachment content.
        $ref: '#/definitions/ConversationContentAttachment'
      quickReply:
        description: Quick reply content.
        $ref: '#/definitions/ConversationContentQuickReply'
      buttonResponse:
        description: Button response content.
        $ref: '#/definitions/ConversationContentButtonResponse'
      template:
        description: Template notification content.
        $ref: '#/definitions/ConversationContentNotificationTemplate'
      story:
        description: Ephemeral story content.
        $ref: '#/definitions/ConversationContentStory'
      card:
        description: Card content
        $ref: '#/definitions/ConversationContentCard'
      carousel:
        description: Carousel content
        $ref: '#/definitions/ConversationContentCarousel'
      text:
        description: Text content.
        $ref: '#/definitions/ConversationContentText'
      quickReplyV2:
        description: Quick reply V2 content.
        $ref: '#/definitions/ConversationContentQuickReplyV2'
    description: >-
      Message content element. If contentType = "Attachment" only one item is
      allowed.
  ConversationMessageEvent:
    type: object
    required:
      - eventType
    properties:
      eventType:
        type: string
        description: Type of this event element
        enum:
          - CoBrowse
          - Typing
          - Presence
          - Unknown
      coBrowse:
        description: CoBrowse event.
        $ref: '#/definitions/ConversationEventCoBrowse'
      typing:
        description: Typing event.
        $ref: '#/definitions/ConversationEventTyping'
      presence:
        description: Presence event.
        $ref: '#/definitions/ConversationEventPresence'
    description: >-
      Message event element.  Examples include: system messages, typing
      indicators, cobrowse offerings.
  ConversationMessagingChannel:
    type: object
    properties:
      id:
        type: string
        description: The integration ID.
        readOnly: true
      platform:
        type: string
        description: The provider type.
        readOnly: true
        enum:
          - Twitter
          - Facebook
          - Instagram
          - Line
          - Whatsapp
          - WebMessaging
          - Open
          - Sms
      messageId:
        type: string
        description: Unique provider ID of the message such as a Facebook message ID.
        readOnly: true
      to:
        description: Information about the recipient the message is sent to.
        readOnly: true
        $ref: '#/definitions/ConversationMessagingToRecipient'
      from:
        description: Information about the recipient the message is received from.
        readOnly: true
        $ref: '#/definitions/ConversationMessagingFromRecipient'
      time:
        type: string
        format: date-time
        description: >-
          Original time of the event. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Time the message was edited. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateDeleted:
        type: string
        format: date-time
        description: >-
          Time the message was deleted. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
    description: >-
      Channel-specific information that describes the message and the message
      channel/provider.
  ConversationMessagingFromRecipient:
    type: object
    required:
      - id
    properties:
      nickname:
        type: string
        description: Nickname or display name of the recipient.
        readOnly: true
      id:
        type: string
        description: The recipient ID specific to the provider.
      idType:
        type: string
        description: >-
          The recipient ID type. This is used to indicate the format used for
          the ID.
        readOnly: true
        enum:
          - Email
          - Phone
          - Opaque
      image:
        type: string
        description: URL of an image that represents the recipient.
      firstName:
        type: string
        description: First name of the recipient.
      lastName:
        type: string
        description: Last name of the recipient.
      email:
        type: string
        description: E-mail address of the recipient.
        readOnly: true
      additionalIds:
        type: array
        description: List of recipient additional identifiers
        readOnly: true
        items:
          $ref: '#/definitions/ConversationRecipientAdditionalIdentifier'
    description: Information about the recipient the message is received from.
  ConversationMessagingToRecipient:
    type: object
    required:
      - id
    properties:
      nickname:
        type: string
        description: Nickname or display name of the recipient.
        readOnly: true
      id:
        type: string
        description: The recipient ID specific to the provider.
      idType:
        type: string
        description: >-
          The recipient ID type. This is used to indicate the format used for
          the ID.
        readOnly: true
        enum:
          - Email
          - Phone
          - Opaque
      image:
        type: string
        description: URL of an image that represents the recipient.
        readOnly: true
      firstName:
        type: string
        description: First name of the recipient.
        readOnly: true
      lastName:
        type: string
        description: Last name of the recipient.
        readOnly: true
      email:
        type: string
        description: E-mail address of the recipient.
        readOnly: true
      additionalIds:
        type: array
        description: List of recipient additional identifiers
        readOnly: true
        items:
          $ref: '#/definitions/ConversationRecipientAdditionalIdentifier'
    description: Information about the recipient the message is sent to.
  ConversationNormalizedMessage:
    type: object
    required:
      - type
    properties:
      id:
        type: string
        description: >-
          Unique ID of the message. Message receipts will have the same ID as
          the message they reference.
        readOnly: true
      channel:
        description: >-
          Channel-specific information that describes the message and the
          message channel/provider.
        readOnly: true
        $ref: '#/definitions/ConversationMessagingChannel'
      type:
        type: string
        description: Message type.
        enum:
          - Text
          - Structured
          - Receipt
          - Event
          - Message
          - Unknown
      text:
        type: string
        description: Message text.
      content:
        type: array
        description: List of content elements.
        items:
          $ref: '#/definitions/ConversationMessageContent'
      events:
        type: array
        description: List of event elements.
        items:
          $ref: '#/definitions/ConversationMessageEvent'
      status:
        type: string
        description: Message receipt status, only used with type Receipt.
        readOnly: true
        enum:
          - Sent
          - Delivered
          - Read
          - Failed
          - Published
          - Removed
      reasons:
        type: array
        description: >-
          List of reasons for a message receipt that indicates the message has
          failed. Only used with Failed status.
        readOnly: true
        items:
          $ref: '#/definitions/ConversationReason'
      originatingEntity:
        type: string
        description: >-
          Specifies if this message was sent by a human agent or bot. The
          platform may use this to apply appropriate provider policies.
        enum:
          - Human
          - Bot
      isFinalReceipt:
        type: boolean
        description: >-
          Indicates if this is the last message receipt for this message, or if
          another message receipt can be expected.
        readOnly: true
      direction:
        type: string
        description: The direction of the message.
        readOnly: true
        enum:
          - Inbound
          - Outbound
      metadata:
        type: object
        description: Additional metadata about this message.
        additionalProperties:
          type: string
      byoSmsIntegrationId:
        type: string
        description: >-
          The internal id representing the customer supplied sms integration
          message.
    description: >-
      General rich media message structure with normalized feature support
      across many messaging channels.
  ConversationNotificationTemplateBody:
    type: object
    required:
      - parameters
    properties:
      text:
        type: string
        description: Body text. For WhatsApp, ignored.
      parameters:
        type: array
        description: Template parameters for placeholders in template.
        items:
          $ref: '#/definitions/ConversationNotificationTemplateParameter'
    description: Template body object.
  ConversationNotificationTemplateFooter:
    type: object
    properties:
      text:
        type: string
        description: Footer text. For WhatsApp, ignored.
    description: Template footer object.
  ConversationNotificationTemplateHeader:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Template header type.
        enum:
          - Text
          - Media
      text:
        type: string
        description: Header text. For WhatsApp, ignored.
      media:
        description: Media template header image.
        $ref: '#/definitions/ConversationContentAttachment'
      parameters:
        type: array
        description: Template parameters for placeholders in template.
        items:
          $ref: '#/definitions/ConversationNotificationTemplateParameter'
    description: Template header object.
  ConversationNotificationTemplateParameter:
    type: object
    required:
      - text
    properties:
      name:
        type: string
        description: Parameter name.
      text:
        type: string
        description: Parameter text value.
    description: Template parameters for placeholders in template.
  ConversationReason:
    type: object
    required:
      - message
    properties:
      code:
        type: string
        description: The reason code for the failed message receipt.
        enum:
          - MessageExpired
          - RateLimited
          - MessageNotAllowed
          - GeneralError
          - UnsupportedMessage
          - UnknownMessage
          - InvalidMessageStructure
          - InvalidDestination
          - ServerError
          - MediaTypeNotAllowed
          - InvalidMediaContentLength
          - RecipientOptedOut
      message:
        type: string
        description: Description of the reason for the failed message receipt.
    description: Reasons for a failed message receipt.
  ConversationRecipientAdditionalIdentifier:
    type: object
    required:
      - type
      - value
    properties:
      type:
        type: string
        description: Type of the Identifier
        readOnly: true
        enum:
          - Deployment
          - Subject
          - Unknown
      value:
        type: string
        description: The Identifier value.
        readOnly: true
    description: Additional identifiers for describing messaging recipient.
  MessageData:
    type: object
    required:
      - status
      - textBody
      - timestamp
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      providerMessageId:
        type: string
        description: The unique identifier of the message from provider
      timestamp:
        type: string
        format: date-time
        description: >-
          The time when the message was received or sent. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      fromAddress:
        type: string
        description: The sender of the text message.
      toAddress:
        type: string
        description: The recipient of the text message.
      direction:
        type: string
        description: The direction of the message.
        enum:
          - inbound
          - outbound
      messengerType:
        type: string
        description: Type of text messenger.
        enum:
          - sms
          - facebook
          - twitter
          - line
          - whatsapp
          - webmessaging
          - instagram
          - open
      textBody:
        type: string
        description: >-
          The body of the text message. (Deprecated - Instead use
          normalizedMessage.text)
      status:
        type: string
        description: The status of the message.
        enum:
          - queued
          - sent
          - failed
          - received
          - delivery-success
          - delivery-failed
          - read
          - removed
      media:
        type: array
        description: >-
          The media details associated to a message. (Deprecated - Instead use
          normalizedMessage.content[index].attachment)
        items:
          $ref: '#/definitions/MessageMedia'
      stickers:
        type: array
        description: >-
          The sticker details associated to a message. (Deprecated - Instead use
          normalizedMessage.content[index].attachment
        items:
          $ref: '#/definitions/MessageSticker'
      normalizedMessage:
        description: The message into normalized format
        readOnly: true
        $ref: '#/definitions/ConversationNormalizedMessage'
      normalizedReceipts:
        type: array
        description: >-
          The delivery event associated with this message in normalized format,
          if the message direction was outbound
        readOnly: true
        items:
          $ref: '#/definitions/ConversationNormalizedMessage'
      createdBy:
        description: User who sent this message.
        $ref: '#/definitions/User'
      conversationId:
        type: string
        description: The id of the conversation of this message.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  MessageConversationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/EmailConversation'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  AdditionalMessage:
    type: object
    required:
      - textBody
    properties:
      textBody:
        type: string
        description: >-
          The body of the text message.  Maximum character counts are: SMS - 765
          characters, other channels - 2000 characters.
      mediaIds:
        type: array
        description: >-
          The media ids associated with the text message. See
          https://developer.genesys.cloud/api/rest/v2/conversations/messaging-media-upload
          for example usage.
        items:
          type: string
      stickerIds:
        type: array
        description: The sticker ids associated with the text message.
        items:
          type: string
      messagingTemplate:
        description: >-
          The messaging template use to send a predefined canned response with
          the message
        $ref: '#/definitions/MessagingTemplateRequest'
  MessagingTemplateRequest:
    type: object
    properties:
      responseId:
        type: string
        description: >-
          A Response Management response identifier for a messaging template
          defined response
      parameters:
        type: array
        description: >-
          A list of Response Management response substitutions for the
          response's messaging template
        items:
          $ref: '#/definitions/TemplateParameter'
  TemplateParameter:
    type: object
    properties:
      id:
        type: string
        description: Response substitution identifier
      value:
        type: string
        description: Response substitution value
  TextMessageListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/MessageData'
  MessageConversation:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      participants:
        type: array
        description: The list of participants involved in the conversation.
        items:
          $ref: '#/definitions/MessageMediaParticipant'
      otherMediaUris:
        type: array
        description: The list of other media channels involved in the conversation.
        items:
          type: string
          format: uri
      recentTransfers:
        type: array
        description: >-
          The list of the most recent 20 transfer commands applied to this
          conversation.
        items:
          $ref: '#/definitions/TransferResponse'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  MessageMediaParticipant:
    type: object
    properties:
      id:
        type: string
        description: The unique participant ID.
      name:
        type: string
        description: The display friendly name of the participant.
      address:
        type: string
        description: The participant address.
      startTime:
        type: string
        format: date-time
        description: >-
          The time when this participant first joined the conversation. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The time when this participant went connected for this media (eg:
          video connected time). Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endTime:
        type: string
        format: date-time
        description: >-
          The time when this participant went disconnected for this media (eg:
          video disconnected time). Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      startHoldTime:
        type: string
        format: date-time
        description: >-
          The time when this participant's hold started. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      purpose:
        type: string
        description: >-
          The participant's purpose.  Values can be: 'agent', 'user',
          'customer', 'external', 'acd', 'ivr
      state:
        type: string
        description: >-
          The participant's state.  Values can be: 'alerting', 'connected',
          'disconnected', 'dialing', 'contacting
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - converting
          - uploading
          - transmitting
          - none
      direction:
        type: string
        description: 'The participant''s direction.  Values can be: ''inbound'' or ''outbound'''
        enum:
          - inbound
          - outbound
      disconnectType:
        type: string
        description: The reason the participant was disconnected from the conversation.
        enum:
          - endpoint
          - client
          - system
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
      held:
        type: boolean
        description: Value is true when the participant is on hold.
      wrapupRequired:
        type: boolean
        description: Value is true when the participant requires wrap-up.
      wrapupPrompt:
        type: string
        description: The wrap-up prompt indicating the type of wrap-up to be performed.
      mediaRoles:
        type: array
        description: >-
          List of roles this participant's media has had on the conversation, ie
          monitor, coach, etc
        items:
          type: string
      user:
        description: The PureCloud user for this participant.
        $ref: '#/definitions/DomainEntityRef'
      queue:
        description: The PureCloud queue for this participant.
        $ref: '#/definitions/DomainEntityRef'
      team:
        description: The PureCloud team for this participant.
        $ref: '#/definitions/DomainEntityRef'
      attributes:
        type: object
        description: A list of ad-hoc attributes for the participant.
        additionalProperties:
          type: string
      errorInfo:
        description: If the conversation ends in error, contains additional error details.
        $ref: '#/definitions/ErrorInfo'
      script:
        description: The Engage script that should be used by this participant.
        $ref: '#/definitions/DomainEntityRef'
      wrapupTimeoutMs:
        type: integer
        format: int32
        description: The amount of time the participant has to complete wrap-up.
      wrapupSkipped:
        type: boolean
        description: Value is true when the participant has skipped wrap-up.
      alertingTimeoutMs:
        type: integer
        format: int32
        description: >-
          Specifies how long the agent has to answer an interaction before being
          marked as not responding.
      provider:
        type: string
        description: The source provider for the communication.
      externalContact:
        description: >-
          If this participant represents an external contact, then this will be
          the reference for the external contact.
        $ref: '#/definitions/DomainEntityRef'
      externalOrganization:
        description: >-
          If this participant represents an external org, then this will be the
          reference for the external org.
        $ref: '#/definitions/DomainEntityRef'
      wrapup:
        description: Wrapup for this participant, if it has been applied.
        $ref: '#/definitions/Wrapup'
      peer:
        type: string
        description: >-
          The peer communication corresponding to a matching leg for this
          communication.
      flaggedReason:
        type: string
        description: The reason specifying why participant flagged the conversation.
        enum:
          - general
      journeyContext:
        description: >-
          Journey System data/context that is applicable to this communication. 
          When used for historical purposes, the context should be immutable. 
          When null, there is no applicable Journey System context.
        $ref: '#/definitions/JourneyContext'
      conversationRoutingData:
        description: Information on how a communication should be routed to an agent.
        $ref: '#/definitions/ConversationRoutingData'
      startAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant started after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant ended after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      toAddress:
        description: >-
          Address for the participant on receiving side of the message
          conversation. If the address is a phone number, E.164 format is
          recommended.
        $ref: '#/definitions/Address'
      fromAddress:
        description: >-
          Address for the participant on the sending side of the message
          conversation. If the address is a phone number, E.164 format is
          recommended.
        $ref: '#/definitions/Address'
      messages:
        type: array
        description: Message instance details on the communication.
        items:
          $ref: '#/definitions/MessageDetails'
      type:
        type: string
        description: >-
          Indicates the type of message platform from which the message
          originated.
        enum:
          - unknown
          - sms
          - twitter
          - facebook
          - line
          - whatsapp
          - telegram
          - kakao
          - webmessaging
          - open
          - instagram
      recipientCountry:
        type: string
        description: >-
          Indicates the country where the recipient is associated in ISO 3166-1
          alpha-2 format.
      recipientType:
        type: string
        description: >-
          The type of the recipient. Eg: Provisioned phoneNumber is the
          recipient for sms message type.
      authenticated:
        type: boolean
        description: If true, the participant member is authenticated.
      monitoredParticipantId:
        type: string
        description: >-
          The ID of the participant being monitored when performing a message
          monitor.
  OpenMessageContent:
    type: object
    required:
      - contentType
    properties:
      contentType:
        type: string
        description: >-
          Type of this content element. If contentType = "Attachment" only one
          item is allowed.
        enum:
          - Attachment
      attachment:
        description: Attachment content.
        $ref: '#/definitions/ConversationContentAttachment'
    description: Message content element.
  OpenMessagingChannel:
    type: object
    required:
      - from
      - time
      - to
    properties:
      id:
        type: string
        description: The Messaging Platform integration ID.
        readOnly: true
      platform:
        type: string
        description: The provider type.
        readOnly: true
        enum:
          - Open
      type:
        type: string
        description: Specifies if this message is part of a private or public conversation.
        enum:
          - Private
      messageId:
        type: string
        description: Unique provider ID of the message such as a Facebook message ID.
      to:
        description: Information about the recipient the message is sent to.
        $ref: '#/definitions/OpenMessagingToRecipient'
      from:
        description: Information about the recipient the message is received from.
        $ref: '#/definitions/OpenMessagingFromRecipient'
      time:
        type: string
        format: date-time
        description: >-
          Original time of the event. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      metadata:
        description: Information about the channel.
        $ref: '#/definitions/ConversationChannelMetadata'
    description: >-
      Channel-specific information that describes the message and the message
      channel/provider.
  OpenMessagingFromRecipient:
    type: object
    required:
      - id
      - idType
    properties:
      nickname:
        type: string
        description: Nickname or display name of the recipient.
      id:
        type: string
        description: The recipient ID specific to the provider.
      idType:
        type: string
        description: >-
          The recipient ID type. This is used to indicate the format used for
          the ID.
        enum:
          - Email
          - Phone
          - Opaque
      firstName:
        type: string
        description: First name of the recipient.
      lastName:
        type: string
        description: Last name of the recipient.
      image:
        type: string
        description: URL of an image that represents the recipient.
        readOnly: true
      email:
        type: string
        description: E-mail address of the recipient.
    description: Information about the recipient the message is received from.
  OpenMessagingToRecipient:
    type: object
    required:
      - id
    properties:
      nickname:
        type: string
        description: Nickname or display name of the recipient.
        readOnly: true
      id:
        type: string
        description: The recipient ID specific to the provider.
      idType:
        type: string
        description: >-
          The recipient ID type. This is used to indicate the format used for
          the ID.
        readOnly: true
        enum:
          - Email
          - Phone
          - Opaque
      firstName:
        type: string
        description: First name of the recipient.
        readOnly: true
      lastName:
        type: string
        description: Last name of the recipient.
        readOnly: true
      image:
        type: string
        description: URL of an image that represents the recipient.
        readOnly: true
      email:
        type: string
        description: E-mail address of the recipient.
    description: Information about the recipient the message is sent to.
  OpenNormalizedMessage:
    type: object
    required:
      - channel
      - type
    properties:
      id:
        type: string
        description: >-
          Unique ID of the message. This ID is generated by Messaging Platform.
          Message receipts will have the same ID as the message they reference,
          as such should only be set when sending a message receipt.
      channel:
        description: >-
          Channel-specific information that describes the message and the
          message channel/provider.
        $ref: '#/definitions/OpenMessagingChannel'
      type:
        type: string
        description: Message type.
        enum:
          - Text
          - Receipt
      text:
        type: string
        description: Message text.
      content:
        type: array
        description: List of content elements.
        items:
          $ref: '#/definitions/OpenMessageContent'
      status:
        type: string
        description: Message receipt status, only used with type Receipt.
        enum:
          - Sent
          - Delivered
          - Read
          - Failed
          - Published
          - Removed
      reasons:
        type: array
        description: >-
          List of reasons for a message receipt that indicates the message has
          failed. Only used with Failed status.
        items:
          $ref: '#/definitions/ConversationReason'
      isFinalReceipt:
        type: boolean
        description: >-
          Indicates if this is the last message receipt for this message, or if
          another message receipt can be expected.
      direction:
        type: string
        description: The direction of the message.
        enum:
          - Inbound
          - Outbound
      metadata:
        type: object
        description: Additional metadata about this message.
        additionalProperties:
          type: string
    description: Open Messaging rich media message structure
  CreateOutboundMessagingConversationRequest:
    type: object
    required:
      - queueId
      - toAddress
      - toAddressMessengerType
    properties:
      queueId:
        type: string
        description: >-
          The ID of the queue to be associated with the message. This will
          determine the fromAddress of the message.
      toAddress:
        type: string
        description: >-
          The messaging address of the recipient of the message. For an SMS
          messenger type, the phone number address must be in E.164 format. E.g.
          +13175555555 or +34234234234.  For open messenger type, any string
          within the outbound.open.messaging.to.address.characters.max limit can
          be used.
      toAddressMessengerType:
        type: string
        description: The messaging address messenger type.
        enum:
          - sms
          - open
      useExistingConversation:
        type: boolean
        description: >-
          An override to use an existing conversation. 

          If set to true, an existing conversation will be used if there is one
          within the conversation window. 

          If set to false, create request fails if there is a conversation
          within the conversation window.
      externalContactId:
        type: string
        description: The external contact with which the message will be associated.
  MessageMediaData:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      url:
        type: string
        description: The location of the media, useful for retrieving it
      mediaType:
        type: string
        description: >-
          The detected internet media type of the the media object.  If null
          then the media type should be dictated by the url.
      contentLengthBytes:
        type: integer
        format: int32
        description: The optional content length of the the media object, in bytes.
      uploadUrl:
        type: string
        description: The URL returned to upload an attachment
      status:
        type: string
        description: >-
          The status of the media, indicates if the media is in the process of
          uploading. If the upload fails, the media becomes invalid
        readOnly: true
        enum:
          - uploading
          - valid
          - invalid
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SendAgentlessOutboundMessageResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      conversationId:
        type: string
        description: The identifier of the conversation.
      fromAddress:
        type: string
        description: The sender of the message.
      toAddress:
        type: string
        description: The recipient of the message.
      messengerType:
        type: string
        description: Type of messenger.
        enum:
          - sms
          - whatsapp
          - open
      textBody:
        type: string
        description: The body of the text message.
      messagingTemplate:
        description: The messaging template sent
        $ref: '#/definitions/MessagingTemplateRequest'
      useExistingActiveConversation:
        type: boolean
        description: >-
          Use an existing active conversation to send the agentless outbound
          message. Set this parameter to 'true' to use active conversation.
          Default value: false
      message:
        description: Sent agentless outbound message in normalized format
        $ref: '#/definitions/MessageData'
      timestamp:
        type: string
        format: date-time
        description: >-
          The time when the message was sent. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      user:
        description: Details of the user created the job
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
  SendAgentlessOutboundMessageRequest:
    type: object
    required:
      - fromAddress
      - toAddress
      - toAddressMessengerType
    properties:
      fromAddress:
        type: string
        description: >-
          The messaging address of the sender of the message. For an SMS
          messenger type, this must be a currently provisioned SMS phone number.
          For a WhatsApp messenger type use the provisioned WhatsApp
          integration’s ID
      toAddress:
        type: string
        description: >-
          The messaging address of the recipient of the message. For an SMS
          messenger type, the phone number address must be in E.164 format. E.g.
          +13175555555 or +34234234234.
      toAddressMessengerType:
        type: string
        description: The recipient messaging address messenger type.
        enum:
          - sms
          - whatsapp
          - open
      textBody:
        type: string
        description: >-
          The text of the message to send. This field is required in the case of
          SMS messenger type. Maximum character counts are: SMS - 765
          characters, other channels - 2000 characters.
      messagingTemplate:
        description: >-
          The messaging template to use in the case of WhatsApp messenger type.
          This field is required when using WhatsApp messenger type
        $ref: '#/definitions/MessagingTemplateRequest'
      useExistingActiveConversation:
        type: boolean
        description: >-
          Use an existing active conversation to send the agentless outbound
          message. Set this parameter to 'true' to use active conversation.
          Default value: false
  MessageTypingEventRequest:
    type: object
    required:
      - typing
    properties:
      typing:
        description: Typing event
        $ref: '#/definitions/ConversationEventTyping'
      dateSent:
        type: string
        format: date-time
        description: >-
          The time when the message typing event was sent. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  ContentSetting:
    type: object
    properties:
      story:
        description: Settings relating to facebook and instagram stories feature
        $ref: '#/definitions/StorySetting'
  EventSetting:
    type: object
    properties:
      typing:
        description: Settings regarding typing events
        $ref: '#/definitions/TypingSetting'
  InboundOnlySetting:
    type: object
    properties:
      inbound:
        type: string
        enum:
          - Enabled
          - Disabled
  MediaType:
    type: object
    properties:
      type:
        type: string
        description: >-
          The media type string as defined by RFC 2046. You can define specific
          types such as 'image/jpeg', 'video/mpeg', or specify wild cards for a
          range of types, 'image/*', or all types '*/*'. See
          https://www.iana.org/assignments/media-types/media-types.xhtml for a
          list of registered media types.
    description: Media type definition
  MediaTypeAccess:
    type: object
    properties:
      inbound:
        type: array
        description: >-
          List of media types allowed for inbound messages from customers. If
          inbound messages from a customer contain media that is not in this
          list, the media will be dropped from the outbound message.
        items:
          $ref: '#/definitions/MediaType'
      outbound:
        type: array
        description: >-
          List of media types allowed for outbound messages to customers. If an
          outbound message is sent that contains media that is not in this list,
          the message will not be sent.
        items:
          $ref: '#/definitions/MediaType'
    description: Media type access definitions
  MediaTypes:
    type: object
    properties:
      allow:
        description: >-
          Specify allowed media types for inbound and outbound messages. If this
          field is empty, all inbound and outbound media will be blocked.
        $ref: '#/definitions/MediaTypeAccess'
    description: Media types
  MessagingIntegration:
    type: object
    required:
      - id
      - messengerType
      - name
      - version
    properties:
      id:
        type: string
        description: A unique Integration Id
        readOnly: true
      name:
        type: string
        description: The name of the Integration
        readOnly: true
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        $ref: '#/definitions/MessagingSettingReference'
      status:
        type: string
        description: The status of the Integration
        readOnly: true
        enum:
          - Active
          - Inactive
          - Error
          - Starting
          - Incomplete
          - Deleting
          - DeletionFailed
      messengerType:
        type: string
        description: The type of Messaging Integration
        readOnly: true
        enum:
          - sms
          - facebook
          - twitter
          - line
          - whatsapp
          - webmessaging
          - instagram
          - open
      recipient:
        description: >-
          The recipient associated to the Integration. This recipient is used to
          associate a flow to an integration
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date this Integration was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Date this Integration was modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      createdBy:
        description: User reference that created this Integration
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      modifiedBy:
        description: User reference that last modified this Integration
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      version:
        type: integer
        format: int32
        description: Version number required for updates.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  MessagingIntegrationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/MessagingIntegration'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  MessagingSettingReference:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: >-
          The messaging Setting unique identifier associated with this
          integration
      name:
        type: string
        description: The messaging Setting profile name
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The messaging Setting profile URI
        readOnly: true
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date this messaging Setting was created. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Date this messaging Setting was modified. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: string
        description: Version number
      createdBy:
        description: User reference that created this Setting
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      updatedBy:
        description: User reference that modified this Setting
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      content:
        description: Settings relating to message contents
        $ref: '#/definitions/ContentSetting'
      event:
        description: Settings relating to events which may occur
        $ref: '#/definitions/EventSetting'
    description: Messaging Setting for messaging platform integrations
  SettingDirection:
    type: object
    properties:
      inbound:
        type: string
        description: Status for the Inbound Direction
        enum:
          - Enabled
          - Disabled
      outbound:
        type: string
        description: Status for the Outbound Direction
        enum:
          - Enabled
          - Disabled
  StorySetting:
    type: object
    properties:
      mention:
        description: Setting relating to Story Mentions
        $ref: '#/definitions/InboundOnlySetting'
      reply:
        description: Setting relating to Story Replies
        $ref: '#/definitions/InboundOnlySetting'
  SupportedContentReference:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: >-
          The SupportedContent unique identifier associated with this
          integration
      name:
        type: string
        description: The SupportedContent profile name
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The SupportedContent profile URI
        readOnly: true
      mediaTypes:
        description: Media types definition for the supported content
        readOnly: true
        $ref: '#/definitions/MediaTypes'
    description: Reference to supported content profile associated with the integration
  TypingSetting:
    type: object
    properties:
      'on':
        description: Should typing indication Events be sent
        $ref: '#/definitions/SettingDirection'
  MessagingSticker:
    type: object
    required:
      - messengerType
      - providerStickerId
      - stickerType
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      providerStickerId:
        type: integer
        format: int32
        description: The sticker Id of the sticker, assigned by the sticker provider.
      providerPackageId:
        type: integer
        format: int32
        description: The package Id of the sticker, assigned by the sticker provider.
      packageName:
        type: string
        description: The package name of the sticker, assigned by the sticker provider.
      messengerType:
        type: string
        description: The type of the messenger provider.
        enum:
          - sms
          - facebook
          - twitter
          - line
          - whatsapp
          - webmessaging
          - instagram
          - open
      stickerType:
        type: string
        description: The type of the sticker.
        enum:
          - standard
          - free
          - paid
      providerVersion:
        type: integer
        format: int64
        description: The version of the sticker, assigned by the provider.
      uriLocation:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  MessagingStickerEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/MessagingSticker'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ConversationThreadingWindow:
    type: object
    required:
      - settings
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      settings:
        type: array
        description: >-
          The conversation threading window timeout (Minutes) for each messaging
          type
        items:
          $ref: '#/definitions/ConversationThreadingWindowSetting'
      defaultTimeoutMinutes:
        type: integer
        format: int64
        description: The default conversation threading window timeout (Minutes)
        readOnly: true
  ConversationThreadingWindowSetting:
    type: object
    required:
      - messengerType
      - timeoutInMinutes
    properties:
      messengerType:
        type: string
        description: The type of messenger
        enum:
          - sms
          - facebook
          - twitter
          - line
          - whatsapp
          - webmessaging
          - instagram
          - open
      timeoutInMinutes:
        type: integer
        format: int64
        description: >-
          The conversation threading window timeout (Minutes) of specified
          messenger type
  FacebookAppCredentials:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: Genesys Cloud Facebook App Id
        readOnly: true
  FacebookIntegration:
    type: object
    required:
      - appId
      - id
      - name
      - version
    properties:
      id:
        type: string
        description: A unique Integration Id.
        readOnly: true
      name:
        type: string
        description: The name of the Facebook Integration
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        $ref: '#/definitions/MessagingSettingReference'
      appId:
        type: string
        description: The App Id from Facebook messenger
      pageId:
        type: string
        description: The Page Id from Facebook messenger
      pageName:
        type: string
        description: The name of the Facebook page
        readOnly: true
      pageProfileImageUrl:
        type: string
        description: The url of the profile image of the Facebook page
        readOnly: true
      status:
        type: string
        description: The status of the Facebook Integration
      recipient:
        description: >-
          The recipient reference associated to the Facebook Integration. This
          recipient is used to associate a flow to an integration
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date this Integration was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date this Integration was modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: User reference that created this Integration
        $ref: '#/definitions/DomainEntityRef'
      modifiedBy:
        description: User reference that last modified this Integration
        $ref: '#/definitions/DomainEntityRef'
      version:
        type: integer
        format: int32
        description: Version number required for updates.
      createStatus:
        type: string
        description: Status of asynchronous create operation
        readOnly: true
        enum:
          - Initiated
          - Completed
          - Error
      createError:
        description: Error information returned, if createStatus is set to Error
        readOnly: true
        $ref: '#/definitions/ErrorBody'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  FacebookIntegrationUpdateRequest:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the Facebook Integration
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        description: Defines the message settings to be applied for this integration
        $ref: '#/definitions/MessagingSettingRequestReference'
      pageAccessToken:
        type: string
        description: >-
          The long-lived Page Access Token of Facebook page. 

          See
          https://developers.facebook.com/docs/facebook-login/access-tokens. 

          Either pageAccessToken or userAccessToken should be provided.
      userAccessToken:
        type: string
        description: >-
          The short-lived User Access Token of the Facebook user logged into the
          Facebook app. 

          See
          https://developers.facebook.com/docs/facebook-login/access-tokens. 

          Either pageAccessToken or userAccessToken should be provided.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  MessagingSettingRequestReference:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: >-
          The messaging Setting unique identifier associated with this
          integration
    description: Messaging Setting for messaging platform integrations
  FacebookIntegrationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/FacebookIntegration'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  FacebookIntegrationRequest:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the Facebook Integration
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        description: Defines the message settings to be applied for this integration
        $ref: '#/definitions/MessagingSettingRequestReference'
      pageAccessToken:
        type: string
        description: >-
          The long-lived Page Access Token of Facebook page. 

          See
          https://developers.facebook.com/docs/facebook-login/access-tokens. 

          When a pageAccessToken is provided, pageId and userAccessToken are not
          required.
      userAccessToken:
        type: string
        description: >-
          The short-lived User Access Token of the Facebook user logged into the
          Facebook app. 

          See
          https://developers.facebook.com/docs/facebook-login/access-tokens. 

          When userAccessToken is provided, pageId is mandatory. 

          When userAccessToken/pageId combination is provided, pageAccessToken
          is not required.
      pageId:
        type: string
        description: >-
          The page Id of Facebook page. The pageId is required when
          userAccessToken is provided.
      appId:
        type: string
        description: >-
          The app Id of Facebook app. The appId is required when a customer
          wants to use their own approved Facebook app.
      appSecret:
        type: string
        description: >-
          The app Secret of Facebook app. The appSecret is required when appId
          is provided.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  InstagramIntegration:
    type: object
    required:
      - appId
      - id
      - name
      - version
    properties:
      id:
        type: string
        description: A unique Integration ID.
        readOnly: true
      name:
        type: string
        description: The name of the Instagram Integration
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        $ref: '#/definitions/MessagingSettingReference'
      appId:
        type: string
        description: The App ID from Facebook
      pageId:
        type: string
        description: The Page ID from Instagram messenger
      instagramId:
        type: string
        description: The ID from Instagram messenger
      instagramUsername:
        type: string
        description: The Username from Instagram messenger
      instagramName:
        type: string
        description: The name from Instagram messenger
      instagramProfileImageUrl:
        type: string
        description: The url of the profile image from Instagram messenger
      status:
        type: string
        description: The status of the Instagram Integration
      recipient:
        description: >-
          The recipient reference associated to the Instagram Integration. This
          recipient is used to associate a flow to an integration
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date this Integration was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date this Integration was modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: User reference that created this Integration
        $ref: '#/definitions/DomainEntityRef'
      modifiedBy:
        description: User reference that last modified this Integration
        $ref: '#/definitions/DomainEntityRef'
      version:
        type: integer
        format: int32
        description: Version number required for updates.
      createStatus:
        type: string
        description: Status of asynchronous create operation
        readOnly: true
        enum:
          - Initiated
          - Completed
          - Error
      createError:
        description: Error information returned, if createStatus is set to Error
        readOnly: true
        $ref: '#/definitions/ErrorBody'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  InstagramIntegrationUpdateRequest:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the Instagram Integration
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        description: Defines the message settings to be applied for this integration
        $ref: '#/definitions/MessagingSettingRequestReference'
      pageAccessToken:
        type: string
        description: >-
          The long-lived Page Access Token of Instagram page. 

          See
          https://developers.facebook.com/docs/facebook-login/access-tokens. 

          Either pageAccessToken or userAccessToken should be provided.
      userAccessToken:
        type: string
        description: >-
          The short-lived User Access Token of the Instagram user logged into
          the Facebook app. 

          See
          https://developers.facebook.com/docs/facebook-login/access-tokens. 

          Either pageAccessToken or userAccessToken should be provided.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  InstagramIntegrationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/InstagramIntegration'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  InstagramIntegrationRequest:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the Instagram Integration
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        description: Defines the message settings to be applied for this integration
        $ref: '#/definitions/MessagingSettingRequestReference'
      pageAccessToken:
        type: string
        description: >-
          The long-lived Page Access Token of Instagram page. 

          See
          https://developers.facebook.com/docs/facebook-login/access-tokens. 

          When a pageAccessToken is provided, pageId and userAccessToken are not
          required.
      userAccessToken:
        type: string
        description: >-
          The short-lived User Access Token of Instagram user logged into
          Facebook app. 

          See
          https://developers.facebook.com/docs/facebook-login/access-tokens. 

          When userAccessToken is provided, pageId is mandatory. 

          When userAccessToken/pageId combination is provided, pageAccessToken
          is not required.
      pageId:
        type: string
        description: >-
          The page ID of Instagram page. The pageId is required when
          userAccessToken is provided.
      appId:
        type: string
        description: >-
          The app ID of Facebook app. The appId is required when a customer
          wants to use their own approved Facebook app.
      appSecret:
        type: string
        description: >-
          The app Secret of Facebook app. The appSecret is required when appId
          is provided.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LineIntegration:
    type: object
    required:
      - channelId
      - id
      - name
      - version
      - webhookUri
    properties:
      id:
        type: string
        description: A unique Integration Id
        readOnly: true
      name:
        type: string
        description: The name of the LINE Integration
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        $ref: '#/definitions/MessagingSettingReference'
      channelId:
        type: string
        description: The Channel Id from LINE messenger
      webhookUri:
        type: string
        format: uri
        description: The Webhook URI to be updated in LINE platform
      status:
        type: string
        description: The status of the LINE Integration
      recipient:
        description: >-
          The recipient associated to the Line Integration. This recipient is
          used to associate a flow to an integration
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date this Integration was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date this Integration was modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: User reference that created this Integration
        $ref: '#/definitions/DomainEntityRef'
      modifiedBy:
        description: User reference that last modified this Integration
        $ref: '#/definitions/DomainEntityRef'
      version:
        type: integer
        format: int32
        description: Version number required for updates.
      createStatus:
        type: string
        description: Status of asynchronous create operation
        readOnly: true
        enum:
          - Initiated
          - Completed
          - Error
      createError:
        description: Error information returned, if createStatus is set to Error
        readOnly: true
        $ref: '#/definitions/ErrorBody'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LineIntegrationRequest:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the LINE Integration
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        description: Defines the message settings to be applied for this integration
        $ref: '#/definitions/MessagingSettingRequestReference'
      channelId:
        type: string
        description: >-
          The Channel Id from LINE messenger.

          New Official LINE account: To create a new official account, LINE
          requires a Webhook URL. It can be created without specifying Channel
          Id & Channel Secret. Once the Official account is created by LINE, use
          the update LINE Integration API to update Channel Id and Channel
          Secret. 

          All other accounts: Channel Id is mandatory. (NOTE: ChannelId can only
          be updated if the integration is set to inactive)
      channelSecret:
        type: string
        description: >-
          The Channel Secret from LINE messenger. New Official LINE account: To
          create a new official account, LINE requires a Webhook URL. It can be
          created without specifying Channel Id & Channel Secret. Once the
          Official account is created by LINE, use the update LINE Integration
          API to update Channel Id and Channel Secret. 

          All other accounts: Channel Secret is mandatory. (NOTE: ChannelSecret
          can only be updated if the integration is set to inactive)
      switcherSecret:
        type: string
        description: >-
          The Switcher Secret from LINE messenger. Some line official accounts
          are switcher functionality enabled. If the LINE account used for this
          integration is switcher enabled, then switcher secret is a required
          field. This secret can be found in your create documentation provided
          by LINE
      serviceCode:
        type: string
        description: >-
          The Service Code from LINE messenger. Only applicable to LINE
          Enterprise accounts. This service code can be found in your create
          documentation provided by LINE
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LineIntegrationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/LineIntegration'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  OpenIntegration:
    type: object
    required:
      - id
      - name
      - outboundNotificationWebhookSignatureSecretToken
      - outboundNotificationWebhookUrl
    properties:
      id:
        type: string
        description: A unique Integration Id.
        readOnly: true
      name:
        type: string
        description: The name of the Open messaging integration.
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        $ref: '#/definitions/MessagingSettingReference'
      outboundNotificationWebhookUrl:
        type: string
        description: >-
          The outbound notification webhook URL for the Open messaging
          integration.
      outboundNotificationWebhookSignatureSecretToken:
        type: string
        description: The outbound notification webhook signature secret token.
      webhookHeaders:
        type: object
        description: The user specified headers for the Open messaging integration.
        additionalProperties:
          type: string
      status:
        type: string
        description: The status of the Open Integration
      recipient:
        description: >-
          The recipient associated to the Open messaging Integration. This
          recipient is used to associate a flow to an integration
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date this Integration was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date this Integration was last modified. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: User reference that created this Integration
        $ref: '#/definitions/DomainEntityRef'
      modifiedBy:
        description: User reference that last modified this Integration
        $ref: '#/definitions/DomainEntityRef'
      createStatus:
        type: string
        description: Status of asynchronous create operation
        readOnly: true
        enum:
          - Initiated
          - Completed
          - Error
      createError:
        description: Error information returned, if createStatus is set to Error
        readOnly: true
        $ref: '#/definitions/ErrorBody'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OpenIntegrationUpdateRequest:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the Open messaging integration.
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        description: Defines the message settings to be applied for this integration
        $ref: '#/definitions/MessagingSettingRequestReference'
      outboundNotificationWebhookUrl:
        type: string
        description: >-
          The outbound notification webhook URL for the Open messaging
          integration.
      outboundNotificationWebhookSignatureSecretToken:
        type: string
        description: The outbound notification webhook signature secret token.
      webhookHeaders:
        type: object
        description: The user specified headers for the Open messaging integration.
        additionalProperties:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OpenIntegrationRequest:
    type: object
    required:
      - name
      - outboundNotificationWebhookSignatureSecretToken
      - outboundNotificationWebhookUrl
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the Open messaging integration.
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        description: Defines the message settings to be applied for this integration
        $ref: '#/definitions/MessagingSettingRequestReference'
      outboundNotificationWebhookUrl:
        type: string
        description: >-
          The outbound notification webhook URL for the Open messaging
          integration.
      outboundNotificationWebhookSignatureSecretToken:
        type: string
        description: >-
          The outbound notification webhook signature secret token. This token
          must be longer than 15 characters.
      webhookHeaders:
        type: object
        description: The user specified headers for the Open messaging integration.
        additionalProperties:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OpenIntegrationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/OpenIntegration'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  SupportedContent:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: string
        description: A unique supported content Id.
        readOnly: true
      name:
        type: string
        description: The name of the supported content profile
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date this supported content profile was created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Date this supported content profile was modified. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      createdBy:
        description: User reference that created this supported content profile
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      modifiedBy:
        description: User reference that modified this supported content profile
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      version:
        type: integer
        format: int32
        description: Version number
        readOnly: true
      mediaTypes:
        description: >-
          Defines the allowable media that may be accepted for an inbound
          message or to be sent in an outbound message. The following is an
          example of allowing all inbound media, and for outbound all images and
          only mpeg video: {
            "mediaTypes": {
              "allow": {
                "inbound": [{"type": "*/*"}],
                "outbound": [{"type": "image/*"}, {"type": "video/mpeg"}]
              }
            }
          }
        $ref: '#/definitions/MediaTypes'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Supported content profile for inbound and outbound messages
  SupportedContentListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/SupportedContent'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  TwitterIntegration:
    type: object
    required:
      - accessTokenKey
      - consumerKey
      - id
      - name
      - tier
      - version
    properties:
      id:
        type: string
        description: A unique Integration Id
        readOnly: true
      name:
        type: string
        description: The name of the Twitter Integration
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        $ref: '#/definitions/MessagingSettingReference'
      accessTokenKey:
        type: string
        description: The Access Token Key from Twitter messenger
      consumerKey:
        type: string
        description: The Consumer Key from Twitter messenger
      username:
        type: string
        description: The Username from Twitter
      userId:
        type: string
        description: The UserId from Twitter
      status:
        type: string
        description: The status of the Twitter Integration
      tier:
        type: string
        description: The type of twitter account to be used for the integration
        enum:
          - premium
          - enterprise
      envName:
        type: string
        description: >-
          The Twitter environment name, e.g.: env-beta (required for premium
          tier)
      recipient:
        description: >-
          The recipient associated to the Twitter Integration. This recipient is
          used to associate a flow to an integration
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date this Integration was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date this Integration was modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: User reference that created this Integration
        $ref: '#/definitions/DomainEntityRef'
      modifiedBy:
        description: User reference that last modified this Integration
        $ref: '#/definitions/DomainEntityRef'
      version:
        type: integer
        format: int32
        description: Version number required for updates.
      createStatus:
        type: string
        description: Status of asynchronous create operation
        readOnly: true
        enum:
          - Initiated
          - Completed
          - Error
      createError:
        description: Error information returned, if createStatus is set to Error
        readOnly: true
        $ref: '#/definitions/ErrorBody'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TwitterIntegrationRequest:
    type: object
    required:
      - accessTokenKey
      - accessTokenSecret
      - consumerKey
      - consumerSecret
      - name
      - tier
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the Twitter Integration
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        description: Defines the message settings to be applied for this integration
        $ref: '#/definitions/MessagingSettingRequestReference'
      accessTokenKey:
        type: string
        description: The Access Token Key from Twitter messenger
      accessTokenSecret:
        type: string
        description: The Access Token Secret from Twitter messenger
      consumerKey:
        type: string
        description: The Consumer Key from Twitter messenger
      consumerSecret:
        type: string
        description: The Consumer Secret from Twitter messenger
      tier:
        type: string
        description: The type of twitter account to be used for the integration
        enum:
          - premium
          - enterprise
      envName:
        type: string
        description: >-
          The Twitter environment name, e.g.: env-beta (required for premium
          tier)
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TwitterIntegrationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/TwitterIntegration'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  WhatsAppAvailablePhoneNumberDetails:
    type: object
    required:
      - name
      - status
    properties:
      name:
        type: string
        description: The verified name associated with this phone number.
        readOnly: true
      phoneNumber:
        type: string
        description: >-
          The display name associated with this phone number. It's typically the
          E.164 representation of the number.
        readOnly: true
      status:
        type: string
        description: The status of this phone number.
        readOnly: true
  WhatsAppAvailablePhoneNumberDetailsListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WhatsAppAvailablePhoneNumberDetails'
  WhatsAppIntegration:
    type: object
    required:
      - id
      - name
      - phoneNumber
      - version
    properties:
      id:
        type: string
        description: A unique Integration Id.
        readOnly: true
      name:
        type: string
        description: The name of the WhatsApp integration.
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        $ref: '#/definitions/MessagingSettingReference'
      phoneNumber:
        type: string
        description: The phone number associated to the WhatsApp integration.
      availablePhoneNumbers:
        description: >-
          The list of available WhatsApp phone numbers for this account. Please
          select one phone number from this list to use with the created
          integration.
        readOnly: true
        $ref: '#/definitions/WhatsAppAvailablePhoneNumberDetailsListing'
      status:
        type: string
        description: The status of the WhatsApp Integration
        enum:
          - Active
          - Inactive
          - Error
          - Starting
          - Incomplete
          - Deleting
          - DeletionFailed
      recipient:
        description: >-
          The recipient associated to the WhatsApp Integration. This recipient
          is used to associate a flow to an integration
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date this Integration was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date this Integration was last modified. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: User reference that created this Integration
        $ref: '#/definitions/DomainEntityRef'
      modifiedBy:
        description: User reference that last modified this Integration
        $ref: '#/definitions/DomainEntityRef'
      version:
        type: integer
        format: int32
        description: Version number required for updates.
      activationStatusCode:
        type: string
        description: The status code of WhatsApp Integration activation process
        readOnly: true
        enum:
          - CodeSent
          - WaitRequired
          - ActivationFailed
          - CodeConfirmed
          - ConfirmationFailed
          - ResendCode
      activationErrorInfo:
        description: The error information of WhatsApp Integration activation process
        readOnly: true
        $ref: '#/definitions/ErrorBody'
      createStatus:
        type: string
        description: Status of asynchronous create operation
        readOnly: true
        enum:
          - Initiated
          - Completed
          - Error
      createError:
        description: Error information returned, if createStatus is set to Error
        readOnly: true
        $ref: '#/definitions/ErrorBody'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WhatsAppIntegrationUpdateRequest:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: WhatsApp Integration name
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        description: Defines the message settings to be applied for this integration
        $ref: '#/definitions/MessagingSettingRequestReference'
      action:
        type: string
        description: The action used to activate and then confirm a WhatsApp Integration.
        enum:
          - Activate
          - Confirm
      authenticationMethod:
        type: string
        description: >-
          The authentication method used to confirm a WhatsApp Integration
          activation. If action is set to Activate, then authenticationMethod is
          a required field. 
        enum:
          - Sms
          - Voice
      confirmationCode:
        type: string
        description: >-
          The confirmation code sent by Whatsapp to you during the activation
          step. If action is set to Confirm, then confirmationCode is a required
          field.
      phoneNumber:
        type: string
        description: Phone number to associate with the WhatsApp integration
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WhatsAppIntegrationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WhatsAppIntegration'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  WhatsAppIntegrationRequest:
    type: object
    required:
      - name
      - phoneNumber
      - wabaCertificate
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the WhatsApp Integration
      supportedContent:
        description: Defines the SupportedContent profile configured for an integration
        $ref: '#/definitions/SupportedContentReference'
      messagingSetting:
        description: Defines the message settings to be applied for this integration
        $ref: '#/definitions/MessagingSettingRequestReference'
      phoneNumber:
        type: string
        description: The phone number associated to the whatsApp integration
      wabaCertificate:
        type: string
        description: >-
          The waba(WhatsApp Business Manager) certificate associated to the
          WhatsApp integration phone number
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Digits:
    type: object
    properties:
      digits:
        type: string
        description: A string representing the digits pressed on phone.
  CreateCallbackOnConversationCommand:
    type: object
    required:
      - callbackNumbers
    properties:
      scriptId:
        type: string
        description: The identifier of the script to be used for the callback
      queueId:
        type: string
        description: >-
          The identifier of the queue to be used for the callback. Either
          queueId or routingData is required.
      routingData:
        description: >-
          The routing data to be used for the callback. Either queueId or
          routingData is required.
        $ref: '#/definitions/RoutingData'
      callbackUserName:
        type: string
        description: The name of the party to be called back.
      callbackNumbers:
        type: array
        description: A list of phone numbers for the callback.
        items:
          type: string
      callbackScheduledTime:
        type: string
        format: date-time
        example: '2015-01-02T16:59:59.000Z'
        description: >-
          The scheduled date-time for the callback as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss.SSSZ
      countryCode:
        type: string
        description: The country code to be associated with the callback numbers.
      validateCallbackNumbers:
        type: boolean
        description: >-
          Whether or not to validate the callback numbers for phone number
          format.
      data:
        type: object
        description: >-
          A map of key-value pairs containing additional data that can be
          associated to the callback. These values will appear in the attributes
          property on the conversation participant. Example: { "notes": "ready
          to close the deal!", "customerPreferredName": "Doc" }
        additionalProperties:
          type: string
      callerId:
        type: string
        description: >-
          The phone number displayed to recipients when a phone call is placed
          as part of the callback. Must conform to the E.164 format. May be
          overridden by other settings in the system such as external trunk
          settings. Telco support for "callerId" varies.
      callerIdName:
        type: string
        description: >-
          The name displayed to recipients when a phone call is placed as part
          of the callback. May be overridden by other settings in the system
          such as external trunk settings. Telco support for "callerIdName"
          varies.
  TransferToAgentRequest:
    type: object
    properties:
      transferType:
        type: string
        enum:
          - Attended
          - Unattended
      userId:
        type: string
        description: The id of the internal user.
      userName:
        type: string
        description: The userName (like user’s email) of the internal user.
      userDisplayName:
        type: string
        description: The name of the internal user.
      voicemail:
        type: boolean
        description: >-
          If true, transfer to the voicemail inbox of the participant that is
          being replaced.
  TransferToQueueRequest:
    type: object
    properties:
      transferType:
        type: string
        enum:
          - Attended
          - Unattended
      queueId:
        type: string
        description: The id of the queue.
      queueName:
        type: string
        description: The name of the queue.
  TransferToExternalRequest:
    type: object
    properties:
      transferType:
        type: string
        enum:
          - Attended
          - Unattended
      address:
        type: string
        description: The address (like phone number) of the external contact.
  SecureSession:
    type: object
    required:
      - flow
      - state
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      flow:
        description: The flow to execute securely
        $ref: '#/definitions/DomainEntityRef'
      userData:
        type: string
        description: Customer-provided data
      state:
        type: string
        description: The current state of a secure session
        enum:
          - PENDING
          - COMPLETED
          - FAILED
      sourceParticipantId:
        type: string
        description: Unique identifier for the participant initiating the secure session.
      disconnect:
        type: boolean
        description: If true, disconnect the agent after creating the session
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CreateSecureSession:
    type: object
    required:
      - flowId
      - userData
    properties:
      sourceParticipantId:
        type: string
        description: requesting participant
      flowId:
        type: string
        description: the flow id to execute in the secure session
      userData:
        type: string
        description: user data for the secure session
      disconnect:
        type: boolean
        description: if true, disconnect the agent after creating the session
  SecureSessionEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/SecureSession'
  Credential:
    type: object
    required:
      - type
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      type:
        description: The type of credential.
        $ref: '#/definitions/CredentialType'
      credentialFields:
        type: object
        additionalProperties:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CredentialType:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      properties:
        type: object
        description: Properties describing credentials of this type.
        readOnly: true
      displayOrder:
        type: array
        description: Order in which properties should be displayed in the UI.
        readOnly: true
        items:
          type: string
      required:
        type: array
        description: Properties that are required fields.
        readOnly: true
        items:
          type: string
  CredentialInfo:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      createdDate:
        type: string
        format: date-time
        description: >-
          Date the credentials were created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Date credentials were last modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      type:
        description: Type of the credentials.
        $ref: '#/definitions/CredentialType'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CredentialTypeListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CredentialType'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CredentialInfoListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CredentialInfo'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  UploadUrlResponse:
    type: object
    properties:
      url:
        type: string
        description: Presigned URL to PUT the file to
        readOnly: true
      uploadKey:
        type: string
        description: Key that identifies the file in the storage including the file name
        readOnly: true
      headers:
        type: object
        description: Required headers when uploading a file through PUT request to the URL
        readOnly: true
        additionalProperties:
          type: string
  LearningCoverArtUploadUrlRequest:
    type: object
    required:
      - contentType
    properties:
      fileName:
        type: string
        description: >-
          Name of the file to upload. It must not start with a dot and not end
          with a forward slash. Whitespace and the following characters are not
          allowed: \{^}%`]">[~<#|
      contentMd5:
        type: string
        description: Content MD5 of the file to upload
      signedUrlTimeoutSeconds:
        type: integer
        format: int32
        description: >-
          The number of seconds the presigned URL is valid for (from 1 to 604800
          seconds). If none provided, defaults to 600 seconds
      contentType:
        type: string
        description: The content type of the file to upload.
        enum:
          - image/bmp
          - image/gif
          - image/jpeg
          - image/jpg
          - image/png
      serverSideEncryption:
        type: string
        enum:
          - AES256
  UploadUrlRequest:
    type: object
    properties:
      fileName:
        type: string
        description: >-
          Name of the file to upload. It must not start with a dot and not end
          with a forward slash. Whitespace and the following characters are not
          allowed: \{^}%`]">[~<#|
      contentMd5:
        type: string
        description: Content MD5 of the file to upload
      signedUrlTimeoutSeconds:
        type: integer
        format: int32
        description: >-
          The number of seconds the presigned URL is valid for (from 1 to 604800
          seconds). If none provided, defaults to 600 seconds
      contentType:
        type: string
        description: The content type of the file to upload. Allows all MIME types
      serverSideEncryption:
        type: string
        enum:
          - AES256
  Coretype:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      version:
        type: integer
        format: int32
        description: A positive integer denoting the core type's version
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the core type was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      schema:
        description: The core type's built-in schema
        $ref: '#/definitions/Schema'
      current:
        type: boolean
        description: >-
          A boolean indicating if the core type's version is the current one in
          use by the system
      validationFields:
        type: array
        description: >-
          An array of strings naming the fields of the core type subject to
          validation.  Validation constraints are specified by a schema author
          using the core type.
        items:
          type: string
      validationLimits:
        example: |-
          "validationLimits": {
          "minLength": {"min": 0, "max": 100},
          "maxLength": {"min": 1, "max": 100}
          }
        description: >-
          A structure denoting the system-imposed minimum and maximum string
          length (for text-based core types) or numeric values (for
          number-based) core types.  For example, the validationLimits for a
          text-based core type specify the min/max values for a minimum string
          length (minLength) constraint supplied by a schemaauthor on a text
          field.  Similarly, the maxLength's min/max specifies maximum string
          length constraint supplied by a schema author for the same field.
        $ref: '#/definitions/ValidationLimits'
      itemValidationFields:
        type: array
        description: >-
          Specific to the "tag" core type, this is an array of strings naming
          the tag item fields of the core type subject to validation
        items:
          type: string
      itemValidationLimits:
        example: |-
          "validationLimits": {
               "minLength": {"min": 1, "max": 100},
               "maxLength": {"min": 1, "max": 100}
          }
        description: >-
          A structure denoting the system-imposed minimum and maximum string
          length for string-array based core types such as "tag" and "enum". 
          Forexample, the validationLimits for a schema field using a tag core
          type specify the min/max values for a minimum string length
          (minLength) constraint supplied by a schema author on individual
          tags.  Similarly, the maxLength's min/max specifies maximum string
          length constraint supplied by a schema author for the same field's
          tags.
        $ref: '#/definitions/ItemValidationLimits'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ItemValidationLimits:
    type: object
    required:
      - maxLength
      - minLength
    properties:
      minLength:
        example: '"minLength": {"min": 0, "max": 100}'
        description: >-
          A structure denoting the system-imposed minimum string length (for
          text-based core types) or numeric values (for number-based) core
          types.  For example, the validationLimits for a text-based core type
          specify the min/max values for a minimum string length (minLength)
          constraint supplied by a schemaauthor on a text field.  Similarly, the
          maxLength's min/max specifies maximum string length constraint
          supplied by a schema author for the same field.
        $ref: '#/definitions/MinLength'
      maxLength:
        example: |-
          "validationLimits": {
          "minLength": {"min": 0, "max": 100},
          "maxLength": {"min": 1, "max": 100}
          }
        description: >-
          A structure denoting the system-imposed minimum and maximum string
          length (for text-based core types) or numeric values (for
          number-based) core types.  For example, the validationLimits for a
          text-based core type specify the min/max values for a minimum string
          length (minLength) constraint supplied by a schemaauthor on a text
          field.  Similarly, the maxLength's min/max specifies maximum string
          length constraint supplied by a schema author for the same field.
        $ref: '#/definitions/MaxLength'
  Items:
    type: object
    properties:
      type:
        type: string
      pattern:
        type: string
  MaxLength:
    type: object
    required:
      - max
      - min
    properties:
      min:
        type: integer
        format: int64
        description: >-
          A non-negative integer for a text-based schema field denoting the
          minimum largest length string the field can contain for a schema
          instance.
      max:
        type: integer
        format: int64
        description: >-
          A non-negative integer for a text-based schema field denoting the
          maximum largest string the field can contain for a schema instance.
  MinLength:
    type: object
    required:
      - max
      - min
    properties:
      min:
        type: integer
        format: int64
        description: >-
          A non-negative integer for a text-based schema field denoting the
          minimum smallest length a string field can contain for a schema
          instance.
      max:
        type: integer
        format: int64
        description: >-
          A non-negative integer for a text-based schema field denoting the
          maximum smallest length string the field can contain for a schema
          instance.
  Schema:
    type: object
    properties:
      title:
        type: string
        description: A core type's title
        readOnly: true
      description:
        type: string
        description: A core type's description
        readOnly: true
      type:
        type: array
        example: >-
          ["string"] for a text-based core type, ["integer"] for a numeric core
          type, or ["boolean", "null"] for the checkbox core type
        description: >-
          An array of fundamental JSON Schema primitive types on which the core
          type is based
        readOnly: true
        items:
          type: string
      items:
        example: |-
          {
          type": "string",
          "pattern": "^[\\S]+$"
          }
        description: Denotes the type and pattern of the items in an enum core type
        readOnly: true
        $ref: '#/definitions/Items'
      pattern:
        type: string
        description: >-
          For the "date" and "datetime" core types, denotes the regex
          prescribing the allowable date/datetime format
        readOnly: true
  ValidationLimits:
    type: object
    properties:
      minLength:
        $ref: '#/definitions/MinLength'
      maxLength:
        $ref: '#/definitions/MaxLength'
      minItems:
        $ref: '#/definitions/MinLength'
      maxItems:
        $ref: '#/definitions/MaxLength'
      minimum:
        $ref: '#/definitions/MinLength'
      maximum:
        $ref: '#/definitions/MaxLength'
  CoretypeListing:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/Coretype'
      selfUri:
        type: string
        format: uri
  SchemaQuantityLimits:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      minFieldNameCharacters:
        type: integer
        format: int32
        example: '"minFieldNameCharacters":1'
        description: The minimum number of schema field name characters allowed.
        readOnly: true
      maxFieldNameCharacters:
        type: integer
        format: int32
        example: '"minFieldNameCharacters":100'
        description: The maximum number of schema field name characters allowed.
        readOnly: true
      minFieldDescriptionCharacters:
        type: integer
        format: int32
        example: '"minFieldDescriptionCharacters":0'
        description: The minimum number of schema field description characters allowed.
        readOnly: true
      maxFieldDescriptionCharacters:
        type: integer
        format: int32
        example: '"maxFieldDescriptionCharacters":200'
        description: The maximum number of schema field description characters allowed.
        readOnly: true
      minSchemaNameCharacters:
        type: integer
        format: int32
        example: '"minSchemaNameCharacters":1'
        description: The minimum number of schema name characters allowed.
        readOnly: true
      maxSchemaNameCharacters:
        type: integer
        format: int32
        example: '"maxSchemaNameCharacters":50'
        description: The maximum number of schema name characters allowed.
        readOnly: true
      minSchemaDescriptionCharacters:
        type: integer
        format: int32
        example: '"minSchemaDescriptionCharacters":0'
        description: The minimum number of schema description characters allowed.
        readOnly: true
      maxSchemaDescriptionCharacters:
        type: integer
        format: int32
        example: '"maxSchemaDescriptionCharacters":200'
        description: The maximum number of schema description characters allowed.
        readOnly: true
      maxNumberOfSchemasPerOrg:
        type: integer
        format: int32
        example: '"maxNumberOfSchemasPerOrg":20'
        description: The maximum number of schema allowed per org.
        readOnly: true
      maxNumberOfFieldsPerSchema:
        type: integer
        format: int32
        example: '"maxNumberOfFieldsPerSchema":25'
        description: The maximum number of schema fields allowed per schema.
        readOnly: true
      maxNumberOfFieldsPerOrg:
        type: integer
        format: int32
        example: '"maxNumberOfFieldsPerOrg":500'
        description: >-
          The maximum number of schema fields allowed per organization across
          all of their schemas.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DataTable:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      description:
        type: string
        description: >-
          The description from the JSON schema (equates to the Description field
          on the JSON schema.)
      schema:
        description: the schema as stored in the system.
        $ref: '#/definitions/JsonSchemaDocument'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: >-
      Contains a metadata representation for a JSON schema stored in DataTables
      along with an optional field for the schema itself
  DataTableExportJob:
    type: object
    required:
      - status
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      owner:
        description: The PureCloud user who started the export job
        $ref: '#/definitions/AddressableEntityRef'
      status:
        type: string
        description: The status of the export job
        enum:
          - Processing
          - Failed
          - Succeeded
      dateCreated:
        type: string
        format: date-time
        description: >-
          The timestamp of when the export began. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateCompleted:
        type: string
        format: date-time
        description: >-
          The timestamp of when the export stopped (either successfully or
          unsuccessfully). Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      downloadURI:
        type: string
        format: uri
        description: >-
          The URL of the location at which the caller can download the export
          file, when available
      errorInformation:
        description: >-
          Any error information, or null of the processing is not in an error
          state
        $ref: '#/definitions/ErrorBody'
      countRecordsProcessed:
        type: integer
        format: int32
        description: The current count of the number of records processed
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: State information for an export job of rows from a datatable
  DataTableImportJob:
    type: object
    required:
      - status
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      owner:
        description: The PureCloud user who started the import job
        $ref: '#/definitions/AddressableEntityRef'
      status:
        type: string
        description: The status of the import job
        enum:
          - WaitingForUpload
          - Processing
          - Failed
          - Succeeded
      dateCreated:
        type: string
        format: date-time
        description: >-
          The timestamp of when the import began. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateCompleted:
        type: string
        format: date-time
        description: >-
          The timestamp of when the import stopped (either successfully or
          unsuccessfully). Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      uploadURI:
        type: string
        format: uri
        description: >-
          The URL of the location at which the caller can upload the file to be
          imported
      importMode:
        type: string
        description: >-
          The indication of whether the processing should remove rows that don't
          appear in the import file
        enum:
          - ReplaceAll
          - Append
      errorInformation:
        description: >-
          Any error information, or null of the processing is not in an error
          state
        $ref: '#/definitions/ErrorBody'
      countRecordsUpdated:
        type: integer
        format: int32
        description: The current count of the number of records processed
      countRecordsDeleted:
        type: integer
        format: int32
        description: The current count of the number of records deleted
      countRecordsFailed:
        type: integer
        format: int32
        description: The current count of the number of records that failed to import
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: State information for an import job of rows to a datatable
  DataTableImportEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DataTableImportJob'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      pageCount:
        type: integer
        format: int32
  DataTablesDomainEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DataTable'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  DataTableRowEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          type: object
          additionalProperties:
            type: object
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ServerDate:
    type: object
    properties:
      currentDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  Agent:
    type: object
    properties:
      stage:
        type: string
        description: The current stage for this agent
  AttemptLimits:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      maxAttemptsPerContact:
        type: integer
        format: int32
        description: >-
          The maximum number of times a contact can be called within the
          resetPeriod. Required if maxAttemptsPerNumber is not defined.
      maxAttemptsPerNumber:
        type: integer
        format: int32
        description: >-
          The maximum number of times a phone number can be called within the
          resetPeriod. Required if maxAttemptsPerContact is not defined.
      timeZoneId:
        type: string
        description: >-
          If the resetPeriod is TODAY, this specifies the timezone in which
          TODAY occurs. Required if the resetPeriod is TODAY.
      resetPeriod:
        type: string
        description: >-
          After how long the number of attempts will be set back to 0. Defaults
          to NEVER.
        enum:
          - NEVER
          - TODAY
      recallEntries:
        type: object
        description: Configuration for recall attempts.
        additionalProperties:
          $ref: '#/definitions/RecallEntry'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  RecallEntry:
    type: object
    properties:
      nbrAttempts:
        type: integer
        format: int32
      minutesBetweenAttempts:
        type: integer
        format: int32
  AttemptLimitsEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/AttemptLimits'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  Reaction:
    type: object
    required:
      - reactionType
    properties:
      data:
        type: string
        description: >-
          Parameter for this reaction. For transfer_flow, this would be the
          outbound flow id.
      name:
        type: string
        description: >-
          Name of the parameter for this reaction. For transfer_flow, this would
          be the outbound flow name.
      reactionType:
        type: string
        description: The reaction to take for a given call analysis result.
        enum:
          - hangup
          - transfer
          - transfer_flow
          - play_file
  ResponseSet:
    type: object
    required:
      - name
      - responses
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the ResponseSet.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      responses:
        type: object
        description: >-
          Map of disposition identifiers to reactions. For example:
          {"disposition.classification.callable.person": {"reactionType":
          "transfer"}}.
        additionalProperties:
          $ref: '#/definitions/Reaction'
      beepDetectionEnabled:
        type: boolean
        description: Whether to enable answering machine beep detection
      amdSpeechDistinguishEnabled:
        type: boolean
        description: Whether to enable answering machine detection
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ResponseSetEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ResponseSet'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CallableTime:
    type: object
    required:
      - timeSlots
      - timeZoneId
    properties:
      timeSlots:
        type: array
        description: The time intervals for which it is acceptable to place outbound calls.
        items:
          $ref: '#/definitions/CampaignTimeSlot'
      timeZoneId:
        type: string
        example: Africa/Abidjan
        description: The time zone for the time slots; for example, Africa/Abidjan
  CallableTimeSet:
    type: object
    required:
      - callableTimes
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the CallableTimeSet.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      callableTimes:
        type: array
        description: >-
          The list of CallableTimes for which it is acceptable to place outbound
          calls.
        items:
          $ref: '#/definitions/CallableTime'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CampaignTimeSlot:
    type: object
    required:
      - day
      - startTime
      - stopTime
    properties:
      startTime:
        type: string
        example: '08:00:00'
        description: The start time of the interval as an ISO-8601 string, i.e. HH:mm:ss
      stopTime:
        type: string
        example: '08:00:00'
        description: The end time of the interval as an ISO-8601 string, i.e. HH:mm:ss
      day:
        type: integer
        format: int32
        example: 1
        description: >-
          The day of the interval. Valid values: [1-7], representing Monday
          through Sunday
  CallableTimeSetEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CallableTimeSet'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ContactCallbackRequest:
    type: object
    required:
      - campaignId
      - contactId
      - contactListId
      - phoneColumn
      - schedule
    properties:
      campaignId:
        type: string
        description: Campaign identifier
      contactListId:
        type: string
        description: Contact list identifier
      contactId:
        type: string
        description: Contact identifier
      phoneColumn:
        type: string
        description: Name of the phone column containing the number to be called
      schedule:
        type: string
        description: >-
          The scheduled time for the callback as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss.SSSZ", example = "2016-01-02T16:59:59"
  CampaignDivisionView:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CampaignDivisionViewListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CampaignDivisionView'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CallBasic:
    type: object
    properties:
      state:
        type: string
        description: The connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - converting
          - uploading
          - transmitting
          - none
      initialState:
        type: string
        description: The initial connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - converting
          - uploading
          - transmitting
          - none
      id:
        type: string
        description: A globally unique identifier for this communication.
      direction:
        type: string
        description: The direction of the call
        enum:
          - inbound
          - outbound
      recording:
        type: boolean
        description: True if this call is being recorded.
      recordingState:
        type: string
        description: State of recording on this call.
        enum:
          - none
          - active
          - paused
      muted:
        type: boolean
        description: >-
          True if this call is muted so that remote participants can't hear any
          audio from this end.
      confined:
        type: boolean
        description: >-
          True if this call is held and the person on this side hears hold
          music.
      held:
        type: boolean
        description: True if this call is held and the person on this side hears silence.
      securePause:
        type: boolean
        description: True when the recording of this call is in secure pause status.
      recordingId:
        type: string
        description: >-
          A globally unique identifier for the recording associated with this
          call.
      segments:
        type: array
        description: >-
          The time line of the participant's call, divided into activity
          segments.
        items:
          $ref: '#/definitions/Segment'
      errorInfo:
        $ref: '#/definitions/ErrorInfo'
      disconnectType:
        type: string
        description: >-
          System defined string indicating what caused the communication to
          disconnect. Will be null until the communication disconnects.
        enum:
          - endpoint
          - client
          - system
          - timeout
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
          - uncallable
      startHoldTime:
        type: string
        format: date-time
        description: >-
          The timestamp the call was placed on hold in the cloud clock if the
          call is currently on hold. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      documentId:
        type: string
        description: >-
          If call is an outbound fax of a document from content management, then
          this is the id in content management.
      startAlertingTime:
        type: string
        format: date-time
        description: >-
          The timestamp the communication has when it is first put into an
          alerting state. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication was connected in the cloud
          clock. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      disconnectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication disconnected from the
          conversation in the provider clock. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      disconnectReasons:
        type: array
        description: >-
          List of reasons that this call was disconnected. This will be set once
          the call disconnects.
        items:
          $ref: '#/definitions/DisconnectReason'
      faxStatus:
        description: Extra information on fax transmission.
        $ref: '#/definitions/FaxStatus'
      provider:
        type: string
        description: The source provider for the call.
      scriptId:
        type: string
        description: The UUID of the script to use.
      peerId:
        type: string
        description: >-
          The id of the peer communication corresponding to a matching leg for
          this communication.
      uuiData:
        type: string
        description: >-
          User to User Information (UUI) data managed by SIP session
          application.
      self:
        description: Address and name data for a call endpoint.
        $ref: '#/definitions/Address'
      other:
        description: Address and name data for a call endpoint.
        $ref: '#/definitions/Address'
      wrapup:
        description: Call wrap up or disposition data.
        $ref: '#/definitions/Wrapup'
      afterCallWork:
        description: After-call work for the communication.
        $ref: '#/definitions/AfterCallWork'
      afterCallWorkRequired:
        type: boolean
        description: >-
          Indicates if after-call work is required for a communication. Only
          used when the ACW Setting is Agent Requested.
      agentAssistantId:
        type: string
        description: >-
          UUID of virtual agent assistant that provide suggestions to the agent
          participant during the conversation.
      disposition:
        description: Call resolution data for Dialer bulk make calls commands.
        $ref: '#/definitions/Disposition'
  CallbackBasic:
    type: object
    properties:
      state:
        type: string
        description: The connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - scheduled
          - none
      initialState:
        type: string
        description: The initial connection state of this communication.
        enum:
          - alerting
          - dialing
          - contacting
          - offering
          - connected
          - disconnected
          - terminated
          - scheduled
          - none
      id:
        type: string
        description: A globally unique identifier for this communication.
      segments:
        type: array
        description: >-
          The time line of the participant's callback, divided into activity
          segments.
        items:
          $ref: '#/definitions/Segment'
      direction:
        type: string
        description: The direction of the call
        enum:
          - inbound
          - outbound
      held:
        type: boolean
        description: True if this call is held and the person on this side hears silence.
      disconnectType:
        type: string
        description: >-
          System defined string indicating what caused the communication to
          disconnect. Will be null until the communication disconnects.
        enum:
          - endpoint
          - client
          - system
          - timeout
          - transfer
          - transfer.conference
          - transfer.consult
          - transfer.forward
          - transfer.noanswer
          - transfer.notavailable
          - transport.failure
          - error
          - peer
          - other
          - spam
          - uncallable
      startHoldTime:
        type: string
        format: date-time
        description: >-
          The timestamp the callback was placed on hold in the cloud clock if
          the callback is currently on hold. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dialerPreview:
        description: The preview data to be used when this callback is a Preview.
        $ref: '#/definitions/DialerPreview'
      voicemail:
        description: The voicemail data to be used when this callback is an ACD voicemail.
        $ref: '#/definitions/Voicemail'
      callbackNumbers:
        type: array
        description: The phone number(s) to use to place the callback.
        items:
          type: string
      callbackUserName:
        type: string
        description: The name of the user requesting a callback.
      scriptId:
        type: string
        description: The UUID of the script to use.
      externalCampaign:
        type: boolean
        description: True if the call for the callback uses external dialing.
      skipEnabled:
        type: boolean
        description: True if the ability to skip a callback should be enabled.
      timeoutSeconds:
        type: integer
        format: int32
        description: >-
          The number of seconds before the system automatically places a call
          for a callback.  0 means the automatic placement is disabled.
      startAlertingTime:
        type: string
        format: date-time
        description: >-
          The timestamp the communication has when it is first put into an
          alerting state. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication was connected in the cloud
          clock. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      disconnectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication disconnected from the
          conversation in the provider clock. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      callbackScheduledTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this communication is scheduled in the provider
          clock. If this value is missing it indicates the callback will be
          placed immediately. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      automatedCallbackConfigId:
        type: string
        description: >-
          The id of the config for automatically placing the callback (and
          handling the disposition). If null, the callback will not be placed
          automatically but routed to an agent as per normal.
      provider:
        type: string
        description: The source provider for the callback.
      peerId:
        type: string
        description: >-
          The id of the peer communication corresponding to a matching leg for
          this communication.
      wrapup:
        description: Call wrap up or disposition data.
        $ref: '#/definitions/Wrapup'
      afterCallWork:
        description: After-call work for the communication.
        $ref: '#/definitions/AfterCallWork'
      afterCallWorkRequired:
        type: boolean
        description: >-
          Indicates if after-call work is required for a communication. Only
          used when the ACW Setting is Agent Requested.
      callerId:
        type: string
        description: >-
          The phone number displayed to recipients of the phone call. The value
          should conform to the E164 format.
      callerIdName:
        type: string
        description: The name displayed to recipients of the phone call.
  CampaignInteraction:
    type: object
    properties:
      id:
        type: string
      campaign:
        $ref: '#/definitions/DomainEntityRef'
      agent:
        $ref: '#/definitions/DomainEntityRef'
      contact:
        $ref: '#/definitions/DomainEntityRef'
      destinationAddress:
        type: string
      activePreviewCall:
        type: boolean
        description: Boolean value if there is an active preview call on the interaction
      lastActivePreviewWrapupTime:
        type: string
        format: date-time
        description: >-
          The time when the last preview of the interaction was wrapped up. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      creationTime:
        type: string
        format: date-time
        description: >-
          The time when dialer created the interaction. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      callPlacedTime:
        type: string
        format: date-time
        description: >-
          The time when the agent or system places the call. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      callRoutedTime:
        type: string
        format: date-time
        description: >-
          The time when the agent was connected to the call. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      previewConnectedTime:
        type: string
        format: date-time
        description: >-
          The time when the customer and routing participant are connected. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      queue:
        $ref: '#/definitions/DomainEntityRef'
      script:
        $ref: '#/definitions/DomainEntityRef'
      disposition:
        type: string
        description: >-
          Describes what happened with call analysis for instance:
          disposition.classification.callable.person,
          disposition.classification.callable.noanswer
        enum:
          - DISCONNECT
          - LIVE_VOICE
          - BUSY
          - MACHINE
          - NO_ANSWER
          - SIT_CALLABLE
          - SIT_UNCALLABLE
          - FAX
      callerName:
        type: string
      callerAddress:
        type: string
      previewPopDeliveredTime:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversation:
        $ref: '#/definitions/ConversationBasic'
      dialerSystemParticipantId:
        type: string
        description: >-
          conversation participant id that is the dialer system participant to
          monitor the call from dialer perspective
      dialingMode:
        type: string
      skills:
        type: array
        description: Any skills that are attached to the call for routing
        uniqueItems: true
        items:
          $ref: '#/definitions/DomainEntityRef'
  CampaignInteractions:
    type: object
    properties:
      campaign:
        $ref: '#/definitions/DomainEntityRef'
      pendingInteractions:
        type: array
        items:
          $ref: '#/definitions/CampaignInteraction'
      proceedingInteractions:
        type: array
        items:
          $ref: '#/definitions/CampaignInteraction'
      previewingInteractions:
        type: array
        items:
          $ref: '#/definitions/CampaignInteraction'
      interactingInteractions:
        type: array
        items:
          $ref: '#/definitions/CampaignInteraction'
      scheduledInteractions:
        type: array
        items:
          $ref: '#/definitions/CampaignInteraction'
  ConversationBasic:
    type: object
    required:
      - startTime
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      externalTag:
        type: string
        description: The external tag associated with the conversation.
      startTime:
        type: string
        format: date-time
        description: >-
          The time when the conversation started. This will be the time when the
          first participant joined the conversation. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endTime:
        type: string
        format: date-time
        description: >-
          The time when the conversation ended. This will be the time when the
          last participant left the conversation, or null when the conversation
          is still active. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      divisions:
        type: array
        description: Identifiers of divisions associated with this conversation
        items:
          $ref: '#/definitions/ConversationDivisionMembership'
      securePause:
        type: boolean
        description: >-
          True when the recording of this conversation is in secure pause
          status.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      participants:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/ParticipantBasic'
  ParticipantBasic:
    type: object
    properties:
      id:
        type: string
        description: A globally unique identifier for this conversation.
      startTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant joined the conversation in the
          provider clock. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant disconnected from the conversation
          in the provider clock. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      connectedTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant was connected to the conversation
          in the provider clock. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      name:
        type: string
        description: A human readable name identifying the participant.
      userUri:
        type: string
        description: >-
          If this participant represents a user, then this will be an URI that
          can be used to fetch the user.
      userId:
        type: string
        description: >-
          If this participant represents a user, then this will be the globally
          unique identifier for the user.
      externalContactId:
        type: string
        description: >-
          If this participant represents an external contact, then this will be
          the globally unique identifier for the external contact.
      externalOrganizationId:
        type: string
        description: >-
          If this participant represents an external org, then this will be the
          globally unique identifier for the external org.
      queueId:
        type: string
        description: If present, the queue id that the communication channel came in on.
      groupId:
        type: string
        description: If present, group of users the participant represents.
      teamId:
        type: string
        description: >-
          The team id that this participant is a member of when added to the
          conversation.
      queueName:
        type: string
        description: If present, the queue name that the communication channel came in on.
      purpose:
        type: string
        description: A well known string that specifies the purpose of this participant.
      participantType:
        type: string
        description: A well known string that specifies the type of this participant.
      consultParticipantId:
        type: string
        description: >-
          If this participant is part of a consult transfer, then this will be
          the participant id of the participant being transferred.
      address:
        type: string
        description: >-
          The address for the this participant. For a phone call this will be
          the ANI.
      ani:
        type: string
        description: >-
          The address for the this participant. For a phone call this will be
          the ANI.
      aniName:
        type: string
        description: The ani-based name for this participant.
      dnis:
        type: string
        description: >-
          The address for the this participant. For a phone call this will be
          the ANI.
      locale:
        type: string
        description: An ISO 639 language code specifying the locale for this participant
      wrapupRequired:
        type: boolean
        description: >-
          True iff this participant is required to enter wrapup for this
          conversation.
      wrapupPrompt:
        type: string
        description: This field controls how the UI prompts the agent for a wrapup.
        enum:
          - mandatory
          - optional
          - agentRequested
          - timeout
          - forcedTimeout
      wrapupTimeoutMs:
        type: integer
        format: int32
        description: Specifies how long a timed ACW session will last.
      wrapupSkipped:
        type: boolean
        description: >-
          The UI sets this field when the agent chooses to skip entering a
          wrapup for this participant.
      wrapup:
        description: Call wrap up or disposition data.
        $ref: '#/definitions/Wrapup'
      mediaRoles:
        type: array
        description: >-
          List of roles this participant's media has had on the conversation, ie
          monitor, coach, etc.
        items:
          type: string
      conversationRoutingData:
        description: Information on how a communication should be routed to an agent.
        $ref: '#/definitions/ConversationRoutingData'
      alertingTimeoutMs:
        type: integer
        format: int32
        description: >-
          Specifies how long the agent has to answer an interaction before being
          marked as not responding.
      monitoredParticipantId:
        type: string
        description: >-
          If this participant is a monitor, then this will be the id of the
          participant that is being monitored.
      coachedParticipantId:
        type: string
        description: >-
          If this participant is a coach, then this will be the id of the
          participant that is being coached.
      attributes:
        type: object
        description: Additional participant attributes
        additionalProperties:
          type: string
      calls:
        type: array
        items:
          $ref: '#/definitions/CallBasic'
      callbacks:
        type: array
        items:
          $ref: '#/definitions/CallbackBasic'
      chats:
        type: array
        items:
          $ref: '#/definitions/ConversationChat'
      cobrowsesessions:
        type: array
        items:
          $ref: '#/definitions/Cobrowsesession'
      emails:
        type: array
        items:
          $ref: '#/definitions/Email'
      messages:
        type: array
        items:
          $ref: '#/definitions/Message'
      screenshares:
        type: array
        items:
          $ref: '#/definitions/Screenshare'
      socialExpressions:
        type: array
        items:
          $ref: '#/definitions/SocialExpression'
      videos:
        type: array
        items:
          $ref: '#/definitions/Video'
      evaluations:
        type: array
        items:
          $ref: '#/definitions/Evaluation'
      screenRecordingState:
        type: string
        description: The current screen recording state for this participant.
        enum:
          - requested
          - active
          - paused
          - stopped
          - error
          - timeout
      flaggedReason:
        type: string
        description: The reason specifying why participant flagged the conversation.
        enum:
          - general
      startAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant started after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endAcwTime:
        type: string
        format: date-time
        description: >-
          The timestamp when this participant ended after-call work. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      bargedParticipantId:
        type: string
        description: >-
          If this participant barged in a participant's call, then this will be
          the id of the targeted participant.
  CampaignProgress:
    type: object
    required:
      - campaign
      - contactList
    properties:
      campaign:
        description: Identifier of the campaign
        $ref: '#/definitions/DomainEntityRef'
      contactList:
        description: Identifier of the contact list
        $ref: '#/definitions/DomainEntityRef'
      numberOfContactsCalled:
        type: integer
        format: int64
        description: Number of contacts called during the campaign
        readOnly: true
      numberOfContactsMessaged:
        type: integer
        format: int64
        description: Number of contacts messaged during the campaign
        readOnly: true
      totalNumberOfContacts:
        type: integer
        format: int64
        description: Total number of contacts in the campaign
        readOnly: true
      percentage:
        type: integer
        format: int64
        description: Percentage of contacts processed during the campaign
        readOnly: true
  AgentOwnedMappingPreview:
    type: object
    properties:
      agentOwnedColumn:
        type: string
        description: The raw value of the agent-owned column
        readOnly: true
      email:
        type: string
        description: The email address of the user, if it exists
        readOnly: true
      userId:
        type: string
        description: The id of the user, if it exists
        readOnly: true
      exists:
        type: boolean
        description: Whether the user exists
        readOnly: true
      isQueueMember:
        type: boolean
        description: Whether the user is a member of the campaign's queue
        readOnly: true
      recordCount:
        type: integer
        format: int32
        description: >-
          The number of contact records whose agent-owned column matches the raw
          value
        readOnly: true
  AgentOwnedMappingPreviewListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/AgentOwnedMappingPreview'
  CallableContactsDiagnostic:
    type: object
    properties:
      attemptLimits:
        description: Attempt limits for the campaign's contact list
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      dncLists:
        type: array
        description: Do not call lists for the campaign
        readOnly: true
        items:
          $ref: '#/definitions/DomainEntityRef'
      callableTimeSet:
        description: Callable time sets for the campaign
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      ruleSets:
        type: array
        description: Rule sets for the campaign
        readOnly: true
        items:
          $ref: '#/definitions/DomainEntityRef'
  CampaignDiagnostics:
    type: object
    properties:
      callableContacts:
        description: Campaign properties that can impact which contacts are callable
        readOnly: true
        $ref: '#/definitions/CallableContactsDiagnostic'
      queueUtilizationDiagnostic:
        description: Information regarding the campaign's queue
        readOnly: true
        $ref: '#/definitions/QueueUtilizationDiagnostic'
      ruleSetDiagnostics:
        type: array
        description: Information regarding the campaign's rule sets
        readOnly: true
        items:
          $ref: '#/definitions/RuleSetDiagnostic'
      outstandingInteractionsCount:
        type: integer
        format: int32
        description: Current number of outstanding interactions on the campaign
        readOnly: true
      scheduledInteractionsCount:
        type: integer
        format: int32
        description: Current number of scheduled interactions on the campaign
        readOnly: true
      timeZoneRescheduledCallsCount:
        type: integer
        format: int32
        description: Current number of time zone rescheduled calls on the campaign
        readOnly: true
  QueueUtilizationDiagnostic:
    type: object
    properties:
      queue:
        description: Identifier of the queue
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      usersInQueue:
        type: integer
        format: int32
        description: The number of users joined to the queue
        readOnly: true
      activeUsersInQueue:
        type: integer
        format: int32
        description: The number of users active on the queue
        readOnly: true
      usersOnQueue:
        type: integer
        format: int32
        description: The number of users with a status of on-queue
        readOnly: true
      usersNotUtilized:
        type: integer
        format: int32
        description: The number of users in the queue currently not engaged
        readOnly: true
      usersOnQueueWithStation:
        type: integer
        format: int32
        description: The number of users in the queue with a station
        readOnly: true
      usersOnACampaignCall:
        type: integer
        format: int32
        description: The number of users currently engaged in a campaign call
        readOnly: true
      usersOnDifferentEdgeGroup:
        type: integer
        format: int32
        description: >-
          The number of users whose station is homed to an edge different from
          the campaign
        readOnly: true
      usersOnANonCampaignCall:
        type: integer
        format: int32
        description: >-
          The number of users currently engaged in a communication that is not
          part of the campaign
        readOnly: true
  RuleSetDiagnostic:
    type: object
    properties:
      ruleSet:
        description: A campaign rule set
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      warnings:
        type: array
        description: Diagnostic warnings for the rule set
        readOnly: true
        items:
          type: string
          enum:
            - WRAPUP_CODE_NOT_IN_QUEUE
            - CONTACT_ATTRIBUTE_NOT_IN_CONTACT_LIST
            - NO_DNC_LIST_FOR_APPEND
            - PHONE_CONDITIONS_WITH_MULTICOLUMN_PREVIEW
  CampaignRule:
    type: object
    required:
      - campaignRuleActions
      - campaignRuleConditions
      - campaignRuleEntities
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the CampaignRule.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      campaignRuleEntities:
        description: The list of entities that this CampaignRule monitors.
        $ref: '#/definitions/CampaignRuleEntities'
      campaignRuleConditions:
        type: array
        description: The list of conditions that are evaluated on the entities.
        items:
          $ref: '#/definitions/CampaignRuleCondition'
      campaignRuleActions:
        type: array
        description: The list of actions that are executed if the conditions are satisfied.
        items:
          $ref: '#/definitions/CampaignRuleAction'
      matchAnyConditions:
        type: boolean
      enabled:
        type: boolean
        description: >-
          Whether or not this CampaignRule is currently enabled. Required on
          updates.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CampaignRuleAction:
    type: object
    required:
      - actionType
      - campaignRuleActionEntities
    properties:
      id:
        type: string
      parameters:
        description: >-
          The parameters for the CampaignRuleAction. Required for certain
          actionTypes.
        $ref: '#/definitions/CampaignRuleParameters'
      actionType:
        type: string
        description: The action to take on the campaignRuleActionEntities.
        enum:
          - turnOnCampaign
          - turnOffCampaign
          - turnOnSequence
          - turnOffSequence
          - setCampaignPriority
          - recycleCampaign
          - setCampaignDialingMode
      campaignRuleActionEntities:
        description: The list of entities that this action will apply to.
        $ref: '#/definitions/CampaignRuleActionEntities'
  CampaignRuleActionEntities:
    type: object
    properties:
      campaigns:
        type: array
        description: >-
          The list of campaigns for a CampaignRule to monitor. Required if the
          CampaignRule has any conditions that run on a campaign.
        items:
          $ref: '#/definitions/DomainEntityRef'
      sequences:
        type: array
        description: >-
          The list of sequences for a CampaignRule to monitor. Required if the
          CampaignRule has any conditions that run on a sequence.
        items:
          $ref: '#/definitions/DomainEntityRef'
      useTriggeringEntity:
        type: boolean
        description: >-
          If true, the CampaignRuleAction will apply to the same entity that
          triggered the CampaignRuleCondition.
  CampaignRuleCondition:
    type: object
    required:
      - conditionType
      - parameters
    properties:
      id:
        type: string
      parameters:
        description: The parameters for the CampaignRuleCondition.
        $ref: '#/definitions/CampaignRuleParameters'
      conditionType:
        type: string
        description: The type of condition to evaluate.
        enum:
          - campaignProgress
          - campaignAgents
  CampaignRuleEntities:
    type: object
    properties:
      campaigns:
        type: array
        description: >-
          The list of campaigns for a CampaignRule to monitor. Required if the
          CampaignRule has any conditions that run on a campaign.
        items:
          $ref: '#/definitions/DomainEntityRef'
      sequences:
        type: array
        description: >-
          The list of sequences for a CampaignRule to monitor. Required if the
          CampaignRule has any conditions that run on a sequence.
        items:
          $ref: '#/definitions/DomainEntityRef'
  CampaignRuleParameters:
    type: object
    properties:
      operator:
        type: string
        description: The operator for comparison. Required for a CampaignRuleCondition.
        enum:
          - equals
          - greaterThan
          - greaterThanEqualTo
          - lessThan
          - lessThanEqualTo
      value:
        type: string
        description: The value for comparison. Required for a CampaignRuleCondition.
      priority:
        type: string
        description: >-
          The priority to set a campaign to. Required for the
          'setCampaignPriority' action.
        enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
      dialingMode:
        type: string
        description: >-
          The dialing mode to set a campaign to. Required for the
          'setCampaignDialingMode' action.
        enum:
          - agentless
          - preview
          - power
          - predictive
          - progressive
          - external
  CampaignRuleEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CampaignRule'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CampaignSchedule:
    type: object
    required:
      - campaign
      - intervals
      - timeZone
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      intervals:
        type: array
        description: A list of intervals during which to run the associated Campaign.
        items:
          $ref: '#/definitions/ScheduleInterval'
      timeZone:
        type: string
        example: Africa/Abidjan
        description: The time zone for this CampaignSchedule. For example, Africa/Abidjan.
      campaign:
        description: The Campaign that this CampaignSchedule is for.
        $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ScheduleInterval:
    type: object
    required:
      - end
      - start
    properties:
      start:
        type: string
        description: >-
          The scheduled start time as an ISO-8601 string, i.e
          yyyy-MM-ddTHH:mm:ss.SSSZ
      end:
        type: string
        description: >-
          The scheduled end time as an ISO-8601 string, i.e.
          yyyy-MM-ddTHH:mm:ss.SSSZ
  CampaignStats:
    type: object
    properties:
      contactRate:
        description: Information regarding the campaign's connect rate
        readOnly: true
        $ref: '#/definitions/ConnectRate'
      idleAgents:
        type: integer
        format: int32
        description: Number of available agents not currently being utilized
        readOnly: true
      effectiveIdleAgents:
        type: number
        format: double
        description: Number of effective available agents not currently being utilized
        readOnly: true
      adjustedCallsPerAgent:
        type: number
        format: double
        description: Calls per agent adjusted by pace
        readOnly: true
      outstandingCalls:
        type: integer
        format: int32
        description: Number of campaign calls currently ongoing
        readOnly: true
      scheduledCalls:
        type: integer
        format: int32
        description: Number of campaign calls currently scheduled
        readOnly: true
      timeZoneRescheduledCalls:
        type: integer
        format: int32
        description: Number of campaign calls currently timezone rescheduled
        readOnly: true
  ConnectRate:
    type: object
    properties:
      attempts:
        type: integer
        format: int64
        description: Number of call attempts made
        readOnly: true
      connects:
        type: integer
        format: int64
        description: Number of calls with a live voice detected
        readOnly: true
      connectRatio:
        type: number
        format: double
        description: Ratio of connects to attempts
        readOnly: true
  CampaignEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Campaign'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CommonCampaignDivisionView:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the Campaign.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      mediaType:
        type: string
        description: The media type used for this campaign.
        enum:
          - email
          - sms
          - voice
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CommonCampaignDivisionViewEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CommonCampaignDivisionView'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CommonCampaign:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the Campaign.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      mediaType:
        type: string
        description: The media type used for this campaign.
        enum:
          - email
          - sms
          - voice
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CommonCampaignEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CommonCampaign'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ContactListDivisionView:
    type: object
    required:
      - columnNames
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      columnNames:
        type: array
        description: The names of the contact data columns.
        items:
          type: string
      phoneColumns:
        type: array
        description: Indicates which columns are phone numbers.
        items:
          $ref: '#/definitions/ContactPhoneNumberColumn'
      emailColumns:
        type: array
        description: Indicates which columns are email addresses.
        items:
          $ref: '#/definitions/EmailColumn'
      importStatus:
        description: The status of the import process.
        readOnly: true
        $ref: '#/definitions/ImportStatus'
      size:
        type: integer
        format: int64
        description: The number of contacts in the ContactList.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ContactPhoneNumberColumn:
    type: object
    required:
      - columnName
      - type
    properties:
      columnName:
        type: string
        description: The name of the phone column.
      type:
        type: string
        description: Indicates the type of the phone column. For example, 'cell' or 'home'.
      callableTimeColumn:
        type: string
        description: >-
          A column that indicates the timezone to use for a given contact when
          checking callable times. Not allowed if 'automaticTimeZoneMapping' is
          set to true.
  EmailColumn:
    type: object
    required:
      - columnName
      - type
    properties:
      columnName:
        type: string
        description: The name of the email column.
      type:
        type: string
        description: >-
          Indicates the type of the email column. For example, 'work' or
          'personal'.
      contactableTimeColumn:
        type: string
        description: >-
          A column that indicates the timezone to use for a given contact when
          checking contactable times.
  ImportStatus:
    type: object
    required:
      - completedRecords
      - percentComplete
      - state
      - totalRecords
    properties:
      state:
        type: string
        description: current status of the import
        readOnly: true
        enum:
          - IN_PROGRESS
          - FAILED
      totalRecords:
        type: integer
        format: int64
        description: total number of records to be imported
        readOnly: true
      completedRecords:
        type: integer
        format: int64
        description: number of records finished importing
        readOnly: true
      percentComplete:
        type: integer
        format: int32
        description: percentage of records finished importing
        readOnly: true
      failureReason:
        type: string
        description: if the import has failed, the reason for the failure
        readOnly: true
  ContactListDivisionViewListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ContactListDivisionView'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ExportUri:
    type: object
    properties:
      uri:
        type: string
      exportTimestamp:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  CallRecord:
    type: object
    properties:
      lastAttempt:
        type: string
        format: date-time
        description: >-
          Timestamp of the last attempt to reach this number. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      lastResult:
        type: string
        description: Result of the last attempt to reach this number
        readOnly: true
  ColumnStatus:
    type: object
    properties:
      contactable:
        type: boolean
        description: >-
          Indicates whether or not an individual contact method column is
          contactable.
  ConfigurationOverrides:
    type: object
    properties:
      priority:
        type: boolean
        description: >-
          Indicates whether or not the contact will be placed in front of the
          queue or at the end of the queue.
  ContactColumnTimeZone:
    type: object
    properties:
      timeZone:
        type: string
        description: >-
          Time zone that the column matched to. Time zones are represented as a
          string of the zone name as found in the IANA time zone database. For
          example: UTC, Etc/UTC, or Europe/London
      columnType:
        type: string
        description: Column Type will be either PHONE or ZIP
        readOnly: true
        enum:
          - PHONE
          - ZIP
  ContactableStatus:
    type: object
    properties:
      contactable:
        type: boolean
        description: >-
          Indicates whether or not the entire contact is contactable for the
          associated media type.
      columnStatus:
        type: object
        description: >-
          A map of individual contact method columns to whether the individual
          column is contactable for the associated media type.
        additionalProperties:
          $ref: '#/definitions/ColumnStatus'
  DialerContact:
    type: object
    required:
      - contactListId
      - data
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      contactListId:
        type: string
        description: The identifier of the contact list containing this contact.
      data:
        type: object
        example: '{ ''firstname'': ''name'', ''surname'': ''name2'', ''phone'': ''123456789''}'
        description: An ordered map of the contact's columns and corresponding values.
        additionalProperties:
          type: string
      callRecords:
        type: object
        description: A map of call records for the contact phone columns.
        readOnly: true
        additionalProperties:
          $ref: '#/definitions/CallRecord'
      latestSmsEvaluations:
        type: object
        description: A map of SMS records for the contact phone columns.
        readOnly: true
        additionalProperties:
          $ref: '#/definitions/MessageEvaluation'
      latestEmailEvaluations:
        type: object
        description: A map of email records for the contact email columns.
        readOnly: true
        additionalProperties:
          $ref: '#/definitions/MessageEvaluation'
      callable:
        type: boolean
        description: Indicates whether or not the contact can be called.
      phoneNumberStatus:
        type: object
        description: >-
          A map of phone number columns to PhoneNumberStatuses, which indicate
          if the phone number is callable or not.
        additionalProperties:
          $ref: '#/definitions/PhoneNumberStatus'
      contactableStatus:
        type: object
        description: >-
          A map of media types (Voice, SMS and Email) to ContactableStatus,
          which indicates if the contact can be contacted using the specified
          media type.
        additionalProperties:
          $ref: '#/definitions/ContactableStatus'
      contactColumnTimeZones:
        type: object
        description: >-
          Map containing data about the timezone the contact is mapped to. This
          will only be populated if the contact list has automatic timezone
          mapping turned on. The key is the column name. The value is the
          timezone it mapped to and the type of column: Phone or Zip
        readOnly: true
        additionalProperties:
          $ref: '#/definitions/ContactColumnTimeZone'
      configurationOverrides:
        description: >-
          the priority property within ConfigurationOverides indicates whether
          or not the contact to be placed in front of the queue or at the end of
          the queue
        readOnly: true
        $ref: '#/definitions/ConfigurationOverrides'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  FilterPreviewResponse:
    type: object
    properties:
      filteredContacts:
        type: integer
        format: int64
      totalContacts:
        type: integer
        format: int64
      preview:
        type: array
        items:
          $ref: '#/definitions/DialerContact'
  MessageEvaluation:
    type: object
    properties:
      contactColumn:
        type: string
        description: The name of the contact column that was wrapped up
      contactAddress:
        type: string
        description: The address (phone or email) that was wrapped up
      messageType:
        type: string
        description: The type of message sent
        enum:
          - Sms
          - Email
      wrapupCodeId:
        type: string
        description: The id of the wrap-up code
      timestamp:
        type: string
        format: date-time
        description: >-
          The time that the wrap-up was applied. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  PhoneNumberStatus:
    type: object
    properties:
      callable:
        type: boolean
        description: Indicates whether or not a phone number is callable.
  ContactListFilter:
    type: object
    required:
      - contactList
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the list.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      contactList:
        description: The contact list the filter is based on.
        $ref: '#/definitions/DomainEntityRef'
      clauses:
        type: array
        description: Groups of conditions to filter the contacts by.
        items:
          $ref: '#/definitions/ContactListFilterClause'
      filterType:
        type: string
        description: How to join clauses together.
        enum:
          - AND
          - OR
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ContactListFilterClause:
    type: object
    properties:
      filterType:
        type: string
        description: How to join predicates together.
        enum:
          - AND
          - OR
      predicates:
        type: array
        description: Conditions to filter the contacts by.
        items:
          $ref: '#/definitions/ContactListFilterPredicate'
  ContactListFilterPredicate:
    type: object
    properties:
      column:
        type: string
        description: Contact list column from the ContactListFilter's contactList.
      columnType:
        type: string
        description: The type of data in the contact column.
        enum:
          - numeric
          - alphabetic
      operator:
        type: string
        description: The operator for this ContactListFilterPredicate.
        enum:
          - EQUALS
          - LESS_THAN
          - LESS_THAN_EQUALS
          - GREATER_THAN
          - GREATER_THAN_EQUALS
          - CONTAINS
          - BEGINS_WITH
          - ENDS_WITH
          - BEFORE
          - AFTER
          - BETWEEN
          - IN
      value:
        type: string
        description: >-
          Value with which to compare the contact's data. This could be text, a
          number, or a relative time. A value for relative time should follow
          the format PxxDTyyHzzM, where xx, yy, and zz specify the days, hours
          and minutes. For example, a value of P01DT08H30M corresponds to 1 day,
          8 hours, and 30 minutes from now. To specify a time in the past,
          include a negative sign before each numeric value. For example, a
          value of P-01DT-08H-30M corresponds to 1 day, 8 hours, and 30 minutes
          in the past. You can also do things like P01DT00H-30M, which would
          correspond to 23 hours and 30 minutes from now (1 day - 30 minutes).
      range:
        description: A range of values. Required for operators BETWEEN and IN.
        $ref: '#/definitions/ContactListFilterRange'
      inverted:
        type: boolean
        description: >-
          Inverts the result of the predicate (i.e., if the predicate returns
          true, inverting it will return false).
  ContactListFilterRange:
    type: object
    properties:
      min:
        type: string
        description: The minimum value of the range. Required for the operator BETWEEN.
      max:
        type: string
        description: The maximum value of the range. Required for the operator BETWEEN.
      minInclusive:
        type: boolean
        description: Whether or not to include the minimum in the range.
      maxInclusive:
        type: boolean
        description: Whether or not to include the maximum in the range.
      inSet:
        type: array
        description: >-
          A set of values that the contact data should be in. Required for the
          IN operator.
        uniqueItems: true
        items:
          type: string
  ContactListFilterEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ContactListFilter'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ColumnDataTypeSpecification:
    type: object
    properties:
      columnName:
        type: string
        description: The column name of a column selected for dynamic queueing
      columnDataType:
        type: string
        description: >-
          The data type of the column selected for dynamic queueing (TEXT,
          NUMERIC or TIMESTAMP)
        enum:
          - NUMERIC
          - TEXT
          - TIMESTAMP
      min:
        type: integer
        format: int32
        description: The minimum length of the numeric column selected for dynamic queueing
      max:
        type: integer
        format: int32
        description: The maximum length of the numeric column selected for dynamic queueing
      maxLength:
        type: integer
        format: int32
        description: The maximum length of the text column selected for dynamic queueing
  ContactList:
    type: object
    required:
      - columnNames
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      division:
        description: The division this entity belongs to.
        $ref: '#/definitions/DomainEntityRef'
      columnNames:
        type: array
        description: The names of the contact data columns.
        items:
          type: string
      phoneColumns:
        type: array
        description: Indicates which columns are phone numbers.
        items:
          $ref: '#/definitions/ContactPhoneNumberColumn'
      emailColumns:
        type: array
        description: Indicates which columns are email addresses
        items:
          $ref: '#/definitions/EmailColumn'
      importStatus:
        description: The status of the import process.
        readOnly: true
        $ref: '#/definitions/ImportStatus'
      previewModeColumnName:
        type: string
        description: >-
          A column to check if a contact should always be dialed in preview
          mode.
      previewModeAcceptedValues:
        type: array
        description: >-
          The values in the previewModeColumnName column that indicate a contact
          should always be dialed in preview mode.
        items:
          type: string
      size:
        type: integer
        format: int64
        description: The number of contacts in the ContactList.
        readOnly: true
      attemptLimits:
        description: AttemptLimits for this ContactList.
        $ref: '#/definitions/DomainEntityRef'
      automaticTimeZoneMapping:
        type: boolean
        description: >-
          Indicates if automatic time zone mapping is to be used for this
          ContactList.
      zipCodeColumnName:
        type: string
        description: >-
          The name of contact list column containing the zip code for use with
          automatic time zone mapping. Only allowed if
          'automaticTimeZoneMapping' is set to true.
      columnDataTypeSpecifications:
        type: array
        description: The settings of the columns selected for dynamic queueing
        items:
          $ref: '#/definitions/ColumnDataTypeSpecification'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TimeZoneMappingPreview:
    type: object
    properties:
      contactList:
        description: The associated ContactList
        $ref: '#/definitions/DomainEntityRef'
      contactsPerTimeZone:
        type: object
        description: >-
          The number of contacts per time zone that mapped to only that time
          zone
        additionalProperties:
          type: integer
          format: int64
      contactsMappedUsingZipCode:
        type: object
        description: >-
          The number of contacts per time zone that mapped to only that time
          zone and were mapped using the zip code column
        additionalProperties:
          type: integer
          format: int64
      contactsMappedToASingleZone:
        type: integer
        format: int64
        description: The total number of contacts that mapped to a single time zone
      contactsMappedToASingleZoneUsingZipCode:
        type: integer
        format: int64
        description: >-
          The total number of contacts that mapped to a single time zone and
          were mapped using the zip code column
      contactsMappedToMultipleZones:
        type: integer
        format: int64
        description: The total number of contacts that mapped to multiple time zones
      contactsMappedToMultipleZonesUsingZipCode:
        type: integer
        format: int64
        description: >-
          The total number of contacts that mapped to multiple time zones and
          were mapped using the zip code column
      contactsInDefaultWindow:
        type: integer
        format: int64
        description: >-
          The total number of contacts that will be dialed during the default
          window
      contactListSize:
        type: integer
        format: int64
        description: The total number of contacts in the contact list
  ContactListEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ContactList'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  WritableDialerContact:
    type: object
    required:
      - contactListId
      - data
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      contactListId:
        type: string
        description: The identifier of the contact list containing this contact.
      data:
        type: object
        example: '{ ''firstname'': ''name'', ''surname'': ''name2'', ''phone'': ''123456789''}'
        description: An ordered map of the contact's columns and corresponding values.
        additionalProperties:
          type: string
      latestSmsEvaluations:
        type: object
        description: A map of SMS records for the contact phone columns.
        readOnly: true
        additionalProperties:
          $ref: '#/definitions/MessageEvaluation'
      latestEmailEvaluations:
        type: object
        description: A map of email records for the contact email columns.
        readOnly: true
        additionalProperties:
          $ref: '#/definitions/MessageEvaluation'
      callable:
        type: boolean
        description: Indicates whether or not the contact can be called.
      phoneNumberStatus:
        type: object
        description: >-
          A map of phone number columns to PhoneNumberStatuses, which indicate
          if the phone number is callable or not.
        additionalProperties:
          $ref: '#/definitions/PhoneNumberStatus'
      contactableStatus:
        type: object
        description: >-
          A map of media types (Voice, SMS and Email) to ContactableStatus,
          which indicates if the contact can be contacted using the specified
          media type.
        additionalProperties:
          $ref: '#/definitions/ContactableStatus'
  AuditEntity:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: The type of the entity the action of this AuditEntity targeted.
      id:
        type: string
        description: The id of the entity the action of this AuditEntity targeted.
      name:
        type: string
        description: The name of the entity the action of this AuditEntity targeted.
      selfUri:
        type: string
        description: The selfUri for this entity.
  AuditMessage:
    type: object
    required:
      - id
      - level
      - receivedTimestamp
      - serviceName
      - status
    properties:
      id:
        type: string
        description: AuditMessage ID.
      user:
        $ref: '#/definitions/AuditUser'
      correlationId:
        type: string
        description: Correlation ID.
      transactionId:
        type: string
        description: Transaction ID.
      transactionInitiator:
        type: boolean
        description: >-
          Whether or not this audit can be considered the initiator of the
          transaction it is a part of.
      application:
        type: string
        description: >-
          The application through which the action of this AuditMessage was
          initiated.
      serviceName:
        type: string
        description: The name of the service which sent this AuditMessage.
      level:
        type: string
        description: The level of this audit. USER or SYSTEM.
      timestamp:
        type: string
        description: The time at which the action of this AuditMessage was initiated.
      receivedTimestamp:
        type: string
        description: The time at which this AuditMessage was received.
      status:
        type: string
        description: The status of the action of this AuditMessage
      actionContext:
        type: string
        description: The context of a system-level action
      action:
        type: string
        description: A string representing the action that took place
      changes:
        type: array
        description: Details about any changes that occurred in this audit
        items:
          $ref: '#/definitions/Change'
      entity:
        $ref: '#/definitions/AuditEntity'
      serviceContext:
        description: The service-specific context associated with this AuditMessage.
        $ref: '#/definitions/ServiceContext'
  AuditSearchResult:
    type: object
    properties:
      pageNumber:
        type: integer
        format: int32
        description: Which page was returned.
      pageSize:
        type: integer
        format: int32
        description: The number of results in a page.
      total:
        type: integer
        format: int32
        description: The total number of results.
      pageCount:
        type: integer
        format: int32
        description: The number of pages of results.
      facetInfo:
        type: array
        items:
          $ref: '#/definitions/FacetInfo'
      auditMessages:
        type: array
        items:
          $ref: '#/definitions/AuditMessage'
  AuditUser:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: >-
          The ID (UUID) of the user who initiated the action of this
          AuditMessage.
      name:
        type: string
        description: >-
          The full username of the user who initiated the action of this
          AuditMessage.
      display:
        type: string
        description: >-
          The display name of the user who initiated the action of this
          AuditMessage.
  Change:
    type: object
    properties:
      entity:
        $ref: '#/definitions/AuditEntity'
      property:
        type: string
        description: The property that was changed
      oldValues:
        type: array
        description: The old values which were modified and/or removed by this action.
        items:
          type: string
      newValues:
        type: array
        description: The new values which were modified and/or added by this action.
        items:
          type: string
  Entry:
    type: object
    properties:
      value:
        type: string
        description: A value included in this facet.
      count:
        type: integer
        format: int32
        description: The number of results with this value.
  FacetInfo:
    type: object
    properties:
      name:
        type: string
        description: The name of the field that was faceted on.
      entries:
        type: array
        description: The entries resulting from this facet.
        items:
          $ref: '#/definitions/Entry'
  ServiceContext:
    type: object
    properties:
      name:
        type: string
        description: >-
          Unused field for the purpose of ensuring a Swagger definition is
          created for a class with only @JsonIgnore members.
  AuditFacet:
    type: object
    required:
      - name
      - type
    properties:
      name:
        type: string
        description: The name of the field on which to facet.
      type:
        type: string
        description: The type of the facet, DATE or STRING.
  AuditFilter:
    type: object
    required:
      - name
      - operator
      - type
      - values
    properties:
      name:
        type: string
        description: The name of the field by which to filter.
      type:
        type: string
        description: The type of the filter, DATE or STRING.
      operator:
        type: string
        description: The operation that the filter performs.
      values:
        type: array
        description: The values to make the filter comparison against.
        items:
          type: string
  DialerAuditRequest:
    type: object
    properties:
      queryPhrase:
        type: string
        description: The word or words to search for.
      queryFields:
        type: array
        description: The fields in which to search for the queryPhrase.
        items:
          type: string
      facets:
        type: array
        description: The fields to facet on.
        items:
          $ref: '#/definitions/AuditFacet'
      filters:
        type: array
        description: The fields to filter on.
        items:
          $ref: '#/definitions/AuditFilter'
  DncPatchCustomExclusionColumnsRequest:
    type: object
    properties:
      action:
        type: string
        description: The action to perform
        enum:
          - Add
          - Remove
      customExclusionColumnEntries:
        type: array
        description: >-
          The list of custom exclusion column entries to Add to / Remove from
          the DNC list 
        items:
          type: string
      expirationDateTime:
        type: string
        description: >-
          Expiration date for DNC customExclusionColumnEntries in
          yyyy-MM-ddTHH:mmZ format
  DncListDivisionView:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      importStatus:
        description: The status of the import process.
        readOnly: true
        $ref: '#/definitions/ImportStatus'
      size:
        type: integer
        format: int64
        description: The number of contacts in the DncList.
        readOnly: true
      dncSourceType:
        type: string
        description: The type of the DncList.
        readOnly: true
        enum:
          - rds
          - rds_custom
          - dnc.com
          - gryphon
      contactMethod:
        type: string
        description: The contact method. Required if dncSourceType is rds.
        enum:
          - Email
          - Phone
          - Any
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DncListDivisionViewListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DncListDivisionView'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  DncPatchEmailsRequest:
    type: object
    properties:
      action:
        type: string
        description: The action to perform
        enum:
          - Add
          - Remove
      emailAddresses:
        type: array
        description: 'The list of email addresses to Add to / Remove from the DNC list '
        items:
          type: string
      expirationDateTime:
        type: string
        description: Expiration date for DNC email addresses in yyyy-MM-ddTHH:mmZ format
  DncPatchPhoneNumbersRequest:
    type: object
    properties:
      action:
        type: string
        description: The action to perform
        enum:
          - Add
          - Remove
      phoneNumbers:
        type: array
        description: 'The list of phone numbers to Add to / Remove from the DNC list '
        items:
          type: string
      expirationDateTime:
        type: string
        description: Expiration date for DNC phone numbers in yyyy-MM-ddTHH:mmZ format
  DncList:
    type: object
    required:
      - dncSourceType
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the DncList.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      importStatus:
        description: The status of the import process
        readOnly: true
        $ref: '#/definitions/ImportStatus'
      size:
        type: integer
        format: int64
        description: The total number of phone numbers in the DncList.
        readOnly: true
      dncSourceType:
        type: string
        description: The type of the DncList.
        readOnly: true
        enum:
          - rds
          - rds_custom
          - dnc.com
          - gryphon
      contactMethod:
        type: string
        description: The contact method. Required if dncSourceType is rds.
        enum:
          - Email
          - Phone
          - Any
      loginId:
        type: string
        description: A dnc.com loginId. Required if the dncSourceType is dnc.com.
      campaignId:
        type: string
        description: A dnc.com campaignId. Optional if the dncSourceType is dnc.com.
      dncCodes:
        type: array
        description: >-
          The list of dnc.com codes to be treated as DNC. Required if the
          dncSourceType is dnc.com.
        uniqueItems: true
        items:
          type: string
      licenseId:
        type: string
        description: A gryphon license number. Required if the dncSourceType is gryphon.
      division:
        description: The division this DncList belongs to.
        $ref: '#/definitions/DomainEntityRef'
      customExclusionColumn:
        type: string
        description: >-
          The column to evaluate exclusion against. Required if the
          dncSourceType is rds_custom.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DncListEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DncList'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  DncListCreate:
    type: object
    required:
      - dncSourceType
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the DncList.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      importStatus:
        description: The status of the import process
        readOnly: true
        $ref: '#/definitions/ImportStatus'
      size:
        type: integer
        format: int64
        description: The total number of phone numbers in the DncList.
        readOnly: true
      dncSourceType:
        type: string
        description: The type of the DncList.
        enum:
          - rds
          - rds_custom
          - dnc.com
          - gryphon
      contactMethod:
        type: string
        description: The contact method. Required if dncSourceType is rds.
        enum:
          - Email
          - Phone
          - Any
      loginId:
        type: string
        description: A dnc.com loginId. Required if the dncSourceType is dnc.com.
      campaignId:
        type: string
        description: A dnc.com campaignId. Optional if the dncSourceType is dnc.com.
      dncCodes:
        type: array
        description: >-
          The list of dnc.com codes to be treated as DNC. Required if the
          dncSourceType is dnc.com.
        uniqueItems: true
        items:
          type: string
      licenseId:
        type: string
        description: A gryphon license number. Required if the dncSourceType is gryphon.
      division:
        description: The division this DncList belongs to.
        $ref: '#/definitions/DomainEntityRef'
      customExclusionColumn:
        type: string
        description: >-
          The column to evaluate exclusion against. Required if the
          dncSourceType is rds_custom.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EventLog:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      errorEntity:
        $ref: '#/definitions/DomainEntityRef'
      relatedEntity:
        $ref: '#/definitions/DomainEntityRef'
      timestamp:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      level:
        type: string
        enum:
          - INFO
          - WARNING
          - ERROR
      category:
        type: string
        enum:
          - CALLBACK
          - CALL_RESTRICTION
          - CALL_RULE
          - CAMPAIGN
          - CAMPAIGN_RULE
          - CONTACT
          - CONTACT_LIST_FILTER
          - DIGITAL_RULE
          - DNC_LIST
          - ENTITY_LIMIT
          - IMPORT_ERROR
          - MESSAGE_RESTRICTION
          - MESSAGING_CAMPAIGN
          - ORGANIZATION_CONFIGURATION
          - SCHEDULE
          - MESSAGING_CAMPAIGN_SCHEDULE
          - EMAIL_CAMPAIGN_SCHEDULE
      correlationId:
        type: string
      eventMessage:
        $ref: '#/definitions/EventMessage'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EventMessage:
    type: object
    properties:
      code:
        type: string
        enum:
          - ACTIVE_CAMPAIGNS_LIMIT_EXCEEDED
          - ALL_CAMPAIGNS_BLACKLISTED
          - APPROACHING_CONTACT_LIMIT
          - APPROACHING_DNC_LIST_PHONE_NUMBER_LIMIT
          - APPROACHING_DNC_ORGANIZATION_PHONE_NUMBER_LIMIT
          - APPROACHING_ENTITY_LIMIT
          - AUTOMATIC_TIME_ZONE_ZIP_CODE_INVALID
          - CAMPAIGN_BLACKLISTED
          - CAMPAIGN_CONTENT_TEMPLATE_SUBSTITUTION_MISMATCH
          - CAMPAIGN_EMAIL_BODY_CHARACTER_LIMIT_EXCEEDED
          - CAMPAIGN_EMAIL_SUBJECT_CHARACTER_LIMIT_EXCEEDED
          - CAMPAIGN_INVALIDATED
          - CAMPAIGN_MESSAGE_CHARACTER_LIMIT_EXCEEDED
          - CAMPAIGN_START_ERROR
          - CAMPAIGN_RULE_START_ERROR
          - CAMPAIGN_SET_DIALING_MODE_ERROR
          - CAMPAIGN_STOPPED
          - CAMPAIGN_THROTTLED
          - CAMPAIGN_QUEUE_MEMBERS_LIMIT_EXCEEDED
          - INVALID_CALLABLE_TIME_ZONE
          - CALLBACK_CREATION_INVALID_NUMBER
          - CALL_RULE_INVALID_CONTACT_COLUMN
          - CALL_RULE_MISSING_DATA_ACTION_INPUT
          - CALL_RULE_MISMATCH_TYPE
          - CALL_RULE_INVALID_OPERATOR
          - CALL_RULE_NO_DNC_LISTS_CONFIGURED
          - CALL_RULE_UPDATED_PHONE_COLUMN
          - CONTACT_LIST_FILTER_EVALUATION_FAILED
          - CONTACT_LIST_FILTER_INTERNAL_ERROR
          - CONTACT_COLUMNS_LIMIT_EXCEEDED
          - CONTACT_COLUMN_LENGTH_LIMIT_EXCEEDED
          - CONTACT_ID_LENGTH_LIMIT_EXCEEDED
          - CONTACT_DATUM_LENGTH_LIMIT_EXCEEDED
          - CONTACT_ZIP_CODE_COLUMN_VALUE_INVALID
          - DATA_ACTION_EXECUTION_FAILED
          - DATA_ACTION_AUTHENTICATION_FAILURE
          - DATA_ACTION_NOT_FOUND
          - DATA_ACTION_TOO_MANY_REQUESTS
          - DATA_ACTION_TOO_MANY_REQUESTS_REMOTE
          - DIGITAL_RULE_EVALUATION_FAILED
          - DIGITAL_RULE_INTERNAL_ERROR
          - DIGITAL_RULE_NO_DNC_LISTS_CONFIGURED
          - DIGITAL_RULE_UPDATED_CONTACT_ADDRESS
          - DIGITAL_RULE_SMS_PHONE_NUMBER_TYPE_MISMATCH
          - DIGITAL_RULE_ERROR_SKIPPED
          - DNC_AUTHENTICATION_FAILURE
          - EXCEEDED_CONTACT_LIMIT
          - EXCEEDED_DNC_RECORD_LIMIT
          - EXCEEDED_DNC_PHONE_NUMBER_LENGTH
          - INACTIVE_EDGES_FAILED_PLACE_CALLS
          - INACTIVE_EDGES_TURNED_CAMPAIGN_OFF
          - INVALID_AGENT
          - INVALID_EMAIL_ADDRESS
          - INVALID_PHONE_NUMBER
          - IMPORT_FAILED_TO_READ_HEADERS
          - IMPORT_COULD_NOT_PARSE_AN_ENTRY
          - IMPORT_CONTACT_DOES_NOT_MATCH_LIST_FORMAT
          - IMPORT_ENTRY_DOES_NOT_ALIGN_WITH_HEADERS
          - IMPORT_INVALID_CUSTOM_ID
          - IMPORT_INVALID_DATA
          - IMPORT_INVALID_EMAIL_ADDRESSES
          - IMPORT_INVALID_PHONE_NUMBERS
          - IMPORT_INVALID_EXPIRATION_DATE
          - IMPORT_EXPIRATION_DATE_EXCEEDS_MAX_DAYS
          - IMPORT_COLUMN_EXCEEDS_LENGTH_LIMIT
          - IMPORT_DATUM_EXCEEDS_LENGTH_LIMIT
          - IMPORT_MISSING_CUSTOM_ID
          - IMPORT_NO_COLUMNS_DEFINED
          - IMPORT_COLUMNS_DO_NOT_EXIST_ON_LIST
          - IMPORT_LIST_NO_LONGER_EXISTS
          - IMPORT_FAILED_CONTACT_ZIP_CODE_COLUMN_VALUE_INVALID
          - IMPORT_FAILED_CONTACT_DATA_GREATER_THAN_MAX_LENGTH
          - IMPORT_FAILED_CONTACT_DATA_NOT_WITHIN_MIN_MAX_RANGE
          - IMPORT_FAILED_CONTACT_DATA_INVALID_DATATYPE
          - IMPORT_TOO_MANY_COLUMNS
          - IMPORT_TOO_MANY_EXTRA_COLUMNS
          - ORGANIZATION_HAS_NO_DOMAIN_SET
          - RECYCLE_CAMPAIGN
          - SCHEDULED_CAMPAIGN_INVALID
          - SCHEDULE_UNKNOWN_ERROR
      message:
        type: string
      messageWithParams:
        type: string
      messageParams:
        type: object
        additionalProperties:
          type: object
      documentationUri:
        type: string
      resourceURIs:
        type: array
        items:
          type: string
  DialerEventEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/EventLog'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  AtzmTimeSlot:
    type: object
    properties:
      earliestCallableTime:
        type: string
        example: '08:00'
        description: The earliest time to dial a contact. Valid format is HH:mm
      latestCallableTime:
        type: string
        example: '21:00'
        description: The latest time to dial a contact. Valid format is HH:mm
  AtzmTimeSlotWithTimeZone:
    type: object
    properties:
      earliestCallableTime:
        type: string
        example: '08:00'
        description: The earliest time to dial a contact. Valid format is HH:mm
      latestCallableTime:
        type: string
        example: '21:00'
        description: The latest time to dial a contact. Valid format is HH:mm
      timeZoneId:
        type: string
        example: America/New York
        description: The time zone to use for contacts that cannot be mapped.
  AutomaticTimeZoneMappingSettings:
    type: object
    properties:
      callableWindows:
        type: array
        description: The time intervals to use for automatic time zone mapping.
        items:
          $ref: '#/definitions/CallableWindow'
      supportedCountries:
        type: array
        description: The countries that are supported for automatic time zone mapping.
        items:
          type: string
  CallableWindow:
    type: object
    properties:
      mapped:
        description: >-
          The time interval to place outbound calls, for contacts that can be
          mapped to a time zone.
        $ref: '#/definitions/AtzmTimeSlot'
      unmapped:
        description: >-
          The time interval and time zone to place outbound calls, for contacts
          that cannot be mapped to a time zone.
        $ref: '#/definitions/AtzmTimeSlotWithTimeZone'
  OutboundSettings:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      maxCallsPerAgent:
        type: integer
        format: int32
        description: >-
          The maximum number of calls that can be placed per agent on any
          campaign
      maxConfigurableCallsPerAgent:
        type: integer
        format: int32
        description: >-
          The maximum number of calls that can be configured to be placed per
          agent on any campaign
        readOnly: true
      maxLineUtilization:
        type: number
        format: double
        description: >-
          The maximum percentage of lines that should be used for Outbound,
          expressed as a decimal in the range [0.0, 1.0]
      abandonSeconds:
        type: number
        format: double
        description: The number of seconds used to determine if a call is abandoned
      complianceAbandonRateDenominator:
        type: string
        description: The denominator to be used in determining the compliance abandon rate
        enum:
          - ALL_CALLS
          - CALLS_THAT_REACHED_QUEUE
      automaticTimeZoneMapping:
        description: >-
          The settings for automatic time zone mapping. Note that changing these
          settings will change them for both voice and messaging campaigns.
        $ref: '#/definitions/AutomaticTimeZoneMappingSettings'
      rescheduleTimeZoneSkippedContacts:
        type: boolean
        description: Whether or not to reschedule time-zone blocked contacts
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Condition:
    type: object
    properties:
      type:
        type: string
        description: The type of the condition.
        enum:
          - wrapupCondition
          - systemDispositionCondition
          - contactAttributeCondition
          - phoneNumberCondition
          - phoneNumberTypeCondition
          - callAnalysisCondition
          - contactPropertyCondition
          - dataActionCondition
      inverted:
        type: boolean
        description: >-
          If true, inverts the result of evaluating this Condition. Default is
          false.
      attributeName:
        type: string
        description: >-
          An attribute name associated with this Condition. Required for a
          contactAttributeCondition.
      value:
        type: string
        description: >-
          A value associated with this Condition. This could be text, a number,
          or a relative time. Not used for a DataActionCondition.
      valueType:
        type: string
        description: >-
          The type of the value associated with this Condition. Not used for a
          DataActionCondition.
        enum:
          - STRING
          - NUMERIC
          - DATETIME
          - PERIOD
      operator:
        type: string
        description: >-
          An operation with which to evaluate the Condition. Not used for a
          DataActionCondition.
        enum:
          - EQUALS
          - LESS_THAN
          - LESS_THAN_EQUALS
          - GREATER_THAN
          - GREATER_THAN_EQUALS
          - CONTAINS
          - BEGINS_WITH
          - ENDS_WITH
          - BEFORE
          - AFTER
          - IN
      codes:
        type: array
        description: List of wrap-up code identifiers. Required for a wrapupCondition.
        items:
          type: string
      property:
        type: string
        description: >-
          A value associated with the property type of this Condition. Required
          for a contactPropertyCondition.
      propertyType:
        type: string
        description: >-
          The type of the property associated with this Condition. Required for
          a contactPropertyCondition.
        enum:
          - LAST_ATTEMPT_BY_COLUMN
          - LAST_ATTEMPT_OVERALL
          - LAST_WRAPUP_BY_COLUMN
          - LAST_WRAPUP_OVERALL
      dataAction:
        description: >-
          The Data Action to use for this condition. Required for a
          dataActionCondition.
        $ref: '#/definitions/DomainEntityRef'
      dataNotFoundResolution:
        type: boolean
        description: >-
          The result of this condition if the data action returns a result
          indicating there was no data. Required for a DataActionCondition.
      contactIdField:
        type: string
        description: >-
          The input field from the data action that the contactId will be passed
          to for this condition. Valid for a dataActionCondition.
      callAnalysisResultField:
        type: string
        description: >-
          The input field from the data action that the callAnalysisResult will
          be passed to for this condition. Valid for a wrapup
          dataActionCondition.
      agentWrapupField:
        type: string
        description: >-
          The input field from the data action that the agentWrapup will be
          passed to for this condition. Valid for a wrapup dataActionCondition.
      contactColumnToDataActionFieldMappings:
        type: array
        description: >-
          A list of mappings defining which contact data fields will be passed
          to which data action input fields for this condition. Valid for a
          dataActionCondition.
        items:
          $ref: '#/definitions/ContactColumnToDataActionFieldMapping'
      predicates:
        type: array
        description: >-
          A list of predicates defining the comparisons to use for this
          condition. Required for a dataActionCondition.
        items:
          $ref: '#/definitions/DataActionConditionPredicate'
  ContactColumnToDataActionFieldMapping:
    type: object
    required:
      - contactColumnName
      - dataActionField
    properties:
      contactColumnName:
        type: string
        description: >-
          The name of a contact column whose data will be passed to the data
          action
      dataActionField:
        type: string
        description: >-
          The name of an input field from the data action that the contact
          column data will be passed to
  DataActionConditionPredicate:
    type: object
    required:
      - comparisonValue
      - inverted
      - outputField
      - outputFieldMissingResolution
      - outputOperator
    properties:
      outputField:
        type: string
        description: >-
          The name of an output field from the data action's output to use for
          this condition
      outputOperator:
        type: string
        description: The operation with which to evaluate this condition
        enum:
          - EQUALS
          - LESS_THAN
          - LESS_THAN_EQUALS
          - GREATER_THAN
          - GREATER_THAN_EQUALS
          - CONTAINS
          - BEGINS_WITH
          - ENDS_WITH
          - BEFORE
          - AFTER
      comparisonValue:
        type: string
        description: The value to compare against for this condition
      inverted:
        type: boolean
        description: >-
          If true, inverts the result of evaluating this Predicate. Default is
          false.
      outputFieldMissingResolution:
        type: boolean
        description: >-
          The result of this predicate if the requested output field is missing
          from the data action's result
  DialerAction:
    type: object
    required:
      - actionTypeName
      - type
    properties:
      type:
        type: string
        description: The type of this DialerAction.
        enum:
          - Action
          - modifyContactAttribute
          - dataActionBehavior
      actionTypeName:
        type: string
        description: Additional type specification for this DialerAction.
        enum:
          - DO_NOT_DIAL
          - MODIFY_CONTACT_ATTRIBUTE
          - SWITCH_TO_PREVIEW
          - APPEND_NUMBER_TO_DNC_LIST
          - APPEND_CUSTOM_ENTRY_TO_DNC_LIST
          - SCHEDULE_CALLBACK
          - CONTACT_UNCALLABLE
          - NUMBER_UNCALLABLE
          - SET_CALLER_ID
          - SET_SKILLS
          - DATA_ACTION
      updateOption:
        type: string
        description: >-
          Specifies how a contact attribute should be updated. Required for
          MODIFY_CONTACT_ATTRIBUTE.
        enum:
          - SET
          - INCREMENT
          - DECREMENT
          - CURRENT_TIME
      properties:
        type: object
        description: >-
          A map of key-value pairs pertinent to the DialerAction. Different
          types of DialerActions require different properties.
          MODIFY_CONTACT_ATTRIBUTE with an updateOption of SET takes a contact
          column as the key and accepts any value. SCHEDULE_CALLBACK takes a key
          'callbackOffset' that specifies how far in the future the callback
          should be scheduled, in minutes. SET_CALLER_ID takes two keys:
          'callerAddress', which should be the caller id phone number, and
          'callerName'. For either key, you can also specify a column on the
          contact to get the value from. To do this, specify 'contact.Column',
          where 'Column' is the name of the contact column from which to get the
          value. SET_SKILLS takes a key 'skills' with an array of skill ids
          wrapped into a string (Example: {'skills': '['skillIdHere']'} ).
        additionalProperties:
          type: string
      dataAction:
        description: >-
          The Data Action to use for this action. Required for a
          dataActionBehavior.
        $ref: '#/definitions/DomainEntityRef'
      contactColumnToDataActionFieldMappings:
        type: array
        description: >-
          A list of mappings defining which contact data fields will be passed
          to which data action input fields for this condition. Valid for a
          dataActionBehavior.
        items:
          $ref: '#/definitions/ContactColumnToDataActionFieldMapping'
      contactIdField:
        type: string
        description: >-
          The input field from the data action that the contactId will be passed
          to for this condition. Valid for a dataActionBehavior.
      callAnalysisResultField:
        type: string
        description: >-
          The input field from the data action that the callAnalysisResult will
          be passed to for this condition. Valid for a wrapup
          dataActionBehavior.
      agentWrapupField:
        type: string
        description: >-
          The input field from the data action that the agentWrapup will be
          passed to for this condition. Valid for a wrapup dataActionBehavior.
  DialerRule:
    type: object
    required:
      - category
      - conditions
      - name
    properties:
      id:
        type: string
        description: The identifier of the rule.
        readOnly: true
      name:
        type: string
        description: The name of the rule.
      order:
        type: integer
        format: int32
        description: >-
          The ranked order of the rule. Rules are processed from lowest number
          to highest.
      category:
        type: string
        description: The category of the rule.
        enum:
          - DIALER_PRECALL
          - DIALER_WRAPUP
      conditions:
        type: array
        description: >-
          A list of Conditions. All of the Conditions must evaluate to true to
          trigger the actions.
        items:
          $ref: '#/definitions/Condition'
      actions:
        type: array
        description: The list of actions to be taken if the conditions are true.
        items:
          $ref: '#/definitions/DialerAction'
  RuleSet:
    type: object
    required:
      - name
      - rules
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the RuleSet.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      contactList:
        description: >-
          A ContactList to provide user-interface suggestions for contact
          columns on relevant conditions and actions.
        $ref: '#/definitions/DomainEntityRef'
      queue:
        description: >-
          A Queue to provide user-interface suggestions for wrap-up codes on
          relevant conditions and actions.
        $ref: '#/definitions/DomainEntityRef'
      rules:
        type: array
        description: The list of rules.
        items:
          $ref: '#/definitions/DialerRule'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  RuleSetEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/RuleSet'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CampaignSequence:
    type: object
    required:
      - campaigns
      - currentCampaign
      - status
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      campaigns:
        type: array
        description: The ordered list of Campaigns that this CampaignSequence will run.
        items:
          $ref: '#/definitions/DomainEntityRef'
      currentCampaign:
        type: integer
        format: int32
        description: >-
          A zero-based index indicating which Campaign this CampaignSequence is
          currently on.
        readOnly: true
      status:
        type: string
        description: >-
          The current status of the CampaignSequence. A CampaignSequence can be
          turned 'on' or 'off'.
        enum:
          - 'on'
          - 'off'
          - complete
      stopMessage:
        type: string
        description: >-
          A message indicating if and why a CampaignSequence has stopped
          unexpectedly.
        readOnly: true
      repeat:
        type: boolean
        description: >-
          Indicates if a sequence should repeat from the beginning after the
          last campaign completes. Default is false.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SequenceSchedule:
    type: object
    required:
      - intervals
      - sequence
      - timeZone
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      intervals:
        type: array
        description: >-
          A list of intervals during which to run the associated
          CampaignSequence.
        items:
          $ref: '#/definitions/ScheduleInterval'
      timeZone:
        type: string
        example: Africa/Abidjan
        description: The time zone for this SequenceSchedule. For example, Africa/Abidjan.
      sequence:
        description: The CampaignSequence that this SequenceSchedule is for.
        $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CampaignSequenceEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CampaignSequence'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  WrapUpCodeMapping:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      defaultSet:
        type: array
        description: >-
          The default set of wrap-up flags. These will be used if there is no
          entry for a given wrap-up code in the mapping.
        uniqueItems: true
        items:
          type: string
          enum:
            - CONTACT_UNCALLABLE
            - NUMBER_UNCALLABLE
            - RIGHT_PARTY_CONTACT
      mapping:
        type: object
        description: A map from wrap-up code identifiers to a set of wrap-up flags.
        additionalProperties:
          type: array
          uniqueItems: true
          items:
            type: string
            enum:
              - CONTACT_UNCALLABLE
              - NUMBER_UNCALLABLE
              - RIGHT_PARTY_CONTACT
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  AppendToDncActionSettings:
    type: object
    required:
      - expire
    properties:
      expire:
        type: boolean
        description: Whether to expire the record appended to the DNC list.
      expirationDuration:
        type: string
        example: P19DT15H13M
        description: If 'expire' is set to true, how long to keep the record.
      listType:
        type: string
        description: The Dnc List Type to append entries to
        enum:
          - Rds
          - RdsCustom
  ContactAddressConditionSettings:
    type: object
    required:
      - operator
      - value
    properties:
      operator:
        type: string
        description: The operator to use when comparing address values.
        enum:
          - Equals
          - Contains
          - BeginsWith
          - EndsWith
      value:
        type: string
        example: +1555, outlook.com
        description: The value to compare against the contact's address.
  ContactAddressTypeConditionSettings:
    type: object
    required:
      - operator
      - value
    properties:
      operator:
        type: string
        description: The operator to use when comparing the address types.
        enum:
          - Equals
          - Contains
          - BeginsWith
          - EndsWith
      value:
        type: string
        description: The type value to compare against the contact column type.
  ContactColumnConditionSettings:
    type: object
    required:
      - columnName
      - operator
      - value
      - valueType
    properties:
      columnName:
        type: string
        description: The name of the contact list column to evaluate.
      operator:
        type: string
        description: The operator to use when comparing values.
        enum:
          - Equals
          - LessThan
          - LessThanEquals
          - GreaterThan
          - GreaterThanEquals
          - Contains
          - BeginsWith
          - EndsWith
          - Before
          - After
      value:
        type: string
        example: >-
          For Numeric: '1234', '1234.56', '$1,234.56'. For DateTime:
          '2022-01-01T12:01:23.456-0000'. For Period: 'P1DT1H1M'. 
        description: The value to compare against the contact's data.
      valueType:
        type: string
        description: The data type the value should be treated as.
        enum:
          - DateTime
          - Numeric
          - Period
          - String
  DataActionConditionSettings:
    type: object
    required:
      - dataActionId
      - dataNotFoundResolution
    properties:
      dataActionId:
        type: string
        description: The Data Action Id to use for this condition.
      contactIdField:
        type: string
        description: >-
          The input field from the data action that the contactId will be passed
          into.
      dataNotFoundResolution:
        type: boolean
        description: >-
          The result of this condition if the data action returns a result
          indicating there was no data.
      predicates:
        type: array
        description: >-
          A list of predicates defining the comparisons to use for this
          condition.
        items:
          $ref: '#/definitions/DigitalDataActionConditionPredicate'
      contactColumnToDataActionFieldMappings:
        type: array
        description: >-
          A list of mappings defining which contact data fields will be passed
          to which data action input fields.
        items:
          $ref: '#/definitions/DataActionContactColumnFieldMapping'
  DataActionContactColumnFieldMapping:
    type: object
    required:
      - contactColumnName
      - dataActionField
    properties:
      contactColumnName:
        type: string
        description: >-
          The name of a contact column whose data will be passed to the data
          action
      dataActionField:
        type: string
        description: >-
          The name of an input field from the data action that the contact
          column data will be passed to
  DigitalAction:
    type: object
    properties:
      updateContactColumnActionSettings:
        description: The settings for an 'update contact column' action.
        $ref: '#/definitions/UpdateContactColumnActionSettings'
      doNotSendActionSettings:
        description: The settings for a 'do not send' action.
        $ref: '#/definitions/DoNotSendActionSettings'
      appendToDncActionSettings:
        description: The settings for an 'Append to DNC' action.
        $ref: '#/definitions/AppendToDncActionSettings'
      markContactUncontactableActionSettings:
        description: The settings for a 'mark contact uncontactable' action.
        $ref: '#/definitions/MarkContactUncontactableActionSettings'
      markContactAddressUncontactableActionSettings:
        description: The settings for an 'mark contact address uncontactable' action.
        $ref: '#/definitions/MarkContactAddressUncontactableActionSettings'
      setContentTemplateActionSettings:
        description: The settings for a 'Set content template' action.
        $ref: '#/definitions/SetContentTemplateActionSettings'
      setSmsPhoneNumberActionSettings:
        description: The settings for a 'set sms phone number' action.
        $ref: '#/definitions/SetSmsPhoneNumberActionSettings'
  DigitalCondition:
    type: object
    properties:
      inverted:
        type: boolean
        description: >-
          If true, inverts the result of evaluating this condition. Default is
          false.
      contactColumnConditionSettings:
        description: The settings for a 'contact list column' condition.
        $ref: '#/definitions/ContactColumnConditionSettings'
      contactAddressConditionSettings:
        description: The settings for a 'contact address' condition.
        $ref: '#/definitions/ContactAddressConditionSettings'
      contactAddressTypeConditionSettings:
        description: The settings for a 'contact address type' condition.
        $ref: '#/definitions/ContactAddressTypeConditionSettings'
      lastAttemptByColumnConditionSettings:
        description: The settings for a 'last attempt by column' condition.
        $ref: '#/definitions/LastAttemptByColumnConditionSettings'
      lastAttemptOverallConditionSettings:
        description: The settings for a 'last attempt overall' condition.
        $ref: '#/definitions/LastAttemptOverallConditionSettings'
      lastResultByColumnConditionSettings:
        description: The settings for a 'last result by column' condition.
        $ref: '#/definitions/LastResultByColumnConditionSettings'
      lastResultOverallConditionSettings:
        description: The settings for a 'last result overall' condition.
        $ref: '#/definitions/LastResultOverallConditionSettings'
      dataActionConditionSettings:
        description: The settings for a 'data action' condition.
        $ref: '#/definitions/DataActionConditionSettings'
  DigitalDataActionConditionPredicate:
    type: object
    required:
      - comparisonValue
      - inverted
      - outputField
      - outputFieldMissingResolution
      - outputOperator
    properties:
      outputField:
        type: string
        description: >-
          The name of an output field from the data action's output to use for
          this condition
      outputOperator:
        type: string
        description: The operation with which to evaluate this condition
        enum:
          - Equals
          - LessThan
          - LessThanEquals
          - GreaterThan
          - GreaterThanEquals
          - Contains
          - BeginsWith
          - EndsWith
          - Before
          - After
      comparisonValue:
        type: string
        description: The value to compare against for this condition
      inverted:
        type: boolean
        description: >-
          If true, inverts the result of evaluating this Predicate. Default is
          false.
      outputFieldMissingResolution:
        type: boolean
        description: >-
          The result of this predicate if the requested output field is missing
          from the data action's result
  DigitalRule:
    type: object
    required:
      - actions
      - category
      - conditions
      - name
      - order
    properties:
      id:
        type: string
        description: The identifier of the rule.
        readOnly: true
      name:
        type: string
        description: The name of the rule.
      order:
        type: integer
        format: int32
        description: >-
          The ranked order of the rule. Rules are processed from lowest number
          to highest.
      category:
        type: string
        description: The category of the rule.
        enum:
          - PreContact
          - PostContact
      conditions:
        type: array
        description: >-
          A list of conditions to evaluate. All of the Conditions must evaluate
          to true to trigger the actions.
        items:
          $ref: '#/definitions/DigitalCondition'
      actions:
        type: array
        description: The list of actions to be taken if all conditions are true.
        items:
          $ref: '#/definitions/DigitalAction'
  DigitalRuleSet:
    type: object
    required:
      - rules
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      contactList:
        description: >-
          A ContactList to provide suggestions for contact columns on relevant
          conditions and actions.
        $ref: '#/definitions/DomainEntityRef'
      rules:
        type: array
        description: The list of rules.
        items:
          $ref: '#/definitions/DigitalRule'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DoNotSendActionSettings:
    type: object
  LastAttemptByColumnConditionSettings:
    type: object
    required:
      - operator
      - value
    properties:
      emailColumnName:
        type: string
        description: The name of the contact column to evaluate for Email.
      smsColumnName:
        type: string
        description: The name of the contact column to evaluate for SMS.
      operator:
        type: string
        description: The operator to use when comparing values.
        enum:
          - Before
          - After
      value:
        type: string
        example: P1DT1H1M
        description: The period value to compare against the contact's data.
  LastAttemptOverallConditionSettings:
    type: object
    required:
      - mediaTypes
      - operator
      - value
    properties:
      mediaTypes:
        type: array
        description: A list of media types to evaluate.
        items:
          type: string
          enum:
            - Voice
            - Email
            - Sms
      operator:
        type: string
        description: The operator to use when comparing values.
        enum:
          - Before
          - After
      value:
        type: string
        example: P1DT1H1M
        description: The period value to compare against the contact's data.
  LastResultByColumnConditionSettings:
    type: object
    properties:
      emailColumnName:
        type: string
        description: The name of the contact column to evaluate for Email.
      emailWrapupCodes:
        type: array
        description: A list of wrapup code identifiers to match for Email.
        items:
          type: string
      smsColumnName:
        type: string
        description: The name of the contact column to evaluate for SMS.
      smsWrapupCodes:
        type: array
        description: A list of wrapup code identifiers to match for SMS.
        items:
          type: string
  LastResultOverallConditionSettings:
    type: object
    properties:
      emailWrapupCodes:
        type: array
        description: A list of wrapup code identifiers to match for Email.
        items:
          type: string
      smsWrapupCodes:
        type: array
        description: A list of wrapup code identifiers to match for SMS.
        items:
          type: string
  MarkContactAddressUncontactableActionSettings:
    type: object
  MarkContactUncontactableActionSettings:
    type: object
    required:
      - mediaTypes
    properties:
      mediaTypes:
        type: array
        description: A list of media types to evaluate.
        items:
          type: string
          enum:
            - Voice
            - Email
            - Sms
  SetContentTemplateActionSettings:
    type: object
    required:
      - emailContentTemplateId
      - smsContentTemplateId
    properties:
      smsContentTemplateId:
        type: string
        description: A string of sms contentTemplateId.
      emailContentTemplateId:
        type: string
        description: A string of email contentTemplateId.
  SetSmsPhoneNumberActionSettings:
    type: object
    required:
      - senderSmsPhoneNumber
    properties:
      senderSmsPhoneNumber:
        type: string
        description: The string address for the sms phone number.
  UpdateContactColumnActionSettings:
    type: object
    required:
      - properties
      - updateOption
    properties:
      properties:
        type: object
        example: '{"phoneNumber":"+11234567890"}, {"lastContactedTime":""'
        description: A mapping of contact columns to their new values.
        additionalProperties:
          type: string
      updateOption:
        type: string
        description: The type of update to make to the specified contact column(s).
        enum:
          - Set
          - Increment
          - Decrement
          - CurrentTime
  DigitalRuleSetEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DigitalRuleSet'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  MessagingCampaignDivisionView:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  MessagingCampaignDivisionViewEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/MessagingCampaignDivisionView'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  EmailConfig:
    type: object
    required:
      - emailColumns
      - fromAddress
    properties:
      emailColumns:
        type: array
        description: >-
          The contact list columns specifying the email address(es) of the
          contact.
        items:
          type: string
      contentTemplate:
        description: >-
          The content template used to formulate the email to send to the
          contact.
        $ref: '#/definitions/DomainEntityRef'
      fromAddress:
        description: The email address that will be used as the sender of the email.
        $ref: '#/definitions/FromEmailAddress'
      replyToAddress:
        description: The email address from which any reply will be sent.
        $ref: '#/definitions/ReplyToEmailAddress'
  FromEmailAddress:
    type: object
    required:
      - domain
    properties:
      domain:
        description: The OutboundDomain used for the email address.
        $ref: '#/definitions/DomainEntityRef'
      friendlyName:
        type: string
        description: The friendly name of the email address.
      localPart:
        type: string
        description: The local part of the email address.
  MessagingCampaign:
    type: object
    required:
      - contactList
      - messagesPerMinute
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      division:
        description: The division this entity belongs to.
        $ref: '#/definitions/DomainEntityRef'
      campaignStatus:
        type: string
        description: >-
          The current status of the messaging campaign. A messaging campaign may
          be turned 'on' or 'off'.
        enum:
          - 'on'
          - stopping
          - 'off'
          - complete
          - invalid
          - forced_off
          - forced_stopping
      callableTimeSet:
        description: The callable time set for this messaging campaign.
        $ref: '#/definitions/DomainEntityRef'
      contactList:
        description: The contact list that this messaging campaign will send messages for.
        $ref: '#/definitions/DomainEntityRef'
      dncLists:
        type: array
        description: >-
          The dnc lists to check before sending a message for this messaging
          campaign.
        items:
          $ref: '#/definitions/DomainEntityRef'
      alwaysRunning:
        type: boolean
        description: Whether this messaging campaign is always running
      contactSorts:
        type: array
        description: >-
          The order in which to sort contacts for dialing, based on up to four
          columns.
        items:
          $ref: '#/definitions/ContactSort'
      messagesPerMinute:
        type: integer
        format: int32
        description: How many messages this messaging campaign will send per minute.
      ruleSets:
        type: array
        description: Rule Sets to be applied while this campaign is sending messages
        items:
          $ref: '#/definitions/DomainEntityRef'
      contactListFilters:
        type: array
        description: >-
          The contact list filter to check before sending a message for this
          messaging campaign.
        items:
          $ref: '#/definitions/DomainEntityRef'
      errors:
        type: array
        description: >-
          A list of current error conditions associated with this messaging
          campaign.
        items:
          $ref: '#/definitions/RestErrorDetail'
      dynamicContactQueueingSettings:
        description: >-
          Indicates (when true) that the campaign supports dynamic queueing of
          the contact list at the time of a request for contacts.
        $ref: '#/definitions/DynamicContactQueueingSettings'
      emailConfig:
        description: Configuration for this messaging campaign to send Email messages.
        $ref: '#/definitions/EmailConfig'
      smsConfig:
        description: Configuration for this messaging campaign to send SMS messages.
        $ref: '#/definitions/SmsConfig'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ReplyToEmailAddress:
    type: object
    required:
      - domain
      - route
    properties:
      domain:
        description: The InboundDomain used for the email address.
        $ref: '#/definitions/DomainEntityRef'
      route:
        description: The InboundRoute used for the email address.
        $ref: '#/definitions/DomainEntityRef'
  SmsConfig:
    type: object
    required:
      - messageColumn
      - phoneColumn
      - senderSmsPhoneNumber
    properties:
      messageColumn:
        type: string
        description: The Contact List column specifying the message to send to the contact.
      phoneColumn:
        type: string
        description: >-
          The Contact List column specifying the phone number to send a message
          to.
      senderSmsPhoneNumber:
        description: >-
          A reference to the SMS Phone Number that will be used as the sender of
          a message.
        $ref: '#/definitions/SmsPhoneNumberRef'
      contentTemplate:
        description: >-
          The content template used to formulate the message to send to the
          contact.
        $ref: '#/definitions/DomainEntityRef'
  SmsPhoneNumberRef:
    type: object
    required:
      - phoneNumber
    properties:
      phoneNumber:
        type: string
        description: >-
          A phone number provisioned for SMS communications in E.164 format.
          E.g. +13175555555 or +34234234234
      selfUri:
        type: string
        format: uri
  MessagingCampaignDiagnostics:
    type: object
    properties:
      timeZoneRescheduledContactsCount:
        type: integer
        format: int32
        description: Current number of time zone rescheduled messages on the campaign
        readOnly: true
  MessagingCampaignEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/MessagingCampaign'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  EmailCampaignSchedule:
    type: object
    required:
      - emailCampaign
      - intervals
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      intervals:
        type: array
        description: A list of intervals during which to run the associated Campaign.
        items:
          $ref: '#/definitions/ScheduleInterval'
      timeZone:
        type: string
        example: Africa/Abidjan
        description: The time zone for this email campaign schedule.
      emailCampaign:
        description: The Campaign that this email campaign schedule is for.
        $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  MessagingCampaignSchedule:
    type: object
    required:
      - intervals
      - messagingCampaign
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the entity. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified time of the entity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: >-
          Required for updates, must match the version number of the most recent
          update
      intervals:
        type: array
        description: A list of intervals during which to run the associated Campaign.
        items:
          $ref: '#/definitions/ScheduleInterval'
      timeZone:
        type: string
        example: Africa/Abidjan
        description: The time zone for this messaging campaign schedule.
      messagingCampaign:
        description: The Campaign that this messaging campaign schedule is for.
        $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  MessagingCampaignScheduleEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/MessagingCampaignSchedule'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  UserDevice:
    type: object
    required:
      - acceptNotifications
      - deviceToken
      - make
      - model
      - notificationId
      - type
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      deviceToken:
        type: string
        description: device token sent by mobile clients.
      notificationId:
        type: string
        description: notification id of the device.
      make:
        type: string
        description: make of the device.
      model:
        type: string
        description: Device model
      acceptNotifications:
        type: boolean
        description: if the device accepts notifications
      type:
        type: string
        description: type of the device; ios or android
        enum:
          - android
          - ios
      sessionHash:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DirectoryUserDevicesListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UserDevice'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  FieldConfig:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      entityType:
        type: string
        enum:
          - person
          - group
          - org
          - externalContact
      state:
        type: string
      sections:
        type: array
        items:
          $ref: '#/definitions/Section'
      version:
        type: string
      schemaVersion:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  GroupMembersUpdate:
    type: object
    required:
      - memberIds
      - version
    properties:
      memberIds:
        type: array
        description: A list of the ids of the members to add.
        items:
          type: string
      version:
        type: integer
        format: int32
        description: The current group version.
  GroupProfile:
    type: object
    required:
      - version
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      state:
        type: string
        description: The state of the user resource
        enum:
          - active
          - inactive
          - deleted
      dateModified:
        type: string
        format: date-time
        description: >-
          Datetime of the last modification. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int64
        description: The version of the group resource
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  GroupProfileEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/GroupProfile'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  GroupUpdate:
    type: object
    required:
      - version
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The group name.
      description:
        type: string
      state:
        type: string
        description: State of the group.
        enum:
          - active
          - inactive
          - deleted
      version:
        type: integer
        format: int32
        description: Current version for this resource.
      images:
        type: array
        items:
          $ref: '#/definitions/UserImage'
      addresses:
        type: array
        items:
          $ref: '#/definitions/GroupContact'
      rulesVisible:
        type: boolean
        description: >-
          Are membership rules visible to the person requesting to view the
          group
      visibility:
        type: string
        description: Who can view this group
        enum:
          - public
          - ownerIds
          - members
      ownerIds:
        type: array
        description: Owners of the group
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  GroupEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Group'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  GroupCreate:
    type: object
    required:
      - name
      - rulesVisible
      - type
      - visibility
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The group name.
      description:
        type: string
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified date/time. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      memberCount:
        type: integer
        format: int64
        description: Number of members.
        readOnly: true
      state:
        type: string
        description: Active, inactive, or deleted state.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      version:
        type: integer
        format: int32
        description: Current version for this resource.
        readOnly: true
      type:
        type: string
        description: Type of group.
        enum:
          - official
          - social
      images:
        type: array
        items:
          $ref: '#/definitions/UserImage'
      addresses:
        type: array
        items:
          $ref: '#/definitions/GroupContact'
      rulesVisible:
        type: boolean
        description: >-
          Are membership rules visible to the person requesting to view the
          group
      visibility:
        type: string
        description: Who can view this group
        enum:
          - public
          - owners
          - members
      ownerIds:
        type: array
        description: Owners of the group
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  GroupsSearchResponse:
    type: object
    required:
      - pageCount
      - pageNumber
      - pageSize
      - results
      - total
      - types
    properties:
      total:
        type: integer
        format: int64
        description: The total number of results found
      pageCount:
        type: integer
        format: int32
        description: The total number of pages
      pageSize:
        type: integer
        format: int32
        description: The current page size
      pageNumber:
        type: integer
        format: int32
        description: The current page number
      previousPage:
        type: string
        description: Q64 value for the previous page of results
      currentPage:
        type: string
        description: Q64 value for the current page of results
      nextPage:
        type: string
        description: Q64 value for the next page of results
      types:
        type: array
        description: Resource types the search was performed against
        items:
          type: string
      results:
        type: array
        description: Search results
        items:
          $ref: '#/definitions/Group'
  GroupSearchCriteria:
    type: object
    required:
      - type
    properties:
      endValue:
        type: string
        description: The end value of the range. This field is used for range search types.
      values:
        type: array
        description: A list of values for the search to match against
        items:
          type: string
      startValue:
        type: string
        description: >-
          The start value of the range. This field is used for range search
          types.
      value:
        type: string
        description: A value for the search to match against
      operator:
        type: string
        description: How to apply this search criteria against other criteria
        enum:
          - AND
          - OR
          - NOT
      group:
        type: array
        description: Groups multiple conditions
        items:
          $ref: '#/definitions/GroupSearchCriteria'
      dateFormat:
        type: string
        description: >-
          Set date format for criteria values when using date range search
          type.  Supports Java date format syntax, example
          yyyy-MM-dd'T'HH:mm:ss.SSSX.
      type:
        type: string
        description: Search Type
        enum:
          - EXACT
          - STARTS_WITH
          - CONTAINS
          - REGEX
          - TERM
          - TERMS
          - REQUIRED_FIELDS
          - MATCH_ALL
      fields:
        type: array
        description: Field names to search against
        items:
          type: string
        x-genesys-search-fields:
          value:
            - description
            - id
            - name
            - state
  GroupSearchRequest:
    type: object
    properties:
      sortOrder:
        type: string
        description: The sort order for results
        enum:
          - ASC
          - DESC
          - SCORE
      sortBy:
        type: string
        description: The field in the resource that you want to sort the results by
      pageSize:
        type: integer
        format: int32
        description: The number of results per page
      pageNumber:
        type: integer
        format: int32
        description: The page of resources you want to retrieve
      sort:
        type: array
        description: Multi-value sort order, list of multiple sort values
        items:
          $ref: '#/definitions/SearchSort'
      query:
        type: array
        items:
          $ref: '#/definitions/GroupSearchCriteria'
  LanguageEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Language'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  LocationUpdateDefinition:
    type: object
    required:
      - name
      - version
    properties:
      name:
        type: string
        description: >-
          The name of the Location. Required for creates, not required for
          updates
      version:
        type: integer
        format: int32
        description: Current version of the location
      state:
        type: string
        description: Current activity status of the location.
        enum:
          - active
          - deleted
      path:
        type: array
        description: A list of ancestor ids
        items:
          type: string
      notes:
        type: string
        description: Notes for the location
      contactUser:
        type: string
        description: The user id of the location contact
      emergencyNumber:
        description: Emergency number for the location
        $ref: '#/definitions/LocationEmergencyNumber'
      address:
        description: Address of the location
        $ref: '#/definitions/LocationAddress'
  LocationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/LocationDefinition'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  LocationCreateDefinition:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: >-
          The name of the Location. Required for creates, not required for
          updates
      version:
        type: integer
        format: int32
        description: Current version of the location
      state:
        type: string
        description: Current activity status of the location.
        enum:
          - active
          - deleted
      path:
        type: array
        description: A list of ancestor ids
        items:
          type: string
      notes:
        type: string
        description: Notes for the location
      contactUser:
        type: string
        description: The user id of the location contact
      emergencyNumber:
        description: Emergency number for the location
        $ref: '#/definitions/LocationEmergencyNumber'
      address:
        description: Address of the location
        $ref: '#/definitions/LocationAddress'
  LocationsSearchResponse:
    type: object
    required:
      - pageCount
      - pageNumber
      - pageSize
      - results
      - total
      - types
    properties:
      total:
        type: integer
        format: int64
        description: The total number of results found
      pageCount:
        type: integer
        format: int32
        description: The total number of pages
      pageSize:
        type: integer
        format: int32
        description: The current page size
      pageNumber:
        type: integer
        format: int32
        description: The current page number
      previousPage:
        type: string
        description: Q64 value for the previous page of results
      currentPage:
        type: string
        description: Q64 value for the current page of results
      nextPage:
        type: string
        description: Q64 value for the next page of results
      types:
        type: array
        description: Resource types the search was performed against
        items:
          type: string
      results:
        type: array
        description: Search results
        items:
          $ref: '#/definitions/LocationDefinition'
  LocationSearchCriteria:
    type: object
    required:
      - type
    properties:
      endValue:
        type: string
        description: The end value of the range. This field is used for range search types.
      values:
        type: array
        description: A list of values for the search to match against
        items:
          type: string
      startValue:
        type: string
        description: >-
          The start value of the range. This field is used for range search
          types.
      value:
        type: string
        description: A value for the search to match against
      operator:
        type: string
        description: How to apply this search criteria against other criteria
        enum:
          - AND
          - OR
          - NOT
      group:
        type: array
        description: Groups multiple conditions
        items:
          $ref: '#/definitions/LocationSearchCriteria'
      dateFormat:
        type: string
        description: >-
          Set date format for criteria values when using date range search
          type.  Supports Java date format syntax, example
          yyyy-MM-dd'T'HH:mm:ss.SSSX.
      type:
        type: string
        description: Search Type
        enum:
          - EXACT
          - STARTS_WITH
          - CONTAINS
          - REGEX
          - TERM
          - TERMS
          - REQUIRED_FIELDS
          - MATCH_ALL
      fields:
        type: array
        description: Field names to search against
        items:
          type: string
        x-genesys-search-fields:
          value:
            - id
            - name
            - notes
            - addressFields.city
            - addressFields.country
            - addressFields.state
            - addressFields.street1
            - addressFields.street2
            - addressFields.zipcode
            - addressVerified
            - emergencyNumber
  LocationSearchRequest:
    type: object
    properties:
      sortOrder:
        type: string
        description: The sort order for results
        enum:
          - ASC
          - DESC
          - SCORE
      sortBy:
        type: string
        description: The field in the resource that you want to sort the results by
      pageSize:
        type: integer
        format: int32
        description: The number of results per page
      pageNumber:
        type: integer
        format: int32
        description: The page of resources you want to retrieve
      sort:
        type: array
        description: Multi-value sort order, list of multiple sort values
        items:
          $ref: '#/definitions/SearchSort'
      expand:
        type: array
        description: Provides more details about a specified resource
        items:
          type: string
      query:
        type: array
        items:
          $ref: '#/definitions/LocationSearchCriteria'
  OrganizationFeatures:
    type: object
    properties:
      realtimeCIC:
        type: boolean
      purecloud:
        type: boolean
      hipaa:
        type: boolean
      ucEnabled:
        type: boolean
      pci:
        type: boolean
      purecloudVoice:
        type: boolean
      xmppFederation:
        type: boolean
      chat:
        type: boolean
      informalPhotos:
        type: boolean
      directory:
        type: boolean
      contactCenter:
        type: boolean
      unifiedCommunications:
        type: boolean
      custserv:
        type: boolean
  FeatureState:
    type: object
    properties:
      enabled:
        type: boolean
  Adjacents:
    type: object
    properties:
      superiors:
        type: array
        items:
          $ref: '#/definitions/User'
      siblings:
        type: array
        items:
          $ref: '#/definitions/User'
      directReports:
        type: array
        items:
          $ref: '#/definitions/User'
  AvailableTranslations:
    type: object
    properties:
      orgSpecific:
        type: array
        items:
          type: string
      builtin:
        type: array
        items:
          type: string
  UserExpands:
    type: object
    properties:
      routingStatus:
        description: ACD routing status
        readOnly: true
        $ref: '#/definitions/RoutingStatus'
      presence:
        description: Active presence
        readOnly: true
        $ref: '#/definitions/UserPresence'
      integrationPresence:
        description: Active 3rd party presence
        readOnly: true
        $ref: '#/definitions/UserPresence'
      conversationSummary:
        description: Summary of conversion statistics for conversation types.
        readOnly: true
        $ref: '#/definitions/UserConversationSummary'
      outOfOffice:
        description: Determine if out of office is enabled
        readOnly: true
        $ref: '#/definitions/OutOfOffice'
      geolocation:
        description: Current geolocation position
        readOnly: true
        $ref: '#/definitions/Geolocation'
      station:
        description: Effective, default, and last station information
        readOnly: true
        $ref: '#/definitions/UserStations'
      authorization:
        description: Roles and permissions assigned to the user
        readOnly: true
        $ref: '#/definitions/UserAuthorization'
  UserProfile:
    type: object
    required:
      - version
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      state:
        type: string
        description: The state of the user resource
        enum:
          - active
          - inactive
          - deleted
      dateModified:
        type: string
        format: date-time
        description: >-
          Datetime of the last modification. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int64
        description: The version of the group resource
      expands:
        description: User information expansions
        readOnly: true
        $ref: '#/definitions/UserExpands'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UserProfileEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UserProfile'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ExternalMetricDataProcessedItem:
    type: object
    required:
      - dateOccurred
      - metricId
      - value
    properties:
      userId:
        type: string
        description: The user ID. Must provide either userId or userEmail, but not both.
      userEmail:
        type: string
        description: >-
          The user main email used in user's GenesysCloud account. Must provide
          either userId or userEmail, but not both.
      metricId:
        type: string
        description: The ID of the external metric definition
      dateOccurred:
        type: string
        format: date
        description: >-
          The date of the metric data. Dates are represented as an ISO-8601
          string. For example: yyyy-MM-dd
      value:
        type: number
        description: >-
          The value of the metric data. When value is null, the metric data will
          be deleted.
      count:
        type: integer
        format: int32
        description: >-
          The number of data points. The default value is 0 when type is
          Cumulative and the metric data already exists, otherwise 1. When total
          count reaches 0, the metric data will be deleted.
      type:
        type: string
        description: The type of the metric data. The default value is Total.
        enum:
          - Total
          - Cumulative
      totalValue:
        type: number
        description: The total value of the metric data.
      totalCount:
        type: integer
        format: int32
        description: The total number of data points.
  ExternalMetricDataUnprocessedItem:
    type: object
    required:
      - dateOccurred
      - metricId
      - value
    properties:
      userId:
        type: string
        description: The user ID. Must provide either userId or userEmail, but not both.
      userEmail:
        type: string
        description: >-
          The user main email used in user's GenesysCloud account. Must provide
          either userId or userEmail, but not both.
      metricId:
        type: string
        description: The ID of the external metric definition
      dateOccurred:
        type: string
        format: date
        description: >-
          The date of the metric data. Dates are represented as an ISO-8601
          string. For example: yyyy-MM-dd
      value:
        type: number
        description: >-
          The value of the metric data. When value is null, the metric data will
          be deleted.
      count:
        type: integer
        format: int32
        description: >-
          The number of data points. The default value is 0 when type is
          Cumulative and the metric data already exists, otherwise 1. When total
          count reaches 0, the metric data will be deleted.
      type:
        type: string
        description: The type of the metric data. The default value is Total.
        enum:
          - Total
          - Cumulative
      message:
        type: string
        description: The error message
      code:
        type: string
        description: The error code
  ExternalMetricDataWriteResponse:
    type: object
    properties:
      processedEntities:
        type: array
        description: The list of processed entities
        items:
          $ref: '#/definitions/ExternalMetricDataProcessedItem'
      unprocessedEntities:
        type: array
        description: The list of unprocessed entities
        items:
          $ref: '#/definitions/ExternalMetricDataUnprocessedItem'
    description: External metric data write response
  ExternalMetricDataItem:
    type: object
    required:
      - dateOccurred
      - metricId
      - value
    properties:
      userId:
        type: string
        description: The user ID. Must provide either userId or userEmail, but not both.
      userEmail:
        type: string
        description: >-
          The user main email used in user's GenesysCloud account. Must provide
          either userId or userEmail, but not both.
      metricId:
        type: string
        description: The ID of the external metric definition
      dateOccurred:
        type: string
        format: date
        description: >-
          The date of the metric data. Dates are represented as an ISO-8601
          string. For example: yyyy-MM-dd
      value:
        type: number
        description: >-
          The value of the metric data. When value is null, the metric data will
          be deleted.
      count:
        type: integer
        format: int32
        description: >-
          The number of data points. The default value is 0 when type is
          Cumulative and the metric data already exists, otherwise 1. When total
          count reaches 0, the metric data will be deleted.
      type:
        type: string
        description: The type of the metric data. The default value is Total.
        enum:
          - Total
          - Cumulative
  ExternalMetricDataWriteRequest:
    type: object
    required:
      - items
    properties:
      items:
        type: array
        description: >-
          A list of external metric data items. A maximum of 100 items are
          allowed.
        items:
          $ref: '#/definitions/ExternalMetricDataItem'
  ExternalMetricDefinition:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the External Metric Definition
      unit:
        type: string
        description: The unit of the External Metric Definition
        enum:
          - Seconds
          - Percent
          - Number
          - Currency
      unitDefinition:
        type: string
        description: The unit definition of the External Metric Definition
      precision:
        type: integer
        format: int32
        description: The decimal precision of the External Metric Definition
      defaultObjectiveType:
        type: string
        description: The default objective type of the External Metric Definition
        enum:
          - HigherIsBetter
          - LowerIsBetter
          - TargetArea
      retentionMonths:
        type: integer
        format: int32
        description: The retention in months of the External Metric Definition
      enabled:
        type: boolean
        description: True if the External Metric Definition is enabled
      inUse:
        type: boolean
        description: True if the External Metric Definition is in use
        readOnly: true
      dateLastRefreshed:
        type: string
        format: date-time
        description: >-
          The last date and time that the metric data was refreshed. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ExternalMetricDefinitionCreateRequest:
    type: object
    required:
      - defaultObjectiveType
      - enabled
      - name
      - precision
      - unit
    properties:
      name:
        type: string
        description: The name of the External Metric Definition
      unit:
        type: string
        description: The unit of the External Metric Definition
        enum:
          - Seconds
          - Percent
          - Number
          - Currency
      unitDefinition:
        type: string
        description: The unit definition of the External Metric Definition
      precision:
        type: integer
        format: int32
        description: >-
          The decimal precision of the External Metric Definition. Must be at
          least 0 and at most 5
        minimum: 0
        maximum: 5
      defaultObjectiveType:
        type: string
        description: The default objective type of the External Metric Definition
        enum:
          - HigherIsBetter
          - LowerIsBetter
          - TargetArea
      enabled:
        type: boolean
        description: True if the External Metric Definition is enabled
  ExternalMetricDefinitionUpdateRequest:
    type: object
    properties:
      name:
        type: string
        description: The name of the External Metric Definition
      precision:
        type: integer
        format: int32
        description: >-
          The decimal precision of the External Metric Definition. Must be at
          least 0 and at most 5
        minimum: 0
        maximum: 5
      defaultObjectiveType:
        type: string
        description: The default objective type of the External Metric Definition
        enum:
          - HigherIsBetter
          - LowerIsBetter
          - TargetArea
      enabled:
        type: boolean
        description: True if the External Metric Definition is enabled
  ExternalMetricDefinitionListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ExternalMetricDefinition'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  FaxDocument:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      contentUri:
        type: string
        format: uri
      workspace:
        $ref: '#/definitions/DomainEntityRef'
      createdBy:
        $ref: '#/definitions/DomainEntityRef'
      sharingUri:
        type: string
        format: uri
      contentType:
        type: string
      contentLength:
        type: integer
        format: int64
      filename:
        type: string
      read:
        type: boolean
      pageCount:
        type: integer
        format: int64
      callerAddress:
        type: string
      receiverAddress:
        type: string
      thumbnails:
        type: array
        items:
          $ref: '#/definitions/DocumentThumbnail'
      downloadSharingUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  FaxDocumentEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/FaxDocument'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  FaxSummary:
    type: object
    properties:
      readCount:
        type: integer
        format: int32
      unreadCount:
        type: integer
        format: int32
      totalCount:
        type: integer
        format: int32
  GamificationStatus:
    type: object
    properties:
      isActive:
        type: boolean
        description: Gamification status of the organization.
      dateStart:
        type: string
        format: date
        description: >-
          Gamification start date. Dates are represented as an ISO-8601 string.
          For example: yyyy-MM-dd
      automaticUserAssignment:
        type: boolean
        description: Automatic assignment of users to the default profile
      dateStartPersonalBest:
        type: string
        format: date
        description: >-
          Personal best aggregation starting date. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
  Leaderboard:
    type: object
    properties:
      division:
        description: The targeted division for this leaderboard
        readOnly: true
        $ref: '#/definitions/Division'
      metric:
        description: The metric id if the leaderboard is about a specific metric
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      dateStartWorkday:
        type: string
        format: date
        description: >-
          Start workday used as the date range. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      dateEndWorkday:
        type: string
        format: date
        description: >-
          End workday used as the date range. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      leaders:
        type: array
        description: The list of leaders generated.
        readOnly: true
        items:
          $ref: '#/definitions/LeaderboardItem'
      userRank:
        description: The requesting user's rank
        readOnly: true
        $ref: '#/definitions/LeaderboardItem'
      performanceProfile:
        description: The targeted performance profile for the average points
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
  LeaderboardItem:
    type: object
    properties:
      user:
        description: The user object for this leaderboard rank
        readOnly: true
        $ref: '#/definitions/UserReference'
      rank:
        type: integer
        format: int32
        description: The rank of the user
        readOnly: true
      points:
        type: integer
        format: int64
        description: The points collected by the user
        readOnly: true
  OverallBestPoints:
    type: object
    properties:
      division:
        description: The requested division
        readOnly: true
        $ref: '#/definitions/Division'
      bestPoints:
        type: array
        description: List of gamification best point items
        readOnly: true
        items:
          $ref: '#/definitions/OverallBestPointsItem'
      performanceProfile:
        description: The targeted performance profile for the average points
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
  OverallBestPointsItem:
    type: object
    properties:
      granularityType:
        type: string
        description: Best points aggregation interval granularity
        readOnly: true
        enum:
          - Daily
          - Weekly
          - Monthly
      users:
        type: array
        description: List of associated users with the equal points.
        readOnly: true
        items:
          $ref: '#/definitions/UserReference'
      count:
        type: integer
        format: int32
        description: The count of the user IDs in the list
        readOnly: true
      points:
        type: integer
        format: int32
        description: Gamification points
        readOnly: true
      dateStartWorkday:
        type: string
        format: date
        description: >-
          Start workday of the best points aggregation interval. Dates are
          represented as an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      dateEndWorkday:
        type: string
        format: date
        description: >-
          End workday of the best points aggregation interval. Dates are
          represented as an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
  DefaultObjective:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      templateId:
        type: string
        description: The id of this objective's base template
      zones:
        type: array
        description: >-
          Objective zone specifies min,max points and values for the associated
          metric
        items:
          $ref: '#/definitions/ObjectiveZone'
      enabled:
        type: boolean
        description: A flag for whether this objective is enabled for the related metric
      mediaTypes:
        type: array
        description: A list of media types for the metric
        items:
          type: string
          enum:
            - callback
            - chat
            - cobrowse
            - email
            - message
            - screenshare
            - unknown
            - video
            - voice
      queues:
        type: array
        description: A list of queues for the metric
        items:
          $ref: '#/definitions/AddressableEntityRef'
      topics:
        type: array
        description: A list of topic ids for detected topic metrics
        items:
          $ref: '#/definitions/AddressableEntityRef'
      topicIdsFilterType:
        type: string
        description: >-
          A filter type for topic Ids. It's only used for objectives with
          topicIds. Default filter behavior is "or".
        enum:
          - and
          - or
  MetricDefinition:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      unitType:
        type: string
        description: The type of associated metric unit
        enum:
          - None
          - Percent
          - Currency
          - Seconds
          - Number
          - AttendanceStatus
          - Unit
      shortName:
        type: string
        description: An alternate name for this metric definition, often abbreviation
      dividendMetrics:
        type: array
        description: Metric names used as dividend
        items:
          type: string
      divisorMetrics:
        type: array
        description: Metric names used as divisor
        items:
          type: string
      defaultObjective:
        description: A predefined default objective for this metric
        $ref: '#/definitions/DefaultObjective'
      lockTemplateId:
        type: string
        description: >-
          An optional field to specify if this metric definition is locked to
          certain template. e.g. punctuality
      mediaTypeFilteringAllowed:
        type: boolean
        description: >-
          Flag to indicate if this metricDefinition allows filter based on media
          types
      queueFilteringAllowed:
        type: boolean
        description: >-
          Flag to indicate if this metricDefinition allows filter based on
          queues
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ObjectiveZone:
    type: object
    required:
      - directionType
      - label
      - lowerLimitPoints
      - upperLimitPoints
      - zoneType
    properties:
      label:
        type: string
        description: label
      directionType:
        type: string
        description: direction type
        enum:
          - Up
          - Down
          - Flat
      zoneType:
        type: string
        description: zone type
        enum:
          - Good
          - Target
          - Great
          - Out
      upperLimitPoints:
        type: integer
        format: int32
        description: upper limit points
      lowerLimitPoints:
        type: integer
        format: int32
        description: lower limit points
      upperLimitValue:
        type: integer
        format: int32
        description: upper limit value
      lowerLimitValue:
        type: integer
        format: int32
        description: lower limit value
  GetMetricDefinitionsResponse:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/MetricDefinition'
      selfUri:
        type: string
        format: uri
  ObjectiveTemplate:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      zones:
        type: array
        items:
          $ref: '#/definitions/ObjectiveZone'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  GetTemplatesResponse:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/ObjectiveTemplate'
      selfUri:
        type: string
        format: uri
  ProfileWithDateRange:
    type: object
    properties:
      id:
        type: string
        description: Profile ID
      name:
        type: string
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      dateStartWorkday:
        type: string
        format: date
        description: >-
          Start workday used as the date range. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      dateEndWorkday:
        type: string
        format: date
        description: >-
          End workday used as the date range. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UserProfilesInDateRange:
    type: object
    properties:
      user:
        description: The query agent
        $ref: '#/definitions/UserReference'
      dateStartWorkday:
        type: string
        format: date
        description: >-
          Start workday used as the date range. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      dateEndWorkday:
        type: string
        format: date
        description: >-
          End workday used as the date range. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      profiles:
        type: array
        description: The list of profiles of the agent
        items:
          $ref: '#/definitions/ProfileWithDateRange'
  UserProfilesInDateRangeRequest:
    type: object
    required:
      - endWorkday
      - startWorkday
    properties:
      startWorkday:
        type: string
        example: '2022-11-07'
        description: Start work day in ISO-8601 format used in the date range.
      endWorkday:
        type: string
        example: '2022-11-11'
        description: End work day in ISO-8601 format used in the date range.
  PerformanceProfile:
    type: object
    required:
      - description
      - metricOrders
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: A name for this performance profile
      division:
        description: The division for this performance profile associate to
        readOnly: true
        $ref: '#/definitions/Division'
      description:
        type: string
        description: A description about this performance profile
      metricOrders:
        type: array
        description: >-
          Order of the associated metrics. The list should contain valid ids for
          metrics
        items:
          type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation date for this performance profile. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      reportingIntervals:
        type: array
        description: The reporting interval periods for this performance profile
        items:
          $ref: '#/definitions/ReportingInterval'
      active:
        type: boolean
        description: The flag for active profiles
        readOnly: true
      memberCount:
        type: integer
        format: int32
        description: The number of members in this performance profile
        readOnly: true
      maxLeaderboardRankSize:
        type: integer
        format: int32
        description: >-
          The maximum rank size for the leaderboard. This counts the number of
          ranks can be retrieved in a leaderboard queries
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ReportingInterval:
    type: object
    required:
      - intervalType
      - intervalValue
    properties:
      intervalType:
        type: string
        description: The granularity of the reporting interval period
        enum:
          - Day
          - Week
          - Month
      intervalValue:
        type: integer
        format: int32
        description: The value of the reporting interval period for a given interval type
  GetProfilesResponse:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/PerformanceProfile'
      selfUri:
        type: string
        format: uri
  CreatePerformanceProfile:
    type: object
    required:
      - active
      - description
      - division
      - maxLeaderboardRankSize
      - name
      - reportingIntervals
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: A name for this performance profile
      division:
        description: The associated division for this Performance Profile
        $ref: '#/definitions/WritableDivision'
      description:
        type: string
        description: A description about this performance profile
      metricOrders:
        type: array
        description: >-
          Order of the associated metrics. The list should contain valid ids for
          metrics
        readOnly: true
        items:
          type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation date for this performance profile. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      reportingIntervals:
        type: array
        description: The reporting interval periods for this performance profile
        items:
          $ref: '#/definitions/ReportingInterval'
      active:
        type: boolean
        description: The flag for active profiles
      memberCount:
        type: integer
        format: int32
        description: The number of members in this performance profile
        readOnly: true
      maxLeaderboardRankSize:
        type: integer
        format: int32
        description: >-
          The maximum rank size for the leaderboard. This counts the number of
          ranks can be retrieved in a leaderboard queries
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Metric:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of this metric
      metricDefinitionId:
        type: string
        description: The id of associated metric definition
      externalMetricDefinitionId:
        type: string
        description: The id of associated external metric definition
      objective:
        description: Associated objective for this metric
        $ref: '#/definitions/Objective'
      performanceProfileId:
        type: string
        description: Performance profile id of this metric
      linkedMetric:
        description: The linked metric entity reference
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The created date of this metric. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateUnlinked:
        type: string
        format: date
        description: >-
          The unlinked workday for this metric if this metric was ever unlinked.
          Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      precision:
        type: integer
        format: int32
        description: The precision of the metric, must be between 0 and 5
        readOnly: true
      timeDisplayUnit:
        type: string
        description: >-
          The time unit in which the metric should be displayed -- this
          parameter is ignored when displaying non-time values
        enum:
          - None
          - Seconds
          - Minutes
          - Hours
      sourcePerformanceProfile:
        description: The source performance profile when this metric is linked
        readOnly: true
        $ref: '#/definitions/PerformanceProfile'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Objective:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      templateId:
        type: string
        description: The id of this objective's base template
      zones:
        type: array
        description: >-
          Objective zone specifies min,max points and values for the associated
          metric
        items:
          $ref: '#/definitions/ObjectiveZone'
      enabled:
        type: boolean
        description: A flag for whether this objective is enabled for the related metric
      mediaTypes:
        type: array
        description: A list of media types for the metric
        items:
          type: string
          enum:
            - callback
            - chat
            - cobrowse
            - email
            - message
            - screenshare
            - unknown
            - video
            - voice
      queues:
        type: array
        description: A list of queues for the metric
        items:
          $ref: '#/definitions/AddressableEntityRef'
      topics:
        type: array
        description: A list of topic ids for detected topic metrics
        items:
          $ref: '#/definitions/AddressableEntityRef'
      topicIdsFilterType:
        type: string
        description: >-
          A filter type for topic Ids. It's only used for objectives with
          topicIds. Default filter behavior is "or".
        enum:
          - and
          - or
      dateStart:
        type: string
        format: date
        description: >-
          start date of the objective. Dates are represented as an ISO-8601
          string. For example: yyyy-MM-dd
  TargetPerformanceProfile:
    type: object
    required:
      - targetPerformanceProfileId
    properties:
      targetPerformanceProfileId:
        type: string
        description: The target destination performanceProfileId for the linked metric.
  CreateMetric:
    type: object
    required:
      - name
    properties:
      metricDefinitionId:
        type: string
        description: The id of associated metric definition
      externalMetricDefinitionId:
        type: string
        description: The id of associated external metric definition
      objective:
        description: Associated objective for this metric
        $ref: '#/definitions/CreateObjective'
      performanceProfileId:
        type: string
        description: Performance profile id of this metric
      name:
        type: string
        description: The name of this metric
      precision:
        type: integer
        format: int32
        description: The precision of the metric, must be between 0 and 5
      timeDisplayUnit:
        type: string
        description: >-
          The time unit in which the metric should be displayed -- this
          parameter is ignored when displaying non-time values
        enum:
          - None
          - Seconds
          - Minutes
          - Hours
  CreateObjective:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      templateId:
        type: string
        description: The id of this objective's base template
      zones:
        type: array
        description: >-
          Objective zone specifies min,max points and values for the associated
          metric
        items:
          $ref: '#/definitions/ObjectiveZone'
      enabled:
        type: boolean
        description: A flag for whether this objective is enabled for the related metric
      topicIds:
        type: array
        description: A list of topic ids for detected topic metrics
        items:
          type: string
      mediaTypes:
        type: array
        description: A list of media types for the metric
        items:
          type: string
          enum:
            - callback
            - chat
            - cobrowse
            - email
            - message
            - screenshare
            - unknown
            - video
            - voice
      queueIds:
        type: array
        description: A list of queue ids for the metric
        items:
          type: string
      topicIdsFilterType:
        type: string
        description: >-
          A filter type for topic Ids. It's only used for objectives with
          topicIds. Default filter behavior is "or".
        enum:
          - and
          - or
      dateStart:
        type: string
        format: date
        description: >-
          start date of the objective. Dates are represented as an ISO-8601
          string. For example: yyyy-MM-dd
  GetMetricsResponse:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/Metrics'
      selfUri:
        type: string
        format: uri
  Metrics:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      order:
        type: integer
        format: int32
        description: The order of metric within a performance profile
      metricDefinitionName:
        type: string
        description: The name of associated metric definition
      metricDefinitionId:
        type: string
        description: The id of associated metric definition
      externalMetricDefinitionId:
        type: string
        description: The id of associated external metric definition
      unitType:
        type: string
        description: Corresponding unit type for this metric
        enum:
          - None
          - Percent
          - Currency
          - Seconds
          - Number
          - AttendanceStatus
          - Unit
      enabled:
        type: boolean
        description: A flag for whether this metric is enabled for a performance profile
      templateName:
        type: string
        description: The name of associated objective template
      maxPoints:
        type: integer
        format: int32
        description: Achievable maximum points for this metric
      performanceProfileId:
        type: string
        description: Performance profile id of this metric
      linkedMetric:
        description: The linked metric entity reference
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The created date of this metric. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateUnlinked:
        type: string
        format: date
        description: >-
          The unlinked workday for this metric if this metric was ever unlinked.
          Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      sourcePerformanceProfile:
        description: The source performance profile when this metric is linked
        readOnly: true
        $ref: '#/definitions/PerformanceProfile'
      unitDefinition:
        type: string
        description: Unit definition of linked external metric
        readOnly: true
      precision:
        type: integer
        format: int32
        description: Precision of linked external metric
        readOnly: true
      timeDisplayUnit:
        type: string
        description: >-
          The time unit in which the metric should be displayed -- this
          parameter is ignored when displaying non-time values
        enum:
          - None
          - Seconds
          - Minutes
          - Hours
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  GetMetricResponse:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/Metric'
      selfUri:
        type: string
        format: uri
  DivisionReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  InsightsDetails:
    type: object
    properties:
      performanceProfile:
        description: The performance profile
        $ref: '#/definitions/AddressableEntityRef'
      division:
        description: The division
        $ref: '#/definitions/DivisionReference'
      granularity:
        type: string
        description: Granularity
        enum:
          - Daily
          - Weekly
          - Monthly
      comparativePeriod:
        description: The comparative period work day date range
        $ref: '#/definitions/WorkdayPeriod'
      primaryPeriod:
        description: The primary period work day date range
        $ref: '#/definitions/WorkdayPeriod'
      user:
        description: The query user
        $ref: '#/definitions/UserReference'
      metricData:
        type: array
        description: The list of insights data for each metric of the user
        items:
          $ref: '#/definitions/InsightsDetailsMetricItem'
      overallData:
        description: Overall insights data of the user
        $ref: '#/definitions/InsightsDetailsOverallItem'
  InsightsDetailsMetricItem:
    type: object
    properties:
      metric:
        description: The gamification metric for the data
        $ref: '#/definitions/AddressableEntityRef'
      comparativePeriod:
        description: Insights data in the comparative period
        $ref: '#/definitions/InsightsDetailsMetricPeriodPoints'
      primaryPeriod:
        description: Insights data in the primary period
        $ref: '#/definitions/InsightsDetailsMetricPeriodPoints'
      percentOfGoalChange:
        type: number
        format: double
        description: Percent of goal change
      valueChange:
        type: number
        format: double
        description: Value change
  InsightsDetailsMetricPeriodPoints:
    type: object
    properties:
      points:
        type: integer
        format: int32
        description: Points scored
      maxPoints:
        type: integer
        format: int32
        description: Max possible points
      dataPointCount:
        type: integer
        format: int32
        description: Number of data points
      percentOfGoal:
        type: number
        format: double
        description: Percentage of the goal
      rankTotalPoints:
        type: integer
        format: int32
        description: The agent's rank in leader board for points on this metric
      rankPercentagePoints:
        type: integer
        format: int32
        description: The agent's rank in leader board for percentage on this metric
      value:
        type: number
        format: double
        description: Average value
  InsightsDetailsOverallItem:
    type: object
    properties:
      comparativePeriod:
        description: Insights data in the comparative period
        $ref: '#/definitions/InsightsDetailsOverallPeriodPoints'
      primaryPeriod:
        description: Insights data in the primary period
        $ref: '#/definitions/InsightsDetailsOverallPeriodPoints'
      percentOfGoalChange:
        type: number
        format: double
        description: Percent of goal change
  InsightsDetailsOverallPeriodPoints:
    type: object
    properties:
      points:
        type: integer
        format: int32
        description: Points scored
      maxPoints:
        type: integer
        format: int32
        description: Max possible points
      dataPointCount:
        type: integer
        format: int32
        description: Number of data points
      percentOfGoal:
        type: number
        format: double
        description: Percentage of the goal
      rankTotalPoints:
        type: integer
        format: int32
        description: The agent's rank in leader board for points on this metric
      rankPercentagePoints:
        type: integer
        format: int32
        description: The agent's rank in leader board for percentage on this metric
  WorkdayPeriod:
    type: object
    properties:
      dateStartWorkday:
        type: string
        format: date
        description: >-
          Start workday used as the date range. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      dateEndWorkday:
        type: string
        format: date
        description: >-
          End workday used as the date range. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
  InsightsAgentItem:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  InsightsAgents:
    type: object
    properties:
      performanceProfile:
        description: The performance profile
        $ref: '#/definitions/AddressableEntityRef'
      division:
        description: The division
        $ref: '#/definitions/DivisionReference'
      granularity:
        type: string
        description: Granularity
        enum:
          - Daily
          - Weekly
          - Monthly
      dateStartWorkday:
        type: string
        format: date
        description: >-
          Start workday used as the date range. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      dateEndWorkday:
        type: string
        format: date
        description: >-
          End workday used as the date range. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      entities:
        type: array
        description: The list of insights agents
        items:
          $ref: '#/definitions/InsightsAgentItem'
  InsightsTrend:
    type: object
    properties:
      performanceProfile:
        description: The performance profile
        $ref: '#/definitions/AddressableEntityRef'
      division:
        description: The division
        $ref: '#/definitions/DivisionReference'
      granularity:
        type: string
        description: Granularity
        enum:
          - Daily
          - Weekly
          - Monthly
      comparativePeriod:
        description: The comparative period work day date range
        $ref: '#/definitions/WorkdayPeriod'
      primaryPeriod:
        description: The primary period work day date range
        $ref: '#/definitions/WorkdayPeriod'
      entities:
        type: array
        description: The list of insights trend for each metric
        items:
          $ref: '#/definitions/InsightsTrendMetricItem'
      total:
        description: The insights trend in total
        $ref: '#/definitions/InsightsTrendTotalItem'
  InsightsTrendMetricItem:
    type: object
    properties:
      metric:
        description: The gamification metric for the trend
        $ref: '#/definitions/AddressableEntityRef'
      trends:
        description: Trends for the metric
        $ref: '#/definitions/InsightsTrends'
  InsightsTrendTotalItem:
    type: object
    properties:
      trends:
        description: Trends for the metric
        $ref: '#/definitions/InsightsTrends'
  InsightsTrends:
    type: object
    properties:
      comparativePeriod:
        type: array
        description: List of trend data in the comparative period
        items:
          $ref: '#/definitions/TrendData'
      primaryPeriod:
        type: array
        description: List of trend data in the primary period
        items:
          $ref: '#/definitions/TrendData'
  TrendData:
    type: object
    properties:
      dateStartWorkday:
        type: string
        format: date
        description: >-
          Start workday used as the date range. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      dateEndWorkday:
        type: string
        format: date
        description: >-
          End workday used as the date range. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      percentOfGoal:
        type: number
        format: double
        description: Percent of goal
  InsightsSummary:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/InsightsSummaryUserItem'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      performanceProfile:
        description: The performance profile
        $ref: '#/definitions/AddressableEntityRef'
      division:
        description: The division
        $ref: '#/definitions/DivisionReference'
      granularity:
        type: string
        description: Granularity
        enum:
          - Daily
          - Weekly
          - Monthly
      comparativePeriod:
        description: The comparative period work day date range
        $ref: '#/definitions/WorkdayPeriod'
      primaryPeriod:
        description: The primary period work day date range
        $ref: '#/definitions/WorkdayPeriod'
      pageCount:
        type: integer
        format: int32
  InsightsSummaryMetricItem:
    type: object
    properties:
      metric:
        description: The gamification metric for the data
        $ref: '#/definitions/AddressableEntityRef'
      comparativePeriod:
        description: Insights data in the comparative period
        $ref: '#/definitions/InsightsSummaryMetricPeriodPoints'
      primaryPeriod:
        description: Insights data in the primary period
        $ref: '#/definitions/InsightsSummaryMetricPeriodPoints'
      percentOfGoalChange:
        type: number
        format: double
        description: Percent of goal change
      valueChange:
        type: number
        format: double
        description: Value change
  InsightsSummaryMetricPeriodPoints:
    type: object
    properties:
      points:
        type: integer
        format: int32
        description: Points scored
      maxPoints:
        type: integer
        format: int32
        description: Max possible points
      dataPointCount:
        type: integer
        format: int32
        description: Number of data points
      percentOfGoal:
        type: number
        format: double
        description: Percentage of the goal
      value:
        type: number
        format: double
        description: Average value
  InsightsSummaryOverallItem:
    type: object
    properties:
      comparativePeriod:
        description: Insights data in the comparative period
        $ref: '#/definitions/InsightsSummaryOverallPeriodPoints'
      primaryPeriod:
        description: Insights data in the primary period
        $ref: '#/definitions/InsightsSummaryOverallPeriodPoints'
      percentOfGoalChange:
        type: number
        format: double
        description: Percent of goal change
  InsightsSummaryOverallPeriodPoints:
    type: object
    properties:
      points:
        type: integer
        format: int32
        description: Points scored
      maxPoints:
        type: integer
        format: int32
        description: Max possible points
      dataPointCount:
        type: integer
        format: int32
        description: Number of data points
      percentOfGoal:
        type: number
        format: double
        description: Percentage of the goal
  InsightsSummaryUserItem:
    type: object
    properties:
      user:
        description: Queried user
        $ref: '#/definitions/UserReference'
      metricData:
        type: array
        description: The list of insights data for each metric of the user
        items:
          $ref: '#/definitions/InsightsSummaryMetricItem'
      overallData:
        description: Overall insights data of the user
        $ref: '#/definitions/InsightsSummaryOverallItem'
  UserInsightsTrend:
    type: object
    properties:
      performanceProfile:
        description: The performance profile
        $ref: '#/definitions/AddressableEntityRef'
      division:
        description: The division
        $ref: '#/definitions/DivisionReference'
      granularity:
        type: string
        description: Granularity
        enum:
          - Daily
          - Weekly
          - Monthly
      comparativePeriod:
        description: The comparative period work day date range
        $ref: '#/definitions/WorkdayPeriod'
      primaryPeriod:
        description: The primary period work day date range
        $ref: '#/definitions/WorkdayPeriod'
      entities:
        type: array
        description: The list of insights trend for each metric
        items:
          $ref: '#/definitions/InsightsTrendMetricItem'
      total:
        description: The insights trend in total
        $ref: '#/definitions/InsightsTrendTotalItem'
      user:
        description: The query user
        $ref: '#/definitions/UserReference'
  Member:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The user's id
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: The associated user reference as a member of a performance profile
  MemberListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Member'
  AssignmentValidation:
    type: object
    properties:
      membersNotAssigned:
        type: array
        description: >-
          The list of users that are not assigned to any custom performance
          profile
        items:
          $ref: '#/definitions/UserReference'
      membersAlreadyAssigned:
        type: array
        description: >-
          The list of users that are already assigned to the requesting custom
          performance profile
        items:
          $ref: '#/definitions/UserReference'
      membersAlreadyAssignedToOther:
        type: array
        description: >-
          The list of users that are already assigned to other custom
          performance profiles
        items:
          $ref: '#/definitions/OtherProfileAssignment'
      invalidMemberAssignments:
        type: array
        description: >-
          The list of user id that are invalid for the gamfication service to
          handle
        items:
          $ref: '#/definitions/InvalidAssignment'
  InvalidAssignment:
    type: object
    properties:
      user:
        description: Invalid user for validation
        $ref: '#/definitions/UserReference'
      message:
        type: string
        description: The reason for the invalid input for validation
  OtherProfileAssignment:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      currentProfile:
        description: The current performance profile that this user belongs to
        $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ValidateAssignUsers:
    type: object
    required:
      - membersToAssign
    properties:
      membersToAssign:
        type: array
        description: List of user ids to assign to a performance profile
        items:
          type: string
  Assignment:
    type: object
    properties:
      assignedMembers:
        type: array
        description: >-
          The list of users successfully assigned to the custom performance
          profile
        items:
          $ref: '#/definitions/UserReference'
      removedMembers:
        type: array
        description: >-
          The list of users successfully removed from the custom performance
          profile
        items:
          $ref: '#/definitions/UserReference'
      assignmentErrors:
        type: array
        description: >-
          The list of users failed assignment or removal for the custom
          performance profile
        items:
          $ref: '#/definitions/AssignmentError'
  AssignmentError:
    type: object
    properties:
      user:
        description: A user that is failed to be removed from the performance profile
        $ref: '#/definitions/UserReference'
      message:
        type: string
        description: Error message from membership assignment
  AssignUsers:
    type: object
    required:
      - membersToAssign
      - membersToRemove
    properties:
      membersToAssign:
        type: array
        description: List of user ids to assign to a performance profile
        items:
          type: string
      membersToRemove:
        type: array
        description: List of user ids to remove from a performance profile
        items:
          type: string
  MetricValueTrendAverage:
    type: object
    properties:
      dateStartWorkday:
        type: string
        format: date
        description: >-
          The targeted start workday. Dates are represented as an ISO-8601
          string. For example: yyyy-MM-dd
        readOnly: true
      dateEndWorkday:
        type: string
        format: date
        description: >-
          The targeted end workday. Dates are represented as an ISO-8601 string.
          For example: yyyy-MM-dd
        readOnly: true
      dateReferenceWorkday:
        type: string
        format: date
        description: >-
          The targeted reference workday. Dates are represented as an ISO-8601
          string. For example: yyyy-MM-dd
        readOnly: true
      division:
        description: The targeted division for the metrics
        readOnly: true
        $ref: '#/definitions/Division'
      user:
        description: The targeted user for the metrics
        readOnly: true
        $ref: '#/definitions/UserReference'
      timezone:
        type: string
        description: The time zone used for aggregating metric values
        readOnly: true
      result:
        description: The metric value trend and average
        readOnly: true
        $ref: '#/definitions/WorkdayValuesMetricItem'
      performanceProfile:
        description: The targeted performance profile for the average points
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      metric:
        description: The targeted performance profile for the average points
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
  WorkdayValuesMetricItem:
    type: object
    properties:
      metric:
        description: Gamification metric for the average and the trend
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      metricDefinition:
        description: Gamification metric definition for the average and the trend
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      average:
        type: number
        format: double
        description: The average value of the metric
        readOnly: true
      unitType:
        type: string
        description: The unit type of the metric value
        readOnly: true
        enum:
          - None
          - Percent
          - Currency
          - Seconds
          - Number
          - AttendanceStatus
          - Unit
      trend:
        type: array
        description: The metric value trend
        readOnly: true
        items:
          $ref: '#/definitions/WorkdayValuesTrendItem'
  WorkdayValuesTrendItem:
    type: object
    properties:
      dateWorkday:
        type: string
        format: date
        description: >-
          The workday for the metric value. Dates are represented as an ISO-8601
          string. For example: yyyy-MM-dd
        readOnly: true
      value:
        type: number
        format: double
        description: The metric value
        readOnly: true
  UserBestPoints:
    type: object
    properties:
      user:
        description: The requested user for the best points
        readOnly: true
        $ref: '#/definitions/UserReference'
      bestPoints:
        type: array
        description: List of best point for the requested user
        readOnly: true
        items:
          $ref: '#/definitions/UserBestPointsItem'
  UserBestPointsItem:
    type: object
    properties:
      granularityType:
        type: string
        description: Best points aggregation interval granularity
        readOnly: true
        enum:
          - Daily
          - Weekly
          - Monthly
      points:
        type: integer
        format: int32
        description: Gamification points
        readOnly: true
      dateStartWorkday:
        type: string
        format: date
        description: >-
          Start workday of the best points aggregation interval. Dates are
          represented as an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      dateEndWorkday:
        type: string
        format: date
        description: >-
          End workday of the best points aggregation interval. Dates are
          represented as an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      rank:
        type: integer
        format: int32
        description: The rank of this user
        readOnly: true
  PunctualityEvent:
    type: object
    properties:
      dateScheduleStart:
        type: string
        format: date-time
        description: >-
          The scheduled activity start time. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateStart:
        type: string
        format: date-time
        description: >-
          The time the user started the activity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      lengthMinutes:
        type: integer
        format: int32
        description: The length of the activity in minutes
        readOnly: true
      description:
        type: string
        description: The description of the activity
        readOnly: true
      activityCodeId:
        type: string
        description: The ID of the activity code associated with this activity
        readOnly: true
      activityCode:
        type: string
        description: The activity code
        readOnly: true
      activityName:
        type: string
        description: The activity name
        readOnly: true
      category:
        type: string
        description: The category for the activity
        readOnly: true
      points:
        type: integer
        format: int32
        description: The points earned for this activity
        readOnly: true
      delta:
        type: number
        format: double
        description: Difference between this activity and the last activity in seconds
        readOnly: true
      bullseye:
        type: boolean
  QualityEvaluationScoreItem:
    type: object
    properties:
      evaluationId:
        type: string
        description: The id of evaluation
        readOnly: true
      conversationId:
        type: string
        description: The id of conversation
        readOnly: true
      conversationDate:
        type: string
        format: date-time
        description: >-
          The date of conversation. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      conversationEndDate:
        type: string
        format: date-time
        description: >-
          The end date of conversation. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      formName:
        type: string
        description: The name of form
        readOnly: true
      points:
        type: integer
        format: int32
        description: Gamification points earned for this metric
        readOnly: true
      evaluationScore:
        type: number
        format: double
        description: The quality score of evaluation as a percentage
        readOnly: true
      maxPoints:
        type: integer
        format: int32
        description: The maximum Gamification points a user may earn for this metric
        readOnly: true
      mediaTypes:
        type: array
        description: A list of media types for the metric
        items:
          type: string
          enum:
            - callback
            - chat
            - cobrowse
            - email
            - message
            - screenshare
            - unknown
            - video
            - voice
  WorkdayMetric:
    type: object
    properties:
      metric:
        description: Gamification metric
        readOnly: true
        $ref: '#/definitions/Metric'
      objective:
        description: Current objective for this metric
        readOnly: true
        $ref: '#/definitions/Objective'
      points:
        type: integer
        format: int32
        description: Gamification points earned for this metric
        readOnly: true
      maxPoints:
        type: integer
        format: int32
        description: The maximum Gamification points a user may earn for this metric
        readOnly: true
      value:
        type: number
        format: double
        description: Value of this metric
        readOnly: true
      punctualityEvents:
        type: array
        description: List of schedule activity events for punctuality metrics
        readOnly: true
        items:
          $ref: '#/definitions/PunctualityEvent'
  WorkdayMetricListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WorkdayMetric'
  AttendanceStatus:
    type: object
    properties:
      dateWorkday:
        type: string
        format: date
        description: >-
          the workday date of this attendance status. Dates are represented as
          an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      attendanceStatusType:
        type: string
        description: the attendance status
        readOnly: true
        enum:
          - HasData
          - Scheduled
          - Absent
          - Present
          - NoSchedule
  AttendanceStatusListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/AttendanceStatus'
  AllTimePoints:
    type: object
    properties:
      user:
        description: Queried user
        readOnly: true
        $ref: '#/definitions/UserReference'
      dateEndWorkday:
        type: string
        format: date
        description: >-
          Queried end workday for all time points to be collected. Dates are
          represented as an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      allTimePoints:
        type: integer
        format: int64
        description: All time point collected bt the user
        readOnly: true
  WorkdayPointsTrend:
    type: object
    properties:
      dateStartWorkday:
        type: string
        format: date
        description: >-
          The start workday for the query range for the gamification points
          trend. Dates are represented as an ISO-8601 string. For example:
          yyyy-MM-dd
        readOnly: true
      dateEndWorkday:
        type: string
        format: date
        description: >-
          The end workday for the query range for the gamification points trend.
          Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      user:
        description: The targeted user for the query
        readOnly: true
        $ref: '#/definitions/UserReference'
      dayOfWeek:
        type: string
        description: Aggregated for same day comparison
        readOnly: true
        enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
      averagePoints:
        type: number
        format: double
        description: The total average points
        readOnly: true
      trend:
        type: array
        description: Daily points trends
        readOnly: true
        items:
          $ref: '#/definitions/WorkdayPointsTrendItem'
  WorkdayPointsTrendItem:
    type: object
    properties:
      dateWorkday:
        type: string
        format: date
        description: >-
          workday date for the points trend. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      points:
        type: number
        format: double
        description: workday points for the date
        readOnly: true
  SingleWorkdayAveragePoints:
    type: object
    properties:
      dateWorkday:
        type: string
        format: date
        description: >-
          Queried target workday. Dates are represented as an ISO-8601 string.
          For example: yyyy-MM-dd
        readOnly: true
      division:
        description: The targeted division for the average points
        readOnly: true
        $ref: '#/definitions/Division'
      averagePoints:
        type: number
        format: double
        description: The average points per agent earned within the division
        readOnly: true
      performanceProfile:
        description: The targeted performance profile for the average points
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
  WorkdayValuesTrend:
    type: object
    properties:
      dateStartWorkday:
        type: string
        format: date
        description: >-
          The start workday for the query range for the metric value trend.
          Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      dateEndWorkday:
        type: string
        format: date
        description: >-
          The end workday for the query range for the metric value trend. Dates
          are represented as an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      dateReferenceWorkday:
        type: string
        format: date
        description: >-
          The reference workday used to determine the metric definition. Dates
          are represented as an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      division:
        description: The targeted division for the query
        readOnly: true
        $ref: '#/definitions/Division'
      user:
        description: The targeted user for the query
        readOnly: true
        $ref: '#/definitions/UserReference'
      timezone:
        type: string
        description: The time zone used for aggregating metric values
        readOnly: true
      results:
        type: array
        description: The metric value trends
        readOnly: true
        items:
          $ref: '#/definitions/WorkdayValuesMetricItem'
      performanceProfile:
        description: The targeted performance profile for the average points
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      metric:
        description: The targeted metric for the average points
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
  SingleWorkdayAverageValues:
    type: object
    properties:
      dateWorkday:
        type: string
        format: date
        description: >-
          The targeted workday for average value query. Dates are represented as
          an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      division:
        description: The targeted division for the metrics
        readOnly: true
        $ref: '#/definitions/Division'
      user:
        description: The targeted user for the metrics
        readOnly: true
        $ref: '#/definitions/UserReference'
      timezone:
        type: string
        description: The time zone used for aggregating metric values
        readOnly: true
      results:
        type: array
        description: The metric value averages
        readOnly: true
        items:
          $ref: '#/definitions/WorkdayValuesMetricItem'
      performanceProfile:
        description: The targeted performance profile for the average points
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
  DialerContactId:
    type: object
    properties:
      id:
        type: string
      contactListId:
        type: string
  GDPRJourneyCustomer:
    type: object
    properties:
      type:
        type: string
        description: >-
          The type of the customerId within the Journey System (e.g. cookie).
          Required if `id` is defined.
      id:
        type: string
        description: >-
          An ID of a customer within the Journey System at a point-in-time.
          Required if `type` is defined.
  GDPRRequest:
    type: object
    required:
      - createdBy
      - createdDate
      - requestType
      - status
      - subject
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      createdBy:
        description: The user that created this request
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      replacementTerms:
        type: array
        example: >-
          [ { "type": "EMAIL": "existingValue": "personal.email@domain.com",
          "updatedValue": "updated.personal.email@domain.com" } ]
        description: >-
          The replacement terms for the provided search terms, in the case of a
          GDPR_UPDATE request
        items:
          $ref: '#/definitions/ReplacementTerm'
      requestType:
        type: string
        description: The type of GDPR request
        enum:
          - GDPR_EXPORT
          - GDPR_UPDATE
          - GDPR_DELETE
      createdDate:
        type: string
        format: date-time
        description: >-
          When the request was submitted. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      status:
        type: string
        description: The status of the request
        readOnly: true
        enum:
          - INITIATED
          - SEARCHING
          - UPDATING
          - DELETING
          - COMPLETED
          - ERROR
          - FINALIZING
      subject:
        example: >-
          { "emailAddresses": ["personal.email@domain.com"], "phoneNumbers":
          ["+13115552368"] }
        description: The subject of the GDPR request
        $ref: '#/definitions/GDPRSubject'
      resultsUrl:
        type: string
        description: The location where the results of the request can be retrieved
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  GDPRSubject:
    type: object
    properties:
      name:
        type: string
      userId:
        type: string
      externalContactId:
        type: string
      dialerContactId:
        $ref: '#/definitions/DialerContactId'
      journeyCustomer:
        $ref: '#/definitions/GDPRJourneyCustomer'
      socialHandle:
        $ref: '#/definitions/SocialHandle'
      externalId:
        type: string
      addresses:
        type: array
        items:
          type: string
      phoneNumbers:
        type: array
        items:
          type: string
      emailAddresses:
        type: array
        items:
          type: string
  ReplacementTerm:
    type: object
    properties:
      type:
        type: string
        enum:
          - NAME
          - ADDRESS
          - PHONE
          - EMAIL
          - TWITTER
      existingValue:
        type: string
      updatedValue:
        type: string
  SocialHandle:
    type: object
    properties:
      type:
        type: string
        enum:
          - TWITTER
      value:
        type: string
  GDPRRequestEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/GDPRRequest'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  GDPRSubjectEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/GDPRSubject'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  GeolocationSettings:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      enabled:
        type: boolean
      mapboxKey:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  GreetingMediaInfo:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      mediaFileUri:
        type: string
        format: uri
      mediaImageUri:
        type: string
        format: uri
  Greeting:
    type: object
    required:
      - owner
      - ownerType
      - type
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      type:
        type: string
        description: Greeting type
        enum:
          - STATION
          - VOICEMAIL
          - NAME
      ownerType:
        type: string
        description: Greeting owner type
        enum:
          - USER
          - ORGANIZATION
          - GROUP
      owner:
        description: Greeting owner
        $ref: '#/definitions/DomainEntity'
      audioFile:
        $ref: '#/definitions/GreetingAudioFile'
      audioTTS:
        type: string
      createdDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        type: string
        format: uri
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedBy:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  GreetingAudioFile:
    type: object
    properties:
      durationMilliseconds:
        type: integer
        format: int64
      sizeBytes:
        type: integer
        format: int64
      selfUri:
        type: string
        format: uri
  DefaultGreetingList:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      owner:
        $ref: '#/definitions/GreetingOwner'
      ownerType:
        type: string
        enum:
          - USER
          - ORGANIZATION
          - GROUP
      greetings:
        type: object
        additionalProperties:
          $ref: '#/definitions/Greeting'
      createdDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        type: string
        format: uri
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedBy:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  GreetingOwner:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  GreetingListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Greeting'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ClientApp:
    type: object
    required:
      - intendedState
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: >-
          The name of the integration, used to distinguish this integration from
          others of the same type.
        readOnly: true
      integrationType:
        description: Type of the integration
        readOnly: true
        $ref: '#/definitions/IntegrationType'
      notes:
        type: string
        description: Notes about the integration.
        readOnly: true
      intendedState:
        type: string
        description: Configured state of the integration.
        enum:
          - ENABLED
          - DISABLED
          - DELETED
      config:
        description: Configuration information for the integration.
        readOnly: true
        $ref: '#/definitions/ClientAppConfigurationInfo'
      reportedState:
        description: Last reported status of the integration.
        readOnly: true
        $ref: '#/definitions/IntegrationStatusInfo'
      attributes:
        type: object
        description: Read-only attributes for the integration.
        readOnly: true
        additionalProperties:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Details for a ClientApp
  ClientAppConfigurationInfo:
    type: object
    properties:
      current:
        description: The current, active configuration for the integration.
        readOnly: true
        $ref: '#/definitions/IntegrationConfiguration'
      effective:
        description: >-
          The effective configuration for the app, containing the integration
          specific configuration along with overrides specified in the
          integration type.
        readOnly: true
        $ref: '#/definitions/EffectiveConfiguration'
    description: Configuration information for the integration
  ClientAppEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ClientApp'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CredentialSpecification:
    type: object
    properties:
      required:
        type: boolean
        description: >-
          Indicates if the credential must be provided in order for the
          integration configuration to be valid.
        readOnly: true
      title:
        type: string
        description: Title describing the usage for this credential.
        readOnly: true
      credentialTypes:
        type: array
        description: >-
          List of acceptable credential types that can be provided for this
          credential.
        readOnly: true
        items:
          type: string
    description: >-
      Specifies the requirements for a credential that can be provided for
      configuring an integration
  EffectiveConfiguration:
    type: object
    required:
      - advanced
      - credentials
      - name
      - notes
      - properties
    properties:
      properties:
        type: object
        description: >-
          Key-value configuration settings described by the schema in the
          propertiesSchemaUri field.
        additionalProperties:
          type: object
      advanced:
        type: object
        description: >-
          Advanced configuration described by the schema in the
          advancedSchemaUri field.
        additionalProperties:
          type: object
      name:
        type: string
        description: >-
          The name of the integration, used to distinguish this integration from
          others of the same type.
      notes:
        type: string
        description: Notes about the integration.
      credentials:
        type: object
        description: >-
          Credentials required by the integration. The required keys are
          indicated in the credentials property of the Integration Type
        additionalProperties:
          $ref: '#/definitions/CredentialInfo'
    description: >-
      Effective Configuration for an ClientApp. This is comprised of the
      integration specific configuration along with overrides specified in the
      integration type.
  HelpLink:
    type: object
    properties:
      uri:
        type: string
        description: URI of the help resource
        readOnly: true
      title:
        type: string
        description: Link text of the resource
        readOnly: true
      description:
        type: string
        description: Description of the document or resource
        readOnly: true
    description: Link to a help or support resource
  IntegrationConfiguration:
    type: object
    required:
      - advanced
      - credentials
      - name
      - notes
      - properties
      - version
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: >-
          The name of the integration, used to distinguish this integration from
          others of the same type.
      version:
        type: integer
        format: int32
        description: Version number required for updates.
      properties:
        type: object
        description: >-
          Key-value configuration settings described by the schema in the
          propertiesSchemaUri field.
      advanced:
        type: object
        description: >-
          Advanced configuration described by the schema in the
          advancedSchemaUri field.
      notes:
        type: string
        description: Notes about the integration.
      credentials:
        type: object
        description: >-
          Credentials required by the integration. The required keys are
          indicated in the credentials property of the Integration Type
        additionalProperties:
          $ref: '#/definitions/CredentialInfo'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Configuration for an Integration
  IntegrationStatusInfo:
    type: object
    properties:
      code:
        type: string
        description: Machine-readable status as reported by the integration.
        readOnly: true
        enum:
          - ACTIVE
          - ACTIVATING
          - INACTIVE
          - DEACTIVATING
          - ERROR
      effective:
        type: string
        description: Localized, human-readable, effective status of the integration.
        readOnly: true
      detail:
        description: Localizable status details for the integration.
        readOnly: true
        $ref: '#/definitions/MessageInfo'
      lastUpdated:
        type: string
        format: date-time
        description: >-
          Date and time (in UTC) when the integration status (i.e. the code
          field) was last updated. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
    description: Status information for an Integration.
  IntegrationType:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The ID of the integration type.
      name:
        type: string
      description:
        type: string
        description: Description of the integration type.
        readOnly: true
      provider:
        type: string
        description: PureCloud provider of the integration type.
        readOnly: true
      category:
        type: string
        description: Category describing the integration type.
        readOnly: true
      images:
        type: array
        description: Collection of logos.
        readOnly: true
        items:
          $ref: '#/definitions/UserImage'
      configPropertiesSchemaUri:
        type: string
        description: >-
          URI of the schema describing the key-value properties needed to
          configure an integration of this type.
        readOnly: true
      configAdvancedSchemaUri:
        type: string
        description: >-
          URI of the schema describing the advanced JSON document needed to
          configure an integration of this type.
        readOnly: true
      helpUri:
        type: string
        description: URI of a page with more information about the integration type
        readOnly: true
      termsOfServiceUri:
        type: string
        description: URI of a page with terms and conditions for the integration type
        readOnly: true
      vendorName:
        type: string
        description: Name of the vendor of this integration type
        readOnly: true
      vendorWebsiteUri:
        type: string
        description: URI of the vendor's website
        readOnly: true
      marketplaceUri:
        type: string
        description: URI of the marketplace listing for this integration type
        readOnly: true
      faqUri:
        type: string
        description: URI of frequently asked questions about the integration type
        readOnly: true
      privacyPolicyUri:
        type: string
        description: URI of a privacy policy for users of the integration type
        readOnly: true
      supportContactUri:
        type: string
        description: URI for vendor support
        readOnly: true
      salesContactUri:
        type: string
        description: URI for vendor sales information
        readOnly: true
      helpLinks:
        type: array
        description: List of links to additional help resources
        readOnly: true
        items:
          $ref: '#/definitions/HelpLink'
      credentials:
        type: object
        description: >-
          Map of credentials for integrations of this type. The key is the name
          of a credential that can be provided in the credentials property of
          the integration configuration.
        readOnly: true
        additionalProperties:
          $ref: '#/definitions/CredentialSpecification'
      nonInstallable:
        type: boolean
        description: Indicates if the integration type is installable or not.
        readOnly: true
      maxInstances:
        type: integer
        format: int32
        description: >-
          The maximum number of integration instances allowable for this
          integration type
        readOnly: true
      userPermissions:
        type: array
        description: >-
          List of permissions required to permit user access to the integration
          type.
        readOnly: true
        items:
          type: string
      vendorOAuthClientIds:
        type: array
        description: >-
          List of OAuth Client IDs that must be authorized when the integration
          is created.
        readOnly: true
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Descriptor for a type of Integration.
  Integration:
    type: object
    required:
      - intendedState
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: >-
          The name of the integration, used to distinguish this integration from
          others of the same type.
        readOnly: true
      integrationType:
        description: Type of the integration
        readOnly: true
        $ref: '#/definitions/IntegrationType'
      notes:
        type: string
        description: Notes about the integration.
        readOnly: true
      intendedState:
        type: string
        description: Configured state of the integration.
        enum:
          - ENABLED
          - DISABLED
          - DELETED
      config:
        description: Configuration information for the integration.
        readOnly: true
        $ref: '#/definitions/IntegrationConfigurationInfo'
      reportedState:
        description: Last reported status of the integration.
        readOnly: true
        $ref: '#/definitions/IntegrationStatusInfo'
      attributes:
        type: object
        description: Read-only attributes for the integration.
        readOnly: true
        additionalProperties:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Details for an Integration
  IntegrationConfigurationInfo:
    type: object
    properties:
      current:
        description: The current, active configuration for the integration.
        readOnly: true
        $ref: '#/definitions/IntegrationConfiguration'
    description: Configuration information for the integration
  IntegrationTypeEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/IntegrationType'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CreateIntegrationRequest:
    type: object
    required:
      - integrationType
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: >-
          The name of the integration, used to distinguish this integration from
          others of the same type.
      integrationType:
        description: Type of the integration to create.
        $ref: '#/definitions/IntegrationType'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Details for an Integration
  IntegrationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Integration'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  UserApp:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: >-
          The name of the userApp, used to distinguish this userApp from others
          of the same type.
        readOnly: true
      integrationType:
        description: Integration Type for the userApp
        readOnly: true
        $ref: '#/definitions/IntegrationType'
      config:
        $ref: '#/definitions/UserAppConfigurationInfo'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Details for a UserApp
  UserAppConfigurationInfo:
    type: object
    properties:
      current:
        description: The current, active configuration for the integration.
        readOnly: true
        $ref: '#/definitions/IntegrationConfiguration'
      effective:
        description: >-
          The effective configuration for the app, containing the integration
          specific configuration along with overrides specified in the
          integration type.
        readOnly: true
        $ref: '#/definitions/EffectiveConfiguration'
    description: Configuration information for the integration
  UserAppEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UserApp'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  Category:
    type: object
    properties:
      name:
        type: string
        description: Category name
    description: List of available Action categories.
  CategoryEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Category'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      pageCount:
        type: integer
        format: int32
  Action:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      integrationId:
        type: string
        description: The ID of the integration for which this action is associated
      category:
        type: string
        description: Category of Action
      contract:
        description: Action contract
        $ref: '#/definitions/ActionContract'
      version:
        type: integer
        format: int32
        description: Version of this action
      secure:
        type: boolean
        description: >-
          Indication of whether or not the action is designed to accept
          sensitive data
      config:
        description: Configuration to support request and response processing
        $ref: '#/definitions/ActionConfig'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ActionConfig:
    type: object
    properties:
      timeoutSeconds:
        type: integer
        format: int32
        description: >-
          Optional 1-60 second timeout enforced on the execution or test of this
          action. This setting is invalid for Custom Authentication Actions.
      request:
        description: Configuration of outbound request.
        $ref: '#/definitions/RequestConfig'
      response:
        description: Configuration of response processing.
        $ref: '#/definitions/ResponseConfig'
    description: Defines components of the Action Config.
  ActionContract:
    type: object
    properties:
      output:
        description: The output to expect when executing this action.
        $ref: '#/definitions/ActionOutput'
      input:
        description: The input required when executing this action.
        $ref: '#/definitions/ActionInput'
    description: >-
      This resource contains all of the schemas needed to define the inputs and
      outputs, of a single Action.
  ActionInput:
    type: object
    properties:
      inputSchema:
        description: >-
          JSON Schema that defines the body of the request that the client
          (edge/architect/postman) is sending to the service, on the /execute
          path. If the 'flatten' query parameter is omitted or false, this field
          will be returned. Either inputSchema or inputSchemaFlattened will be
          returned, not both.
        $ref: '#/definitions/JsonSchemaDocument'
      inputSchemaFlattened:
        description: >-
          JSON Schema that defines the body of the request that the client
          (edge/architect/postman) is sending to the service, on the /execute
          path. The schema is transformed based on Architect's flattened format.
          If the 'flatten' query parameter is supplied as true, this field will
          be returned. Either inputSchema or inputSchemaFlattened will be
          returned, not both.
        $ref: '#/definitions/JsonSchemaDocument'
      inputSchemaUri:
        type: string
        description: The URI of the input schema
    description: Input requirements of Action.
  ActionOutput:
    type: object
    properties:
      successSchema:
        description: >-
          JSON schema that defines the transformed, successful result that will
          be sent back to the caller. If the 'flatten' query parameter is
          omitted or false, this field will be returned. Either successSchema or
          successSchemaFlattened will be returned, not both.
        $ref: '#/definitions/JsonSchemaDocument'
      successSchemaUri:
        type: string
        description: URI to retrieve success schema
      errorSchema:
        description: >-
          JSON schema that defines the body of response when request is not
          successful. If the 'flatten' query parameter is omitted or false, this
          field will be returned. Either errorSchema or errorSchemaFlattened
          will be returned, not both.
        $ref: '#/definitions/JsonSchemaDocument'
      errorSchemaUri:
        type: string
        description: URI to retrieve error schema
      successSchemaFlattened:
        description: >-
          JSON schema that defines the transformed, successful result that will
          be sent back to the caller. The schema is transformed based on
          Architect's flattened format. If the 'flatten' query parameter is
          supplied as true, this field will be returned. Either successSchema or
          successSchemaFlattened will be returned, not both.
        $ref: '#/definitions/JsonSchemaDocument'
      errorSchemaFlattened:
        type: object
        description: >-
          JSON schema that defines the body of response when request is not
          successful. The schema is transformed based on Architect's flattened
          format. If the 'flatten' query parameter is supplied as true, this
          field will be returned. Either errorSchema or errorSchemaFlattened
          will be returned, not both.
    description: Output definition of Action.
  RequestConfig:
    type: object
    properties:
      requestUrlTemplate:
        type: string
        description: URL that may include placeholders for requests to 3rd party service
      requestTemplate:
        type: string
        description: Velocity template to define request body sent to 3rd party service.
      requestTemplateUri:
        type: string
        description: URI to retrieve requestTemplate
      requestType:
        type: string
        description: HTTP method to use for request
      headers:
        type: object
        description: Headers to include in request in (Header Name, Value) pairs.
        additionalProperties:
          type: string
    description: Defines response components of the Action Request.
  ResponseConfig:
    type: object
    properties:
      translationMap:
        type: object
        description: >-
          Map 'attribute name' and 'JSON path' pairs used to extract data from
          REST response.
        additionalProperties:
          type: string
      translationMapDefaults:
        type: object
        description: >-
          Map 'attribute name' and 'default value' pairs used as fallback values
          if JSON path extraction fails for specified key.
        additionalProperties:
          type: string
      successTemplate:
        type: string
        description: Velocity template to build response to return from Action.
      successTemplateUri:
        type: string
        description: URI to retrieve success template.
    description: Defines response components of the Action Request.
  ActionContractInput:
    type: object
    required:
      - input
      - output
    properties:
      input:
        description: Execution input contract
        $ref: '#/definitions/PostInputContract'
      output:
        description: Execution output contract
        $ref: '#/definitions/PostOutputContract'
    description: Contract definition.
  PostInputContract:
    type: object
    required:
      - inputSchema
    properties:
      inputSchema:
        description: >-
          JSON Schema that defines the body of the request that the client
          (edge/architect/postman) is sending to the service, on the /execute
          path.
        $ref: '#/definitions/JsonSchemaDocument'
    description: The schemas defining all of the expected requests/inputs.
  PostOutputContract:
    type: object
    required:
      - successSchema
    properties:
      successSchema:
        description: >-
          JSON schema that defines the transformed, successful result that will
          be sent back to the caller.
        $ref: '#/definitions/JsonSchemaDocument'
    description: The schemas defining all of the expected responses/outputs.
  UpdateDraftInput:
    type: object
    required:
      - version
    properties:
      category:
        type: string
        description: Category of action, Can be up to 256 characters long
      name:
        type: string
        description: Name of action, Can be up to 256 characters long
      config:
        description: Configuration to support request and response processing
        $ref: '#/definitions/ActionConfig'
      contract:
        description: Action contract
        $ref: '#/definitions/ActionContractInput'
      secure:
        type: boolean
        description: >-
          Indication of whether or not the action is designed to accept
          sensitive data
      version:
        type: integer
        format: int32
        description: Version of current Draft
    description: Definition of an Action Draft to be created or updated.
  PublishDraftInput:
    type: object
    required:
      - version
    properties:
      version:
        type: integer
        format: int32
        example: >-
          If the current draft version is 2 and the current published version of
          Action is 33, then you would send 2 here. (Your draft will become
          published version 34)
        description: The current draft version.
    description: Draft to be published
  DraftValidationResult:
    type: object
    properties:
      valid:
        type: boolean
        description: Indicates if configuration is valid
      errors:
        type: array
        description: List of errors causing validation failure
        items:
          $ref: '#/definitions/ErrorBody'
    description: Validation results
  TestExecutionOperationResult:
    type: object
    properties:
      step:
        type: integer
        format: int32
        description: >-
          The step number to indicate the order in which the operation was
          performed
      name:
        type: string
        description: Name of the operation performed
      success:
        type: boolean
        description: Indicated whether or not the operation was successful
      result:
        type: object
        description: The result of the operation
      error:
        description: Error that occurred during the operation
        $ref: '#/definitions/ErrorBody'
  TestExecutionResult:
    type: object
    properties:
      operations:
        type: array
        description: Execution operations performed as part of the test
        items:
          $ref: '#/definitions/TestExecutionOperationResult'
      error:
        description: >-
          The final error encountered during the test that resulted in test
          failure
        $ref: '#/definitions/ErrorBody'
      finalResult:
        type: object
        description: >-
          The final result of the test. This is the response that would be
          returned during normal action execution
      success:
        type: boolean
        description: Indicates whether or not the test was a success
  UpdateActionInput:
    type: object
    required:
      - version
    properties:
      category:
        type: string
        description: Category of action, Can be up to 256 characters long
      name:
        type: string
        description: Name of action, Can be up to 256 characters long
      config:
        description: Configuration to support request and response processing
        $ref: '#/definitions/ActionConfig'
      version:
        type: integer
        format: int32
        description: Version of this action
  ActionEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Action'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  PostActionInput:
    type: object
    required:
      - category
      - config
      - contract
      - integrationId
      - name
    properties:
      category:
        type: string
        description: Category of action, Can be up to 256 characters long
      name:
        type: string
        description: Name of action, Can be up to 256 characters long
      integrationId:
        type: string
        description: The ID of the integration this action is associated to
      config:
        description: Configuration to support request and response processing
        $ref: '#/definitions/ActionConfig'
      contract:
        description: Action contract
        $ref: '#/definitions/ActionContractInput'
      secure:
        type: boolean
        description: >-
          Indication of whether or not the action is designed to accept
          sensitive data
    description: Definition of an Action to be created or updated.
  BotConnectorBot:
    type: object
    required:
      - id
      - versions
    properties:
      id:
        type: string
        description: The Botconnector Bot Id - this is configurable by the user when put
      name:
        type: string
      description:
        type: string
        description: >-
          An optional description of the bot.  This can be up to 256 characters
          long and must be comprised of displayable characters without leading
          or trailing whitespace
      versions:
        type: array
        description: This bots versions, limit of 50 per bot
        items:
          $ref: '#/definitions/BotConnectorBotVersion'
      botCompositeTag:
        type: string
        description: A system-generated string that contains metadata about this bot.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: A botConnector Bot Instance
  BotConnectorBotVersion:
    type: object
    required:
      - intents
      - supportedLanguages
      - version
    properties:
      version:
        type: string
        description: >-
          The name of the version. This can be up to 100 characters long and
          must be comprised of displayable characters without leading or
          trailing whitespace
      supportedLanguages:
        type: array
        description: >-
          The supported languages for this bot. EG 'en-us' or 'es', etc; These
          language codes are W3C language identification tags (ISO 639-1 for the
          language name and ISO 3166 for the country code)
        items:
          type: string
      intents:
        type: array
        description: A list of potential intents this bot will return, limit of 50
        items:
          $ref: '#/definitions/BotIntent'
    description: A version description for a botConnector bot.
  BotIntent:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: >-
          The name of this intent.  This can be up to 100 characters long and
          must be comprised of displayable characters without leading or
          trailing whitespace
      slots:
        type: object
        description: >-
          Optional returned data values associated with this intent, limit of
          50.
        additionalProperties:
          $ref: '#/definitions/BotSlot'
    description: A botConnector's bot intention
  BotList:
    type: object
    required:
      - chatBots
    properties:
      chatBots:
        type: array
        description: A list of botConnector Bots. Max 50
        items:
          $ref: '#/definitions/BotConnectorBot'
    description: A list of BotConnectorBots
  BotSlot:
    type: object
    required:
      - name
      - type
    properties:
      name:
        type: string
        description: >-
          The name of the slot. This can be up to 100 characters long and must
          be comprised of displayable characters without leading or trailing
          whitespace
      type:
        type: string
        description: >-
          The data type of the slot string, integer, decimal, duration, boolean,
          currency, datetime or the xxxCollection versions of those types
    description: Description of a data value returned from an intent
  BotConnectorBotSummaryEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/BotSummary'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  BotSummary:
    type: object
    required:
      - id
      - name
    properties:
      name:
        type: string
        description: The name of the bot.
      id:
        type: string
        description: The id of the bot.
      description:
        type: string
        description: An optional description of the bot.
      botCompositeTag:
        type: string
        description: A system-generated string that contains metadata about this bot.
        readOnly: true
    description: A summary description for a botConnector bot
  BotConnectorBotVersionSummaryEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/BotVersionSummary'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  BotVersionSummary:
    type: object
    required:
      - id
      - name
      - version
    properties:
      name:
        type: string
        description: The name of the bot.
      id:
        type: string
        description: The id of the bot.
      description:
        type: string
        description: An optional description of the bot.
      botCompositeTag:
        type: string
        description: A system-generated string that contains metadata about this bot.
        readOnly: true
      version:
        type: string
        description: The name of the version.
    description: A version summary for a botConnector bot.
  DialogflowAgent:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      project:
        description: The project this Dialogflow agent belongs to
        $ref: '#/definitions/DialogflowProject'
      languages:
        type: array
        description: The supported languages of the Dialogflow agent
        items:
          type: string
      intents:
        type: array
        description: An array of Intents associated with this agent
        items:
          $ref: '#/definitions/DialogflowIntent'
      environments:
        type: array
        description: Available environments for this agent
        items:
          type: string
      integration:
        description: The Integration this Dialogflow agent was referenced from.
        $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DialogflowIntent:
    type: object
    required:
      - name
      - parameters
    properties:
      name:
        type: string
        description: The intent name
      parameters:
        type: object
        description: An object mapping parameter names to Parameter objects
        additionalProperties:
          $ref: '#/definitions/DialogflowParameter'
  DialogflowParameter:
    type: object
    required:
      - name
      - type
    properties:
      name:
        type: string
        description: The parameter name
      type:
        type: string
        description: The parameter type
  DialogflowProject:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
  DialogflowAgentSummary:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      project:
        description: The project this Dialogflow agent belongs to.
        $ref: '#/definitions/DialogflowProject'
      description:
        type: string
        description: A description of the Dialogflow agent.
      integration:
        description: The Integration this Dialogflow agent was referenced from.
        $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DialogflowAgentSummaryEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DialogflowAgentSummary'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  LexBot:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      description:
        type: string
        description: A description of the Lex bot
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LexBotAlias:
    type: object
    required:
      - status
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      bot:
        description: The Lex bot this is an alias for
        $ref: '#/definitions/LexBot'
      botVersion:
        type: string
        description: The version of the Lex bot this alias points at
      status:
        type: string
        description: The status of the Lex bot alias
        enum:
          - BUILDING
          - READY
          - FAILED
          - NOT_BUILT
      failureReason:
        type: string
        description: >-
          If the status is FAILED, Amazon Lex explains why it failed to build
          the bot
      language:
        type: string
        description: The target language of the Lex bot
        enum:
          - en-US
      intents:
        type: array
        description: An array of Intents associated with this bot alias
        items:
          $ref: '#/definitions/LexIntent'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LexIntent:
    type: object
    required:
      - name
      - slots
      - version
    properties:
      name:
        type: string
        description: The intent name
      description:
        type: string
        description: A description of the intent
      slots:
        type: object
        description: An object mapping slot names to Slot objects
        additionalProperties:
          $ref: '#/definitions/LexSlot'
      version:
        type: string
        description: The intent version
  LexSlot:
    type: object
    required:
      - name
      - type
    properties:
      name:
        type: string
        description: The slot name
      description:
        type: string
        description: The slot description
      type:
        type: string
        description: The slot type
      priority:
        type: integer
        format: int32
        description: The priority of the slot
  LexBotAliasEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/LexBotAlias'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  LexBotEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/LexBot'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  TtsEngineEntity:
    type: object
    required:
      - languages
      - outputFormats
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      languages:
        type: array
        description: The set of languages the TTS engine supports
        items:
          type: string
      outputFormats:
        type: array
        description: The set of output formats the TTS engine can produce
        items:
          type: string
      voices:
        type: array
        description: The set of voices the TTS engine supports
        items:
          $ref: '#/definitions/TtsVoiceEntity'
      isDefault:
        type: boolean
        description: The TTS engine is the global default engine
      isSecure:
        type: boolean
        description: The TTS engine can be used in a secure call flow
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TtsVoiceEntity:
    type: object
    required:
      - engine
      - gender
      - language
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      gender:
        type: string
        description: The gender of the TTS voice
      language:
        type: string
        description: The language supported by the TTS voice
      engine:
        description: Ths TTS engine this voice belongs to
        $ref: '#/definitions/TtsEngineEntity'
      isDefault:
        type: boolean
        description: The voice is the default voice for its language
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TtsEngineEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/TtsEngineEntity'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  LanguageOverride:
    type: object
    required:
      - engine
      - language
      - voice
    properties:
      language:
        type: string
        description: The language code of the language being overridden
      engine:
        type: string
        description: The ID of the TTS engine to use for this language override
      voice:
        type: string
        description: >-
          The ID of the voice to use for this language override. The voice must
          be supported by the chosen engine.
  TtsSettings:
    type: object
    required:
      - defaultEngine
      - languageOverrides
    properties:
      defaultEngine:
        type: string
        description: ID of the global default TTS engine
      languageOverrides:
        type: array
        description: The list of default overrides for specific languages
        items:
          $ref: '#/definitions/LanguageOverride'
  TtsVoiceEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/TtsVoiceEntity'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ActionMap:
    type: object
    required:
      - displayName
      - pageUrlConditions
      - triggerWithSegments
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      version:
        type: integer
        format: int32
        description: The version of the action map.
      isActive:
        type: boolean
        description: Whether the action map is active.
      displayName:
        type: string
        description: Display name of the action map.
      triggerWithSegments:
        type: array
        description: >-
          Trigger action map if any segment in the list is assigned to a given
          customer.
        items:
          type: string
      triggerWithEventConditions:
        type: array
        description: >-
          List of event conditions that must be satisfied to trigger the action
          map.
        items:
          $ref: '#/definitions/EventCondition'
      triggerWithOutcomeProbabilityConditions:
        type: array
        description: >-
          Probability conditions for outcomes that must be satisfied to trigger
          the action map.
        items:
          $ref: '#/definitions/OutcomeProbabilityCondition'
      triggerWithOutcomePercentileConditions:
        type: array
        description: >-
          Percentile conditions for outcomes that must be satisfied to trigger
          the action map.
        items:
          $ref: '#/definitions/OutcomePercentileCondition'
      pageUrlConditions:
        type: array
        description: >-
          URL conditions that a page must match for web actions to be
          displayable.
        items:
          $ref: '#/definitions/UrlCondition'
      activation:
        description: Type of activation.
        $ref: '#/definitions/Activation'
      weight:
        type: integer
        format: int32
        description: Weight of the action map with higher number denoting higher weight.
      action:
        description: The action that will be executed if this action map is triggered.
        $ref: '#/definitions/ActionMapAction'
      actionMapScheduleGroups:
        description: The action map's associated schedule groups.
        $ref: '#/definitions/ActionMapScheduleGroups'
      ignoreFrequencyCap:
        type: boolean
        description: >-
          Override organization-level frequency cap and always offer web
          engagements from this action map.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      createdDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the action map was created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the action map was last updated. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      startDate:
        type: string
        format: date-time
        description: >-
          Timestamp at which the action map is scheduled to start firing. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endDate:
        type: string
        format: date-time
        description: >-
          Timestamp at which the action map is scheduled to stop firing. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  ActionMapAction:
    type: object
    properties:
      actionTemplate:
        description: Action template associated with the action map.
        $ref: '#/definitions/ActionMapActionTemplate'
      mediaType:
        type: string
        description: Media type of action.
        enum:
          - webchat
          - webMessagingOffer
          - contentOffer
          - integrationAction
          - architectFlow
          - openAction
      actionTargetId:
        type: string
        description: Action target ID.
      isPacingEnabled:
        type: boolean
        description: Whether this action should be throttled.
      props:
        description: Additional properties.
        $ref: '#/definitions/ActionProperties'
      architectFlowFields:
        description: Architect Flow Id and input contract.
        $ref: '#/definitions/ArchitectFlowFields'
      webMessagingOfferFields:
        description: Admin-configurable fields of a web messaging offer action.
        $ref: '#/definitions/WebMessagingOfferFields'
      openActionFields:
        description: Admin-configurable fields of an open action.
        $ref: '#/definitions/OpenActionFields'
  ActionMapActionTemplate:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ActionMapScheduleGroup:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The ID of the action maps's associated schedule group.
  ActionMapScheduleGroups:
    type: object
    required:
      - actionMapScheduleGroup
    properties:
      actionMapScheduleGroup:
        description: The actions map's associated schedule group.
        $ref: '#/definitions/ActionMapScheduleGroup'
      emergencyActionMapScheduleGroup:
        description: The action map's associated emergency schedule group.
        $ref: '#/definitions/ActionMapScheduleGroup'
  ActionProperties:
    type: object
    properties:
      webchatPrompt:
        type: string
        description: Prompt message shown to user, used for webchat type action.
      webchatTitleText:
        type: string
        description: Title shown to the user, used for webchat type action.
      webchatAcceptText:
        type: string
        description: Accept button text shown to user, used for webchat type action.
      webchatDeclineText:
        type: string
        description: Decline button text shown to user, used for webchat type action.
      webchatSurvey:
        description: Survey provided to the user, used for webchat type action.
        $ref: '#/definitions/ActionSurvey'
  ActionSurvey:
    type: object
    required:
      - questions
    properties:
      questions:
        type: array
        description: Questions shown to the user.
        items:
          $ref: '#/definitions/JourneySurveyQuestion'
  Activation:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Type of activation.
      delayInSeconds:
        type: integer
        format: int32
        description: Activation delay time amount.
  ArchitectFlowFields:
    type: object
    properties:
      architectFlow:
        description: The architect flow.
        $ref: '#/definitions/AddressableEntityRef'
      flowRequestMappings:
        type: array
        description: Collection of Architect Flow Request Mappings to use.
        items:
          $ref: '#/definitions/RequestMapping'
  EventCondition:
    type: object
    required:
      - key
      - sessionType
      - streamType
      - values
    properties:
      key:
        type: string
        description: The event key.
      values:
        type: array
        description: The event values.
        items:
          type: string
      operator:
        type: string
        description: The comparison operator.
        enum:
          - containsAll
          - containsAny
          - notContainsAll
          - notContainsAny
          - equal
          - notEqual
          - greaterThan
          - greaterThanOrEqual
          - lessThan
          - lessThanOrEqual
          - startsWith
          - endsWith
      streamType:
        type: string
        description: The stream type for which this condition can be satisfied.
        enum:
          - Web
          - Custom
          - Conversation
          - App
      sessionType:
        type: string
        description: The session type for which this condition can be satisfied.
      eventName:
        type: string
        description: The name of the event for which this condition can be satisfied.
  JourneySurveyQuestion:
    type: object
    required:
      - label
    properties:
      type:
        type: string
        description: Type of survey question.
        enum:
          - text
          - hidden
          - select
          - checkbox
          - textarea
      label:
        type: string
        description: Label of question.
      customerProperty:
        type: string
        description: The customer property that the answer maps to.
        enum:
          - givenName
          - familyName
          - email
          - phone
          - gender
          - companyName
      choices:
        type: array
        description: Choices available to user.
        items:
          type: string
      isMandatory:
        type: boolean
        description: Whether answering this question is mandatory.
  OpenActionFields:
    type: object
    required:
      - openAction
    properties:
      openAction:
        description: The specific type of the open action.
        $ref: '#/definitions/DomainEntityRef'
      configurationFields:
        type: object
        description: >-
          Custom fields defined in the schema referenced by the open action type
          selected.
        additionalProperties:
          type: object
  OutcomePercentileCondition:
    type: object
    required:
      - maximumPercentile
      - outcomeId
    properties:
      outcomeId:
        type: string
        description: The outcome ID.
      maximumPercentile:
        type: number
        format: float
        description: >-
          Percentile value for the selected outcome, at or above which the
          action map will trigger.
      fallbackPercentile:
        type: number
        format: float
        description: >-
          Additional percentile condition, where if set, the action map will
          trigger if the current outcome percentile is lower or equal to the
          value.
  OutcomeProbabilityCondition:
    type: object
    required:
      - maximumProbability
      - outcomeId
    properties:
      outcomeId:
        type: string
        description: The outcome ID.
      maximumProbability:
        type: number
        format: float
        description: >-
          Probability value for the selected outcome at or above which the
          action map will trigger.
      probability:
        type: number
        format: float
        description: >-
          Additional probability condition, where if set, the action map will
          trigger if the current outcome probability is lower or equal to the
          value.
  RequestMapping:
    type: object
    properties:
      name:
        type: string
        description: Name of the Integration Action Attribute to supply the value for
      attributeType:
        type: string
        description: Type of the value supplied
        enum:
          - String
          - Number
          - Integer
          - Boolean
      mappingType:
        type: string
        description: Method of finding value to use with Attribute
        enum:
          - Lookup
          - HardCoded
      value:
        type: string
        description: Value to supply for the specified Attribute
  UrlCondition:
    type: object
    required:
      - operator
      - values
    properties:
      values:
        type: array
        description: The URL condition value.
        items:
          type: string
      operator:
        type: string
        description: The comparison operator.
        enum:
          - containsAll
          - containsAny
          - notContainsAll
          - notContainsAny
          - equal
          - notEqual
          - greaterThan
          - greaterThanOrEqual
          - lessThan
          - lessThanOrEqual
          - startsWith
          - endsWith
  WebMessagingOfferFields:
    type: object
    properties:
      offerText:
        type: string
        description: >-
          Text value to be used when inviting a visitor to engage with a web
          messaging offer.
      architectFlow:
        description: Flow to be invoked, overrides default flow when specified.
        $ref: '#/definitions/AddressableEntityRef'
  PatchAction:
    type: object
    required:
      - mediaType
    properties:
      mediaType:
        type: string
        description: Media type of action.
        enum:
          - webchat
          - webMessagingOffer
          - contentOffer
          - integrationAction
          - architectFlow
          - openAction
      actionTemplate:
        description: Action template associated with the action map.
        $ref: '#/definitions/ActionMapActionTemplate'
      actionTargetId:
        type: string
        description: Action target ID.
      isPacingEnabled:
        type: boolean
        description: Whether this action should be throttled.
      props:
        description: Additional properties.
        $ref: '#/definitions/PatchActionProperties'
      architectFlowFields:
        description: Architect Flow Id and input contract.
        $ref: '#/definitions/ArchitectFlowFields'
      webMessagingOfferFields:
        description: Admin-configurable fields of a web messaging offer action.
        $ref: '#/definitions/PatchWebMessagingOfferFields'
      openActionFields:
        description: Admin-configurable fields of an open action.
        $ref: '#/definitions/OpenActionFields'
  PatchActionMap:
    type: object
    required:
      - displayName
      - pageUrlConditions
      - triggerWithSegments
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      version:
        type: integer
        format: int32
        description: The version of the action map.
      isActive:
        type: boolean
        description: Whether the action map is active.
      displayName:
        type: string
        description: Display name of the action map.
      triggerWithSegments:
        type: array
        description: >-
          Trigger action map if any segment in the list is assigned to a given
          customer.
        items:
          type: string
      triggerWithEventConditions:
        type: array
        description: >-
          List of event conditions that must be satisfied to trigger the action
          map.
        items:
          $ref: '#/definitions/EventCondition'
      triggerWithOutcomeProbabilityConditions:
        type: array
        description: >-
          Probability conditions for outcomes that must be satisfied to trigger
          the action map.
        items:
          $ref: '#/definitions/OutcomeProbabilityCondition'
      triggerWithOutcomePercentileConditions:
        type: array
        description: >-
          Percentile conditions for outcomes that must be satisfied to trigger
          the action map.
        items:
          $ref: '#/definitions/OutcomePercentileCondition'
      pageUrlConditions:
        type: array
        description: >-
          URL conditions that a page must match for web actions to be
          displayable.
        items:
          $ref: '#/definitions/UrlCondition'
      activation:
        description: Type of activation.
        $ref: '#/definitions/Activation'
      weight:
        type: integer
        format: int32
        description: Weight of the action map with higher number denoting higher weight.
      action:
        description: The action that will be executed if this action map is triggered.
        $ref: '#/definitions/PatchAction'
      actionMapScheduleGroups:
        description: The action map's associated schedule groups.
        $ref: '#/definitions/PatchActionMapScheduleGroups'
      ignoreFrequencyCap:
        type: boolean
        description: >-
          Override organization-level frequency cap and always offer web
          engagements from this action map.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      createdDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the action map was created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the action map was last updated. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      startDate:
        type: string
        format: date-time
        description: >-
          Timestamp at which the action map is scheduled to start firing. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endDate:
        type: string
        format: date-time
        description: >-
          Timestamp at which the action map is scheduled to stop firing. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  PatchActionMapScheduleGroups:
    type: object
    required:
      - actionMapScheduleGroup
    properties:
      actionMapScheduleGroup:
        description: The actions map's associated schedule group.
        $ref: '#/definitions/ActionMapScheduleGroup'
      emergencyActionMapScheduleGroup:
        description: The action map's associated emergency schedule group.
        $ref: '#/definitions/ActionMapScheduleGroup'
  PatchActionProperties:
    type: object
    properties:
      webchatPrompt:
        type: string
        description: Prompt message shown to user, used for webchat type action.
      webchatTitleText:
        type: string
        description: Title shown to the user, used for webchat type action.
      webchatAcceptText:
        type: string
        description: Accept button text shown to user, used for webchat type action.
      webchatDeclineText:
        type: string
        description: Decline button text shown to user, used for webchat type action.
      webchatSurvey:
        description: Survey provided to the user, used for webchat type action.
        $ref: '#/definitions/PatchActionSurvey'
  PatchActionSurvey:
    type: object
    required:
      - questions
    properties:
      questions:
        type: array
        description: Questions shown to the user.
        items:
          $ref: '#/definitions/PatchSurveyQuestion'
  PatchSurveyQuestion:
    type: object
    required:
      - label
    properties:
      type:
        type: string
        description: Type of survey question.
        enum:
          - text
          - hidden
          - select
          - checkbox
          - textarea
      label:
        type: string
        description: Label of question.
      customerProperty:
        type: string
        description: The customer property that the answer maps to.
        enum:
          - givenName
          - familyName
          - email
          - phone
          - gender
          - companyName
      choices:
        type: array
        description: Choices available to user.
        items:
          type: string
      isMandatory:
        type: boolean
        description: Whether answering this question is mandatory.
  PatchWebMessagingOfferFields:
    type: object
    properties:
      offerText:
        type: string
        description: >-
          Text value to be used when inviting a visitor to engage with a web
          messaging offer.
      architectFlow:
        description: Flow to be invoked, overrides default flow when specified.
        $ref: '#/definitions/AddressableEntityRef'
  ActionMapListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ActionMap'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ActionTarget:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      userData:
        type: array
        description: Additional user data associated with the target in key/value format.
        items:
          $ref: '#/definitions/KeyValue'
      supportedMediaTypes:
        type: array
        description: Supported media types of the target.
        items:
          type: string
          enum:
            - callback
            - call
            - email
            - generic
            - messaging
            - social
            - webchat
      state:
        type: string
        description: Indicates the state of the target.
        enum:
          - active
          - inactive
          - deleted
      description:
        type: string
        description: Description of the target.
      serviceLevel:
        description: >-
          Service Level of the action target. Chat offers for the target will be
          throttled with the aim of achieving this service level.
        $ref: '#/definitions/ServiceLevel'
      shortAbandonThreshold:
        type: integer
        format: int32
        description: Indicates the non-default short abandon threshold
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      createdDate:
        type: string
        format: date-time
        description: >-
          The date the target was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedDate:
        type: string
        format: date-time
        description: >-
          The date the target was last modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  KeyValue:
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: Key for free-form data.
      value:
        type: string
        description: Value for free-form data.
  PatchActionTarget:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      serviceLevel:
        description: >-
          Service Level of the action target. Chat offers for the target will be
          throttled with the aim of achieving this service level.
        $ref: '#/definitions/ServiceLevel'
      shortAbandonThreshold:
        type: integer
        format: int32
        description: Indicates the non-default short abandon threshold
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ActionTargetListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ActionTarget'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ActionTemplate:
    type: object
    required:
      - mediaType
      - name
      - state
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: Name of the action template.
      description:
        type: string
        description: Description of the action template's functionality.
      version:
        type: integer
        format: int32
        description: The version of the action template.
        readOnly: true
      mediaType:
        type: string
        description: Media type of action described by the action template.
        enum:
          - webchat
          - webMessagingOffer
          - contentOffer
          - integrationAction
          - architectFlow
          - openAction
      state:
        type: string
        description: Whether the action template is currently active, inactive or deleted.
        enum:
          - Active
          - Inactive
          - Deleted
      contentOffer:
        description: Properties used to configure an action of type content offer
        $ref: '#/definitions/ContentOffer'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      createdDate:
        type: string
        format: date-time
        description: Date when action template was created in ISO-8601 format.
        readOnly: true
      modifiedDate:
        type: string
        format: date-time
        description: Date when action template was last modified in ISO-8601 format.
        readOnly: true
  CallToAction:
    type: object
    required:
      - url
    properties:
      text:
        type: string
        description: Text displayed on the call to action button.
      url:
        type: string
        description: URL to open when user clicks on the call to action button.
      target:
        type: string
        description: >-
          Where the URL should be opened when the user clicks on the call to
          action button.
        enum:
          - Blank
          - Self
  CloseButtonStyleProperties:
    type: object
    properties:
      color:
        type: string
        description: 'Color of button. (eg. #FF0000)'
      opacity:
        type: number
        format: float
        description: Opacity of button.
  ContentOffer:
    type: object
    required:
      - displayMode
      - layoutMode
    properties:
      imageUrl:
        type: string
        description: URL for image displayed to the customer when displaying content offer.
      displayMode:
        type: string
        description: The display mode of Genesys Widgets when displaying content offer.
        enum:
          - Modal
          - Overlay
          - Toast
      layoutMode:
        type: string
        description: >-
          The layout mode of the text shown to the user when displaying content
          offer.
        enum:
          - TextOnly
          - ImageOnly
          - LeftText
          - RightText
          - TopText
          - BottomText
      title:
        type: string
        description: Title used in the header of the content offer.
      headline:
        type: string
        description: Headline displayed above the body text of the content offer.
      body:
        type: string
        description: Body text of the content offer.
      callToAction:
        description: Properties customizing the call to action button on the content offer.
        $ref: '#/definitions/CallToAction'
      style:
        description: Properties customizing the styling of the content offer.
        $ref: '#/definitions/ContentOfferStylingConfiguration'
  ContentOfferStyleProperties:
    type: object
    properties:
      padding:
        type: string
        description: Padding of the offer. (eg. 10px)
      color:
        type: string
        description: 'Text color of the offer. (eg. #FF0000)'
      backgroundColor:
        type: string
        description: 'Background color of the offer. (eg. #000000)'
  ContentOfferStylingConfiguration:
    type: object
    properties:
      position:
        description: Properties for customizing the positioning of the content offer.
        $ref: '#/definitions/ContentPositionProperties'
      offer:
        description: Properties for customizing the appearance of the content offer.
        $ref: '#/definitions/ContentOfferStyleProperties'
      closeButton:
        description: Properties for customizing the appearance of the close button.
        $ref: '#/definitions/CloseButtonStyleProperties'
      ctaButton:
        description: Properties for customizing the appearance of the CTA button.
        $ref: '#/definitions/CtaButtonStyleProperties'
      title:
        description: Properties for customizing the appearance of the title text.
        $ref: '#/definitions/TextStyleProperties'
      headline:
        description: Properties for customizing the appearance of the headline text.
        $ref: '#/definitions/TextStyleProperties'
      body:
        description: Properties for customizing the appearance of the body text.
        $ref: '#/definitions/TextStyleProperties'
  ContentPositionProperties:
    type: object
    properties:
      top:
        type: string
        description: Top positioning offset.
      bottom:
        type: string
        description: Bottom positioning offset.
      left:
        type: string
        description: Left positioning offset.
      right:
        type: string
        description: Right positioning offset.
  CtaButtonStyleProperties:
    type: object
    properties:
      color:
        type: string
        description: 'Color of the text. (eg. #FFFFFF)'
      font:
        type: string
        description: Font of the text. (eg. Helvetica)
      fontSize:
        type: string
        description: Font size of the text. (eg. '12')
      textAlign:
        type: string
        description: Text alignment.
        enum:
          - Left
          - Right
          - Center
      backgroundColor:
        type: string
        description: 'Background color of the CTA button. (eg. #FF0000)'
  IntegrationAction:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  IntegrationActionFields:
    type: object
    properties:
      integrationAction:
        description: >-
          Reference to the Integration Action to be used when integrationAction
          type is qualified
        $ref: '#/definitions/IntegrationAction'
      requestMappings:
        type: array
        description: Collection of Request Mappings to use
        items:
          $ref: '#/definitions/RequestMapping'
  TextStyleProperties:
    type: object
    properties:
      color:
        type: string
        description: 'Color of the text. (eg. #FFFFFF)'
      font:
        type: string
        description: Font of the text. (eg. Helvetica)
      fontSize:
        type: string
        description: Font size of the text. (eg. '12')
      textAlign:
        type: string
        description: Text alignment.
        enum:
          - Left
          - Right
          - Center
  PatchActionTemplate:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: Name of the action template.
      description:
        type: string
        description: Description of the action template's functionality.
      version:
        type: integer
        format: int32
        description: The version of the action template.
      mediaType:
        type: string
        description: Media type of action described by the action template.
        enum:
          - webchat
          - webMessagingOffer
          - contentOffer
          - integrationAction
          - architectFlow
          - openAction
      state:
        type: string
        description: Whether the action template is currently active, inactive or deleted.
        enum:
          - Active
          - Inactive
          - Deleted
      contentOffer:
        description: Properties used to configure an action of type content offer
        $ref: '#/definitions/PatchContentOffer'
  PatchCallToAction:
    type: object
    properties:
      text:
        type: string
        description: Text displayed on the call to action button.
      url:
        type: string
        description: URL to open when user clicks on the call to action button.
      target:
        type: string
        description: >-
          Where the URL should be opened when the user clicks on the call to
          action button.
        enum:
          - Blank
          - Self
  PatchCloseButtonStyleProperties:
    type: object
    properties:
      color:
        type: string
        description: 'Color of button. (eg. #FF0000)'
      opacity:
        type: number
        format: float
        description: Opacity of button.
  PatchContentOffer:
    type: object
    properties:
      imageUrl:
        type: string
        description: URL for image displayed to the customer when displaying content offer.
      displayMode:
        type: string
        description: The display mode of Genesys Widgets when displaying content offer.
        enum:
          - Modal
          - Overlay
          - Toast
      layoutMode:
        type: string
        description: >-
          The layout mode of the text shown to the user when displaying content
          offer.
        enum:
          - TextOnly
          - ImageOnly
          - LeftText
          - RightText
          - TopText
          - BottomText
      title:
        type: string
        description: Title used in the header of the content offer.
      headline:
        type: string
        description: Headline displayed above the body text of the content offer.
      body:
        type: string
        description: Body text of the content offer.
      callToAction:
        description: Properties customizing the call to action button on the content offer.
        $ref: '#/definitions/PatchCallToAction'
      style:
        description: Properties customizing the styling of the content offer.
        $ref: '#/definitions/PatchContentOfferStylingConfiguration'
  PatchContentOfferStyleProperties:
    type: object
    properties:
      padding:
        type: string
        description: Padding of the offer. (eg. 10px)
      color:
        type: string
        description: 'Text color of the offer. (eg. #FF0000)'
      backgroundColor:
        type: string
        description: 'Background color of the offer. (eg. #000000)'
  PatchContentOfferStylingConfiguration:
    type: object
    properties:
      position:
        description: Properties for customizing the positioning of the content offer.
        $ref: '#/definitions/PatchContentPositionProperties'
      offer:
        description: Properties for customizing the appearance of the content offer.
        $ref: '#/definitions/PatchContentOfferStyleProperties'
      closeButton:
        description: Properties for customizing the appearance of the close button.
        $ref: '#/definitions/PatchCloseButtonStyleProperties'
      ctaButton:
        description: Properties for customizing the appearance of the CTA button.
        $ref: '#/definitions/PatchCtaButtonStyleProperties'
      title:
        description: Properties for customizing the appearance of the title text.
        $ref: '#/definitions/PatchTextStyleProperties'
      headline:
        description: Properties for customizing the appearance of the headline text.
        $ref: '#/definitions/PatchTextStyleProperties'
      body:
        description: Properties for customizing the appearance of the body text.
        $ref: '#/definitions/PatchTextStyleProperties'
  PatchContentPositionProperties:
    type: object
    properties:
      top:
        type: string
        description: Top positioning offset.
      bottom:
        type: string
        description: Bottom positioning offset.
      left:
        type: string
        description: Left positioning offset.
      right:
        type: string
        description: Right positioning offset.
  PatchCtaButtonStyleProperties:
    type: object
    properties:
      color:
        type: string
        description: 'Color of the text. (eg. #FFFFFF)'
      font:
        type: string
        description: Font of the text. (eg. Helvetica)
      fontSize:
        type: string
        description: Font size of the text. (eg. '12')
      textAlign:
        type: string
        description: Text alignment.
        enum:
          - Left
          - Right
          - Center
      backgroundColor:
        type: string
        description: 'Background color of the CTA button. (eg. #A04033)'
  PatchIntegrationAction:
    type: object
    properties:
      id:
        type: string
        description: ID of the integration action to be invoked.
  PatchIntegrationActionFields:
    type: object
    properties:
      integrationAction:
        description: >-
          Reference to the Integration Action to be used when integrationAction
          type is qualified
        $ref: '#/definitions/PatchIntegrationAction'
      requestMappings:
        type: array
        description: Collection of Request Mappings to use
        items:
          $ref: '#/definitions/RequestMapping'
  PatchTextStyleProperties:
    type: object
    properties:
      color:
        type: string
        description: 'Color of the text. (eg. #FFFFFF)'
      font:
        type: string
        description: Font of the text. (eg. Helvetica)
      fontSize:
        type: string
        description: Font size of the text. (eg. '12')
      textAlign:
        type: string
        description: Text alignment.
        enum:
          - Left
          - Right
          - Center
  ActionTemplateListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ActionTemplate'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ActionMapEstimateResult:
    type: object
    properties:
      qualifiedSessionCount:
        type: integer
        format: int32
        description: Number of sessions qualified for Action map.
      totalSessionCount:
        type: integer
        format: int32
        description: Total number of sessions.
      perSegmentCounts:
        type: array
        description: Number of sessions qualified for Action map per segment.
        items:
          $ref: '#/definitions/SegmentEstimateCount'
      outcomesScoresCount:
        type: integer
        format: int32
        description: >-
          Difference made by outcome criteria to number of sessions qualified
          for Action map.
  SegmentEstimateCount:
    type: object
    properties:
      segmentId:
        type: string
        description: ID of Segment.
      count:
        type: integer
        format: int32
        description: Estimate count per segment.
  EstimateJobAsyncResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ActionMapEstimateOutcomeCriteria:
    type: object
    required:
      - maxProbability
      - outcomeId
    properties:
      outcomeId:
        type: string
        description: ID of outcome.
      maxProbability:
        type: number
        format: float
        description: >-
          Probability value for the selected outcome at or above which the
          action map will trigger.
      probability:
        type: number
        format: float
        description: >-
          Additional probability condition, where if set, the action map will
          trigger if the current outcome probability is lower or equal to the
          value.
  ActionMapEstimateRequest:
    type: object
    properties:
      segmentIds:
        type: array
        description: List of Segment IDs.
        items:
          type: string
      outcomeCriteria:
        description: Outcome Criteria containing outcomeId and probability thresholds.
        $ref: '#/definitions/ActionMapEstimateOutcomeCriteria'
  AssociatedValueField:
    type: object
    required:
      - dataType
      - name
    properties:
      dataType:
        type: string
        description: The data type of the value field.
        enum:
          - Number
          - Integer
      name:
        type: string
        description: The field name for extracting value from event.
  Context:
    type: object
    required:
      - patterns
    properties:
      patterns:
        type: array
        description: A list of one or more patterns to match.
        items:
          $ref: '#/definitions/ContextPattern'
  ContextPattern:
    type: object
    required:
      - criteria
    properties:
      criteria:
        type: array
        description: A list of one or more criteria to satisfy.
        items:
          $ref: '#/definitions/EntityTypeCriteria'
  Criteria:
    type: object
    required:
      - key
      - shouldIgnoreCase
      - values
    properties:
      key:
        type: string
        description: The criteria key.
      values:
        type: array
        description: The criteria values.
        items:
          type: string
      shouldIgnoreCase:
        type: boolean
        description: Should criteria be case insensitive.
      operator:
        type: string
        description: The comparison operator.
        enum:
          - containsAll
          - containsAny
          - notContainsAll
          - notContainsAny
          - equal
          - notEqual
          - greaterThan
          - greaterThanOrEqual
          - lessThan
          - lessThanOrEqual
          - startsWith
          - endsWith
  EntityTypeCriteria:
    type: object
    required:
      - key
      - shouldIgnoreCase
      - values
    properties:
      key:
        type: string
        description: The criteria key.
      values:
        type: array
        description: The criteria values.
        items:
          type: string
      shouldIgnoreCase:
        type: boolean
        description: Should criteria be case insensitive.
      operator:
        type: string
        description: The comparison operator.
        enum:
          - containsAll
          - containsAny
          - notContainsAll
          - notContainsAny
          - equal
          - notEqual
          - greaterThan
          - greaterThanOrEqual
          - lessThan
          - lessThanOrEqual
          - startsWith
          - endsWith
      entityType:
        type: string
        description: The entity to match the pattern against.
        enum:
          - visit
  Journey:
    type: object
    required:
      - patterns
    properties:
      patterns:
        type: array
        description: A list of zero or more patterns to match.
        items:
          $ref: '#/definitions/JourneyPattern'
  JourneyPattern:
    type: object
    required:
      - criteria
      - sessionType
      - streamType
    properties:
      criteria:
        type: array
        description: A list of one or more criteria to satisfy.
        items:
          $ref: '#/definitions/Criteria'
      count:
        type: integer
        format: int32
        description: The number of times the pattern must match.
      streamType:
        type: string
        description: The stream type for which this pattern can be matched on.
        enum:
          - Web
          - Custom
          - Conversation
          - App
      sessionType:
        type: string
        description: The session type for which this pattern can be matched on.
      eventName:
        type: string
        description: The name of the event for which this pattern can be matched on.
  Outcome:
    type: object
    required:
      - displayName
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      isActive:
        type: boolean
        description: Whether or not the outcome is active.
      displayName:
        type: string
        description: The display name of the outcome.
      version:
        type: integer
        format: int32
        description: The version of the outcome.
      description:
        type: string
        description: A description of the outcome.
      isPositive:
        type: boolean
        description: Whether or not the outcome is positive.
      context:
        description: The context of the outcome.
        $ref: '#/definitions/Context'
      journey:
        description: The pattern of rules defining the filter of the outcome.
        $ref: '#/definitions/Journey'
      associatedValueField:
        description: The field from the event indicating the associated value.
        $ref: '#/definitions/AssociatedValueField'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      createdDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the outcome was created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the outcome was last updated. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  PatchOutcome:
    type: object
    required:
      - displayName
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      isActive:
        type: boolean
        description: Whether or not the outcome is active.
      displayName:
        type: string
        description: The display name of the outcome.
      version:
        type: integer
        format: int32
        description: The version of the outcome.
      description:
        type: string
        description: A description of the outcome.
      isPositive:
        type: boolean
        description: Whether or not the outcome is positive.
      context:
        description: The context of the outcome.
        $ref: '#/definitions/Context'
      journey:
        description: The pattern of rules defining the filter of the outcome.
        $ref: '#/definitions/Journey'
      associatedValueField:
        description: The field from the event indicating the associated value.
        $ref: '#/definitions/AssociatedValueField'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      createdDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the outcome was created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the outcome was last updated. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  OutcomeListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Outcome'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  OutcomeEventScore:
    type: object
    properties:
      outcome:
        description: The outcome that the score was calculated for.
        $ref: '#/definitions/AddressableEntityRef'
      sessionMaxProbability:
        type: number
        format: float
        description: Represents the max probability reached in the session.
      probability:
        type: number
        format: float
        description: >-
          Represents the likelihood of a customer reaching or achieving a given
          outcome.
      percentile:
        type: integer
        format: int32
        description: >-
          Represents the predicted probability's percentile score when compared
          with all other generated probabilities for a given outcome.
      sessionMaxPercentile:
        type: integer
        format: int32
        description: >-
          Represents the maximum likelihood percentile score reached for a given
          outcome by the current session.
  OutcomeScoresResult:
    type: object
    properties:
      outcomeScores:
        type: array
        description: List of scored outcomes in the session.
        items:
          $ref: '#/definitions/OutcomeEventScore'
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating the last time that the event was scored. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
  OutcomePredictor:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      outcome:
        description: The outcome for which this predictor will provide predictions.
        $ref: '#/definitions/OutcomeRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OutcomeRef:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OutcomePredictorRequest:
    type: object
    required:
      - outcome
    properties:
      outcome:
        description: The outcome for which this predictor will provide predictions.
        $ref: '#/definitions/OutcomeRefRequest'
  OutcomeRefRequest:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: ID of outcome.
  OutcomePredictorListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/OutcomePredictor'
  ExternalSegment:
    type: object
    required:
      - id
      - name
      - source
    properties:
      id:
        type: string
        description: >-
          Identifier for the external segment in the system where it originates
          from.
      name:
        type: string
        description: Name for the external segment in the system where it originates from.
      source:
        type: string
        description: The external system where the segment originates from.
        enum:
          - AdobeExperiencePlatform
          - Custom
  JourneySegment:
    type: object
    required:
      - displayName
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      isActive:
        type: boolean
        description: Whether or not the segment is active.
      displayName:
        type: string
        description: The display name of the segment.
      version:
        type: integer
        format: int32
        description: The version of the segment.
      description:
        type: string
        description: A description of the segment.
      color:
        type: string
        description: The hexadecimal color value of the segment.
      scope:
        type: string
        description: The target entity that a segment applies to.
        enum:
          - Session
          - Customer
      shouldDisplayToAgent:
        type: boolean
        description: >-
          Whether or not the segment should be displayed to agent/supervisor
          users.
      context:
        description: The context of the segment.
        $ref: '#/definitions/Context'
      journey:
        description: The pattern of rules defining the segment.
        $ref: '#/definitions/Journey'
      externalSegment:
        description: >-
          Details of an entity corresponding to this segment in an external
          system.
        $ref: '#/definitions/ExternalSegment'
      assignmentExpirationDays:
        type: integer
        format: int32
        description: >-
          Time, in days, from when the segment is assigned until it is
          automatically unassigned.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      createdDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the segment was created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the the segment was last updated. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  PatchExternalSegment:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: Name for the external segment in the system where it originates from.
  PatchSegment:
    type: object
    required:
      - displayName
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      isActive:
        type: boolean
        description: Whether or not the segment is active.
      displayName:
        type: string
        description: The display name of the segment.
      version:
        type: integer
        format: int32
        description: The version of the segment.
      description:
        type: string
        description: A description of the segment.
      color:
        type: string
        description: The hexadecimal color value of the segment.
      shouldDisplayToAgent:
        type: boolean
        description: >-
          Whether or not the segment should be displayed to agent/supervisor
          users.
      context:
        description: The context of the segment.
        $ref: '#/definitions/Context'
      journey:
        description: The pattern of rules defining the segment.
        $ref: '#/definitions/Journey'
      externalSegment:
        description: >-
          Details of an entity corresponding to this segment in an external
          system.
        $ref: '#/definitions/PatchExternalSegment'
      assignmentExpirationDays:
        type: integer
        format: int32
        description: >-
          Time, in days, from when the segment is assigned until it is
          automatically unassigned.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      createdDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the segment was created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Timestamp indicating when the the segment was last updated. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  SegmentListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/JourneySegment'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CategoryReference:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The globally unique identifier for the category.
      name:
        type: string
        description: Category name.
      parentCategory:
        description: The reference to category to which this category belongs to.
        $ref: '#/definitions/CategoryReference'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CategoryResponse:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the category.
      description:
        type: string
      externalId:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      parentCategory:
        description: The reference to category to which this category belongs to.
        $ref: '#/definitions/CategoryReference'
      documentCount:
        type: integer
        format: int32
        description: Number of documents assigned to this category.
      knowledgeBase:
        description: The reference to knowledge base to which the category belongs to.
        $ref: '#/definitions/KnowledgeBaseReference'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CategoryResponseListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CategoryResponse'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  CategoryCreateRequest:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the category.
      parentCategoryId:
        type: string
      description:
        type: string
        description: The description for the category.
      externalId:
        type: string
        description: The external id associated with the category.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CategoryUpdateRequest:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the category.
      parentCategoryId:
        type: string
        description: The category to which this category belongs.
      description:
        type: string
      externalId:
        type: string
        description: The external id associated with the category.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ArticleContent:
    type: object
    properties:
      body:
        description: Body of the article content.
        readOnly: true
        $ref: '#/definitions/ArticleContentBody'
  ArticleContentBody:
    type: object
    properties:
      locationUrl:
        type: string
        description: Presigned URL to retrieve the document content.
        readOnly: true
  DocumentArticle:
    type: object
    required:
      - title
    properties:
      title:
        type: string
        description: The title of the Article.
      content:
        description: The content of the Article.
        readOnly: true
        $ref: '#/definitions/ArticleContent'
      alternatives:
        type: array
        description: >-
          List of Alternative questions related to the title which helps in
          improving the likelihood of a match to user query.
        items:
          type: string
  DocumentFaq:
    type: object
    required:
      - answer
      - question
    properties:
      question:
        type: string
        description: The question for this FAQ
      answer:
        type: string
        description: The answer for this FAQ
      alternatives:
        type: array
        description: >-
          List of Alternative questions related to the answer which helps in
          improving the likelihood of a match to user query
        items:
          type: string
  KnowledgeBase:
    type: object
    required:
      - coreLanguage
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      description:
        type: string
        description: Knowledge base description
      coreLanguage:
        type: string
        example: en-US
        description: >-
          Core language for knowledge base in which initial content must be
          created, language codes [en-US, en-UK, en-AU, de-DE] are supported
          currently, however the new DX knowledge will support all these
          language codes
        enum:
          - en-US
          - en-UK
          - en-AU
          - en-CA
          - en-HK
          - en-IN
          - en-IE
          - en-NZ
          - en-PH
          - en-SG
          - en-ZA
          - de-DE
          - de-AT
          - de-CH
          - es-AR
          - es-CO
          - es-MX
          - es-US
          - es-ES
          - fr-FR
          - fr-BE
          - fr-CA
          - fr-CH
          - pt-BR
          - pt-PT
          - nl-NL
          - nl-BE
          - it-IT
      dateCreated:
        type: string
        format: date-time
        description: >-
          Knowledge base creation date-time. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Knowledge base last modification date-time. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      faqCount:
        type: integer
        format: int32
        description: >-
          The count representing the number of documents of type FAQ in the
          KnowledgeBase
        readOnly: true
      dateDocumentLastModified:
        type: string
        format: date-time
        description: >-
          The date representing when the last document is modified. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      articleCount:
        type: integer
        format: int32
        description: >-
          The count representing the number of documents of type Article in the
          KnowledgeBase
        readOnly: true
      published:
        type: boolean
        description: Flag that indicates the knowledge base is published
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeCategory:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: Category name
      description:
        type: string
        description: Category description
      knowledgeBase:
        description: Knowledge base which category does belong to
        readOnly: true
        $ref: '#/definitions/KnowledgeBase'
      languageCode:
        type: string
        description: Actual language of the category
        readOnly: true
        enum:
          - en-US
          - en-UK
          - en-AU
          - en-CA
          - en-HK
          - en-IN
          - en-IE
          - en-NZ
          - en-PH
          - en-SG
          - en-ZA
          - de-DE
          - de-AT
          - de-CH
          - es-AR
          - es-CO
          - es-MX
          - es-US
          - es-ES
          - fr-FR
          - fr-BE
          - fr-CA
          - fr-CH
          - pt-BR
          - pt-PT
          - nl-NL
          - nl-BE
          - it-IT
      dateCreated:
        type: string
        format: date-time
        description: >-
          Category creation date-time. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Category last modification date-time. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeSearchDocument:
    type: object
    required:
      - languageCode
      - type
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      languageCode:
        type: string
        description: Language of the document
        enum:
          - en-US
          - en-UK
          - en-AU
          - en-CA
          - en-HK
          - en-IN
          - en-IE
          - en-NZ
          - en-PH
          - en-SG
          - en-ZA
          - de-DE
          - de-AT
          - de-CH
          - es-AR
          - es-CO
          - es-MX
          - es-US
          - es-ES
          - fr-FR
          - fr-BE
          - fr-CA
          - fr-CH
          - pt-BR
          - pt-PT
          - nl-NL
          - nl-BE
          - it-IT
      type:
        type: string
        description: Document type
        enum:
          - Faq
          - Article
      faq:
        description: FAQ document details
        $ref: '#/definitions/DocumentFaq'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Document creation date-time. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Document last modification date-time. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      categories:
        type: array
        description: Document categories
        items:
          $ref: '#/definitions/KnowledgeCategory'
      knowledgeBase:
        description: Knowledge base which document does belong to
        readOnly: true
        $ref: '#/definitions/KnowledgeBase'
      externalUrl:
        type: string
        description: External URL to the document
      article:
        description: Article
        $ref: '#/definitions/DocumentArticle'
      confidence:
        type: number
        format: double
        description: >-
          The confidence associated with a document with respect to a search
          query
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeSearchResponse:
    type: object
    properties:
      searchId:
        type: string
        description: Search Id
        readOnly: true
      total:
        type: integer
        format: int32
        description: Total number of records returned
        readOnly: true
      pageCount:
        type: integer
        format: int32
        description: >-
          Number of pages returned in the result calculated according to the
          pageSize and the total
        readOnly: true
      pageSize:
        type: integer
        format: int32
        description: Number of records according to the page size
        readOnly: true
      pageNumber:
        type: integer
        format: int32
        description: Current page number for the returned records
        readOnly: true
      results:
        type: array
        description: Results associated to the search response
        readOnly: true
        items:
          $ref: '#/definitions/KnowledgeSearchDocument'
  KnowledgeSearchRequest:
    type: object
    required:
      - languageCode
      - query
    properties:
      query:
        type: string
        description: Input query to search content in the knowledge base
      pageSize:
        type: integer
        format: int32
        description: Page size of the returned results
      pageNumber:
        type: integer
        format: int32
        description: Page number of the returned results
      documentType:
        type: string
        description: Document type to be used while searching
        enum:
          - Faq
          - Article
      languageCode:
        type: string
        description: query search for specific languageCode
      searchOnDraftDocuments:
        type: boolean
        description: >-
          If true the search query will be executed on draft documents, else it
          will be on active documents
  CategoryListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/KnowledgeCategory'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  KnowledgeExtendedCategory:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: Category name
      description:
        type: string
        description: Category description
      knowledgeBase:
        description: Knowledge base which category does belong to
        readOnly: true
        $ref: '#/definitions/KnowledgeBase'
      languageCode:
        type: string
        description: Actual language of the category
        readOnly: true
        enum:
          - en-US
          - en-UK
          - en-AU
          - en-CA
          - en-HK
          - en-IN
          - en-IE
          - en-NZ
          - en-PH
          - en-SG
          - en-ZA
          - de-DE
          - de-AT
          - de-CH
          - es-AR
          - es-CO
          - es-MX
          - es-US
          - es-ES
          - fr-FR
          - fr-BE
          - fr-CA
          - fr-CH
          - pt-BR
          - pt-PT
          - nl-NL
          - nl-BE
          - it-IT
      dateCreated:
        type: string
        format: date-time
        description: >-
          Category creation date-time. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Category last modification date-time. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      parent:
        description: Category parent
        readOnly: true
        $ref: '#/definitions/KnowledgeCategory'
      children:
        type: array
        description: Category children
        readOnly: true
        items:
          $ref: '#/definitions/KnowledgeCategory'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DocumentCategoryInput:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: KnowledgeBase Category ID
  KnowledgeCategoryRequest:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: Category name
      description:
        type: string
        description: Category description
      parent:
        description: Category parent
        $ref: '#/definitions/DocumentCategoryInput'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ImportError:
    type: object
    properties:
      message:
        type: string
      line:
        type: integer
        format: int32
  ImportReport:
    type: object
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/ImportError'
      validated:
        $ref: '#/definitions/ResultCounters'
      imported:
        $ref: '#/definitions/ResultCounters'
      totalDocuments:
        type: integer
        format: int32
  KnowledgeImport:
    type: object
    required:
      - fileType
      - uploadKey
    properties:
      id:
        type: string
        description: Id of the import operation
        readOnly: true
      name:
        type: string
        description: Name of the import operation
      uploadKey:
        type: string
        description: Upload key
      fileType:
        type: string
        description: file type of the document
        enum:
          - Csv
          - JsonLines
      ignoreHeaders:
        type: boolean
        description: Ignore headers for the specified file
      status:
        type: string
        description: Status of the operation
        readOnly: true
        enum:
          - Created
          - ValidationInProgress
          - ValidationCompleted
          - ValidationFailed
          - Started
          - InProgress
          - Completed
          - PartialCompleted
          - Failed
          - AbortRequested
          - Aborted
      report:
        description: Report of the import operation
        readOnly: true
        $ref: '#/definitions/ImportReport'
      knowledgeBase:
        description: Knowledge base which document import does belong to
        readOnly: true
        $ref: '#/definitions/KnowledgeBase'
      languageCode:
        type: string
        description: Language code
        readOnly: true
        enum:
          - en-US
          - en-UK
          - en-AU
          - en-CA
          - en-HK
          - en-IN
          - en-IE
          - en-NZ
          - en-PH
          - en-SG
          - en-ZA
          - de-DE
          - de-AT
          - de-CH
          - es-AR
          - es-CO
          - es-MX
          - es-US
          - es-ES
          - fr-FR
          - fr-BE
          - fr-CA
          - fr-CH
          - pt-BR
          - pt-PT
          - nl-NL
          - nl-BE
          - it-IT
      dateCreated:
        type: string
        format: date-time
        description: >-
          Created date. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified date. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ResultCounters:
    type: object
    properties:
      success:
        type: integer
        format: int32
      failure:
        type: integer
        format: int32
  ImportStatusRequest:
    type: object
    required:
      - status
    properties:
      status:
        type: string
        description: New status for existing import operation
  KnowledgeDocument:
    type: object
    required:
      - languageCode
      - type
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      languageCode:
        type: string
        description: Language of the document
        enum:
          - en-US
          - en-UK
          - en-AU
          - en-CA
          - en-HK
          - en-IN
          - en-IE
          - en-NZ
          - en-PH
          - en-SG
          - en-ZA
          - de-DE
          - de-AT
          - de-CH
          - es-AR
          - es-CO
          - es-MX
          - es-US
          - es-ES
          - fr-FR
          - fr-BE
          - fr-CA
          - fr-CH
          - pt-BR
          - pt-PT
          - nl-NL
          - nl-BE
          - it-IT
      type:
        type: string
        description: Document type
        enum:
          - Faq
          - Article
      faq:
        description: FAQ document details
        $ref: '#/definitions/DocumentFaq'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Document creation date-time. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Document last modification date-time. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      categories:
        type: array
        description: Document categories
        items:
          $ref: '#/definitions/KnowledgeCategory'
      knowledgeBase:
        description: Knowledge base which document does belong to
        readOnly: true
        $ref: '#/definitions/KnowledgeBase'
      externalUrl:
        type: string
        description: External URL to the document
      article:
        description: Article
        $ref: '#/definitions/DocumentArticle'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeDocumentRequest:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Document type according to assigned template
        enum:
          - Faq
          - Article
      externalUrl:
        type: string
        description: External Url to the document
      faq:
        description: Faq document details
        $ref: '#/definitions/DocumentFaq'
      categories:
        type: array
        description: Document categories
        items:
          $ref: '#/definitions/DocumentCategoryInput'
      article:
        description: Article details
        $ref: '#/definitions/DocumentArticle'
  DocumentListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/KnowledgeDocument'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  KnowledgeDocumentBulkRequest:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Document type according to assigned template
        enum:
          - Faq
          - Article
      externalUrl:
        type: string
        description: External Url to the document
      faq:
        description: Faq document details
        $ref: '#/definitions/DocumentFaq'
      categories:
        type: array
        description: Document categories
        items:
          $ref: '#/definitions/DocumentCategoryInput'
      article:
        description: Article details
        $ref: '#/definitions/DocumentArticle'
      id:
        type: string
        description: Identifier of document for update. Omit for create new Document.
  KnowledgeBaseListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/KnowledgeBase'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  KnowledgeGroupStatistics:
    type: object
    properties:
      unlinkedPhraseCount:
        type: integer
        format: int32
        description: Knowledge Group unique phrase count
      unlinkedPhraseHitCount:
        type: integer
        format: int32
        description: Knowledge Group unlinked phrases hit count
      totalPhraseHitCount:
        type: integer
        format: int32
        description: Total number of phrase hit counts of an unanswered group
  UnansweredGroup:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      label:
        type: string
        description: Knowledge base unanswered group label
      phraseGroups:
        type: array
        description: Represents a list of phrase groups inside an unanswered group
        items:
          $ref: '#/definitions/UnansweredPhraseGroup'
      suggestedDocuments:
        type: array
        description: >-
          Represents a list of documents that may be linked to an unanswered
          group
        items:
          $ref: '#/definitions/UnansweredGroupSuggestedDocument'
      statistics:
        description: >-
          Statistics object containing the various hit counts for an unanswered
          group
        $ref: '#/definitions/KnowledgeGroupStatistics'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UnansweredGroupSuggestedDocument:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UnansweredGroups:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UnansweredGroup'
  UnansweredPhrase:
    type: object
    properties:
      id:
        type: string
        description: Id of an unanswered phrase
      text:
        type: string
        description: Phrase text of an unanswered phrase
      unlinkedPhraseHitCount:
        type: integer
        format: int32
        description: Hit count of an unlinked phrase
  UnansweredPhraseGroup:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      label:
        type: string
        description: Knowledge base phrase group label
      phrases:
        type: array
        description: List of unanswered phrases in a phrase group
        items:
          $ref: '#/definitions/UnansweredPhrase'
      unlinkedPhraseHitCount:
        type: integer
        format: int32
        description: Hit count of the unlinked phrase group
      unlinkedPhraseCount:
        type: integer
        format: int32
        description: Unique phrase count of the unlinked phrase group
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PhraseAssociations:
    type: object
    required:
      - documentId
      - phraseId
    properties:
      phraseId:
        type: string
        description: Id of the phrase to be linked
      documentId:
        type: string
        description: Id of the document to be linked
  UnansweredPhraseGroupUpdateResponse:
    type: object
    properties:
      phraseAssociations:
        type: array
        description: List of phrases and documents linked in the patch request
        items:
          $ref: '#/definitions/PhraseAssociations'
      group:
        description: Knowledge base unanswered group response
        $ref: '#/definitions/UnansweredGroup'
  UnansweredPhraseGroupPatchRequestBody:
    type: object
    required:
      - phraseAssociations
    properties:
      phraseAssociations:
        type: array
        description: List of phrases and documents to be linked
        items:
          $ref: '#/definitions/PhraseAssociations'
  LabelResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the label.
      color:
        type: string
        description: The color of the label.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The creation date and time of the label. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          The last modification date and time of the label. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      documentCount:
        type: integer
        format: int32
        description: Number of documents assigned to this label.
      externalId:
        type: string
        description: The external id associated with the label.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LabelUpdateRequest:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the label.
      color:
        type: string
        description: The color for the label.
      externalId:
        type: string
        description: The external id associated with the label.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LabelCreateRequest:
    type: object
    required:
      - color
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the label.
      color:
        type: string
        description: The color for the label.
      externalId:
        type: string
        description: The external id associated with the label.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LabelListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/LabelResponse'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  KnowledgeTraining:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      dateTriggered:
        type: string
        format: date-time
        description: >-
          Trigger date-time. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateCompleted:
        type: string
        format: date-time
        description: >-
          Training completed date-time. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      status:
        type: string
        description: Training status.
        readOnly: true
        enum:
          - Queued
          - InProgress
          - Succeeded
          - Failed
      languageCode:
        type: string
        description: Language of the documents that are trained.
        readOnly: true
      knowledgeBase:
        description: Knowledge Base that the training belongs to.
        readOnly: true
        $ref: '#/definitions/KnowledgeBase'
      errorMessage:
        type: string
        description: Any error message during the Training or Promote action.
        readOnly: true
      knowledgeDocumentsState:
        type: string
        description: >-
          State of the Trained Documents, which can be one of these Draft,
          Active, Discarded, Archived.
        readOnly: true
        enum:
          - Draft
          - Active
          - Discarded
          - Archived
      datePromoted:
        type: string
        format: date-time
        description: >-
          Trained Documents Promoted date-time. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TrainingListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/KnowledgeTraining'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  DocumentBody:
    type: object
    required:
      - blocks
    properties:
      blocks:
        type: array
        description: The list of building blocks for the document body.
        items:
          $ref: '#/definitions/DocumentBodyBlock'
  DocumentBodyBlock:
    type: object
    required:
      - image
      - list
      - paragraph
      - type
      - video
    properties:
      type:
        type: string
        description: >-
          The type of the block for the body. This determines which body block
          object (paragraph, list, video or image) would have a value.
        enum:
          - Paragraph
          - Image
          - Video
          - OrderedList
          - UnorderedList
      paragraph:
        description: >-
          Paragraph. It must contain a value if the type of the block is
          Paragraph.
        $ref: '#/definitions/DocumentBodyParagraph'
      image:
        description: Image. It must contain a value if the type of the block is Image.
        $ref: '#/definitions/DocumentBodyImage'
      video:
        description: Video. It must contain a value if the type of the block is Video.
        $ref: '#/definitions/DocumentBodyVideo'
      list:
        description: >-
          List. It must contain a value if the type of the block is
          UnorderedList or OrderedList.
        $ref: '#/definitions/DocumentBodyList'
  DocumentBodyImage:
    type: object
    required:
      - url
    properties:
      url:
        type: string
        description: The URL for the image.
      hyperlink:
        type: string
        description: The URL of the page that the hyperlink goes to.
      properties:
        description: The properties for the image.
        $ref: '#/definitions/DocumentBodyImageProperties'
  DocumentBodyImageProperties:
    type: object
    properties:
      backgroundColor:
        type: string
        description: >-
          The background color property for the image. The valid values in hex
          color code representation. For example black color - #000000
      align:
        type: string
        description: The align property for the image.
        enum:
          - Center
          - Left
          - Right
          - Justify
      indentation:
        type: number
        format: float
        description: The indentation property for the image. The valid values in 'em'.
  DocumentBodyList:
    type: object
    required:
      - blocks
    properties:
      blocks:
        type: array
        description: The list of items for an OrderedList or an UnorderedList.
        items:
          $ref: '#/definitions/DocumentBodyListBlock'
      properties:
        description: Properties for the UnorderedList or OrderedList.
        $ref: '#/definitions/DocumentBodyListBlockProperties'
  DocumentBodyListBlock:
    type: object
    required:
      - blocks
      - type
    properties:
      type:
        type: string
        description: The type of the list block.
        enum:
          - ListItem
      blocks:
        type: array
        description: The list of items for an OrderedList or an UnorderedList.
        items:
          $ref: '#/definitions/DocumentListContentBlock'
      properties:
        description: The properties for the list block.
        $ref: '#/definitions/DocumentBodyListItemProperties'
  DocumentBodyListBlockProperties:
    type: object
    properties:
      unorderedType:
        type: string
        description: The type of icon for the unordered list.
        enum:
          - Normal
          - Square
          - Circle
          - None
      orderedType:
        type: string
        description: The type of icon for the ordered list.
        enum:
          - Number
          - LowerAlpha
          - LowerGreek
          - LowerRoman
          - UpperAlpha
          - UpperRoman
          - None
  DocumentBodyListItemProperties:
    type: object
    properties:
      backgroundColor:
        type: string
        description: >-
          The background color for the list item. The valid values in hex color
          code representation. For example black color - #000000
      align:
        type: string
        description: The align type for the list item.
        enum:
          - Center
          - Left
          - Right
          - Justify
      indentation:
        type: number
        format: float
        description: The indentation property for the list item. The valid values in 'em'.
      fontSize:
        type: string
        description: The font size for the list item. The valid values in 'em'.
        enum:
          - XxSmall
          - XSmall
          - Small
          - Medium
          - Large
          - XLarge
          - XxLarge
          - XxxLarge
      fontType:
        type: string
        description: The font type for the list item.
        enum:
          - Paragraph
          - Heading1
          - Heading2
          - Heading3
          - Heading4
          - Heading5
          - Heading6
          - Preformatted
      textColor:
        type: string
        description: >-
          The text color for the list item. The valid values in hex color code
          representation. For example black color - #000000
  DocumentBodyParagraph:
    type: object
    required:
      - blocks
    properties:
      blocks:
        type: array
        description: The list of blocks for the paragraph.
        items:
          $ref: '#/definitions/DocumentContentBlock'
      properties:
        description: The properties for the paragraph.
        $ref: '#/definitions/DocumentBodyParagraphProperties'
  DocumentBodyParagraphProperties:
    type: object
    properties:
      fontSize:
        type: string
        description: The font size for the paragraph. The valid values in 'em'.
        enum:
          - XxSmall
          - XSmall
          - Small
          - Medium
          - Large
          - XLarge
          - XxLarge
          - XxxLarge
      fontType:
        type: string
        description: The font type for the paragraph.
        enum:
          - Paragraph
          - Heading1
          - Heading2
          - Heading3
          - Heading4
          - Heading5
          - Heading6
          - Preformatted
      textColor:
        type: string
        description: >-
          The text color for the paragraph. The valid values in hex color code
          representation. For example black color - #000000
      backgroundColor:
        type: string
        description: >-
          The background color for the paragraph. The valid values in hex color
          code representation. For example black color - #000000
      align:
        type: string
        description: The align type for the paragraph.
        enum:
          - Center
          - Left
          - Right
          - Justify
      indentation:
        type: number
        format: float
        description: The indentation color for the paragraph. The valid values in 'em'.
  DocumentBodyVideo:
    type: object
    required:
      - url
    properties:
      url:
        type: string
        description: The URL for the video.
      properties:
        description: The properties for the video.
        $ref: '#/definitions/DocumentBodyVideoProperties'
  DocumentBodyVideoProperties:
    type: object
    properties:
      backgroundColor:
        type: string
        description: >-
          The background color for the video. The valid values in hex color code
          representation. For example black color - #000000
      align:
        type: string
        description: The align type for the video.
        enum:
          - Center
          - Left
          - Right
          - Justify
      indentation:
        type: number
        format: float
        description: The indentation for the video. The valid values in 'em'.
  DocumentContentBlock:
    type: object
    required:
      - image
      - text
      - type
    properties:
      type:
        type: string
        description: The type of the paragraph block.
        enum:
          - Text
          - Image
      text:
        description: Text. It must contain a value if the type of the block is Text.
        $ref: '#/definitions/DocumentText'
      image:
        description: Image. It must contain a value if the type of the block is Image.
        $ref: '#/definitions/DocumentBodyImage'
  DocumentListContentBlock:
    type: object
    required:
      - image
      - list
      - text
      - type
    properties:
      type:
        type: string
        description: The type of the list block.
        enum:
          - Text
          - Image
          - OrderedList
          - UnorderedList
      text:
        description: Text. It must contain a value if the type of the block is Text.
        $ref: '#/definitions/DocumentText'
      image:
        description: Image. It must contain a value if the type of the block is Image.
        $ref: '#/definitions/DocumentBodyImage'
      list:
        description: >-
          List. It must contain a value if the type of the block is
          UnorderedList or OrderedList.
        $ref: '#/definitions/DocumentBodyList'
  DocumentText:
    type: object
    required:
      - text
    properties:
      text:
        type: string
        description: Text.
      marks:
        type: array
        description: >-
          The unique list of marks (whether it is bold and/or underlined etc.)
          for the text.
        uniqueItems: true
        items:
          type: string
          enum:
            - Bold
            - Italic
            - Underline
            - Strikethrough
            - Subscript
            - Superscript
      hyperlink:
        type: string
        description: The URL of the page that the hyperlink goes to.
      properties:
        description: The properties for the text.
        $ref: '#/definitions/DocumentTextProperties'
  DocumentTextProperties:
    type: object
    properties:
      fontSize:
        type: string
        description: The font size for the text. The valid values in 'em'.
        enum:
          - XxSmall
          - XSmall
          - Small
          - Medium
          - Large
          - XLarge
          - XxLarge
          - XxxLarge
      textColor:
        type: string
        description: >-
          The text color for the text. The valid values in hex color code
          representation. For example black color - #000000
      backgroundColor:
        type: string
        description: >-
          The background color for the text. The valid values in hex color code
          representation. For example black color - #000000
  DocumentVariation:
    type: object
    required:
      - contexts
    properties:
      id:
        type: string
        description: The globally unique identifier for the variation.
        readOnly: true
      body:
        description: The content for the variation.
        $ref: '#/definitions/DocumentBody'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The creation date-time for the document variation. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The last modification date-time for the document variation. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      documentVersion:
        description: The version of the document.
        $ref: '#/definitions/AddressableEntityRef'
      contexts:
        type: array
        description: The context values associated with the variation.
        items:
          $ref: '#/definitions/DocumentVariationContext'
      document:
        description: The reference to document to which the variation is associated.
        readOnly: true
        $ref: '#/definitions/KnowledgeDocumentReference'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DocumentVariationContext:
    type: object
    required:
      - context
      - values
    properties:
      context:
        description: The knowledge context associated with the variation.
        $ref: '#/definitions/KnowledgeContextReference'
      values:
        type: array
        description: The list of knowledge context values associated with the variation.
        items:
          $ref: '#/definitions/KnowledgeContextValueReference'
  KnowledgeContextReference:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The globally unique identifier for the knowledge context.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeContextValueReference:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The globally unique identifier for the knowledge context value.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeDocumentAlternative:
    type: object
    required:
      - autocomplete
      - phrase
    properties:
      phrase:
        type: string
        description: Alternate phrasing to the document title, having a limit of 500 words.
      autocomplete:
        type: boolean
        description: Autocomplete enabled for the alternate phrase.
  KnowledgeDocumentReference:
    type: object
    required:
      - id
      - knowledgeBase
    properties:
      id:
        type: string
        description: The globally unique identifier for the document.
      knowledgeBase:
        description: The knowledge base that the document belongs to.
        $ref: '#/definitions/KnowledgeBaseReference'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeDocumentResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      title:
        type: string
        description: Document title, having a limit of 500 words.
      visible:
        type: boolean
        description: >-
          Indicates if the knowledge document should be included in search
          results.
      alternatives:
        type: array
        description: >-
          List of alternate phrases related to the title which improves search
          results.
        items:
          $ref: '#/definitions/KnowledgeDocumentAlternative'
      state:
        type: string
        description: State of the document.
        enum:
          - Draft
          - Published
          - Archived
      dateCreated:
        type: string
        format: date-time
        description: >-
          Document creation date-time. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Document last modification date-time. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateImported:
        type: string
        format: date-time
        description: >-
          Document import date-time, or null if was not imported. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      lastPublishedVersionNumber:
        type: integer
        format: int32
        description: The last published version number of the document.
      datePublished:
        type: string
        format: date-time
        description: >-
          The date on which the document was last published. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: The user who created the document.
        readOnly: true
        $ref: '#/definitions/UserReference'
      modifiedBy:
        description: The user who modified the document.
        readOnly: true
        $ref: '#/definitions/UserReference'
      documentVersion:
        description: The version of the document.
        $ref: '#/definitions/AddressableEntityRef'
      category:
        description: The reference to category associated with the document.
        $ref: '#/definitions/CategoryResponse'
      labels:
        type: array
        description: The references to labels associated with the document.
        items:
          $ref: '#/definitions/LabelResponse'
      knowledgeBase:
        description: Knowledge base to which the document belongs to.
        $ref: '#/definitions/KnowledgeBaseReference'
      variations:
        type: array
        description: Variations of the document.
        items:
          $ref: '#/definitions/DocumentVariation'
      externalId:
        type: string
        description: The reference to external id associated with the document.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeDocumentReq:
    type: object
    required:
      - title
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      title:
        type: string
        description: Document title.
      visible:
        type: boolean
        description: >-
          Indicates if the knowledge document should be included in search
          results.
      alternatives:
        type: array
        description: >-
          List of alternate phrases related to the title which improves search
          results.
        items:
          $ref: '#/definitions/KnowledgeDocumentAlternative'
      categoryId:
        type: string
        description: The category associated with the document.
      labelIds:
        type: array
        description: The ids of labels associated with the document.
        items:
          type: string
      externalId:
        type: string
        description: The external id associated with the document.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeDocumentVersion:
    type: object
    required:
      - restoreFromVersionId
    properties:
      id:
        type: string
        description: Globally unique identifier for the document version.
        readOnly: true
      datePublished:
        type: string
        format: date-time
        description: >-
          Published date of document version. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      document:
        description: The document which is versioned.
        readOnly: true
        $ref: '#/definitions/KnowledgeDocumentResponse'
      restoreFromVersionId:
        type: string
        description: >-
          The globally unique identifier for the document version. If the value
          is provided, the document is restored to the given version. If not, it
          publishes the draft changes as a new version of the document.
      versionNumber:
        type: integer
        format: int32
        description: Version Number of the document.
        readOnly: true
      dateExpires:
        type: string
        format: date-time
        description: >-
          Expiry date of document version, applicable only to the 'Archived'
          version of the document. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeDocumentVersionListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/KnowledgeDocumentVersion'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  KnowledgeDocumentResponseListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/KnowledgeDocumentResponse'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  DocumentVariationListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DocumentVariation'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  KnowledgeDocumentVersionVariation:
    type: object
    required:
      - contexts
    properties:
      id:
        type: string
        description: The globally unique identifier for the variation.
        readOnly: true
      body:
        description: The content for the variation.
        $ref: '#/definitions/DocumentBody'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The creation date-time for the document variation. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The last modification date-time for the document variation. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      contexts:
        type: array
        description: The context values associated with the variation.
        items:
          $ref: '#/definitions/DocumentVariationContext'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      documentVersion:
        description: >-
          Reference to the document version to which the variation is associated
          with.
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
  KnowledgeDocumentVersionVariationListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/KnowledgeDocumentVersionVariation'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  KnowledgeConversationContext:
    type: object
    required:
      - conversationId
    properties:
      conversationId:
        type: string
        description: The unique identifier of the conversation.
      mediaType:
        type: string
        description: The media type of the conversation.
        enum:
          - Unknown
          - Callback
          - Chat
          - Cobrowse
          - Email
          - Message
          - Screenshare
          - Video
          - Voice
      queueId:
        type: string
        description: >-
          The unique identifier of the queue used to assign the interaction to
          the user.
      externalContactId:
        type: string
        description: The external contact identifier of the end-user participant.
  KnowledgeSearchClientApplication:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Application type.
        enum:
          - Assistant
          - BotFlow
          - MessengerKnowledgeApp
          - SmartAdvisor
          - SupportCenter
      deployment:
        description: >-
          Application details when type is MessengerKnowledgeApp or
          SupportCenter.
        $ref: '#/definitions/AddressableEntityRef'
      botFlow:
        description: Application details when type is BotFlow.
        $ref: '#/definitions/AddressableEntityRef'
      assistant:
        description: Application details when type is Assistant.
        $ref: '#/definitions/AddressableEntityRef'
  KnowledgeConversationContextResponse:
    type: object
    required:
      - conversation
    properties:
      conversation:
        description: The conversation.
        $ref: '#/definitions/AddressableEntityRef'
      queue:
        description: The queue used to assign the interaction to the user.
        $ref: '#/definitions/AddressableEntityRef'
      externalContact:
        description: The end-user participant of the conversation.
        $ref: '#/definitions/AddressableEntityRef'
      mediaType:
        type: string
        description: The media type of the conversation.
        enum:
          - Unknown
          - Callback
          - Chat
          - Cobrowse
          - Email
          - Message
          - Screenshare
          - Video
          - Voice
  DocumentQuery:
    type: object
    required:
      - clauses
      - operator
    properties:
      clauses:
        type: array
        description: Documents filter clauses/criteria. Limit of 20 clauses.
        items:
          $ref: '#/definitions/DocumentQueryClause'
      operator:
        type: string
        description: Specifies how the filter clauses will be applied together.
        enum:
          - Or
          - And
  DocumentQueryClause:
    type: object
    required:
      - operator
      - predicates
    properties:
      operator:
        type: string
        description: Specifies how the predicates will be applied together.
        enum:
          - Or
          - And
      predicates:
        type: array
        description: >-
          To apply multiple conditions. Limit of 10 predicates across all
          clauses.
        items:
          $ref: '#/definitions/DocumentQueryPredicate'
  DocumentQueryInterval:
    type: object
    properties:
      field:
        type: string
        description: Specifies the date field to be used for date and time range.
        enum:
          - dateCreated
          - dateModified
          - datePublished
      value:
        type: string
        description: >-
          Specifies the date and time range for filtering the documents.
          Intervals are represented as an ISO-8601 string. For example:
          YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
  DocumentQueryPredicate:
    type: object
    required:
      - fields
      - type
      - values
    properties:
      fields:
        type: array
        description: Specifies the document fields to be matched against.
        items:
          type: string
          enum:
            - alternatives
            - categoryId
            - categoryName
            - contextId
            - contextName
            - contextValueId
            - contextValueName
            - documentId
            - labelId
            - labelName
            - title
            - visible
            - state
      values:
        type: array
        description: Specifies the values of the fields to be matched against.
        items:
          type: string
      type:
        type: string
        description: Specifies the matching criteria between the fields and values.
        enum:
          - Equals
          - NotEquals
          - Contains
          - MatchAll
          - MatchAny
  KnowledgeExportJobDocumentsFilter:
    type: object
    properties:
      interval:
        type: string
        description: >-
          Retrieves the documents modified in specified date and time range.
          Cannot be used together with entities filter. Intervals are
          represented as an ISO-8601 string. For example:
          YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      entities:
        type: array
        description: >-
          Retrieves the documents with the given ids. Cannot be used together
          with internal filter.
        items:
          $ref: '#/definitions/Entity'
        maxItems: 100
        minItems: 1
  KnowledgeExportJobFilter:
    type: object
    required:
      - versionFilter
    properties:
      documentsFilter:
        description: Filters for narrowing down which documents to export.
        $ref: '#/definitions/KnowledgeExportJobDocumentsFilter'
      versionFilter:
        type: string
        description: Specifies what version should be exported.
        enum:
          - All
          - Latest
  KnowledgeExportJobResponse:
    type: object
    required:
      - fileType
    properties:
      id:
        type: string
        description: Id of the export job.
      downloadURL:
        type: string
        description: >-
          The URL of the location at which the caller can download the export
          file, when available.
      fileType:
        type: string
        description: File type of the document
        enum:
          - Json
          - Csv
          - Xlsx
      countDocumentProcessed:
        type: integer
        format: int32
        description: The current count of the number of records processed.
      exportFilter:
        description: Filters to narrow down what to export.
        $ref: '#/definitions/KnowledgeExportJobFilter'
      status:
        type: string
        description: The status of the export job.
        enum:
          - Created
          - ValidationInProgress
          - ValidationCompleted
          - ValidationFailed
          - Started
          - InProgress
          - Completed
          - PartialCompleted
          - Failed
          - AbortRequested
          - Aborted
      knowledgeBase:
        description: Knowledge base which document export belongs to.
        $ref: '#/definitions/KnowledgeBase'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The timestamp of when the export began. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          The timestamp of when the export stopped. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      errorInformation:
        description: >-
          Any error information, or null of the processing is not in failed
          state.
        $ref: '#/definitions/ErrorBody'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeExportJobRequest:
    type: object
    required:
      - exportFilter
      - fileType
    properties:
      exportFilter:
        description: What to export.
        $ref: '#/definitions/KnowledgeExportJobFilter'
      fileType:
        type: string
        description: File type of the document
        enum:
          - Json
          - Csv
          - Xlsx
  KnowledgeImportJobError:
    type: object
    properties:
      message:
        type: string
      code:
        type: string
      status:
        type: integer
        format: int32
      entityId:
        type: string
      entityName:
        type: string
      messageWithParams:
        type: string
      messageParams:
        type: object
        additionalProperties:
          type: string
      contextId:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/Detail'
      errors:
        type: array
        items:
          $ref: '#/definitions/ErrorBody'
      limit:
        $ref: '#/definitions/Limit'
      documentIndex:
        type: integer
        format: int32
        description: Index of the faulty document.
  KnowledgeImportJobReport:
    type: object
    properties:
      errors:
        type: array
        description: List of errors occurred during processing import.
        items:
          $ref: '#/definitions/KnowledgeImportJobError'
      statistics:
        description: Statistics related to the import job.
        $ref: '#/definitions/KnowledgeImportJobStatistics'
  KnowledgeImportJobResponse:
    type: object
    required:
      - fileType
      - uploadKey
    properties:
      id:
        type: string
        description: Id of the import job
        readOnly: true
      uploadKey:
        type: string
        description: Upload key
      fileType:
        type: string
        description: File type of the document
        enum:
          - Json
          - Csv
          - Xlsx
      settings:
        description: Additional optional settings
        $ref: '#/definitions/KnowledgeImportJobSettings'
      status:
        type: string
        description: Status of the import job
        readOnly: true
        enum:
          - Created
          - ValidationInProgress
          - ValidationCompleted
          - ValidationFailed
          - Started
          - InProgress
          - Completed
          - PartialCompleted
          - Failed
          - AbortRequested
          - Aborted
      report:
        description: Report of the import job
        readOnly: true
        $ref: '#/definitions/KnowledgeImportJobReport'
      knowledgeBase:
        description: Knowledge base which document import does belong to
        readOnly: true
        $ref: '#/definitions/KnowledgeBase'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Created date. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified date. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeImportJobSettings:
    type: object
    properties:
      importAsNew:
        type: boolean
        description: If enabled import creates a new document even if update is available.
      visible:
        type: boolean
        description: >-
          If specified, import will override the visibility of the imported
          documents.
      categoryId:
        type: string
        description: >-
          If specified, import will override the category of the imported
          documents.
      labelIds:
        type: array
        description: If specified, import will add this labels to the imported documents.
        items:
          type: string
  KnowledgeImportJobStatistics:
    type: object
    properties:
      countDocumentImportActivityCreate:
        type: integer
        format: int32
        description: Number of documents will be created by the import.
      countDocumentImportActivityUpdate:
        type: integer
        format: int32
        description: Number of documents will be updated by the import.
      countDocumentStateDraft:
        type: integer
        format: int32
        description: Number of documents will be imported as draft.
      countDocumentStatePublished:
        type: integer
        format: int32
        description: Number of documents will be imported as published.
      countDocumentValidationSuccess:
        type: integer
        format: int32
        description: Number of documents that validated successfully for import.
      countDocumentValidationFailure:
        type: integer
        format: int32
        description: Number of documents that failed validation for import.
      countDocumentImportSuccess:
        type: integer
        format: int32
        description: Number of imported documents.
      countDocumentImportFailure:
        type: integer
        format: int32
        description: Number of documents failed to import.
      countCategoryValidationSuccess:
        type: integer
        format: int32
        description: Number of categories that validated successfully for import.
      countCategoryValidationFailure:
        type: integer
        format: int32
        description: Number of categories that failed validation for import.
      countCategoryImportSuccess:
        type: integer
        format: int32
        description: Number of imported categories.
      countCategoryImportFailure:
        type: integer
        format: int32
        description: Number of categories failed to import.
      countLabelValidationSuccess:
        type: integer
        format: int32
        description: Number of labels that validated successfully for import.
      countLabelValidationFailure:
        type: integer
        format: int32
        description: Number of labels that failed validation for import.
      countLabelImportSuccess:
        type: integer
        format: int32
        description: Number of imported labels.
      countLabelImportFailure:
        type: integer
        format: int32
        description: Number of labels failed to import.
      migrationDetected:
        type: boolean
        description: Shows whether the import treated as migration or not.
  KnowledgeImportJobRequest:
    type: object
    required:
      - fileType
      - uploadKey
    properties:
      uploadKey:
        type: string
        description: Upload key
      fileType:
        type: string
        description: File type of the document
        enum:
          - Json
          - Csv
          - Xlsx
      settings:
        description: Additional optional settings
        $ref: '#/definitions/KnowledgeImportJobSettings'
  KnowledgeDocumentSearch:
    type: object
    required:
      - query
    properties:
      query:
        type: string
        description: >-
          Query to search content in the knowledge base. Maximum of 30 records
          per query can be fetched.
        minLength: 3
        maxLength: 2147483647
      pageSize:
        type: integer
        format: int32
        description: Page size of the returned results.
      pageNumber:
        type: integer
        format: int32
        description: Page number of the returned results.
      searchId:
        type: string
        description: The globally unique identifier for the search.
        readOnly: true
      total:
        type: integer
        format: int32
        description: The total number of documents matching the query.
        readOnly: true
      pageCount:
        type: integer
        format: int32
        description: >-
          Number of pages returned in the result calculated according to the
          pageSize and the total
        readOnly: true
      queryType:
        type: string
        description: The type of the query that initiates the search.
        enum:
          - AutoSearch
          - ManualSearch
          - Suggestion
      results:
        type: array
        description: Documents matching the search query.
        readOnly: true
        items:
          $ref: '#/definitions/KnowledgeDocumentSearchResult'
      application:
        description: The client application details from which search happened.
        $ref: '#/definitions/KnowledgeSearchClientApplication'
      conversationContext:
        description: >-
          Conversation context information if the search is initiated in the
          context of a conversation.
        $ref: '#/definitions/KnowledgeConversationContextResponse'
  KnowledgeDocumentSearchResult:
    type: object
    properties:
      confidence:
        type: number
        format: double
        description: >-
          The confidence associated with a document with respect to a search
          query.
      document:
        description: Document that matched the query.
        $ref: '#/definitions/KnowledgeDocumentResponse'
  KnowledgeDocumentSearchRequest:
    type: object
    required:
      - query
    properties:
      query:
        type: string
        description: >-
          Query to search content in the knowledge base. Maximum of 30 records
          per query can be fetched.
        minLength: 3
        maxLength: 2147483647
      pageSize:
        type: integer
        format: int32
        description: Page size of the returned results.
      pageNumber:
        type: integer
        format: int32
        description: Page number of the returned results.
      searchId:
        type: string
        description: The globally unique identifier for the search.
        readOnly: true
      total:
        type: integer
        format: int32
        description: The total number of documents matching the query.
        readOnly: true
      pageCount:
        type: integer
        format: int32
        description: >-
          Number of pages returned in the result calculated according to the
          pageSize and the total
        readOnly: true
      queryType:
        type: string
        description: The type of the query that initiates the search.
        enum:
          - AutoSearch
          - ManualSearch
          - Suggestion
      includeDraftDocuments:
        type: boolean
        description: >-
          Indicates whether the search results would also include draft
          documents.
      interval:
        description: >-
          Retrieves the documents created/modified/published in specified date
          and time range.
        $ref: '#/definitions/DocumentQueryInterval'
      filter:
        description: Filter for the document search.
        $ref: '#/definitions/DocumentQuery'
      sortOrder:
        type: string
        description: The sort order for search results.
        enum:
          - Asc
          - Desc
      sortBy:
        type: string
        description: >-
          The field in the documents that you want to sort the search results
          by.
        enum:
          - ConfidenceScore
          - DateCreated
          - DateModified
          - CategoryName
          - LabelName
      application:
        description: The client application details from which search request was sent.
        $ref: '#/definitions/KnowledgeSearchClientApplication'
      conversationContext:
        description: >-
          Conversation context information if the search is initiated in the
          context of a conversation.
        $ref: '#/definitions/KnowledgeConversationContext'
  SearchUpdateRequest:
    type: object
    required:
      - answered
    properties:
      sessionId:
        type: string
        description: The unique identifier of this session
        readOnly: true
      answered:
        type: boolean
        description: Mark the search as answered/unanswered
      selectedAnswer:
        description: The selected search result chosen as the answer.
        $ref: '#/definitions/SelectedAnswer'
  SelectedAnswer:
    type: object
    required:
      - document
    properties:
      document:
        description: The search result document chosen as the answer.
        $ref: '#/definitions/AddressableEntityRef'
  KnowledgeDocumentSuggestion:
    type: object
    required:
      - query
    properties:
      query:
        type: string
        description: >-
          Query to get autocomplete suggestions for the matching knowledge
          documents.
      pageSize:
        type: integer
        format: int32
        description: Page size of the returned results.
      results:
        type: array
        description: Documents matching to the autocomplete suggestions query.
        readOnly: true
        items:
          $ref: '#/definitions/KnowledgeDocumentSuggestionResult'
  KnowledgeDocumentSuggestionResult:
    type: object
    properties:
      matchedPhrase:
        type: string
        description: Matched phrase to the autocomplete suggestions query.
      document:
        $ref: '#/definitions/KnowledgeDocumentSuggestionResultDocument'
  KnowledgeDocumentSuggestionResultDocument:
    type: object
    required:
      - id
      - knowledgeBase
      - title
    properties:
      id:
        type: string
        description: The globally unique identifier for the document.
      knowledgeBase:
        description: The knowledge base that the document belongs to.
        $ref: '#/definitions/KnowledgeBaseReference'
      title:
        type: string
        description: The title of the document.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeDocumentSuggestionRequest:
    type: object
    required:
      - query
    properties:
      query:
        type: string
        description: >-
          Query to get autocomplete suggestions for the matching knowledge
          documents.
      pageSize:
        type: integer
        format: int32
        description: Page size of the returned results.
      includeDraftDocuments:
        type: boolean
        description: >-
          Indicates whether the suggestion results would also include draft
          documents.
      interval:
        description: >-
          Retrieves the documents created/modified/published in specified date
          and time range.
        $ref: '#/definitions/DocumentQueryInterval'
      filter:
        description: Filter for the document suggestions.
        $ref: '#/definitions/DocumentQuery'
  AdditionalLanguagesIntent:
    type: object
    properties:
      id:
        type: string
        description: ID of the intent for respective additional language
        readOnly: true
      utterances:
        type: array
        description: Utterances list for additional language
        items:
          $ref: '#/definitions/NluUtterance'
  AdditionalLanguagesSynonyms:
    type: object
    properties:
      synonyms:
        type: array
        description: Synonyms for additional language
        readOnly: true
        items:
          type: string
  IntentDefinition:
    type: object
    required:
      - name
      - utterances
    properties:
      id:
        type: string
        description: ID of the intent.
        readOnly: true
      name:
        type: string
        description: The name of the intent.
      entityTypeBindings:
        type: array
        description: >-
          The bindings for the named entity types used in this intent.This field
          is mutually exclusive with entityNameReferences and entities
        items:
          $ref: '#/definitions/NamedEntityTypeBinding'
      entityNameReferences:
        type: array
        description: >-
          The references for the named entity used in this intent.This field is
          mutually exclusive with entityTypeBindings
        readOnly: true
        items:
          type: string
      utterances:
        type: array
        description: The utterances that act as training phrases for the intent.
        items:
          $ref: '#/definitions/NluUtterance'
      additionalLanguages:
        type: object
        description: Additional languages for intents
        additionalProperties:
          $ref: '#/definitions/AdditionalLanguagesIntent'
  NamedEntityAnnotation:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: The name of the annotated named entity.
  NamedEntityDefinition:
    type: object
    required:
      - name
      - type
    properties:
      name:
        type: string
        description: The name of the entity.
      type:
        type: string
        description: The name of the entity type.
  NamedEntityTypeBinding:
    type: object
    required:
      - entityName
      - entityType
    properties:
      entityType:
        type: string
        description: >-
          The named entity type of the binding. It can be a built-in one such as
          builtin:number or a custom entity type such as BeverageType.
      entityName:
        type: string
        description: The name that this named entity type is bound to.
  NamedEntityTypeDefinition:
    type: object
    required:
      - mechanism
      - name
    properties:
      name:
        type: string
        description: The name of the entity type.
      description:
        type: string
        description: Description of the of the named entity type.
      mechanism:
        description: The mechanism enabling detection of the named entity type.
        $ref: '#/definitions/NamedEntityTypeMechanism'
  NamedEntityTypeItem:
    type: object
    required:
      - value
    properties:
      value:
        type: string
        description: A value for an named entity type definition.
      synonyms:
        type: array
        description: Synonyms for the given named entity value.
        items:
          type: string
      additionalLanguages:
        type: object
        description: Additional Language Synonyms for the given named entity value.
        additionalProperties:
          $ref: '#/definitions/AdditionalLanguagesSynonyms'
  NamedEntityTypeMechanism:
    type: object
    required:
      - items
      - type
    properties:
      items:
        type: array
        description: The items that define the named entity type.
        items:
          $ref: '#/definitions/NamedEntityTypeItem'
      restricted:
        type: boolean
        description: >-
          Whether the named entity type is restricted to the items provided.
          Default: false
      type:
        type: string
        description: The type of the mechanism.
        enum:
          - DynamicList
          - List
          - Regex
          - Unknown
  NluDomain:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the NLU domain.
      language:
        type: string
        description: The language culture of the NLU domain, e.g. `en-us`, `de-de`.
      draftVersion:
        description: The draft version of that NLU domain.
        readOnly: true
        $ref: '#/definitions/NluDomainVersion'
      lastPublishedVersion:
        description: The last published version of that NLU domain.
        readOnly: true
        $ref: '#/definitions/NluDomainVersion'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date when the NLU domain was created. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date when the NLU domain was updated. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      engineVersion:
        type: string
        description: The version of the NLU engine to use.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  NluDomainVersion:
    type: object
    required:
      - language
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      domain:
        description: The NLU domain of the version.
        readOnly: true
        $ref: '#/definitions/NluDomain'
      description:
        type: string
        description: The description of the NLU domain version.
      language:
        type: string
        description: The language that the NLU domain version supports.
      published:
        type: boolean
        description: Whether this NLU domain version has been published.
        readOnly: true
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date when the NLU domain version was created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date when the NLU domain version was updated. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateTrained:
        type: string
        format: date-time
        description: >-
          The date when the NLU domain version was trained. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      datePublished:
        type: string
        format: date-time
        description: >-
          The date when the NLU domain version was published. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      trainingStatus:
        type: string
        description: The training status of the NLU domain version.
        readOnly: true
        enum:
          - Untrained
          - Training
          - Trained
          - Error
          - Unknown
      evaluationStatus:
        type: string
        description: The evaluation status of the NLU domain version.
        readOnly: true
        enum:
          - Unevaluated
          - Evaluating
          - Evaluated
          - Error
      intents:
        type: array
        description: The intents defined for this NLU domain version.
        items:
          $ref: '#/definitions/IntentDefinition'
      entityTypes:
        type: array
        description: The entity types defined for this NLU domain version.
        items:
          $ref: '#/definitions/NamedEntityTypeDefinition'
      entities:
        type: array
        description: >-
          The entities defined for this NLU domain version.This field is
          mutually exclusive with entityTypeBindings
        items:
          $ref: '#/definitions/NamedEntityDefinition'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  NluUtterance:
    type: object
    required:
      - segments
    properties:
      id:
        type: string
        description: ID of the utterance.
        readOnly: true
      segments:
        type: array
        description: >-
          The list of segments that that constitute this utterance for the given
          intent.
        items:
          $ref: '#/definitions/NluUtteranceSegment'
  NluUtteranceSegment:
    type: object
    required:
      - text
    properties:
      text:
        type: string
        description: The text of the segment.
      entity:
        description: The entity annotation of the segment.
        $ref: '#/definitions/NamedEntityAnnotation'
  NluDomainListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/NluDomain'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  DetectedNamedEntity:
    type: object
    properties:
      name:
        type: string
        description: The name of the detected named entity.
        readOnly: true
      entityType:
        type: string
        description: The type of the detected named entity.
        readOnly: true
      probability:
        type: number
        format: double
        description: The probability of the detected named entity.
        readOnly: true
      value:
        description: The value of the detected named entity.
        readOnly: true
        $ref: '#/definitions/DetectedNamedEntityValue'
  DetectedNamedEntityValue:
    type: object
    properties:
      raw:
        type: string
        description: The raw value of the detected named entity.
        readOnly: true
      resolved:
        type: string
        description: The resolved value of the detected named entity.
        readOnly: true
  IntentFeedback:
    type: object
    properties:
      name:
        type: string
        description: The name of the detected intent.
        readOnly: true
      probability:
        type: number
        format: double
        description: The probability of the detected intent.
        readOnly: true
      entities:
        type: array
        description: The collection of named entities detected.
        readOnly: true
        items:
          $ref: '#/definitions/DetectedNamedEntity'
      assessment:
        type: string
        description: The assessment on the detection for feedback text.
        enum:
          - Incorrect
          - Correct
          - Unknown
          - Disabled
  NluFeedbackResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      text:
        type: string
        description: The feedback text.
      intents:
        type: array
        description: Detected intent of the utterance
        items:
          $ref: '#/definitions/IntentFeedback'
      version:
        description: The domain version of the feedback.
        readOnly: true
        $ref: '#/definitions/NluDomainVersion'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date when the feedback was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      language:
        type: string
        description: >-
          The language of the version to which feedback is linked, e.g. en-us,
          de-de
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  NluFeedbackRequest:
    type: object
    required:
      - intents
      - text
      - versionId
    properties:
      text:
        type: string
        description: The feedback text.
      intents:
        type: array
        description: Detected intent of the utterance
        items:
          $ref: '#/definitions/IntentFeedback'
      versionId:
        type: string
        description: The domain version ID of the feedback.
      language:
        type: string
        description: >-
          The language of the version to which feedback is linked, e.g. en-us,
          de-de
  NluFeedbackListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/NluFeedbackResponse'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  Draft:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: Draft name
      miner:
        description: Miner to which the draft belongs.
        readOnly: true
        $ref: '#/definitions/Miner'
      intents:
        type: array
        description: Draft intent object.
        readOnly: true
        items:
          $ref: '#/definitions/DraftIntents'
      topics:
        type: array
        description: Draft topic object.
        readOnly: true
        items:
          $ref: '#/definitions/DraftTopics'
      dateCreated:
        type: string
        format: date-time
        example: '2020-05-20T23:56:07.268'
        description: >-
          Date when the draft was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        example: '2020-05-20T23:56:07.268'
        description: >-
          Date when the draft was updated. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DraftIntents:
    type: object
    required:
      - id
      - name
      - utterances
    properties:
      id:
        type: string
        description: Id for an intent.
      name:
        type: string
        description: Name/Label for an intent.
      utterances:
        type: array
        description: The utterances that are extracted for an Intent.
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DraftTopics:
    type: object
    required:
      - id
      - phrases
    properties:
      id:
        type: string
        description: Id for a topic.
      name:
        type: string
        description: Topic name.
      miner:
        description: The miner to which the topic belongs.
        readOnly: true
        $ref: '#/definitions/Miner'
      conversationCount:
        type: integer
        format: int32
        description: Number of conversations where a topic has occurred.
        readOnly: true
      conversationPercent:
        type: number
        format: float
        description: Percentage of conversations where a topic has occurred.
        readOnly: true
      utteranceCount:
        type: integer
        format: int32
        description: Number of unique utterances where a topic has occurred.
        readOnly: true
      phraseCount:
        type: integer
        format: int32
        description: Number of unique phrases (sub-utterances) where a topic has occurred.
        readOnly: true
      phrases:
        type: array
        description: The phrases that are extracted for a topic.
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Miner:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: Chat Corpus Name.
      language:
        type: string
        description: Language Localization code.
        enum:
          - en-us
          - en-gb
          - en-au
          - en-in
          - en-za
          - es-us
          - es-es
          - fr-fr
          - fr-ca
          - de-de
          - pt-pt
          - pt-br
      minerType:
        type: string
        description: Type of the miner, intent or topic.
        enum:
          - Intent
          - Topic
      dateCreated:
        type: string
        format: date-time
        example: '2020-04-29T17:12:06.613'
        description: >-
          Date when the miner was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      status:
        type: string
        description: Status of the miner.
        readOnly: true
        enum:
          - NotStarted
          - FetchingConversationIds
          - ConversationIdsFetched
          - ConversationIdsFetchError
          - FetchingConversations
          - ConversationsFetched
          - ConversationsFetchError
          - Queued
          - QueuingError
          - MiningStarted
          - MaskingUtterances
          - MaskingError
          - ComputingAnalytics
          - ComputingAnalyticsError
          - MiningCompleted
          - MiningError
          - ModelValidationError
          - Deleted
      conversationsDateRangeStart:
        type: string
        format: date
        example: '2019-06-20'
        description: >-
          Date from which the conversations need to be taken for mining. Dates
          are represented as an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      conversationsDateRangeEnd:
        type: string
        format: date
        example: '2019-12-20'
        description: >-
          Date till which the conversations need to be taken for mining. Dates
          are represented as an ISO-8601 string. For example: yyyy-MM-dd
        readOnly: true
      dateCompleted:
        type: string
        format: date-time
        example: '2020-05-20T23:56:07.268'
        description: >-
          Date when the mining process was completed. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      message:
        type: string
        description: Mining message if present.
        readOnly: true
      errorInfo:
        description: Error Information
        readOnly: true
        $ref: '#/definitions/ErrorInfo'
      warningInfo:
        description: Warning Information
        readOnly: true
        $ref: '#/definitions/ErrorInfo'
      conversationDataUploaded:
        type: boolean
        description: Flag to indicate whether data file to be mined was uploaded.
        readOnly: true
      mediaType:
        type: string
        description: Media type for filtering conversations.
        readOnly: true
        enum:
          - Chat
          - Call
          - Message
      participantType:
        type: string
        description: Type of the participant, either agent, customer or both.
        readOnly: true
        enum:
          - Customer
          - Agent
          - Both
      queueIds:
        type: array
        description: List of queue IDs for filtering conversations.
        readOnly: true
        items:
          type: string
      dateTriggered:
        type: string
        format: date-time
        example: '2020-04-30T23:56:07.268'
        description: >-
          Date when the miner started execution. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        example: '2020-04-30T23:56:07.268'
        description: >-
          Date when the miner was last modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      latestDraftVersion:
        description: Latest draft details of the miner.
        readOnly: true
        $ref: '#/definitions/Draft'
      conversationsFetchedCount:
        type: integer
        format: int32
        description: Number of conversations/transcripts fetched.
        readOnly: true
      conversationsValidCount:
        type: integer
        format: int32
        description: >-
          Number of conversations/recordings/transcripts that were found valid
          for mining purposes.
        readOnly: true
      getminedItemCount:
        type: integer
        format: int32
        description: Number of intents or topics based on the miner type.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DraftRequest:
    type: object
    properties:
      intents:
        type: array
        description: Draft intent object.
        items:
          $ref: '#/definitions/DraftIntents'
      topics:
        type: array
        description: Draft topic object.
        items:
          $ref: '#/definitions/DraftTopicRequest'
  DraftTopicRequest:
    type: object
    required:
      - id
      - name
      - phrases
    properties:
      id:
        type: string
        description: Id for a topic.
      name:
        type: string
        description: Name/Label for a topic.
      phrases:
        type: array
        description: The phrases that are extracted for a topic.
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DraftListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Draft'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  MinerIntent:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        example: pay bill.
        description: Intent name.
      miner:
        description: The miner to which the intent belongs.
        $ref: '#/definitions/Miner'
      utterances:
        type: array
        description: The utterances that are extracted for an Intent.
        items:
          $ref: '#/definitions/Utterance'
      analyticVolumePercent:
        type: number
        format: double
        example: 21.5
        description: Percentage of conversations belonging to the intent.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Utterance:
    type: object
    properties:
      utteranceText:
        type: string
        example: I want to pay bill.
        description: Utterance text
  MinedIntentsListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/MinerIntent'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  MinerExecuteRequest:
    type: object
    properties:
      dateStart:
        type: string
        format: date
        example: '2020-04-01'
        description: >-
          Start date for the date range to mine. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      dateEnd:
        type: string
        format: date
        example: '2020-04-01'
        description: >-
          End date for the date range to mine. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      uploadKey:
        type: string
        example: intent-miner/raw-utterances/imports/org_id/request_id.mine_id.json
        description: Location of input conversations.
      mediaType:
        type: string
        description: Media type for filtering conversations.
        enum:
          - Chat
          - Call
          - Message
      participantType:
        type: string
        description: Type of the participant, either agent, customer or both.
        enum:
          - Customer
          - Agent
          - Both
      queueIds:
        type: array
        example: >-
          [ "7fe8a4ce-7435-4c78-a83f-47c3943e53eb",
          "18c744bf-34d5-452a-b6d6-9af95628aa50"]
        description: List of queue IDs for filtering conversations.
        items:
          type: string
  MinerListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Miner'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  MinerTopic:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: Topic name.
      miner:
        description: The miner to which the topic belongs.
        readOnly: true
        $ref: '#/definitions/Miner'
      conversationCount:
        type: integer
        format: int32
        description: Number of conversations where a topic has occurred.
        readOnly: true
      conversationPercent:
        type: number
        format: float
        description: Percentage of conversations where a topic has occurred.
        readOnly: true
      utteranceCount:
        type: integer
        format: int32
        description: Number of unique utterances where a topic has occurred.
        readOnly: true
      phraseCount:
        type: integer
        format: int32
        description: Number of unique phrases (sub-utterances) where a topic has occurred.
        readOnly: true
      phrases:
        type: array
        description: Phrases associated with a topic.
        items:
          $ref: '#/definitions/TopicPhrase'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TopicPhrase:
    type: object
    properties:
      id:
        type: string
      text:
        type: string
      utteranceCount:
        type: integer
        format: int32
  MinerTopicsListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/MinerTopic'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  MinerTopicPhrase:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: Phrase name.
      topic:
        description: Topic associated with a phrase.
        $ref: '#/definitions/MinerTopic'
      utterances:
        type: array
        description: List of utterances related to a phrase.
        items:
          $ref: '#/definitions/Utterance'
      utteranceCount:
        type: integer
        format: int32
        description: Number of utterances belonging to a phrase
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  NluConfusionMatrixColumn:
    type: object
    required:
      - name
      - value
    properties:
      name:
        type: string
        description: The name of the intent for the column.
      value:
        type: number
        format: float
        description: The confusion value between the intents
  NluConfusionMatrixRow:
    type: object
    required:
      - columns
      - name
    properties:
      name:
        type: string
        description: The name of the intent for the row.
      columns:
        type: array
        description: The columns of confusion matrix for the intent
        items:
          $ref: '#/definitions/NluConfusionMatrixColumn'
  NluDomainVersionQualityReport:
    type: object
    required:
      - confusionMatrix
      - summary
      - version
    properties:
      version:
        description: The domain and version details of the quality report
        $ref: '#/definitions/NluDomainVersion'
      confusionMatrix:
        type: array
        description: The confusion matrix for the Domain Version
        items:
          $ref: '#/definitions/NluConfusionMatrixRow'
      summary:
        description: The quality report summary for the Domain Version
        $ref: '#/definitions/NluQualityReportSummary'
  NluQualityReportSummary:
    type: object
    required:
      - metrics
    properties:
      metrics:
        type: array
        description: The list of metrics in the summary
        items:
          $ref: '#/definitions/NluQualityReportSummaryMetric'
  NluQualityReportSummaryMetric:
    type: object
    required:
      - name
      - value
    properties:
      name:
        type: string
        description: The name of the metric. e.g. recall, f1_score
      value:
        type: number
        format: float
        description: The value of the metric
  NluDomainVersionTrainingResponse:
    type: object
    properties:
      message:
        type: string
        description: A message indicating result of the action.
        readOnly: true
      version:
        $ref: '#/definitions/NluDomainVersion'
  DetectedDialogAct:
    type: object
    properties:
      name:
        type: string
        description: The name of the detected dialog act.
        readOnly: true
      probability:
        type: number
        format: double
        description: The probability of the detected dialog act.
        readOnly: true
  DetectedIntent:
    type: object
    properties:
      name:
        type: string
        description: The name of the detected intent.
        readOnly: true
      probability:
        type: number
        format: double
        description: The probability of the detected intent.
        readOnly: true
      entities:
        type: array
        description: The collection of named entities detected.
        readOnly: true
        items:
          $ref: '#/definitions/DetectedNamedEntity'
  NluDetectionInput:
    type: object
    required:
      - text
    properties:
      text:
        type: string
        description: The text to perform NLU detection on.
      language:
        type: string
        description: >-
          Language of the version for multilingual detection, e.g. `en-us`,
          `de-de`
  NluDetectionOutput:
    type: object
    properties:
      intents:
        type: array
        description: The detected intents.
        readOnly: true
        items:
          $ref: '#/definitions/DetectedIntent'
      dialogActs:
        type: array
        description: The detected dialog acts.
        readOnly: true
        items:
          $ref: '#/definitions/DetectedDialogAct'
  NluDetectionResponse:
    type: object
    properties:
      version:
        description: The NLU domain version which performed the detection.
        readOnly: true
        $ref: '#/definitions/NluDomainVersion'
      output:
        $ref: '#/definitions/NluDetectionOutput'
      input:
        $ref: '#/definitions/NluDetectionInput'
  ContextEntity:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: The name of the entity.
  ContextIntent:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: The name of the intent.
  NluDetectionContext:
    type: object
    properties:
      intent:
        description: Restrict detection to this intent.
        $ref: '#/definitions/ContextIntent'
      entity:
        description: Use this entity to restrict detection.
        $ref: '#/definitions/ContextEntity'
  NluDetectionRequest:
    type: object
    required:
      - input
    properties:
      input:
        description: The input subject to NLU detection.
        $ref: '#/definitions/NluDetectionInput'
      context:
        description: The context for the input to NLU detection.
        $ref: '#/definitions/NluDetectionContext'
  NluDomainVersionListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/NluDomainVersion'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  AddressableLicenseDefinition:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LicenseDefinition:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      description:
        type: string
      permissions:
        $ref: '#/definitions/Permissions'
      prerequisites:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/AddressableLicenseDefinition'
      comprises:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/LicenseDefinition'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Permissions:
    type: object
    required:
      - ids
    properties:
      ids:
        type: array
        description: List of permission ids.
        items:
          type: string
  LicenseOrgToggle:
    type: object
    properties:
      featureName:
        type: string
      enabled:
        type: boolean
  LicenseUpdateStatus:
    type: object
    properties:
      userId:
        type: string
      licenseId:
        type: string
      result:
        type: string
  LicenseAssignmentRequest:
    type: object
    required:
      - licenseId
      - userIdsAdd
      - userIdsRemove
    properties:
      licenseId:
        type: string
        description: The id of the license to assign/unassign.
      userIdsAdd:
        type: array
        description: The ids of users to assign this license to.
        uniqueItems: true
        items:
          type: string
      userIdsRemove:
        type: array
        description: The ids of users to unassign this license from.
        uniqueItems: true
        items:
          type: string
  LicenseBatchAssignmentRequest:
    type: object
    required:
      - assignments
    properties:
      assignments:
        type: array
        description: The list of license assignment updates to make.
        items:
          $ref: '#/definitions/LicenseAssignmentRequest'
  LicenseUser:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      licenses:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/LicenseDefinition'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UserLicenses:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      licenses:
        type: array
        uniqueItems: true
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UserLicensesEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UserLicenses'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      pageCount:
        type: integer
        format: int32
  ApprovalNamespace:
    type: object
    properties:
      namespace:
        type: string
        description: The namespace of the associated approvers.
        readOnly: true
        enum:
          - agent.assistant
          - analytics.alerting
          - analytics
          - analytics.realtime
          - analytics.reporting.settings
          - architect
          - audiohook
          - audit
          - auth.api
          - authorization
          - automation.testing
          - bots
          - bots.voice
          - callback
          - cobrowse
          - content.management
          - conversation
          - dataactions
          - datatables
          - directory
          - email
          - event.orchestration
          - external.contacts
          - gcv
          - gdpr
          - groups
          - historical.adherence
          - infrastructureascode
          - integrations
          - intent.miner
          - journey
          - knowledge
          - language.understanding
          - limit.registry
          - marketplace
          - messaging
          - notifications
          - onboarding
          - outbound
          - platform.api
          - predictive.routing
          - presence
          - quality
          - recording
          - response.management
          - routing
          - scim
          - search
          - secondary.automation.testing
          - skills
          - speech.and.text.analytics
          - speech.integration
          - supportability
          - task.management
          - telephony.configuration
          - usage
          - users
          - web.deployments
          - web.messaging
          - webchat
          - webhooks
          - workforce.management
      status:
        type: string
        description: The current namespace approval status.
        readOnly: true
        enum:
          - Approved
          - Rejected
          - Rollback
          - Pending
          - Open
          - SecondaryApprovalNamespacesAdded
          - ReviewerApproved
          - ReviewerRejected
          - ReviewerRollback
          - ImplementingChange
          - ChangeImplemented
          - ImplementingRollback
          - RollbackImplemented
      type:
        type: string
        description: The type of namespace approval.
        readOnly: true
        enum:
          - Primary
          - Secondary
  LimitChangeRequestDetails:
    type: object
    required:
      - description
      - key
      - namespace
      - requestedValue
      - supportCaseUrl
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      key:
        type: string
        description: >-
          Limit key to be overridden (see
          https://developer.mypurecloud.com/api/rest/v2/organization/limits.html#available_limits)
      namespace:
        type: string
        description: >-
          Namespace the key belongs to (see
          https://developer.mypurecloud.com/api/rest/v2/organization/limits.html#available_limits)
        enum:
          - agent.assistant
          - analytics.alerting
          - analytics
          - analytics.realtime
          - analytics.reporting.settings
          - architect
          - audiohook
          - audit
          - auth.api
          - authorization
          - automation.testing
          - bots
          - bots.voice
          - callback
          - cobrowse
          - content.management
          - conversation
          - dataactions
          - datatables
          - directory
          - email
          - event.orchestration
          - external.contacts
          - gcv
          - gdpr
          - groups
          - historical.adherence
          - infrastructureascode
          - integrations
          - intent.miner
          - journey
          - knowledge
          - language.understanding
          - limit.registry
          - marketplace
          - messaging
          - notifications
          - onboarding
          - outbound
          - platform.api
          - predictive.routing
          - presence
          - quality
          - recording
          - response.management
          - routing
          - scim
          - search
          - secondary.automation.testing
          - skills
          - speech.and.text.analytics
          - speech.integration
          - supportability
          - task.management
          - telephony.configuration
          - usage
          - users
          - web.deployments
          - web.messaging
          - webchat
          - webhooks
          - workforce.management
      requestedValue:
        type: number
        format: double
        description: Requested limit value for a given key
      description:
        type: string
        description: Description of the need for the limit change request
      supportCaseUrl:
        type: string
        description: The support case url created by Care
      status:
        type: string
        description: Current status of the limit change request
        readOnly: true
        enum:
          - Approved
          - Rejected
          - Rollback
          - Pending
          - Open
          - SecondaryApprovalNamespacesAdded
          - ReviewerApproved
          - ReviewerRejected
          - ReviewerRollback
          - ImplementingChange
          - ChangeImplemented
          - ImplementingRollback
          - RollbackImplemented
      currentValue:
        type: number
        format: double
        description: Current limit value for a given key
        readOnly: true
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date of the limit change request creation. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      statusHistory:
        type: array
        description: List of statuses that a limit change request has gone through
        readOnly: true
        items:
          $ref: '#/definitions/StatusChange'
      dateCompleted:
        type: string
        format: date-time
        description: >-
          The date of the limit change request completion (ChangeImplemented,
          Rejected, or RollbackImplemented. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      rejectReason:
        type: string
        description: The reason for rejecting the limit override request
        readOnly: true
        enum:
          - AlternativeExists
          - IncreaseNotRequired
          - PlatformMisuse
          - PlatformStability
          - OtherReason
      approvalNamespaces:
        type: array
        description: The approval breakdown for this override request.
        readOnly: true
        items:
          $ref: '#/definitions/ApprovalNamespace'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  StatusChange:
    type: object
    properties:
      dateStatusChanged:
        type: string
        format: date-time
        description: >-
          The date of this status change. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      status:
        type: string
        description: The status the change request transitioned to
        readOnly: true
        enum:
          - Approved
          - Rejected
          - Rollback
          - Pending
          - Open
          - SecondaryApprovalNamespacesAdded
          - ReviewerApproved
          - ReviewerRejected
          - ReviewerRollback
          - ImplementingChange
          - ChangeImplemented
          - ImplementingRollback
          - RollbackImplemented
      previousStatus:
        type: string
        description: The status the change request transitioned from
        readOnly: true
        enum:
          - Approved
          - Rejected
          - Rollback
          - Pending
          - Open
          - SecondaryApprovalNamespacesAdded
          - ReviewerApproved
          - ReviewerRejected
          - ReviewerRollback
          - ImplementingChange
          - ChangeImplemented
          - ImplementingRollback
          - RollbackImplemented
      namespace:
        type: string
        description: The namespace for the status change
        readOnly: true
        enum:
          - agent.assistant
          - analytics.alerting
          - analytics
          - analytics.realtime
          - analytics.reporting.settings
          - architect
          - audiohook
          - audit
          - auth.api
          - authorization
          - automation.testing
          - bots
          - bots.voice
          - callback
          - cobrowse
          - content.management
          - conversation
          - dataactions
          - datatables
          - directory
          - email
          - event.orchestration
          - external.contacts
          - gcv
          - gdpr
          - groups
          - historical.adherence
          - infrastructureascode
          - integrations
          - intent.miner
          - journey
          - knowledge
          - language.understanding
          - limit.registry
          - marketplace
          - messaging
          - notifications
          - onboarding
          - outbound
          - platform.api
          - predictive.routing
          - presence
          - quality
          - recording
          - response.management
          - routing
          - scim
          - search
          - secondary.automation.testing
          - skills
          - speech.and.text.analytics
          - speech.integration
          - supportability
          - task.management
          - telephony.configuration
          - usage
          - users
          - web.deployments
          - web.messaging
          - webchat
          - webhooks
          - workforce.management
      message:
        type: string
        description: A short message describing the status change
        readOnly: true
      rejectReason:
        type: string
        description: The reason for rejecting the limit override request
        readOnly: true
        enum:
          - AlternativeExists
          - IncreaseNotRequired
          - PlatformMisuse
          - PlatformStability
          - OtherReason
  LimitChangeRequestsEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/LimitChangeRequestDetails'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  PagedNamespaceListing:
    type: object
  LimitsEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Limit'
  LogCaptureUserConfiguration:
    type: object
    required:
      - dateExpired
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      dateExpired:
        type: string
        format: date-time
        description: >-
          Indicates when log capture will be turned off for the user. (Must be
          within 24 hours). Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ButtonComponent:
    type: object
    properties:
      title:
        type: string
        description: Text to show inside the button.
      actions:
        description: The button actions (Deprecated).
        $ref: '#/definitions/ContentActions'
    description: Structured template button object.
  ContentActions:
    type: object
    properties:
      url:
        type: string
        description: A URL of a web page to direct the user to.
      urlTarget:
        type: string
        description: >-
          The target window in which to open the URL. If empty will open a blank
          page or tab.
      textback:
        type: string
        description: >-
          Text to be returned as the payload from a ButtonResponse when a button
          is clicked. The textback and title are a combination which will have
          to be unique across each card and carousel in order to determine which
          button was clicked in that card or carousel.
    description: >-
      User actions available on the content. All actions are optional and all
      actions are executed simultaneously.
  ContentAttachment:
    type: object
    required:
      - mediaType
    properties:
      id:
        type: string
        description: Provider specific ID for attachment. For example, a LINE sticker ID.
      mediaType:
        type: string
        description: The type of attachment this instance represents.
        enum:
          - Image
          - Video
          - Audio
          - File
          - Link
      url:
        type: string
        description: URL of the attachment.
      mime:
        type: string
        description: >-
          Attachment mime type
          (https://www.iana.org/assignments/media-types/media-types.xhtml).
      text:
        type: string
        description: Text associated with attachment such as an image caption.
      sha256:
        type: string
        description: Secure hash of the attachment content.
      filename:
        type: string
        description: Suggested file name for attachment.
    description: Attachment object.
  ContentButtonResponse:
    type: object
    required:
      - payload
      - text
      - type
    properties:
      id:
        type: string
        description: An ID assigned to the button response (Deprecated).
      type:
        type: string
        description: Describes the button that resulted in the Button Response.
        enum:
          - Button
          - QuickReply
      text:
        type: string
        description: The response text from the button click.
      payload:
        type: string
        description: The response payload associated with the clicked button.
    description: >-
      Button response object representing the click of a structured message
      button, such as a quick reply.
  ContentCard:
    type: object
    required:
      - actions
      - title
    properties:
      title:
        type: string
        description: Text to show in the title.
      description:
        type: string
        description: Text to show in the description.
      image:
        type: string
        description: URL of an image.
      video:
        type: string
        description: URL of a video.
      defaultAction:
        description: The default button action.
        $ref: '#/definitions/ContentCardAction'
      actions:
        type: array
        description: An array of action objects.
        items:
          $ref: '#/definitions/ContentCardAction'
    description: Card content object.
  ContentCardAction:
    type: object
    properties:
      type:
        type: string
        description: Describes the type of action.
        enum:
          - Link
          - Postback
      text:
        type: string
        description: The response text from the button click.
      payload:
        type: string
        description: >-
          Text to be returned as the payload from a ButtonResponse when a button
          is clicked. The payload and text are a combination which will have to
          be unique across each card and carousel in order to determine which
          button was clicked in that card or carousel.
      url:
        type: string
        description: A URL of a web page to direct the user to.
    description: A card action that a user can take.
  ContentCarousel:
    type: object
    required:
      - cards
    properties:
      cards:
        type: array
        description: An array of card objects.
        items:
          $ref: '#/definitions/ContentCard'
    description: Carousel content object.
  ContentGeneric:
    type: object
    properties:
      title:
        type: string
        description: Text to show in the title.
      description:
        type: string
        description: Text to show in the description.
      image:
        type: string
        description: URL of an image.
      video:
        type: string
        description: URL of a video.
      actions:
        description: Actions to be taken (Deprecated).
        $ref: '#/definitions/ContentActions'
      components:
        type: array
        description: An array of component objects.
        items:
          $ref: '#/definitions/ButtonComponent'
    description: Deprecated, should use Card.
  ContentList:
    type: object
    properties:
      id:
        type: string
        description: A unique ID assigned to this rich message content.
      listType:
        type: string
        description: The type of list this instance represents.
        enum:
          - Selection
          - Vertical
      title:
        type: string
        description: Text to show in the title.
      description:
        type: string
        description: Text to show in the description.
      submitLabel:
        type: string
        description: Label for Submit button.
      actions:
        description: The list actions (Deprecated).
        $ref: '#/definitions/ContentActions'
      components:
        type: array
        description: An array of component objects.
        items:
          $ref: '#/definitions/ListItemComponent'
    description: List content object.
  ContentLocation:
    type: object
    properties:
      url:
        type: string
        description: URL of the Location.
      address:
        type: string
        description: Location postal address.
      text:
        type: string
        description: Location name.
      latitude:
        type: number
        format: double
        description: Latitude of the location.
      longitude:
        type: number
        format: double
        description: Longitude of the location.
    description: Location object.
  ContentNotificationTemplate:
    type: object
    required:
      - body
    properties:
      id:
        type: string
        description: The messaging provider template ID. For WhatsApp, 'namespace@name'.
      language:
        type: string
        description: Template language.
      header:
        description: The template header.
        $ref: '#/definitions/NotificationTemplateHeader'
      body:
        description: The template body.
        $ref: '#/definitions/NotificationTemplateBody'
      footer:
        description: The template footer.
        $ref: '#/definitions/NotificationTemplateFooter'
    description: Template notification object.
  ContentPostback:
    type: object
    required:
      - payload
    properties:
      id:
        type: string
        description: An ID assigned to the button response.
      text:
        type: string
        description: The response text from the button click.
      payload:
        type: string
        description: The response payload associated with the clicked button.
    description: >-
      Postback response object representing the click of a rich media button
      (Deprecated).
  ContentQuickReply:
    type: object
    required:
      - payload
      - text
    properties:
      id:
        type: string
        description: A unique ID assigned to the quick reply (Deprecated).
      text:
        type: string
        description: >-
          Text to show inside the quick reply. This is also used as the response
          text after clicking on the quick reply.
      payload:
        type: string
        description: >-
          Content of the payload included in the quick reply response. Could be
          an ID identifying the quick reply response.
      image:
        type: string
        description: URL of an image associated with the quick reply.
      action:
        type: string
        description: >-
          Specifies the type of action that is triggered upon clicking the quick
          reply.
        enum:
          - Message
    description: Quick reply object.
  ContentQuickReplyV2:
    type: object
    required:
      - actions
      - title
    properties:
      title:
        type: string
        description: Text to show as the title of the quick reply.
      actions:
        type: array
        description: An array of quick reply objects.
        items:
          $ref: '#/definitions/ContentQuickReply'
    description: Quick reply object V2.
  ContentReaction:
    type: object
    required:
      - count
      - reactionType
    properties:
      reactionType:
        type: string
        description: Type of reaction.
        enum:
          - Like
          - Love
          - Wow
          - Haha
          - Sad
          - Angry
          - Thankful
          - Pride
          - Care
      count:
        type: integer
        format: int32
        description: Number of users that reacted this way to the message.
    description: User reaction to public message.
  ContentStory:
    type: object
    required:
      - type
      - url
    properties:
      type:
        type: string
        description: Type of ephemeral story attachment.
        enum:
          - Mention
          - Reply
      url:
        type: string
        description: URL to the ephemeral story.
      replyToId:
        type: string
        description: ID of the ephemeral story being replied to.
    description: An ephemeral story.
  ContentText:
    type: object
    required:
      - body
    properties:
      type:
        type: string
        description: Type of text content.
        enum:
          - Text
      body:
        type: string
        description: Text to be shown for this content element.
    description: Message content element containing text only.
  ListItemComponent:
    type: object
    properties:
      id:
        type: string
        description: An ID assigned to this list item.
      rmid:
        type: string
        description: An ID of the rich message instance.
      type:
        type: string
        description: The type of list item to render.
        enum:
          - ListItem
          - ListItemBig
      image:
        type: string
        description: URL of an image.
      title:
        type: string
        description: The main headline of the list item.
      description:
        type: string
        description: Text to show in the list item description.
      actions:
        description: The list item actions (Deprecated).
        $ref: '#/definitions/ContentActions'
    description: An entry in a List template.
  MessageContent:
    type: object
    required:
      - contentType
    properties:
      contentType:
        type: string
        description: Type of this content element.
        enum:
          - Attachment
          - Location
          - QuickReply
          - Notification
          - GenericTemplate
          - ListTemplate
          - Postback
          - Reactions
          - Mention
          - ButtonResponse
          - Story
          - Card
          - Carousel
          - Text
          - QuickReplyV2
      location:
        description: Location content.
        $ref: '#/definitions/ContentLocation'
      attachment:
        description: Attachment content.
        $ref: '#/definitions/ContentAttachment'
      quickReply:
        description: Quick reply content.
        $ref: '#/definitions/ContentQuickReply'
      buttonResponse:
        description: Button response content.
        $ref: '#/definitions/ContentButtonResponse'
      generic:
        description: Generic content (Deprecated).
        $ref: '#/definitions/ContentGeneric'
      list:
        description: List content (Deprecated).
        $ref: '#/definitions/ContentList'
      template:
        description: Template notification content.
        $ref: '#/definitions/ContentNotificationTemplate'
      reactions:
        type: array
        description: A set of reactions to a message.
        items:
          $ref: '#/definitions/ContentReaction'
      mention:
        description: Mention content.
        $ref: '#/definitions/MessagingRecipient'
      postback:
        description: Structured message postback (Deprecated).
        $ref: '#/definitions/ContentPostback'
      story:
        description: Ephemeral story content.
        $ref: '#/definitions/ContentStory'
      card:
        description: Card content
        $ref: '#/definitions/ContentCard'
      carousel:
        description: Carousel content
        $ref: '#/definitions/ContentCarousel'
      text:
        description: Text content.
        $ref: '#/definitions/ContentText'
      quickReplyV2:
        description: Quick reply V2 content.
        $ref: '#/definitions/ContentQuickReplyV2'
    description: >-
      Message content element. If contentType = "Attachment" only one item is
      allowed.
  MessagingRecipient:
    type: object
    required:
      - id
    properties:
      nickname:
        type: string
        description: Nickname or display name of the recipient.
        readOnly: true
      id:
        type: string
        description: The recipient ID specific to the provider.
      idType:
        type: string
        description: >-
          The recipient ID type. This is used to indicate the format used for
          the ID.
        enum:
          - Email
          - Phone
          - Opaque
      image:
        type: string
        description: URL of an image that represents the recipient.
        readOnly: true
      firstName:
        type: string
        description: First name of the recipient.
        readOnly: true
      lastName:
        type: string
        description: Last name of the recipient.
        readOnly: true
      email:
        type: string
        description: E-mail address of the recipient.
        readOnly: true
      additionalIds:
        type: array
        description: List of recipient additional identifiers
        items:
          $ref: '#/definitions/RecipientAdditionalIdentifier'
    description: Information about the recipient the message is sent to or received from.
  NotificationTemplateBody:
    type: object
    required:
      - parameters
    properties:
      text:
        type: string
        description: Body text. For WhatsApp, ignored.
      parameters:
        type: array
        description: Template parameters for placeholders in template.
        items:
          $ref: '#/definitions/NotificationTemplateParameter'
    description: Template body object.
  NotificationTemplateFooter:
    type: object
    properties:
      text:
        type: string
        description: Footer text. For WhatsApp, ignored.
    description: Template footer object.
  NotificationTemplateHeader:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Template header type.
        enum:
          - Text
          - Media
      text:
        type: string
        description: Header text. For WhatsApp, ignored.
      media:
        description: Media template header image.
        $ref: '#/definitions/ContentAttachment'
      parameters:
        type: array
        description: Template parameters for placeholders in template.
        items:
          $ref: '#/definitions/NotificationTemplateParameter'
    description: Template header object.
  NotificationTemplateParameter:
    type: object
    required:
      - text
    properties:
      name:
        type: string
        description: Parameter name.
      text:
        type: string
        description: Parameter text value.
    description: Template parameters for placeholders in template.
  RecipientAdditionalIdentifier:
    type: object
    required:
      - type
      - value
    properties:
      type:
        type: string
        description: Type of the Identifier
        readOnly: true
        enum:
          - Deployment
          - Subject
      value:
        type: string
        description: The Identifier value.
        readOnly: true
    description: Additional identifiers for describing messaging recipient.
  IpAddressRange:
    type: object
    properties:
      cidr:
        type: string
      service:
        type: string
        enum:
          - data-actions
          - smtp
          - audiohook
          - api
      region:
        type: string
  IpAddressRangeListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/IpAddressRange'
  GuestCategoryReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeGuestDocument:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      title:
        type: string
        description: Document title, having a limit of 500 words.
      visible:
        type: boolean
        description: >-
          Indicates if the knowledge document should be included in search
          results.
      alternatives:
        type: array
        description: >-
          List of alternate phrases related to the title which improves search
          results.
        items:
          $ref: '#/definitions/KnowledgeDocumentAlternative'
      state:
        type: string
        description: State of the document.
        enum:
          - Draft
          - Published
          - Archived
      dateCreated:
        type: string
        format: date-time
        description: >-
          Document creation date-time. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Document last modification date-time. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateImported:
        type: string
        format: date-time
        description: >-
          Document import date-time, or null if was not imported. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      lastPublishedVersionNumber:
        type: integer
        format: int32
        description: The last published version number of the document.
      datePublished:
        type: string
        format: date-time
        description: >-
          The date on which the document was last published. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: The user who created the document.
        readOnly: true
        $ref: '#/definitions/UserReference'
      modifiedBy:
        description: The user who modified the document.
        readOnly: true
        $ref: '#/definitions/UserReference'
      documentVersion:
        description: The version of the document.
        $ref: '#/definitions/AddressableEntityRef'
      variations:
        type: array
        description: Variations of the document.
        items:
          $ref: '#/definitions/KnowledgeGuestDocumentVariation'
      sessionId:
        type: string
        description: ID of the guest session.
        readOnly: true
      category:
        description: The reference to category associated with the document.
        readOnly: true
        $ref: '#/definitions/GuestCategoryReference'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeGuestDocumentVariation:
    type: object
    required:
      - contexts
    properties:
      id:
        type: string
        description: The globally unique identifier for the variation.
        readOnly: true
      body:
        description: The content for the variation.
        $ref: '#/definitions/DocumentBody'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The creation date-time for the document variation. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The last modification date-time for the document variation. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      documentVersion:
        description: The version of the document.
        $ref: '#/definitions/AddressableEntityRef'
      contexts:
        type: array
        description: The context values associated with the variation.
        items:
          $ref: '#/definitions/KnowledgeGuestDocumentVariationContext'
      document:
        description: The reference to document to which the variation is associated.
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeGuestDocumentVariationContext:
    type: object
    required:
      - context
      - values
    properties:
      context:
        description: The knowledge context associated with the variation.
        $ref: '#/definitions/AddressableEntityRef'
      values:
        type: array
        description: The list of knowledge context values associated with the variation.
        items:
          $ref: '#/definitions/AddressableEntityRef'
  KnowledgeGuestDocumentResponseListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/KnowledgeGuestDocument'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  GuestCategoryResponseListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/GuestResponseCategory'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
      sessionId:
        type: string
  GuestResponseCategory:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      description:
        type: string
      externalId:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      parentCategory:
        description: The reference to category to which this category belongs.
        readOnly: true
        $ref: '#/definitions/GuestCategoryReference'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  KnowledgeDocumentGuestSearch:
    type: object
    required:
      - query
    properties:
      query:
        type: string
        description: >-
          Query to search content in the knowledge base. Maximum of 30 records
          per query can be fetched.
        minLength: 3
        maxLength: 2147483647
      pageSize:
        type: integer
        format: int32
        description: Page size of the returned results.
      pageNumber:
        type: integer
        format: int32
        description: Page number of the returned results.
      searchId:
        type: string
        description: The globally unique identifier for the search.
        readOnly: true
      total:
        type: integer
        format: int32
        description: The total number of documents matching the query.
        readOnly: true
      pageCount:
        type: integer
        format: int32
        description: >-
          Number of pages returned in the result calculated according to the
          pageSize and the total
        readOnly: true
      queryType:
        type: string
        description: The type of the query that initiates the search.
        enum:
          - AutoSearch
          - ManualSearch
          - Suggestion
      sessionId:
        type: string
        description: Session ID of the search.
        readOnly: true
      results:
        type: array
        description: Documents that matched the search query.
        readOnly: true
        items:
          $ref: '#/definitions/KnowledgeDocumentGuestSearchResult'
  KnowledgeDocumentGuestSearchResult:
    type: object
    properties:
      confidence:
        type: number
        format: double
        description: >-
          The confidence associated with a document with respect to a search
          query.
      document:
        description: Document that matched the query.
        $ref: '#/definitions/KnowledgeGuestDocument'
  KnowledgeDocumentGuestSearchRequest:
    type: object
    required:
      - query
    properties:
      query:
        type: string
        description: >-
          Query to search content in the knowledge base. Maximum of 30 records
          per query can be fetched.
        minLength: 3
        maxLength: 2147483647
      pageSize:
        type: integer
        format: int32
        description: Page size of the returned results.
      pageNumber:
        type: integer
        format: int32
        description: Page number of the returned results.
      searchId:
        type: string
        description: The globally unique identifier for the search.
        readOnly: true
      total:
        type: integer
        format: int32
        description: The total number of documents matching the query.
        readOnly: true
      pageCount:
        type: integer
        format: int32
        description: >-
          Number of pages returned in the result calculated according to the
          pageSize and the total
        readOnly: true
      queryType:
        type: string
        description: The type of the query that initiates the search.
        enum:
          - AutoSearch
          - ManualSearch
          - Suggestion
      sessionId:
        type: string
        description: Session ID of the search.
        readOnly: true
      includeDraftDocuments:
        type: boolean
        description: >-
          Indicates whether the search results would also include draft
          documents.
  KnowledgeGuestDocumentSuggestion:
    type: object
    required:
      - query
    properties:
      query:
        type: string
        description: >-
          Query to get autocomplete suggestions for the matching knowledge
          documents.
      pageSize:
        type: integer
        format: int32
        description: Page size of the returned results.
      sessionId:
        type: string
        description: Session ID of the guest suggestions.
        readOnly: true
      results:
        type: array
        description: Suggestions matching the query.
        readOnly: true
        items:
          $ref: '#/definitions/KnowledgeGuestDocumentSuggestionResult'
  KnowledgeGuestDocumentSuggestionResult:
    type: object
    properties:
      matchedPhrase:
        type: string
        description: Matched phrase to the autocomplete suggestions query.
  KnowledgeGuestDocumentSuggestionRequest:
    type: object
    required:
      - query
    properties:
      query:
        type: string
        description: >-
          Query to get autocomplete suggestions for the matching knowledge
          documents.
      pageSize:
        type: integer
        format: int32
        description: Page size of the returned results.
      includeDraftDocuments:
        type: boolean
        description: >-
          Indicates whether the suggestion results would also include draft
          documents.
  KnowledgeGuestSession:
    type: object
    required:
      - app
      - customerId
    properties:
      id:
        type: string
        description: Session ID.
        readOnly: true
      app:
        description: The app where the session is started.
        $ref: '#/definitions/KnowledgeGuestSessionApp'
      customerId:
        type: string
        description: >-
          An arbitrary ID for the customer starting the session. Used to track
          multiple sessions started by the same customer.
      pageUrl:
        type: string
        description: URL of the page where the session is started.
      contexts:
        type: array
        description: The session contexts.
        items:
          $ref: '#/definitions/KnowledgeGuestSessionContext'
  KnowledgeGuestSessionApp:
    type: object
    required:
      - deploymentId
      - type
    properties:
      deploymentId:
        type: string
        description: App deployment ID.
      type:
        type: string
        description: App type.
        enum:
          - MessengerKnowledgeApp
          - SupportCenter
  KnowledgeGuestSessionContext:
    type: object
    required:
      - id
      - values
    properties:
      id:
        type: string
        description: The context id associated with the session.
      values:
        type: array
        description: The list of knowledge context values associated with the session.
        items:
          $ref: '#/definitions/Entity'
  DomainEntityListingSurveyForm:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/SurveyForm'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ScorableSurvey:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      surveyForm:
        description: Survey form used for this survey.
        $ref: '#/definitions/SurveyForm'
      status:
        type: string
        enum:
          - Pending
          - Sent
          - InProgress
          - Finished
          - OptOut
          - Error
          - Expired
      answers:
        $ref: '#/definitions/SurveyScoringSet'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SurveyForm:
    type: object
    required:
      - contextId
      - language
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The survey form name
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Last modified date. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      published:
        type: boolean
        description: Is this form published
      disabled:
        type: boolean
        description: Is this form disabled
      contextId:
        type: string
        description: Unique Id for all versions of this form
        readOnly: true
      language:
        type: string
        description: >-
          Language for survey viewer localization. Currently localized
          languages: da, de, en-US, es, fi, fr, it, ja, ko, nl, no, pl, pt-BR,
          sv, th, tr, zh-CH, zh-TW
      header:
        type: string
        description: Markdown text for the top of the form.
      footer:
        type: string
        description: Markdown text for the bottom of the form.
      questionGroups:
        type: array
        description: A list of question groups
        items:
          $ref: '#/definitions/SurveyQuestionGroup'
      publishedVersions:
        description: List of published version of this form
        readOnly: true
        $ref: '#/definitions/DomainEntityListingSurveyForm'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SurveyQuestion:
    type: object
    properties:
      id:
        type: string
      text:
        type: string
      helpText:
        type: string
      type:
        type: string
        enum:
          - multipleChoiceQuestion
          - freeTextQuestion
          - npsQuestion
          - readOnlyTextBlockQuestion
      naEnabled:
        type: boolean
      visibilityCondition:
        $ref: '#/definitions/VisibilityCondition'
      answerOptions:
        type: array
        description: >-
          Options from which to choose an answer for this question. Only used by
          Multiple Choice type questions.
        items:
          $ref: '#/definitions/AnswerOption'
      maxResponseCharacters:
        type: integer
        format: int32
        description: >-
          How many characters are allowed in the text response to this question.
          Used by NPS and Free Text question types.
      explanationPrompt:
        type: string
        description: >-
          Prompt for details explaining the chosen NPS score. Used by NPS
          questions.
  SurveyQuestionGroup:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
      naEnabled:
        type: boolean
      questions:
        type: array
        items:
          $ref: '#/definitions/SurveyQuestion'
      visibilityCondition:
        $ref: '#/definitions/VisibilityCondition'
  SurveyQuestionGroupScore:
    type: object
    properties:
      questionGroupId:
        type: string
      totalScore:
        type: number
        format: float
        description: Score of all questions in the group
      maxTotalScore:
        type: number
        format: float
        description: Maximum possible score of all questions in the group
      markedNA:
        type: boolean
      questionScores:
        type: array
        items:
          $ref: '#/definitions/SurveyQuestionScore'
  SurveyQuestionScore:
    type: object
    properties:
      questionId:
        type: string
      answerId:
        type: string
      score:
        type: integer
        format: int32
        description: Unweighted score of the question
      markedNA:
        type: boolean
      assistedAnswerId:
        type: string
        description: AnswerId found with evaluation assistance conditions
      npsScore:
        type: integer
        format: int32
      npsTextAnswer:
        type: string
      freeTextAnswer:
        type: string
  SurveyScoringSet:
    type: object
    properties:
      totalScore:
        type: number
        format: float
      npsScore:
        type: integer
        format: int32
      questionGroupScores:
        type: array
        items:
          $ref: '#/definitions/SurveyQuestionGroupScore'
  DocumentationResult:
    type: object
    required:
      - id
    properties:
      id:
        type: integer
        format: int32
        description: The globally unique identifier for the object.
      categories:
        type: array
        description: >-
          The category of the documentation entity. Will be returned in
          responses for certain entities.
        items:
          type: integer
          format: int32
      description:
        type: string
        description: >-
          The description of the documentation entity. Will be returned in
          responses for certain entities.
      content:
        type: string
        description: >-
          The text or html content for the documentation entity. Will be
          returned in responses for certain entities.
      excerpt:
        type: string
        description: >-
          The excerpt of the documentation entity. Will be returned in responses
          for certain entities.
      link:
        type: string
        description: >-
          URL link for the documentation entity. Will be returned in responses
          for certain entities.
      modified:
        type: string
        format: date-time
        description: >-
          The modified date for the documentation entity. Will be returned in
          responses for certain entities. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      name:
        type: string
        description: >-
          The name of the documentation entity. Will be returned in responses
          for certain entities.
      service:
        type: array
        description: >-
          The service of the documentation entity. Will be returned in responses
          for certain entities.
        items:
          type: integer
          format: int32
      slug:
        type: string
        description: >-
          The slug of the documentation entity. Will be returned in responses
          for certain entities.
      title:
        type: string
        description: >-
          The title of the documentation entity. Will be returned in responses
          for certain entities.
      get_type:
        type: string
        description: The search type. Will be returned in responses for certain entities.
      facet_feature:
        type: array
        description: >-
          The facet feature of the documentation entity. Will be returned in
          responses for certain entities.
        items:
          type: integer
          format: int32
      facet_role:
        type: array
        description: >-
          The facet role of the documentation entity. Will be returned in
          responses for certain entities.
        items:
          type: integer
          format: int32
      facet_service:
        type: array
        description: >-
          The facet service of the documentation entity. Will be returned in
          responses for certain entities.
        items:
          type: integer
          format: int32
      faq_categories:
        type: array
        description: >-
          The faq categories of the documentation entity. Will be returned in
          responses for certain entities.
        items:
          type: integer
          format: int32
      releasenote_category:
        type: array
        description: >-
          The releasenote category of the documentation entity. Will be returned
          in responses for certain entities.
        items:
          type: integer
          format: int32
      releasenote_tag:
        type: array
        description: >-
          The releasenote tag of the documentation entity. Will be returned in
          responses for certain entities.
        items:
          type: integer
          format: int32
      service-area:
        type: array
        description: >-
          The service area of the documentation entity. Will be returned in
          responses for certain entities.
        items:
          type: integer
          format: int32
      video_categories:
        type: array
        description: >-
          The video categories of the documentation entity. Will be returned in
          responses for certain entities.
        items:
          type: integer
          format: int32
  DocumentationSearchResponse:
    type: object
    required:
      - pageCount
      - pageNumber
      - pageSize
      - results
      - total
      - types
    properties:
      total:
        type: integer
        format: int64
        description: The total number of results found
      pageCount:
        type: integer
        format: int32
        description: The total number of pages
      pageSize:
        type: integer
        format: int32
        description: The current page size
      pageNumber:
        type: integer
        format: int32
        description: The current page number
      previousPage:
        type: string
        description: Q64 value for the previous page of results
      currentPage:
        type: string
        description: Q64 value for the current page of results
      nextPage:
        type: string
        description: Q64 value for the next page of results
      types:
        type: array
        description: Resource types the search was performed against
        items:
          type: string
      results:
        type: array
        description: Search results
        items:
          $ref: '#/definitions/DocumentationResult'
  DocumentationSearchCriteria:
    type: object
    required:
      - type
    properties:
      endValue:
        type: string
        description: The end value of the range. This field is used for range search types.
      values:
        type: array
        description: A list of values for the search to match against
        items:
          type: string
      startValue:
        type: string
        description: >-
          The start value of the range. This field is used for range search
          types.
      value:
        type: string
        description: A value for the search to match against
      operator:
        type: string
        description: How to apply this search criteria against other criteria
        enum:
          - AND
          - OR
          - NOT
      group:
        type: array
        description: Groups multiple conditions
        items:
          $ref: '#/definitions/DocumentationSearchCriteria'
      dateFormat:
        type: string
        description: >-
          Set date format for criteria values when using date range search
          type.  Supports Java date format syntax, example
          yyyy-MM-dd'T'HH:mm:ss.SSSX.
      type:
        type: string
        description: Search Type
        enum:
          - EXACT
          - STARTS_WITH
          - CONTAINS
          - TERM
          - TERMS
          - MATCH_ALL
          - SIMPLE
          - QUERY_STRING
          - MULTI_MATCH
      fields:
        type: array
        description: Field names to search against
        items:
          type: string
        x-genesys-search-fields:
          value:
            - title
            - content
  DocumentationSearchRequest:
    type: object
    properties:
      sortOrder:
        type: string
        description: The sort order for results
        enum:
          - ASC
          - DESC
          - SCORE
      sortBy:
        type: string
        description: The field in the resource that you want to sort the results by
      pageSize:
        type: integer
        format: int32
        description: The number of results per page
      pageNumber:
        type: integer
        format: int32
        description: The page of resources you want to retrieve
      sort:
        type: array
        description: Multi-value sort order, list of multiple sort values
        items:
          $ref: '#/definitions/SearchSort'
      query:
        type: array
        items:
          $ref: '#/definitions/DocumentationSearchCriteria'
  JsonNodeSearchResponse:
    type: object
    required:
      - pageCount
      - pageNumber
      - pageSize
      - results
      - total
      - types
    properties:
      total:
        type: integer
        format: int64
        description: The total number of results found
      pageCount:
        type: integer
        format: int32
        description: The total number of pages
      pageSize:
        type: integer
        format: int32
        description: The current page size
      pageNumber:
        type: integer
        format: int32
        description: The current page number
      previousPage:
        type: string
        description: Q64 value for the previous page of results
      currentPage:
        type: string
        description: Q64 value for the current page of results
      nextPage:
        type: string
        description: Q64 value for the next page of results
      types:
        type: array
        description: Resource types the search was performed against
        items:
          type: string
      results:
        description: Search results
        $ref: '#/definitions/ArrayNode'
      aggregations:
        $ref: '#/definitions/ArrayNode'
  GKNDocumentationResult:
    type: object
    required:
      - _type
    properties:
      content:
        type: string
        description: >-
          The text or html content for the documentation entity. Will be
          returned in responses for certain entities.
      link:
        type: string
        description: >-
          URL link for the documentation entity. Will be returned in responses
          for certain entities.
      title:
        type: string
        description: >-
          The title of the documentation entity. Will be returned in responses
          for certain entities.
      _type:
        type: string
        description: The search type. Will be returned in responses for certain entities.
  GKNDocumentationSearchResponse:
    type: object
    required:
      - pageCount
      - pageNumber
      - pageSize
      - results
      - total
      - types
    properties:
      total:
        type: integer
        format: int64
        description: The total number of results found
      pageCount:
        type: integer
        format: int32
        description: The total number of pages
      pageSize:
        type: integer
        format: int32
        description: The current page size
      pageNumber:
        type: integer
        format: int32
        description: The current page number
      previousPage:
        type: string
        description: Q64 value for the previous page of results
      currentPage:
        type: string
        description: Q64 value for the current page of results
      nextPage:
        type: string
        description: Q64 value for the next page of results
      types:
        type: array
        description: Resource types the search was performed against
        items:
          type: string
      results:
        type: array
        description: Search results
        items:
          $ref: '#/definitions/GKNDocumentationResult'
  GKNDocumentationSearchCriteria:
    type: object
    required:
      - type
    properties:
      endValue:
        type: string
        description: The end value of the range. This field is used for range search types.
      values:
        type: array
        description: A list of values for the search to match against
        items:
          type: string
      startValue:
        type: string
        description: >-
          The start value of the range. This field is used for range search
          types.
      value:
        type: string
        description: A value for the search to match against
      operator:
        type: string
        description: How to apply this search criteria against other criteria
        enum:
          - AND
          - OR
          - NOT
      group:
        type: array
        description: Groups multiple conditions
        items:
          $ref: '#/definitions/GKNDocumentationSearchCriteria'
      dateFormat:
        type: string
        description: >-
          Set date format for criteria values when using date range search
          type.  Supports Java date format syntax, example
          yyyy-MM-dd'T'HH:mm:ss.SSSX.
      type:
        type: string
        description: Search Type
        enum:
          - SIMPLE
      fields:
        type: array
        description: Field names to search against
        items:
          type: string
        x-genesys-search-fields:
          value:
            - title
            - content
  GKNDocumentationSearchRequest:
    type: object
    properties:
      sortOrder:
        type: string
        description: The sort order for results
        enum:
          - ASC
          - DESC
          - SCORE
      sortBy:
        type: string
        description: The field in the resource that you want to sort the results by
      pageSize:
        type: integer
        format: int32
        description: The number of results per page
      pageNumber:
        type: integer
        format: int32
        description: The page of resources you want to retrieve
      sort:
        type: array
        description: Multi-value sort order, list of multiple sort values
        items:
          $ref: '#/definitions/SearchSort'
      query:
        type: array
        items:
          $ref: '#/definitions/GKNDocumentationSearchCriteria'
  CreateWebChatConversationResponse:
    type: object
    properties:
      id:
        type: string
        description: Chat Conversation identifier
      jwt:
        type: string
        description: >-
          The JWT that you can use to identify subsequent calls on this
          conversation
      eventStreamUri:
        type: string
        format: uri
        description: The URI which provides the conversation event stream.
      member:
        description: Chat Member
        $ref: '#/definitions/WebChatMemberInfo'
  CreateWebChatConversationRequest:
    type: object
    required:
      - deploymentId
      - memberInfo
      - organizationId
      - routingTarget
    properties:
      organizationId:
        type: string
        description: The organization identifier.
      deploymentId:
        type: string
        description: >-
          The web chat Deployment ID which contains the appropriate settings for
          this chat conversation.
      routingTarget:
        description: The routing information to use for the new chat conversation.
        $ref: '#/definitions/WebChatRoutingTarget'
      memberInfo:
        description: The guest member info to use for the new chat conversation.
        $ref: '#/definitions/GuestMemberInfo'
      memberAuthToken:
        type: string
        description: >-
          If the guest member is an authenticated member (ie, not anonymous) his
          JWT is provided here. The token will have been previously generated
          with the "POST /api/v2/signeddata" resource.
      journeyContext:
        description: >-
          A subset of the Journey System's data relevant to this
          conversation/session request (for external linkage and internal
          usage/context).
        $ref: '#/definitions/JourneyContext'
  GuestMemberInfo:
    type: object
    required:
      - displayName
    properties:
      displayName:
        type: string
        description: The display name to use for the guest member in the conversation.
      firstName:
        type: string
        description: The first name to use for the guest member in the conversation.
      lastName:
        type: string
        description: The last name to use for the guest member in the conversation.
      email:
        type: string
        description: The email address to use for the guest member in the conversation.
      phoneNumber:
        type: string
        description: The phone number to use for the guest member in the conversation.
      avatarImageUrl:
        type: string
        format: uri
        description: >-
          The URL to the avatar image to use for the guest member in the
          conversation, if any.
      customFields:
        type: object
        description: >-
          Any custom fields of information, in key-value format, to attach to
          the guest member in the conversation.
        additionalProperties:
          type: string
  WebChatRoutingTarget:
    type: object
    required:
      - targetAddress
      - targetType
    properties:
      targetType:
        type: string
        description: The target type of the routing target, such as 'QUEUE'.
        enum:
          - QUEUE
      targetAddress:
        type: string
        description: >-
          The target of the route, in the format appropriate given the
          'targetType'.
      skills:
        type: array
        description: The list of skill names to use for routing.
        items:
          type: string
      language:
        type: string
        description: The language name to use for routing.
      priority:
        type: integer
        format: int64
        description: The priority to assign to the conversation for routing.
  WebDeploymentsRefreshJWTRequest:
    type: object
    required:
      - deploymentId
      - refreshToken
    properties:
      refreshToken:
        type: string
        description: Refresh token used to issue a new JWT.
      deploymentId:
        type: string
        description: The WebDeployment ID
  WebDeploymentsAuthorizationResponse:
    type: object
    properties:
      refreshToken:
        type: string
        description: Refresh token used to issue a new JWT.
      jwt:
        type: string
  WebDeploymentsJourneyContext:
    type: object
    properties:
      customer:
        description: >-
          Journey customer information. Used for linking the authenticated
          customer with the journey. 
        $ref: '#/definitions/JourneyCustomer'
      customerSession:
        description: Contains the Journey System's customer session details.
        $ref: '#/definitions/JourneyCustomerSession'
  WebDeploymentsOAuthExchangeRequest:
    type: object
    required:
      - deploymentId
    properties:
      deploymentId:
        type: string
        description: The WebDeployment ID
      journeyContext:
        description: A Customer journey context.
        $ref: '#/definitions/WebDeploymentsJourneyContext'
      oauth:
        $ref: '#/definitions/WebDeploymentsOAuthRequestParameters'
  WebDeploymentsOAuthRequestParameters:
    type: object
    required:
      - code
      - redirectUri
    properties:
      code:
        type: string
        description: >-
          The authorization code to be sent to the authentication server during
          the token request.
           Refer to https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest
      redirectUri:
        type: string
        description: >-
          Redirect URI sent in the "Authentication Request"Refer to
          https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest
      nonce:
        type: string
        description: >-
          Required if provided in the "Authentication Request". Otherwise should
          be empty.String value used to associate a Client session with an ID
          Token, and to mitigate replay attacks. The value is passed through
          unmodified from the Authentication Request to the ID Token. Refer to
          https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest
      maxAge:
        type: integer
        format: int32
        description: >-
          Required if provided in the  "Authentication Request". Otherwise
          should be empty.Specifies the allowable elapsed time in seconds since
          the last time the End-User was actively authenticated.Refer to
          https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest
      codeVerifier:
        type: string
        description: >-
          Required if authorizing using Proof Key for Code Exchange (PKCE).
          Otherwise should be empty.Random URL-safe string with a minimum length
          of 43 characters generated at start of authorization flow to mitigate
          the threat of having the authorization code intercepted. Refer to
          https://datatracker.ietf.org/doc/html/rfc7636
      iss:
        type: string
        description: >-
          Optional parameter. Set it if authorization server discovery metadata
          authorization_response_iss_parameter_supported is enabled.

          Refer to https://datatracker.ietf.org/doc/html/rfc9207
  AvailableTopic:
    type: object
    properties:
      description:
        type: string
      id:
        type: string
      permissionDetails:
        type: array
        description: Full detailed permissions required to subscribe to the topic
        items:
          $ref: '#/definitions/PermissionDetails'
      requiresPermissions:
        type: array
        description: Permissions required to subscribe to the topic
        items:
          type: string
      requiresDivisionPermissions:
        type: boolean
        description: >-
          True if the subscribing user must belong to the same division as the
          topic object ID
      requiresAnyValidator:
        type: boolean
        description: >-
          If multiple permissions are required for this topic, such as both
          requiresCurrentUser and requiresDivisionPermissions, then true here
          indicates that meeting any one condition will satisfy the
          requirements; false indicates all conditions must be met.
      enforced:
        type: boolean
        description: Whether or not the permissions on this topic are enforced
      visibility:
        type: string
        description: Visibility of this topic (Public or Preview)
        enum:
          - Public
          - Preview
      schema:
        type: object
        additionalProperties:
          type: object
      requiresCurrentUser:
        type: boolean
        description: True if the topic user ID is required to match the subscribing user ID
      requiresCurrentUserOrPermission:
        type: boolean
        description: >-
          True if permissions are only required when the topic user ID does not
          match the subscribing user ID
      transports:
        type: array
        description: Transports that support events for the topic
        items:
          type: string
          enum:
            - All
            - Websocket
            - EventBridge
            - ProcessAutomation
      publicApiTemplateUriPaths:
        type: array
        items:
          type: string
      topicParameters:
        type: array
        description: >-
          Parameters in the topic name that can be substituted, in the order
          they appear in the topic name
        items:
          type: string
  AvailableTopicEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/AvailableTopic'
  PermissionDetails:
    type: object
    properties:
      type:
        type: string
        description: The type of permission requirement
        enum:
          - requiresCurrentUser
          - requiresPermissions
          - requiresDivisionPermissions
          - requiresAnyDivisionPermissions
          - requiresUserBeConversationParticipant
      permissions:
        type: array
        description: List of required permissions
        items:
          type: string
      allowsCurrentUser:
        type: boolean
        description: >-
          Whether the current user can subscribe, when division permissions are
          otherwise required
      enforced:
        type: boolean
        description: Whether or not this permission requirement is enforced
  Channel:
    type: object
    properties:
      connectUri:
        type: string
        format: uri
      id:
        type: string
      expires:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  ChannelEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Channel'
  ChannelTopic:
    type: object
    properties:
      id:
        type: string
      state:
        type: string
        enum:
          - Permitted
          - Rejected
      rejectionReason:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ChannelTopicEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ChannelTopic'
  ADFS:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      disabled:
        type: boolean
      issuerURI:
        type: string
      ssoTargetURI:
        type: string
      sloURI:
        type: string
      sloBinding:
        type: string
      relyingPartyIdentifier:
        type: string
      certificate:
        type: string
      certificates:
        type: array
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OAuthProvider:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      disabled:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CustomerInteractionCenter:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      disabled:
        type: boolean
      issuerURI:
        type: string
      ssoTargetURI:
        type: string
      sloURI:
        type: string
      sloBinding:
        type: string
      relyingPartyIdentifier:
        type: string
      certificate:
        type: string
      certificates:
        type: array
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  GSuite:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      disabled:
        type: boolean
      issuerURI:
        type: string
      ssoTargetURI:
        type: string
      sloURI:
        type: string
      sloBinding:
        type: string
      relyingPartyIdentifier:
        type: string
      certificate:
        type: string
      certificates:
        type: array
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  GenericSAML:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      disabled:
        type: boolean
      issuerURI:
        type: string
      ssoTargetURI:
        type: string
      sloURI:
        type: string
      sloBinding:
        type: string
      relyingPartyIdentifier:
        type: string
      certificate:
        type: string
      certificates:
        type: array
        items:
          type: string
      logoImageData:
        type: string
      endpointCompression:
        type: boolean
      nameIdentifierFormat:
        type: string
        enum:
          - urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
          - urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
          - urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName
          - urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName
          - urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos
          - urn:oasis:names:tc:SAML:2.0:nameid-format:entity
          - urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
          - urn:oasis:names:tc:SAML:2.0:nameid-format:transient
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  IdentityNow:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      disabled:
        type: boolean
      issuerURI:
        type: string
      ssoTargetURI:
        type: string
      sloURI:
        type: string
      sloBinding:
        type: string
      relyingPartyIdentifier:
        type: string
      certificate:
        type: string
      certificates:
        type: array
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OAuthAuthorization:
    type: object
    properties:
      client:
        $ref: '#/definitions/OAuthClient'
      scope:
        type: array
        items:
          type: string
      roles:
        type: array
        items:
          type: string
      resourceOwner:
        $ref: '#/definitions/DomainEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        $ref: '#/definitions/DomainEntityRef'
      modifiedBy:
        $ref: '#/definitions/DomainEntityRef'
      pending:
        type: boolean
      state:
        type: string
        enum:
          - Unauthorized
          - Requested
          - Authorized
          - Revoked
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OAuthClient:
    type: object
    required:
      - authorizedGrantType
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the OAuth client.
      accessTokenValiditySeconds:
        type: integer
        format: int64
        description: >-
          The number of seconds, between 5mins and 48hrs, until tokens created
          with this client expire. If this field is omitted, a default of 24
          hours will be applied.
      description:
        type: string
      registeredRedirectUri:
        type: array
        description: >-
          List of allowed callbacks for this client. For example:
          https://myap.example.com/auth/callback
        items:
          type: string
          format: uri
      secret:
        type: string
        description: >-
          System created secret assigned to this client. Secrets are required
          for code authorization and client credential grants.
      roleIds:
        type: array
        description: Deprecated. Use roleDivisions instead.
        uniqueItems: true
        items:
          type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date this client was created. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date this client was last modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: User that created this client
        $ref: '#/definitions/DomainEntityRef'
      modifiedBy:
        description: User that last modified this client
        $ref: '#/definitions/DomainEntityRef'
      authorizedGrantType:
        type: string
        description: >
          The OAuth Grant/Client type supported by this client.

          Code Authorization Grant/Client type - Preferred client type where the
          Client ID and Secret are required to create tokens. Used where the
          secret can be secured.

          PKCE-Enabled Code Authorization grant type - Code grant type which
          requires PKCE challenge and verifier to create tokens. Used in public
          clients for increased security.

          Implicit grant type - Client ID only is required to create tokens.
          Used in browser and mobile apps where the secret can not be secured.

          SAML2-Bearer extension grant type - SAML2 assertion provider for user
          authentication at the token endpoint.

          Client Credential grant type - Used to created access tokens that are
          tied only to the client.
        enum:
          - CODE
          - TOKEN
          - SAML2-BEARER
          - PASSWORD
          - CLIENT-CREDENTIALS
      scope:
        type: array
        description: >-
          The scope requested by this client. Scopes only apply to clients not
          using the client_credential grant
        items:
          type: string
      roleDivisions:
        type: array
        description: >-
          Set of roles and their corresponding divisions associated with this
          client. Roles and divisions only apply to clients using the
          client_credential grant
        uniqueItems: true
        items:
          $ref: '#/definitions/RoleDivision'
      state:
        type: string
        description: >-
          The state of the OAuth client.

          Active: The OAuth client can be used to create access tokens. This is
          the default state.

          Disabled: Access tokens created by the client are invalid and new ones
          cannot be created.

          Inactive: Access tokens cannot be created with this OAuth client and
          it will be deleted.
        enum:
          - active
          - disabled
          - inactive
      dateToDelete:
        type: string
        format: date-time
        description: >-
          The time at which this client will be deleted. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OAuthAuthorizationListing:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/OAuthAuthorization'
      selfUri:
        type: string
        format: uri
  OAuthClientRequest:
    type: object
    required:
      - authorizedGrantType
      - name
    properties:
      name:
        type: string
        description: The name of the OAuth client.
      accessTokenValiditySeconds:
        type: integer
        format: int64
        description: >-
          The number of seconds, between 5mins and 48hrs, until tokens created
          with this client expire. If this field is omitted, a default of 24
          hours will be applied.
      description:
        type: string
      registeredRedirectUri:
        type: array
        description: >-
          List of allowed callbacks for this client. For example:
          https://myap.example.com/auth/callback
        items:
          type: string
          format: uri
      roleIds:
        type: array
        description: Deprecated. Use roleDivisions instead.
        uniqueItems: true
        items:
          type: string
      authorizedGrantType:
        type: string
        description: >
          The OAuth Grant/Client type supported by this client.

          Code Authorization Grant/Client type - Preferred client type where the
          Client ID and Secret are required to create tokens. Used where the
          secret can be secured.

          PKCE-Enabled Code Authorization grant type - Code grant type which
          requires PKCE challenge and verifier to create tokens. Used in public
          clients for increased security.

          Implicit grant type - Client ID only is required to create tokens.
          Used in browser and mobile apps where the secret can not be secured.

          SAML2-Bearer extension grant type - SAML2 assertion provider for user
          authentication at the token endpoint.

          Client Credential grant type - Used to created access tokens that are
          tied only to the client.
        enum:
          - CODE
          - TOKEN
          - SAML2-BEARER
          - PASSWORD
          - CLIENT-CREDENTIALS
      scope:
        type: array
        description: >-
          The scope requested by this client. Scopes only apply to clients not
          using the client_credential grant
        items:
          type: string
      roleDivisions:
        type: array
        description: >-
          Set of roles and their corresponding divisions associated with this
          client. Roles and divisions only apply to clients using the
          client_credential grant
        uniqueItems: true
        items:
          $ref: '#/definitions/RoleDivision'
      state:
        type: string
        description: >-
          The state of the OAuth client.

          Active: The OAuth client can be used to create access tokens. This is
          the default state.

          Disabled: Access tokens created by the client are invalid and new ones
          cannot be created.

          Inactive: Access tokens cannot be created with this OAuth client and
          it will be deleted.
        enum:
          - active
          - disabled
          - inactive
      dateToDelete:
        type: string
        format: date-time
        description: >-
          The time at which this client will be deleted. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  UsageExecutionResult:
    type: object
    properties:
      executionId:
        type: string
        description: The id of the query execution
      resultsUri:
        type: string
        description: URI where the query results can be retrieved
  ApiUsageClientQuery:
    type: object
    required:
      - interval
    properties:
      interval:
        type: string
        description: >-
          Behaves like one clause in a SQL WHERE. Specifies the date and time
          range of data being queried. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      granularity:
        type: string
        description: Date granularity of the results
        enum:
          - Day
          - Week
          - Month
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Enables retrieving only named
          metrics. If omitted, all metrics that are available will be returned
          (like SELECT *).
        items:
          type: string
          enum:
            - Status200
            - Status300
            - Status400
            - Status500
            - Status429
            - Requests
      groupBy:
        type: array
        description: >-
          Behaves like a SQL GROUPBY. Allows for multiple levels of grouping as
          a list of dimensions. Partitions resulting aggregate computations into
          distinct named subgroups rather than across the entire result set as
          if it were one group.
        items:
          type: string
          enum:
            - OAuthClientId
            - OrganizationId
            - TemplateUri
            - HttpMethod
  ApiUsageQueryResult:
    type: object
    properties:
      results:
        type: array
        description: Query results
        items:
          $ref: '#/definitions/ApiUsageRow'
      queryStatus:
        type: string
        description: Query status
        enum:
          - Complete
          - Failed
          - Running
  ApiUsageRow:
    type: object
    properties:
      clientId:
        type: string
        description: Client Id associated with this query result
      clientName:
        type: string
        description: Client Name associated with this query result
      organizationId:
        type: string
        description: Organization Id associated with this query result
      userId:
        type: string
        description: User Id associated with this query result
      templateUri:
        type: string
        description: Template Uri associated with this query result
      httpMethod:
        type: string
        description: HTTP Method associated with this query result
      status200:
        type: integer
        format: int64
        description: Number of requests resulting in a 2xx HTTP status code
      status300:
        type: integer
        format: int64
        description: Number of requests resulting in a 3xx HTTP status code
      status400:
        type: integer
        format: int64
        description: Number of requests resulting in a 4xx HTTP status code
      status500:
        type: integer
        format: int64
        description: Number of requests resulting in a 5xx HTTP status code
      status429:
        type: integer
        format: int64
        description: >-
          Number of requests resulting in a 429 HTTP status code, this is a
          subset of the count returned with status400
      requests:
        type: integer
        format: int64
        description: Total number of requests
      date:
        type: string
        format: date-time
        description: >-
          Date of requests, based on granularity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  OAuthClientEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/OAuthClientListing'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  OAuthClientListing:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the OAuth client.
      accessTokenValiditySeconds:
        type: integer
        format: int64
        description: >-
          The number of seconds, between 5mins and 48hrs, until tokens created
          with this client expire. If this field is omitted, a default of 24
          hours will be applied.
      description:
        type: string
      registeredRedirectUri:
        type: array
        description: >-
          List of allowed callbacks for this client. For example:
          https://myap.example.com/auth/callback
        items:
          type: string
          format: uri
      secret:
        type: string
        description: >-
          System created secret assigned to this client. Secrets are required
          for code authorization and client credential grants.
      roleIds:
        type: array
        description: Deprecated. Use roleDivisions instead.
        uniqueItems: true
        items:
          type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date this client was created. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date this client was last modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: User that created this client
        $ref: '#/definitions/DomainEntityRef'
      modifiedBy:
        description: User that last modified this client
        $ref: '#/definitions/DomainEntityRef'
      scope:
        type: array
        description: >-
          The scope requested by this client. Scopes only apply to clients not
          using the client_credential grant
        items:
          type: string
      roleDivisions:
        type: array
        description: >-
          Set of roles and their corresponding divisions associated with this
          client. Roles and divisions only apply to clients using the
          client_credential grant
        uniqueItems: true
        items:
          $ref: '#/definitions/RoleDivision'
      state:
        type: string
        description: >-
          The state of the OAuth client.

          Active: The OAuth client can be used to create access tokens. This is
          the default state.

          Disabled: Access tokens created by the client are invalid and new ones
          cannot be created.

          Inactive: Access tokens cannot be created with this OAuth client and
          it will be deleted.
        enum:
          - active
          - disabled
          - inactive
      dateToDelete:
        type: string
        format: date-time
        description: >-
          The time at which this client will be deleted. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OAuthProviderEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/OAuthProvider'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  OAuthScope:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      description:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OAuthScopeListing:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/OAuthScope'
      selfUri:
        type: string
        format: uri
  Okta:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      disabled:
        type: boolean
      issuerURI:
        type: string
      ssoTargetURI:
        type: string
      sloURI:
        type: string
      sloBinding:
        type: string
      relyingPartyIdentifier:
        type: string
      certificate:
        type: string
      certificates:
        type: array
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OneLogin:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      disabled:
        type: boolean
      issuerURI:
        type: string
      ssoTargetURI:
        type: string
      sloURI:
        type: string
      sloBinding:
        type: string
      relyingPartyIdentifier:
        type: string
      certificate:
        type: string
      certificates:
        type: array
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PingIdentity:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      disabled:
        type: boolean
      issuerURI:
        type: string
      ssoTargetURI:
        type: string
      sloURI:
        type: string
      sloBinding:
        type: string
      relyingPartyIdentifier:
        type: string
      certificate:
        type: string
      certificates:
        type: array
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PureCloud:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      disabled:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PureEngage:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      disabled:
        type: boolean
      issuerURI:
        type: string
      ssoTargetURI:
        type: string
      sloURI:
        type: string
      sloBinding:
        type: string
      relyingPartyIdentifier:
        type: string
      certificate:
        type: string
      certificates:
        type: array
        items:
          type: string
      autoProvisionUsers:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Salesforce:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      disabled:
        type: boolean
      issuerURI:
        type: string
      ssoTargetURI:
        type: string
      sloURI:
        type: string
      sloBinding:
        type: string
      relyingPartyIdentifier:
        type: string
      certificate:
        type: string
      certificates:
        type: array
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EmbeddedIntegration:
    type: object
    properties:
      enableWhitelist:
        type: boolean
      domainWhitelist:
        type: array
        items:
          type: string
  IpAddressAuthentication:
    type: object
    properties:
      networkWhitelist:
        type: array
        items:
          type: string
  OrgWhitelistSettings:
    type: object
    properties:
      enableWhitelist:
        type: boolean
      domainWhitelist:
        type: array
        items:
          type: string
  OrgAuthSettings:
    type: object
    properties:
      multifactorAuthenticationRequired:
        type: boolean
        description: Indicates whether multi-factor authentication is required.
      domainAllowlistEnabled:
        type: boolean
        description: Indicates whether the domain allowlist is enabled.
      domainAllowlist:
        type: array
        description: >-
          The list of domains that will be allowed to embed Genesys Cloud
          applications.
        items:
          type: string
      ipAddressAllowlist:
        type: array
        description: >-
          The list of IP addresses that will be allowed to authenticate with
          Genesys Cloud.
        items:
          type: string
      passwordRequirements:
        description: The password requirements for the organization.
        $ref: '#/definitions/PasswordRequirements'
  PasswordRequirements:
    type: object
    properties:
      minimumLength:
        type: integer
        format: int32
      minimumDigits:
        type: integer
        format: int32
      minimumLetters:
        type: integer
        format: int32
      minimumUpper:
        type: integer
        format: int32
      minimumLower:
        type: integer
        format: int32
      minimumSpecials:
        type: integer
        format: int32
      minimumAgeSeconds:
        type: integer
        format: int32
      expirationDays:
        type: integer
        format: int32
  AuditQueryResponse:
    type: object
  Facet:
    type: object
    required:
      - name
      - type
    properties:
      name:
        type: string
        description: The name of the field on which to facet.
      type:
        type: string
        description: The type of the facet, DATE or STRING.
  Filter:
    type: object
    required:
      - name
      - operator
      - type
      - values
    properties:
      name:
        type: string
        description: The name of the field by which to filter.
      type:
        type: string
        description: The type of the filter, DATE or STRING.
      operator:
        type: string
        description: The operation that the filter performs.
      values:
        type: array
        description: The values to make the filter comparison against.
        items:
          type: string
  TrusteeAuditQueryRequest:
    type: object
    required:
      - trusteeOrganizationIds
      - trusteeUserIds
    properties:
      trusteeOrganizationIds:
        type: array
        description: Limit returned audits to these trustee organizationIds.
        items:
          type: string
      trusteeUserIds:
        type: array
        description: Limit returned audits to these trustee userIds.
        items:
          type: string
      startDate:
        type: string
        format: date-time
        description: >-
          Starting date/time for the audit search. ISO-8601 formatted date-time,
          UTC.
      endDate:
        type: string
        format: date-time
        description: >-
          Ending date/time for the audit search. ISO-8601 formatted date-time,
          UTC.
      queryPhrase:
        type: string
        description: Word or phrase to look for in audit bodies.
      facets:
        type: array
        description: Facet information to be returned with the query results.
        items:
          $ref: '#/definitions/Facet'
      filters:
        type: array
        description: Additional custom filters to be applied to the query.
        items:
          $ref: '#/definitions/Filter'
  ClonedUser:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      trustor:
        description: The ID of the trustor organization this clone exists in.
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Represents a cloned user in a trustor organization.
  ClonedUserEntityListing:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/ClonedUser'
      selfUri:
        type: string
        format: uri
  Trustee:
    type: object
    required:
      - enabled
    properties:
      id:
        type: string
        description: Organization Id for this trust.
        readOnly: true
      enabled:
        type: boolean
        description: >-
          If disabled no trustee user will have access, even if they were
          previously added.
      usesDefaultRole:
        type: boolean
        description: Denotes if trustee uses admin role by default.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date Trust was created. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateExpired:
        type: string
        format: date-time
        description: >-
          The expiration date of the trust. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: User that created trust.
        readOnly: true
        $ref: '#/definitions/OrgUser'
      organization:
        description: Organization associated with this trust.
        readOnly: true
        $ref: '#/definitions/Organization'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TrustGroup:
    type: object
    required:
      - name
      - rulesVisible
      - type
      - visibility
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The group name.
      description:
        type: string
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified date/time. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      memberCount:
        type: integer
        format: int64
        description: Number of members.
        readOnly: true
      state:
        type: string
        description: Active, inactive, or deleted state.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      version:
        type: integer
        format: int32
        description: Current version for this resource.
        readOnly: true
      type:
        type: string
        description: Type of group.
        enum:
          - official
          - social
      images:
        type: array
        items:
          $ref: '#/definitions/UserImage'
      addresses:
        type: array
        items:
          $ref: '#/definitions/GroupContact'
      rulesVisible:
        type: boolean
        description: >-
          Are membership rules visible to the person requesting to view the
          group
      visibility:
        type: string
        description: Who can view this group
        enum:
          - public
          - owners
          - members
      owners:
        type: array
        description: Owners of the group
        items:
          $ref: '#/definitions/User'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date on which the trusted group was added. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      createdBy:
        description: The user that added trusted group.
        readOnly: true
        $ref: '#/definitions/OrgUser'
  TrustRequest:
    type: object
    required:
      - trustee
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      createdBy:
        description: User who created this request.
        readOnly: true
        $ref: '#/definitions/OrgUser'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date request was created. There is a 48 hour expiration on all
          requests. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      trustee:
        description: Trustee organization who generated this request.
        readOnly: true
        $ref: '#/definitions/Organization'
      users:
        type: array
        description: The list of trustee users that are requesting access.
        readOnly: true
        items:
          $ref: '#/definitions/OrgUser'
      groups:
        type: array
        description: The list of trustee groups that are requesting access.
        readOnly: true
        items:
          $ref: '#/definitions/TrustGroup'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TrustRequestCreate:
    type: object
    properties:
      userIds:
        type: array
        description: >-
          The list of trustee users that are requesting access. If no users are
          specified, at least one group is required.
        items:
          type: string
      groupIds:
        type: array
        description: >-
          The list of trustee groups that are requesting access. If no groups
          are specified, at least one user is required.
        items:
          type: string
  TrustMemberCreate:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: Trustee User or Group Id
      roleIds:
        type: array
        description: >-
          The list of roles to be granted to this user or group. Roles will be
          granted in all divisions.
        items:
          type: string
      roleDivisions:
        description: >-
          The list of trustor organization roles granting this user or group
          access paired with the divisions for those roles.
        $ref: '#/definitions/RoleDivisionGrants'
  TrustGroupEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/TrustGroup'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  TrustUpdate:
    type: object
    required:
      - enabled
    properties:
      enabled:
        type: boolean
        description: >-
          If disabled no trustee user will have access, even if they were
          previously added.
      dateExpired:
        type: string
        format: date-time
        description: >-
          The expiration date of the trust. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  TrustUser:
    type: object
    required:
      - version
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      chat:
        $ref: '#/definitions/Chat'
      department:
        type: string
      email:
        type: string
      primaryContactInfo:
        type: array
        description: Auto populated from addresses.
        readOnly: true
        items:
          $ref: '#/definitions/Contact'
      addresses:
        type: array
        description: Email addresses and phone numbers for this user
        items:
          $ref: '#/definitions/Contact'
      state:
        type: string
        description: The current state for this user.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      title:
        type: string
      username:
        type: string
      manager:
        $ref: '#/definitions/User'
      images:
        type: array
        items:
          $ref: '#/definitions/UserImage'
      version:
        type: integer
        format: int32
        description: >-
          Required when updating a user, this value should be the current
          version of the user.  The current version can be obtained with a GET
          on the user before doing a PATCH.
      certifications:
        type: array
        items:
          type: string
      biography:
        $ref: '#/definitions/Biography'
      employerInfo:
        $ref: '#/definitions/EmployerInfo'
      routingStatus:
        description: ACD routing status
        readOnly: true
        $ref: '#/definitions/RoutingStatus'
      presence:
        description: Active presence
        readOnly: true
        $ref: '#/definitions/UserPresence'
      integrationPresence:
        description: Integration presence
        readOnly: true
        $ref: '#/definitions/UserPresence'
      conversationSummary:
        description: Summary of conversion statistics for conversation types.
        readOnly: true
        $ref: '#/definitions/UserConversationSummary'
      outOfOffice:
        description: Determine if out of office is enabled
        readOnly: true
        $ref: '#/definitions/OutOfOffice'
      geolocation:
        description: Current geolocation position
        readOnly: true
        $ref: '#/definitions/Geolocation'
      station:
        description: Effective, default, and last station information
        readOnly: true
        $ref: '#/definitions/UserStations'
      authorization:
        description: Roles and permissions assigned to the user
        readOnly: true
        $ref: '#/definitions/UserAuthorization'
      profileSkills:
        type: array
        description: Profile skills possessed by the user
        readOnly: true
        items:
          type: string
      locations:
        type: array
        description: The user placement at each site location.
        readOnly: true
        items:
          $ref: '#/definitions/Location'
      groups:
        type: array
        description: The groups the user is a member of
        readOnly: true
        items:
          $ref: '#/definitions/Group'
      team:
        description: The team the user is a member of
        readOnly: true
        $ref: '#/definitions/Team'
      skills:
        type: array
        description: Routing (ACD) skills possessed by the user
        readOnly: true
        items:
          $ref: '#/definitions/UserRoutingSkill'
      languages:
        type: array
        description: Routing (ACD) languages possessed by the user
        readOnly: true
        items:
          $ref: '#/definitions/UserRoutingLanguage'
      acdAutoAnswer:
        type: boolean
        description: acd auto answer
      languagePreference:
        type: string
        description: preferred language by the user
        readOnly: true
      lastTokenIssued:
        $ref: '#/definitions/OAuthLastTokenIssued'
      dateLastLogin:
        type: string
        format: date-time
        description: >-
          The last time the user logged in using username and password. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      trustUserDetails:
        $ref: '#/definitions/TrustUserDetails'
  TrustUserDetails:
    type: object
    properties:
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date Trust User was added. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      createdBy:
        description: User that added trusted user.
        readOnly: true
        $ref: '#/definitions/OrgUser'
  TrustUserEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/TrustUser'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  TrustorAuditQueryRequest:
    type: object
    required:
      - trusteeUserIds
      - trustorOrganizationId
    properties:
      trustorOrganizationId:
        type: string
        description: Limit returned audits to this trustor organizationId.
      trusteeUserIds:
        type: array
        description: Limit returned audits to these trustee userIds.
        items:
          type: string
      startDate:
        type: string
        format: date-time
        description: >-
          Starting date/time for the audit search. ISO-8601 formatted date-time,
          UTC.
      endDate:
        type: string
        format: date-time
        description: >-
          Ending date/time for the audit search. ISO-8601 formatted date-time,
          UTC.
      queryPhrase:
        type: string
        description: Word or phrase to look for in audit bodies.
      facets:
        type: array
        description: Facet information to be returned with the query results.
        items:
          $ref: '#/definitions/Facet'
      filters:
        type: array
        description: Additional custom filters to be applied to the query.
        items:
          $ref: '#/definitions/Filter'
  TrustorEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Trustor'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  TrustCreate:
    type: object
    required:
      - enabled
    properties:
      pairingId:
        type: string
        description: >-
          The pairing Id created by the trustee. This is required to prove that
          the trustee agrees to the relationship.  Not required when creating a
          default pairing with Customer Care.
      enabled:
        type: boolean
        description: >-
          If disabled no trustee user will have access, even if they were
          previously added.
      users:
        type: array
        description: >-
          The list of users and their roles to which access will be granted. The
          users are from the trustee and the roles are from the trustor. If no
          users are specified, at least one group is required.
        items:
          $ref: '#/definitions/TrustMemberCreate'
      groups:
        type: array
        description: >-
          The list of groups and their roles to which access will be granted.
          The groups are from the trustee and the roles are from the trustor. If
          no groups are specified, at least one user is required.
        items:
          $ref: '#/definitions/TrustMemberCreate'
      dateExpired:
        type: string
        format: date-time
        description: >-
          The expiration date of the trust. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  TrustEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Trustee'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  EstimatedWaitTimePredictions:
    type: object
    required:
      - results
    properties:
      results:
        type: array
        description: Returned upon a successful estimated wait time request.
        items:
          $ref: '#/definitions/PredictionResults'
  PredictionResults:
    type: object
    required:
      - estimatedWaitTimeSeconds
      - formula
    properties:
      intent:
        type: string
        description: Indicates the media type scope of this estimated wait time
        enum:
          - ALL
          - CALL
          - CALLBACK
          - CHAT
          - EMAIL
          - SOCIALEXPRESSION
          - VIDEOCOMM
          - MESSAGE
      formula:
        type: string
        description: Indicates the estimated wait time Formula
        enum:
          - BEST
          - SIMPLE
          - ABANDON
          - PATIENCE_ABANDON
      estimatedWaitTimeSeconds:
        type: integer
        format: int32
        description: Estimated wait time in seconds
  UcUserPresence:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      userId:
        type: string
        description: User ID of the associated Genesys Cloud user.
      source:
        type: string
        description: >-
          Represents the source where the Presence was set. Some examples are:
          PURECLOUD, MICROSOFTTEAMS, ZOOMPHONE, etc.
      presenceDefinition:
        $ref: '#/definitions/PresenceDefinition'
      message:
        type: string
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Presence from a given source for a user
  OrganizationPresence:
    type: object
    required:
      - languageLabels
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      languageLabels:
        type: object
        description: The label used for the system presence in each specified language
        additionalProperties:
          type: string
      systemPresence:
        type: string
      deactivated:
        type: boolean
      primary:
        type: boolean
      createdBy:
        $ref: '#/definitions/User'
      createdDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedBy:
        $ref: '#/definitions/User'
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OrganizationPresenceEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/OrganizationPresence'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  OrganizationPresenceDefinition:
    type: object
    required:
      - languageLabels
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      type:
        type: string
        description: The type of definition
        enum:
          - System
          - User
      languageLabels:
        type: object
        description: The label used for the definition in each specified language
        additionalProperties:
          type: string
      systemPresence:
        type: string
        enum:
          - Available
          - Away
          - Busy
          - Offline
          - Idle
          - OnQueue
          - Meal
          - Training
          - Meeting
          - Break
      divisionId:
        type: string
      deactivated:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PresenceSettings:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      restorePresenceSettings:
        description: The settings for the restore presence feature
        $ref: '#/definitions/RestorePresenceSettings'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  RestorePresenceSettings:
    type: object
    required:
      - enabled
      - restoreOnQueueEnabled
      - restoreTimeMilliseconds
    properties:
      enabled:
        type: boolean
        description: Whether the restore presence feature is enabled
      restoreTimeMilliseconds:
        type: integer
        format: int64
        description: How many milliseconds the presence will be restored within
      restoreOnQueueEnabled:
        type: boolean
        description: Whether the ON_QUEUE presence will be restored
  Source:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the source
      description:
        type: string
        description: The description of the source
      type:
        type: string
        description: The type of source
        enum:
          - System
          - User
      deactivated:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SourceEntityListing:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/Source'
      selfUri:
        type: string
        format: uri
  SystemPresence:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UserPrimarySource:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      sourceId:
        type: string
        description: The id of the source
      registered:
        type: boolean
        description: Whether or not the source is registered
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TestMatchesEventOperation:
    type: object
    properties:
      name:
        type: string
        description: The name of the processing step
      step:
        type: integer
        format: int32
        description: The number of the processing step
      matchedTriggers:
        type: array
        description: Triggers that matched
        items:
          $ref: '#/definitions/TestModeTrigger'
      unmatchedTriggers:
        type: array
        description: Triggers that did not match
        items:
          $ref: '#/definitions/TestModeTrigger'
    description: Results from evaluating matching criteria against test input
  TestModeEventResults:
    type: object
    properties:
      schemaValidation:
        description: >-
          Information about the validation of the schema of the event body
          passed in to test mode
        $ref: '#/definitions/TestSchemaOperation'
      triggerMatchValidation:
        description: Information about matched and unmatched triggers
        $ref: '#/definitions/TestMatchesEventOperation'
    description: Information about event test mode execution
  TestModeTrigger:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the trigger
      enabled:
        type: boolean
        description: Whether or not the trigger is enabled
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Basic identifying information about a trigger
  TestSchemaOperation:
    type: object
    properties:
      name:
        type: string
        description: The name of the processing step
      step:
        type: integer
        format: int32
        description: The number of the processing step
      matches:
        type: boolean
        description: Whether or not the operation matches expectations
      details:
        type: array
        description: Details about why the operation did or did not succeed
        items:
          type: string
    description: Information about the Trigger test mode schema validation step
  TopicCursorEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          type: string
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
    description: Cursor listing of Topics.
  JsonNode:
    type: object
  MatchCriteria:
    type: object
    properties:
      jsonPath:
        type: string
        description: The Goessner json path of the field to match
      operator:
        type: string
        description: The type of operation to perform for matching check
        enum:
          - GreaterThanOrEqual
          - LessThanOrEqual
          - Equal
          - NotEqual
          - LessThan
          - GreaterThan
          - NotIn
          - In
          - Contains
          - All
          - Exists
          - Size
      value:
        description: The value to match on. Only one of value and values can be included
        $ref: '#/definitions/JsonNode'
      values:
        type: array
        description: >-
          The list of values to match on. Only one of value and values can be
          included
        items:
          $ref: '#/definitions/JsonNode'
    description: Defines a simple matching condition
  Trigger:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the trigger
      topicName:
        type: string
        description: The topic that will cause the trigger to be invoked
      target:
        description: The target to invoke when a matching event is received
        $ref: '#/definitions/TriggerTarget'
      version:
        type: integer
        format: int64
        description: Version of this trigger
      enabled:
        type: boolean
        description: Whether or not the trigger is enabled
      matchCriteria:
        type: array
        description: >-
          The configuration for when a trigger is considered to be a match for
          an event
        items:
          $ref: '#/definitions/MatchCriteria'
      eventTTLSeconds:
        type: integer
        format: int32
        description: >-
          Optional length of time that events are meaningful after origination.
          Events older than this threshold may be dropped if the platform is
          delayed in processing events. Unset means events are valid
          indefinitely, otherwise must be set to at least 10 seconds. Only one
          of eventTTLSeconds or delayBySeconds can be set.
      delayBySeconds:
        type: integer
        format: int32
        description: >-
          Optional delay invoking target after trigger fires. Must be in the
          range of 60 to 900 seconds. Only one of eventTTLSeconds or
          delayBySeconds can be set. Until delayed triggers are released
          supplying this attribute will cause a failure.
      description:
        type: string
        description: Description of the trigger. Can be up to 512 characters in length.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Defines a process automation trigger.
  TriggerTarget:
    type: object
    properties:
      type:
        type: string
        description: The entity type to target
        enum:
          - Workflow
      id:
        type: string
        description: The ID of the entity to target
      workflowTargetSettings:
        description: >-
          Optional config for the target. Until the feature gets enabled will
          always operate in TopLevelPrimitives mode.
        $ref: '#/definitions/WorkflowTargetSettings'
    description: The target of a trigger invocation
  WorkflowTargetSettings:
    type: object
    properties:
      dataFormat:
        type: string
        description: The data format to use when invoking target.
        enum:
          - Json
          - TopLevelPrimitives
  UpdateTriggerRequest:
    type: object
    required:
      - enabled
      - name
      - target
      - topicName
      - version
    properties:
      version:
        type: integer
        format: int64
        description: Version of this trigger
      enabled:
        type: boolean
        description: Boolean indicating if Trigger is enabled
      target:
        description: The target to invoke when a matching event is received
        $ref: '#/definitions/TriggerTarget'
      matchCriteria:
        type: array
        description: >-
          The configuration for when a trigger is considered to be a match for
          an event
        items:
          $ref: '#/definitions/MatchCriteria'
      name:
        type: string
        description: The name of the trigger
      topicName:
        type: string
        description: >-
          The topic that will cause the trigger to be invoked. Must match
          existing trigger topicName.
      eventTTLSeconds:
        type: integer
        format: int32
        description: >-
          Optional length of time that events are meaningful after origination.
          Events older than this threshold may be dropped if the platform is
          delayed in processing events. Unset means events are valid
          indefinitely, otherwise must be set to at least 10 seconds. Only one
          of eventTTLSeconds or delayBySeconds can be set.
      delayBySeconds:
        type: integer
        format: int32
        description: >-
          Optional delay invoking target after trigger fires. Must be in the
          range of 60 to 900 seconds. Only one of eventTTLSeconds or
          delayBySeconds can be set. Until delayed triggers are released
          supplying this attribute will cause a failure.
      description:
        type: string
        description: Description of the trigger. Can be up to 512 characters in length.
  MatchCriteriaTestResult:
    type: object
    properties:
      jsonPath:
        type: string
        description: The Goessner json path of the field to match
      operator:
        type: string
        description: The type of operation to perform for matching check
        enum:
          - GreaterThanOrEqual
          - LessThanOrEqual
          - Equal
          - NotEqual
          - LessThan
          - GreaterThan
          - NotIn
          - In
          - Contains
          - All
          - Exists
          - Size
      value:
        description: The value to match on. Only one of value and values can be included
        $ref: '#/definitions/JsonNode'
      values:
        type: array
        description: >-
          The list of values to match on. Only one of value and values can be
          included
        items:
          $ref: '#/definitions/JsonNode'
      generatedJsonPathCondition:
        type: string
        description: The generated json path condition
      match:
        type: boolean
        description: Did the generated json path condition match
      jsonPathExtraction:
        type: array
        description: The json paths and their values that were compared
        items:
          $ref: '#/definitions/MatchTestResult'
    description: Results of a matching expression
  MatchTestResult:
    type: object
    properties:
      value:
        description: The value of the field being matched
        $ref: '#/definitions/JsonNode'
      path:
        type: string
        description: 'The json path to the json node being matched on. ex: $[''things''][1]'
    description: Information about the results being matched by the expressions
  TestMatchesOperation:
    type: object
    properties:
      name:
        type: string
        description: The name of the processing step
      step:
        type: integer
        format: int32
        description: The number of the processing step
      matches:
        type: boolean
        description: Whether or not the operation matches expectations
      details:
        type: array
        description: Details about why the operation did or did not succeed
        items:
          $ref: '#/definitions/MatchCriteriaTestResult'
    description: Information about the Trigger test mode processing step
  TestModeResults:
    type: object
    properties:
      schemaValidation:
        description: >-
          Information about the validation of the schema of the event body
          passed in to test mode
        $ref: '#/definitions/TestSchemaOperation'
      targetValidation:
        description: Information about the validation of the trigger target
        $ref: '#/definitions/TestTargetOperation'
      jsonPathValidation:
        description: Information about the json path matching criteria
        $ref: '#/definitions/TestMatchesOperation'
      triggerMatches:
        type: boolean
        description: Whether the trigger would have matched on the provided event body
    description: Information about trigger test mode execution
  TestTargetOperation:
    type: object
    properties:
      name:
        type: string
        description: The name of the processing step
      step:
        type: integer
        format: int32
        description: The number of the processing step
      matches:
        type: boolean
        description: Whether or not the operation matches expectations
      details:
        type: array
        description: Details about why the operation did or did not succeed
        items:
          type: string
    description: Information about the Trigger test mode target validation step
  CreateTriggerRequest:
    type: object
    required:
      - enabled
      - name
      - target
      - topicName
    properties:
      target:
        description: The target to invoke when a matching event is received
        $ref: '#/definitions/TriggerTarget'
      enabled:
        type: boolean
        description: Boolean indicating if Trigger is enabled
      matchCriteria:
        type: array
        description: >-
          The configuration for when a trigger is considered to be a match for
          an event. When not provided, all events will fire the trigger
        items:
          $ref: '#/definitions/MatchCriteria'
      name:
        type: string
        description: The name of the trigger
      topicName:
        type: string
        description: >-
          The topic that will cause the trigger to be invoked. Cannot be updated
          after creation. Valid topics can be found at
          /processautomation/triggers/topics 
      eventTTLSeconds:
        type: integer
        format: int32
        description: >-
          Optional length of time that events are meaningful after origination.
          Events older than this threshold may be dropped if the platform is
          delayed in processing events. Unset means events are valid
          indefinitely, otherwise must be set to at least 10 seconds. Only one
          of eventTTLSeconds or delayBySeconds can be set.
      delayBySeconds:
        type: integer
        format: int32
        description: >-
          Optional delay invoking target after trigger fires. Must be in the
          range of 60 to 900 seconds. Only one of eventTTLSeconds or
          delayBySeconds can be set. Until delayed triggers are released
          supplying this attribute will cause a failure.
      description:
        type: string
        description: Description of the trigger. Can be up to 512 characters in length.
  TriggerEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Trigger'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  AgentActivity:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      agent:
        $ref: '#/definitions/User'
      numEvaluations:
        type: integer
        format: int32
      averageEvaluationScore:
        type: integer
        format: int32
      numCriticalEvaluations:
        type: integer
        format: int32
      averageCriticalScore:
        type: number
        format: float
      highestEvaluationScore:
        type: number
        format: float
      lowestEvaluationScore:
        type: number
        format: float
      highestCriticalScore:
        type: number
        format: float
      lowestCriticalScore:
        type: number
        format: float
      agentEvaluatorActivityList:
        type: array
        items:
          $ref: '#/definitions/AgentEvaluatorActivity'
      numEvaluationsWithoutViewPermission:
        type: integer
        format: int32
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  AgentActivityEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/AgentActivity'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  AgentEvaluatorActivity:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      agent:
        $ref: '#/definitions/User'
      evaluator:
        $ref: '#/definitions/User'
      numEvaluations:
        type: integer
        format: int32
      averageEvaluationScore:
        type: integer
        format: int32
      numEvaluationsWithoutViewPermission:
        type: integer
        format: int32
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BatchDownloadJobResult:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      conversationId:
        type: string
        description: Conversation id of the result
      recordingId:
        type: string
        description: Recording id of the result
      resultUrl:
        type: string
        description: >-
          URL of results... HTTP GET from this location to download results for
          this item
      contentType:
        type: string
        description: Content type of this result
      errorMsg:
        type: string
        description: >-
          An error message, in case of failed processing will indicate the cause
          of the failure
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BatchDownloadJobStatusResult:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      jobId:
        type: string
        description: JobId returned when job was initially submitted
      expectedResultCount:
        type: integer
        format: int32
        description: Number of results expected when job is completed
      resultCount:
        type: integer
        format: int32
        description: Current number of results available
      errorCount:
        type: integer
        format: int32
        description: Number of error results produced so far
      results:
        type: array
        description: Current set of results for the job
        items:
          $ref: '#/definitions/BatchDownloadJobResult'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BatchDownloadJobSubmissionResult:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BatchDownloadJobSubmission:
    type: object
    required:
      - batchDownloadRequestList
    properties:
      batchDownloadRequestList:
        type: array
        description: List of up to 100 items requested
        items:
          $ref: '#/definitions/BatchDownloadRequest'
  BatchDownloadRequest:
    type: object
    properties:
      conversationId:
        type: string
        description: Conversation id requested
      recordingId:
        type: string
        description: >-
          Recording id requested, optional.  Leave null for all recordings on
          the conversation
  CalibrationCreate:
    type: object
    required:
      - conversation
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      calibrator:
        $ref: '#/definitions/User'
      agent:
        $ref: '#/definitions/User'
      conversation:
        description: The conversation to use for the calibration.
        $ref: '#/definitions/ConversationReference'
      evaluationForm:
        $ref: '#/definitions/EvaluationForm'
      contextId:
        type: string
      averageScore:
        type: integer
        format: int32
      highScore:
        type: integer
        format: int32
      lowScore:
        type: integer
        format: int32
      createdDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      evaluations:
        type: array
        items:
          $ref: '#/definitions/Evaluation'
      evaluators:
        type: array
        items:
          $ref: '#/definitions/User'
      scoringIndex:
        $ref: '#/definitions/Evaluation'
      expertEvaluator:
        $ref: '#/definitions/User'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CalibrationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Calibration'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  QualityAuditQueryExecutionStatusResponse:
    type: object
    properties:
      id:
        type: string
        description: Id of the audit query execution request.
      state:
        type: string
        description: Status of the audit query execution request.
        enum:
          - Queued
          - Running
          - Succeeded
          - Failed
          - Cancelled
      dateStart:
        type: string
        format: date-time
        description: >-
          Start date and time of the audit query execution. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      interval:
        type: string
        description: >-
          Interval for the audit query. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      filters:
        type: array
        description: Filters for the audit query.
        items:
          $ref: '#/definitions/QualityAuditQueryFilter'
      sort:
        type: array
        description: Sort parameter for the audit query.
        items:
          $ref: '#/definitions/AuditQuerySort'
  QualityAuditQueryFilter:
    type: object
    required:
      - property
      - value
    properties:
      property:
        type: string
        description: Name of the property to filter.
        enum:
          - UserId
          - TrusteeOrganizationId
          - TrusteeOnlyAudits
          - ClientId
          - Action
          - EntityType
          - EntityId
          - ConversationId
          - ServiceName
      value:
        type: string
        description: Value of the property to filter.
  QMAuditQueryRequest:
    type: object
    required:
      - filters
      - interval
    properties:
      interval:
        type: string
        description: >-
          Date and time range of data to query. Intervals are represented as an
          ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      filters:
        type: array
        description: List of filters for the query.
        items:
          $ref: '#/definitions/QualityAuditQueryFilter'
      sort:
        type: array
        description: Sort parameter for the query.
        items:
          $ref: '#/definitions/AuditQuerySort'
  QualityAuditLogMessage:
    type: object
    properties:
      id:
        type: string
        description: Id of the audit message.
      userHomeOrgId:
        type: string
        description: Home Organization Id associated with this audit message.
      userTrusteeOrgId:
        type: string
        description: Trustee Organization Id if this audit message is from trustee access.
      user:
        description: User associated with this audit message.
        $ref: '#/definitions/DomainEntityRef'
      client:
        description: Client associated with this audit message.
        $ref: '#/definitions/AddressableEntityRef'
      remoteIps:
        type: array
        description: >-
          List of IP addresses of systems that originated or handled the
          request.
        items:
          type: string
      serviceName:
        type: string
        description: Name of the service that logged this audit message.
        enum:
          - RecordingService
          - RecordingPlaybackService
          - QualityService
      level:
        type: string
        description: The level of this audit message.
        enum:
          - User
          - System
      status:
        type: string
        description: The status of the action of this audit message.
        enum:
          - Success
          - Failure
          - Warning
      eventDate:
        type: string
        format: date-time
        description: >-
          Date and time of when the audit message was logged. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      messageInfo:
        description: Message describing the event being audited.
        $ref: '#/definitions/MessageInfo'
      action:
        type: string
        description: Action that took place.
        enum:
          - Read
          - Create
          - Update
          - Delete
          - Abandon
          - Archive
          - Export
          - RestoreRequest
          - RestoreComplete
          - ApplyProtection
          - RevokeProtection
          - UpdateRetention
      entity:
        description: Entity that was impacted.
        $ref: '#/definitions/DomainEntityRef'
      entityType:
        type: string
        description: Type of the entity that was impacted.
        enum:
          - Recording
          - Evaluation
          - Calibration
          - Annotation
          - ScreenRecording
          - Survey
      propertyChanges:
        type: array
        description: >-
          List of properties that were changed and changes made to those
          properties.
        items:
          $ref: '#/definitions/PropertyChange'
      context:
        type: object
        description: Additional context for this message.
        additionalProperties:
          type: string
  QualityAuditQueryExecutionResultsResponse:
    type: object
    properties:
      id:
        type: string
        description: Id of the audit query execution request.
      pageSize:
        type: integer
        format: int32
        description: Number of results in a page.
      cursor:
        type: string
        description: Optional cursor to indicate where to resume the results.
      entities:
        type: array
        description: List of audit messages.
        items:
          $ref: '#/definitions/QualityAuditLogMessage'
  ConversationDeletionProtectionQuery:
    type: object
    required:
      - conversationIds
    properties:
      conversationIds:
        type: array
        description: >-
          This is a list of ConversationIds. The list cannot exceed 100
          conversationids.
        items:
          type: string
  EvaluationFormResponse:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The evaluation form name
      modifiedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      published:
        type: boolean
      contextId:
        type: string
      questionGroups:
        type: array
        description: A list of question groups
        items:
          $ref: '#/definitions/EvaluationQuestionGroup'
      publishedVersions:
        $ref: '#/definitions/DomainEntityListingEvaluationForm'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EvaluationResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      conversation:
        $ref: '#/definitions/ConversationReference'
      evaluationForm:
        description: Evaluation form used for evaluation.
        $ref: '#/definitions/EvaluationFormResponse'
      evaluator:
        $ref: '#/definitions/User'
      agent:
        $ref: '#/definitions/User'
      calibration:
        $ref: '#/definitions/Calibration'
      status:
        type: string
        enum:
          - PENDING
          - INPROGRESS
          - FINISHED
          - INREVIEW
          - RETRACTED
      answers:
        $ref: '#/definitions/EvaluationScoringSet'
      agentHasRead:
        type: boolean
      assignee:
        $ref: '#/definitions/User'
      releaseDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      assignedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      changedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      queue:
        $ref: '#/definitions/Queue'
      mediaType:
        type: array
        description: List of different communication types used in conversation.
        items:
          type: string
          enum:
            - CALL
            - CALLBACK
            - CHAT
            - COBROWSE
            - EMAIL
            - MESSAGE
            - SOCIAL_EXPRESSION
            - VIDEO
            - SCREENSHARE
      rescore:
        type: boolean
        description: Is only true when evaluation is re-scored.
      conversationDate:
        type: string
        format: date-time
        description: >-
          Date of conversation. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      conversationEndDate:
        type: string
        format: date-time
        description: >-
          End date of conversation if it had completed before evaluation
          creation. Null if created before the conversation ended. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      neverRelease:
        type: boolean
        description: >-
          Signifies if the evaluation is never to be released. This cannot be
          set true if release date is also set.
      assigned:
        type: boolean
        description: >-
          Set to false to unassign the evaluation. This cannot be set to false
          when assignee is also set.
      dateAssigneeChanged:
        type: string
        format: date-time
        description: >-
          Date when the assignee was last changed. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      resourceId:
        type: string
        description: >-
          Only used for email evaluations. Will be null for all other
          evaluations.
      resourceType:
        type: string
        description: >-
          The type of resource. Only used for email evaluations. Will be null
          for evaluations on all other resources.
        enum:
          - EMAIL
      redacted:
        type: boolean
        description: >-
          Is only true when the user making the request does not have sufficient
          permissions to see evaluation
      isScoringIndex:
        type: boolean
      authorizedActions:
        type: array
        description: >-
          List of user authorized actions on evaluation. Possible values:
          assign, edit, editScore, editAgentSignoff, delete, release, viewAudit
        items:
          type: string
      hasAssistanceFailed:
        type: boolean
        description: Is true when evaluation assistance didn't execute successfully
      evaluationSource:
        description: The source that created the evaluation.
        readOnly: true
        $ref: '#/definitions/EvaluationSource'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  FlowDiagnosticInfo:
    type: object
    properties:
      lastActionId:
        type: integer
        format: int32
        description: The step number of the survey invite flow where the error occurred.
  QueueReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Survey:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      conversation:
        $ref: '#/definitions/ConversationReference'
      surveyForm:
        description: Survey form used for this survey.
        $ref: '#/definitions/SurveyForm'
      agent:
        $ref: '#/definitions/DomainEntityRef'
      status:
        type: string
        enum:
          - Pending
          - Sent
          - InProgress
          - Finished
          - OptOut
          - Error
          - Expired
      queue:
        $ref: '#/definitions/QueueReference'
      answers:
        $ref: '#/definitions/SurveyScoringSet'
      completedDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      surveyErrorDetails:
        description: >-
          Additional information about what happened when the survey is in Error
          status.
        $ref: '#/definitions/SurveyErrorDetails'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SurveyErrorDetails:
    type: object
    properties:
      flowDiagnosticInfo:
        description: >-
          Additional information about any errors that occurred in the survey
          invite flow.
        $ref: '#/definitions/FlowDiagnosticInfo'
      surveyErrorReason:
        type: string
        description: An error code indicating the reason for the survey failure.
  EvaluationAggregationQueryMe:
    type: object
    required:
      - interval
      - metrics
    properties:
      interval:
        type: string
        description: >-
          Behaves like one clause in a SQL WHERE. Specifies the date and time
          range of data being queried. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      timeZone:
        type: string
        description: >-
          Time zone context used to calculate response intervals (this allows
          resolving DST changes). The interval offset is used even when timeZone
          is specified. Default is UTC. Time zones are represented as a string
          of the zone name as found in the IANA time zone database. For example:
          UTC, Etc/UTC, or Europe/London
      groupBy:
        type: array
        description: >-
          Behaves like a SQL GROUPBY. Allows for multiple levels of grouping as
          a list of dimensions. Partitions resulting aggregate computations into
          distinct named subgroups rather than across the entire result set as
          if it were one group.
        items:
          type: string
          enum:
            - assigneeId
            - calibrationId
            - contextId
            - conversationId
            - divisionId
            - evaluationContextId
            - evaluationId
            - evaluatorId
            - formId
            - queueId
            - released
            - rescored
            - teamId
            - userId
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Only named metrics will be
          retrieved.
        items:
          type: string
          enum:
            - nEvaluations
            - nEvaluationsDeleted
            - nEvaluationsRescored
            - oTotalCriticalScore
            - oTotalScore
      alternateTimeDimension:
        type: string
        description: >-
          Dimension to use as the alternative timestamp for data in the
          aggregate.  Choosing "eventTime" uses the actual time of the data
          event.
        enum:
          - conversationStart
          - evaluationCreatedDate
          - evaluationReleaseDate
          - eventTime
      contextId:
        type: string
        description: Evaluation context Id
  EvaluationFormEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/EvaluationForm'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  EvaluationEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Evaluation'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  EvaluationFormAndScoringSet:
    type: object
    properties:
      evaluationForm:
        $ref: '#/definitions/EvaluationForm'
      answers:
        $ref: '#/definitions/EvaluationScoringSet'
  EvaluatorActivity:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      evaluator:
        $ref: '#/definitions/User'
      numEvaluationsAssigned:
        type: integer
        format: int32
      numEvaluationsStarted:
        type: integer
        format: int32
      numEvaluationsCompleted:
        type: integer
        format: int32
      numCalibrationsAssigned:
        type: integer
        format: int32
      numCalibrationsStarted:
        type: integer
        format: int32
      numCalibrationsCompleted:
        type: integer
        format: int32
      numEvaluationsWithoutViewPermission:
        type: integer
        format: int32
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EvaluatorActivityEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/EvaluatorActivity'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  Annotation:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      type:
        type: string
      location:
        type: integer
        format: int64
        description: Offset of annotation in milliseconds.
      durationMs:
        type: integer
        format: int64
        description: Duration of annotation in milliseconds.
      absoluteLocation:
        type: integer
        format: int64
        description: >-
          Offset of annotation (milliseconds) from start of recording (after
          removing the cumulative duration of all pauses).
      absoluteDurationMs:
        type: integer
        format: int64
        description: Duration of annotation (milliseconds).
      recordingLocation:
        type: integer
        format: int64
        description: >-
          Offset of annotation (milliseconds) from start of recording, adjusted
          for any recording cuts
      recordingDurationMs:
        type: integer
        format: int64
        description: >-
          Duration of annotation (milliseconds), adjusted for any recording
          cuts.
      user:
        description: User that created this annotation (if any).
        $ref: '#/definitions/User'
      description:
        type: string
        description: Text of annotation. Maximum character limit is 500.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ButtonResponse:
    type: object
    properties:
      type:
        type: string
        description: >-
          Button response type that captures Button and QuickReply type
          responses
        enum:
          - Button
          - QuickReply
      text:
        type: string
        description: >-
          Text to show inside the Button reply. This is also used as the
          response text after clicking on the Button.
      payload:
        type: string
        description: Content of the textback payload after clicking a button
      messageType:
        type: string
        description: >-
          Button response message type that captures QuickReply , Cards and
          Carousel .This is used  as label for Card selection
        enum:
          - QuickReply
          - Card
          - Carousel
  Card:
    type: object
    properties:
      title:
        type: string
        description: Text to show in the title.
      description:
        type: string
        description: Text to show in the description.
      url:
        type: string
        description: URL of an image.
      defaultAction:
        description: The default action to be taken.
        $ref: '#/definitions/CardAction'
      actions:
        type: array
        description: List of possible action objects.
        items:
          $ref: '#/definitions/CardAction'
  CardAction:
    type: object
    properties:
      type:
        type: string
        description: Describes the type of action.
        enum:
          - Link
          - Postback
      text:
        type: string
        description: The response text from the button click.
      payload:
        type: string
        description: Content of the textback payload after clicking a button.
      url:
        type: string
        description: The location of the image file associated with action.
      isSelected:
        type: boolean
        description: Indicates if the card option is selected by end customer.
    description: A card action that a user can take.
  ChatMessage:
    type: object
    properties:
      body:
        type: string
        description: The message body
      id:
        type: string
      to:
        type: string
        description: The message recipient
      from:
        type: string
        description: The message sender
      utc:
        type: string
      chat:
        type: string
        description: The interaction id (if available)
      message:
        type: string
        description: The message id
      type:
        type: string
      bodyType:
        type: string
        description: Type of the message body (v2 chats only)
        enum:
          - STANDARD
          - ACTIVITY
          - TYPING
          - NOTICE
          - MEMBERJOIN
          - MEMBERLEAVE
          - MEDIAREQUEST
      senderCommunicationId:
        type: string
        description: Communication of sender (v2 chats only)
      participantPurpose:
        type: string
        description: Participant purpose of sender (v2 chats only)
      user:
        description: The user information for the sender (if available)
        $ref: '#/definitions/ChatMessageUser'
  ChatMessageUser:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      displayName:
        type: string
      username:
        type: string
      images:
        type: array
        items:
          $ref: '#/definitions/UserImage'
  EmailAttachment:
    type: object
    properties:
      name:
        type: string
      contentPath:
        type: string
      contentType:
        type: string
      attachmentId:
        type: string
      contentLength:
        type: integer
        format: int32
  EventCoBrowse:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Describes the type of CoBrowse event.
        enum:
          - Offering
          - OfferingExpired
          - OfferingAccepted
          - OfferingRejected
      sessionId:
        type: string
        description: The CoBrowse session ID.
      sessionJoinToken:
        type: string
        description: The CoBrowse session join token.
    description: A CoBrowse event.
  EventPresence:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Describes the type of Presence event.
        enum:
          - Join
          - Disconnect
          - Clear
    description: A Presence event.
  EventTyping:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Describes the type of Typing event.
        enum:
          - 'On'
      duration:
        type: integer
        format: int64
        description: The duration of the Typing event in milliseconds.
        readOnly: true
    description: A Typing event.
  GenericTemplate:
    type: object
    properties:
      title:
        type: string
        description: Text to show in the title.
      description:
        type: string
        description: Text to show in the description.
      url:
        type: string
        description: URL of an image.
      components:
        type: array
        description: List of button components offered with this message content.
        items:
          $ref: '#/definitions/RecordingButtonComponent'
      actions:
        description: Actions to be taken.
        $ref: '#/definitions/RecordingContentActions'
  MediaResult:
    type: object
    properties:
      mediaUri:
        type: string
      waveformData:
        type: array
        items:
          type: number
          format: float
  MessageEvent:
    type: object
    required:
      - eventType
    properties:
      eventType:
        type: string
        description: Type of this event element
        enum:
          - CoBrowse
          - Typing
          - Presence
      coBrowse:
        description: CoBrowse event.
        $ref: '#/definitions/EventCoBrowse'
      typing:
        description: Typing event.
        $ref: '#/definitions/EventTyping'
      presence:
        description: Presence event.
        $ref: '#/definitions/EventPresence'
    description: >-
      Message event element.  Examples include: system messages, typing
      indicators, cobrowse offerings.
  MessageMediaAttachment:
    type: object
    properties:
      url:
        type: string
        description: The location of the media, useful for retrieving it
      mediaType:
        type: string
        description: >-
          The optional internet media type of the the media object.If null then
          the media type should be dictated by the url.
        enum:
          - image/png
          - image/jpeg
          - image/gif
      contentLength:
        type: integer
        format: int64
        description: The optional content length of the the media object, in bytes.
      name:
        type: string
        description: The name of the media object.
      id:
        type: string
        description: A globally unique identifier for the media object.
  MessageStickerAttachment:
    type: object
    properties:
      url:
        type: string
        description: The location of the media, useful for retrieving it
      id:
        type: string
        description: A globally unique identifier for the media object.
  QuickReply:
    type: object
    properties:
      text:
        type: string
        description: >-
          Text to show inside the quick reply. This is also used as the response
          text after clicking on the quick reply.
      payload:
        type: string
        description: Content of the textback payload after clicking a quick reply
      url:
        type: string
        description: The location of the image file associated with quick reply
      action:
        type: string
        description: >-
          Specifies the type of action that is triggered upon clicking the quick
          reply. Currently, the only supported action is "Message" which sends a
          message using the quick reply text.
        enum:
          - Message
      isSelected:
        type: boolean
        description: Indicates if the quick reply option is selected by end customer
  Recording:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      conversationId:
        type: string
      path:
        type: string
      startTime:
        type: string
        description: The start time of the recording. Null when there is no playable media.
      endTime:
        type: string
        description: The end time of the recording. Null when there is no playable media.
      media:
        type: string
        description: >-
          The type of media that the recording is. At the moment that could be
          audio, chat, or email.
      annotations:
        type: array
        description: Annotations that belong to the recording.
        items:
          $ref: '#/definitions/Annotation'
      transcript:
        type: array
        description: Represents a chat transcript
        items:
          $ref: '#/definitions/ChatMessage'
      emailTranscript:
        type: array
        description: Represents an email transcript
        items:
          $ref: '#/definitions/RecordingEmailMessage'
      messagingTranscript:
        type: array
        description: Represents a messaging transcript
        items:
          $ref: '#/definitions/RecordingMessagingMessage'
      fileState:
        type: string
        description: >-
          Represents the current file state for a recording. Examples:
          Uploading, Archived, etc
        enum:
          - ARCHIVED
          - AVAILABLE
          - DELETED
          - RESTORED
          - RESTORING
          - UPLOADING
          - ERROR
      restoreExpirationTime:
        type: string
        format: date-time
        description: >-
          The amount of time a restored recording will remain restored before
          being archived again. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      mediaUris:
        type: object
        description: >-
          The different mediaUris for the recording. Null when there is no
          playable media.
        additionalProperties:
          $ref: '#/definitions/MediaResult'
      estimatedTranscodeTimeMs:
        type: integer
        format: int64
      actualTranscodeTimeMs:
        type: integer
        format: int64
      archiveDate:
        type: string
        format: date-time
        description: >-
          The date the recording will be archived. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      archiveMedium:
        type: string
        description: 'The type of archive medium used. Example: CloudArchive'
        enum:
          - CLOUDARCHIVE
      deleteDate:
        type: string
        format: date-time
        description: >-
          The date the recording will be deleted. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      exportDate:
        type: string
        format: date-time
        description: >-
          The date the recording will be exported. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      exportedDate:
        type: string
        format: date-time
        description: >-
          The date the recording was exported. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      outputDurationMs:
        type: integer
        format: int32
        description: Duration of transcoded media in milliseconds
      outputSizeInBytes:
        type: integer
        format: int32
        description: Size of transcoded media in bytes. 0 if there is no transcoded media.
      maxAllowedRestorationsForOrg:
        type: integer
        format: int32
        description: How many archive restorations the organization is allowed to have.
      remainingRestorationsAllowedForOrg:
        type: integer
        format: int32
        description: The remaining archive restorations the organization has.
      sessionId:
        type: string
        description: >-
          The session id represents an external resource id, such as email,
          call, chat, etc
      users:
        type: array
        description: The users participating in the conversation
        items:
          $ref: '#/definitions/User'
      recordingFileRole:
        type: string
        description: >-
          Role of the file recording. It can be either customer_experience or
          adhoc.
        enum:
          - CUSTOMER_EXPERIENCE
          - ADHOC
      recordingErrorStatus:
        type: string
        description: Status of a recording that cannot be returned because of an error
        enum:
          - EMAIL_TRANSCRIPT_TOO_LARGE
      originalRecordingStartTime:
        type: string
        format: date-time
        description: >-
          The start time of the full recording, before any segment access
          restrictions are applied. Null when there is no playable media. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      creationTime:
        type: string
        format: date-time
        description: >-
          The creation time of the recording. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  RecordingAnnotationFlow:
    type: object
    required:
      - id
      - name
    properties:
      name:
        type: string
        description: The flow name
      id:
        type: string
        description: The flow Id
  RecordingAnnotationQueue:
    type: object
    required:
      - id
      - name
    properties:
      name:
        type: string
        description: The queue name
      id:
        type: string
        description: The queue Id
  RecordingButtonComponent:
    type: object
    properties:
      title:
        type: string
      actions:
        $ref: '#/definitions/RecordingContentActions'
      isSelected:
        type: boolean
    description: Structured template button object.
  RecordingContentActions:
    type: object
    properties:
      url:
        type: string
        description: A URL of a web page to direct the user to.
      urlTarget:
        type: string
        description: >-
          The target window in which to open the URL. If empty will open a blank
          page or tab.
      textback:
        type: string
        description: Text to be sent back in reply when the item is selected.
    description: >-
      User actions available on the content. All actions are optional and all
      actions are executed simultaneously.
  RecordingContentStory:
    type: object
    properties:
      type:
        type: string
        description: Type of ephemeral story attachment.
        enum:
          - Mention
          - Reply
      url:
        type: string
        description: URL to the ephemeral story.
      replyToId:
        type: string
        description: ID of the ephemeral story being replied to.
    description: Story object.
  RecordingEmailMessage:
    type: object
    properties:
      htmlBody:
        type: string
      textBody:
        type: string
      id:
        type: string
      to:
        type: array
        items:
          $ref: '#/definitions/EmailAddress'
      cc:
        type: array
        items:
          $ref: '#/definitions/EmailAddress'
      bcc:
        type: array
        items:
          $ref: '#/definitions/EmailAddress'
      from:
        $ref: '#/definitions/EmailAddress'
      subject:
        type: string
      attachments:
        type: array
        items:
          $ref: '#/definitions/EmailAttachment'
      time:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  RecordingMessagingMessage:
    type: object
    properties:
      from:
        type: string
        description: The message sender session id.
      fromUser:
        description: The user who sent this message.
        $ref: '#/definitions/User'
      fromExternalContact:
        description: The PureCloud external contact sender details.
        $ref: '#/definitions/ExternalContact'
      to:
        type: string
        description: The message recipient.
      timestamp:
        type: string
        format: date-time
        description: >-
          The time when the message was sent. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      id:
        type: string
        description: A globally unique identifier for this communication.
      messageText:
        type: string
        description: The content of this message.
      messageMediaAttachments:
        type: array
        description: List of media objects attached  with this message.
        items:
          $ref: '#/definitions/MessageMediaAttachment'
      messageStickerAttachments:
        type: array
        description: List of message stickers attached with this message.
        items:
          $ref: '#/definitions/MessageStickerAttachment'
      quickReplies:
        type: array
        description: List of quick reply options offered with this message.
        items:
          $ref: '#/definitions/QuickReply'
      buttonResponse:
        description: Button Response selected by user for this message.
        $ref: '#/definitions/ButtonResponse'
      story:
        description: Ephemeral story content.
        $ref: '#/definitions/RecordingContentStory'
  Endpoint:
    type: object
    required:
      - name
      - schema
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: Name
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      count:
        type: integer
        format: int32
      properties:
        type: object
        additionalProperties:
          type: object
      schema:
        description: Schema
        $ref: '#/definitions/DomainEntityRef'
      enabled:
        type: boolean
      site:
        $ref: '#/definitions/DomainEntityRef'
      dids:
        type: array
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OrphanRecording:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      createdTime:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      recoveredTime:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      providerType:
        type: string
        enum:
          - EDGE
          - CHAT
          - EMAIL
          - SCREEN_RECORDING
          - PUREENGAGE
          - PURECONNECT
      mediaSizeBytes:
        type: integer
        format: int64
      mediaType:
        type: string
        enum:
          - CALL
          - CHAT
          - EMAIL
          - SCREEN
      fileState:
        type: string
        enum:
          - ARCHIVED
          - AVAILABLE
          - DELETED
          - RESTORED
          - RESTORING
          - UPLOADING
      providerEndpoint:
        $ref: '#/definitions/Endpoint'
      recording:
        $ref: '#/definitions/Recording'
      orphanStatus:
        type: string
        description: The status of the orphaned recording's conversation.
        enum:
          - NO_CONVERSATION
          - UNKNOWN_CONVERSATION
          - CONVERSATION_NOT_COMPLETE
          - CONVERSATION_NOT_EVALUATED
          - EVALUATED
      sourceOrphaningId:
        type: string
        description: >-
          An identifier used during recovery operations by the supplying hybrid
          platform to track back and determine which interaction this recording
          is associated with
      region:
        type: string
        enum:
          - af-south-1
          - ap-east-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-south-1
          - ap-southeast-2
          - ap-southeast-3
          - ca-central-1
          - eu-central-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - sa-east-1
          - us-east-1
          - us-west-2
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OrphanUpdateRequest:
    type: object
    properties:
      archiveDate:
        type: string
        format: date-time
        description: >-
          The orphan recording's archive date. Must be greater than 1 day from
          now if set. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      deleteDate:
        type: string
        format: date-time
        description: >-
          The orphan recording's delete date. Must be greater than archiveDate
          and exportDate if set, otherwise one day from now. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      exportDate:
        type: string
        format: date-time
        description: >-
          The orphan recording's export date. Must be greater than 1 day from
          now if set. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      integrationId:
        type: string
        description: >-
          IntegrationId to access AWS S3 bucket for export. This field is
          required if exportDate is set.
      conversationId:
        type: string
        description: >-
          A conversation Id that this orphan's recording is to be attached to.
          If not present, the conversationId will be deduced from the recording
          media.
  OrphanRecordingListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/OrphanRecording'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  PublishForm:
    type: object
    required:
      - id
      - published
    properties:
      published:
        type: boolean
        description: Is this form published
      id:
        type: string
        description: Unique Id for this version of this form
  SurveyFormEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/SurveyForm'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  RecordingMetadata:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      conversationId:
        type: string
      path:
        type: string
      startTime:
        type: string
        description: >-
          The start time of the recording for screen recordings. Null for other
          types.
      endTime:
        type: string
      media:
        type: string
        description: >-
          The type of media that the recording is. At the moment that could be
          audio, chat, email, or message.
      annotations:
        type: array
        description: >-
          Annotations that belong to the recording. Populated when recording
          filestate is AVAILABLE.
        items:
          $ref: '#/definitions/Annotation'
      fileState:
        type: string
        description: >-
          Represents the current file state for a recording. Examples:
          Uploading, Archived, etc
        enum:
          - ARCHIVED
          - AVAILABLE
          - DELETED
          - RESTORED
          - RESTORING
          - UPLOADING
          - ERROR
      restoreExpirationTime:
        type: string
        format: date-time
        description: >-
          The amount of time a restored recording will remain restored before
          being archived again. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      archiveDate:
        type: string
        format: date-time
        description: >-
          The date the recording will be archived. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      archiveMedium:
        type: string
        description: 'The type of archive medium used. Example: CloudArchive'
        enum:
          - CLOUDARCHIVE
      deleteDate:
        type: string
        format: date-time
        description: >-
          The date the recording will be deleted. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      exportDate:
        type: string
        format: date-time
        description: >-
          The date the recording will be exported. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      exportedDate:
        type: string
        format: date-time
        description: >-
          The date the recording was exported. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      maxAllowedRestorationsForOrg:
        type: integer
        format: int32
        description: How many archive restorations the organization is allowed to have.
      remainingRestorationsAllowedForOrg:
        type: integer
        format: int32
        description: The remaining archive restorations the organization has.
      sessionId:
        type: string
        description: >-
          The session id represents an external resource id, such as email,
          call, chat, etc
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  RecordingRetention:
    type: object
    properties:
      conversationId:
        type: string
      recordingId:
        type: string
      archiveDate:
        type: string
        format: date-time
        description: >-
          The date the recording will be archived. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      archiveMedium:
        type: string
        description: 'The type of archive medium used. Example: CloudArchive'
        enum:
          - CLOUDARCHIVE
      deleteDate:
        type: string
        format: date-time
        description: >-
          The date the recording will be deleted. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      exportDate:
        type: string
        format: date-time
        description: >-
          The date the recording will be exported. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      exportedDate:
        type: string
        format: date-time
        description: >-
          The date the recording was exported. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      creationTime:
        type: string
        format: date-time
        description: >-
          The creation time of the recording. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  RecordingRetentionCursorEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/RecordingRetention'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  FailedRecordingEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/RecordingJobFailedRecording'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  RecordingJobFailedRecording:
    type: object
    properties:
      conversation:
        description: Conversation
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      recording:
        description: Recording
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
  RecordingJob:
    type: object
    required:
      - state
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      state:
        type: string
        description: The current state of the job.
        enum:
          - FULFILLED
          - PENDING
          - READY
          - PROCESSING
          - CANCELLED
          - FAILED
      recordingJobsQuery:
        description: Original query of the job.
        readOnly: true
        $ref: '#/definitions/RecordingJobsQuery'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date when the job was created. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      totalConversations:
        type: integer
        format: int32
        description: Total number of conversations affected.
        readOnly: true
      totalRecordings:
        type: integer
        format: int32
        description: Total number of recordings affected.
        readOnly: true
      totalSkippedRecordings:
        type: integer
        format: int32
        description: Total number of recordings that have been skipped.
        readOnly: true
      totalFailedRecordings:
        type: integer
        format: int32
        description: Total number of recordings that the bulk job failed to process.
        readOnly: true
      totalProcessedRecordings:
        type: integer
        format: int32
        description: Total number of recordings have been processed.
        readOnly: true
      percentProgress:
        type: integer
        format: int32
        description: Progress in percentage based on the number of recordings
        readOnly: true
      errorMessage:
        type: string
        description: Error occurred during the job execution
        readOnly: true
      failedRecordings:
        type: string
        description: Get IDs of recordings that the bulk job failed for
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      user:
        description: Details of the user created the job
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
  RecordingJobsQuery:
    type: object
    required:
      - action
      - conversationQuery
    properties:
      action:
        type: string
        description: >-
          Operation to perform bulk task. If the operation will cause the delete
          date of a recording to be older than the export date, the export date
          will be adjusted to the delete date.
        enum:
          - DELETE
          - EXPORT
      actionDate:
        type: string
        format: date-time
        description: >-
          The date when the action will be performed. If
          screenRecordingActionDate is also provided, this value is only used
          for non-screen recordings. Otherwise this value is used for all
          recordings. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      actionAge:
        type: integer
        format: int32
        description: >-
          The number of days after each recording's creation date when the
          action will be performed. If screenRecordingActionAge is also
          provided, this value is only used for non-screen recordings. Otherwise
          this value is used for all recordings.
      screenRecordingActionDate:
        type: string
        format: date-time
        description: >-
          The date when the action will be performed for screen recordings. If
          this is provided then includeScreenRecordings must be true. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      screenRecordingActionAge:
        type: integer
        format: int32
        description: >-
          The number of days after each screen recording's creation date when
          the action will be performed. If this is provided then
          includeScreenRecordings must be true.
      integrationId:
        type: string
        description: >-
          IntegrationId to Access AWS S3 bucket for bulk recording exports. This
          field is required and used only for EXPORT action.
      includeRecordingsWithSensitiveData:
        type: boolean
        description: >-
          Whether to include recordings with PCI DSS and/or PII data, default
          value = false 
      includeScreenRecordings:
        type: boolean
        description: >-
          Whether to include Screen recordings for the action, default value =
          true 
      clearExport:
        type: boolean
        description: >-
          For DELETE action, setting this to true will clear any pending exports
          for recordings. This field is not used for EXPORT action. Default
          value = false
      conversationQuery:
        description: >-
          Conversation Query. Note: After the recording is created, it might
          take up to 48 hours for the recording to be included in the submitted
          job query.  This result depends on the analytics data lake job
          completion. See also:
          https://developer.genesys.cloud/analyticsdatamanagement/analytics/jobs/conversation-details-job#data-availability
        $ref: '#/definitions/AsyncConversationQuery'
  ExecuteRecordingJobsQuery:
    type: object
    required:
      - state
    properties:
      state:
        type: string
        description: The desired state for the job to be set to.
        enum:
          - PROCESSING
  RecordingJobEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/RecordingJob'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  RecordingSettings:
    type: object
    properties:
      maxSimultaneousStreams:
        type: integer
        format: int32
        description: Maximum number of simultaneous screen recording streams
      maxConfigurableScreenRecordingStreams:
        type: integer
        format: int32
        description: Upper limit that maxSimultaneousStreams can be configured
      regionalRecordingStorageEnabled:
        type: boolean
        description: >-
          Store call recordings in the region where they are intended to be
          recorded, otherwise in the organization's home region
  RecordingUploadReport:
    type: object
    properties:
      id:
        type: string
        description: The report id.
      name:
        type: string
      state:
        type: string
        description: The current status of the upload report.
        enum:
          - InProgress
          - Completed
          - Failed
      signedUrl:
        type: string
        description: For COMPLETED tasks, the signed url to download the report.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  RecordingUploadReportRequest:
    type: object
    required:
      - dateSince
    properties:
      dateSince:
        type: string
        format: date-time
        description: >-
          Report will include uploads since this date. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      uploadStatus:
        type: string
        description: Report will include uploads with this status
        enum:
          - Pending
          - Success
          - Failure
          - WaitForConversation
  ScreenRecordingMetaData:
    type: object
    properties:
      trackId:
        type: string
      mediaId:
        type: string
      screenId:
        type: string
      originX:
        type: integer
        format: int32
      originY:
        type: integer
        format: int32
      primary:
        type: boolean
      main:
        type: boolean
  ScreenRecordingMetaDataRequest:
    type: object
    properties:
      participantJid:
        type: string
      roomId:
        type: string
      metaData:
        type: array
        items:
          $ref: '#/definitions/ScreenRecordingMetaData'
  ScreenRecordingSession:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      user:
        $ref: '#/definitions/User'
      communicationId:
        type: string
        description: The id of the communication that is being recorded on the conversation
      conversation:
        $ref: '#/definitions/Conversation'
      startTime:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ScreenRecordingSessionListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ScreenRecordingSession'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ScreenRecordingSessionRequest:
    type: object
    properties:
      state:
        type: string
        description: 'The screen recording session''s state.  Values can be: ''stopped'''
        enum:
          - STOPPED
      archiveDate:
        type: string
        format: date-time
        description: >-
          The screen recording session's archive date. Must be greater than 1
          day from now if set. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      deleteDate:
        type: string
        format: date-time
        description: >-
          The screen recording session's delete date. Must be greater than
          archiveDate if set, otherwise one day from now. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  AcknowledgeScreenRecordingRequest:
    type: object
    properties:
      participantJid:
        type: string
      roomId:
        type: string
      conversationId:
        type: string
  SurveyFormAndScoringSet:
    type: object
    properties:
      surveyForm:
        $ref: '#/definitions/SurveyForm'
      answers:
        $ref: '#/definitions/SurveyScoringSet'
  Library:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The library name.
      version:
        type: integer
        format: int32
        description: Current version for this resource.
        readOnly: true
      createdBy:
        description: User that created the library.
        readOnly: true
        $ref: '#/definitions/User'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date and time the response was created. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      responseType:
        type: string
        description: >-
          This value is deprecated. Responses representing message templates may
          be added to any library.
        enum:
          - MessagingTemplate
          - CampaignSmsTemplate
          - CampaignEmailTemplate
          - Footer
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LibraryEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Library'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  FooterTemplate:
    type: object
    properties:
      type:
        type: string
        description: Specifies the type represented by Footer.
        enum:
          - Signature
      applicableResources:
        type: array
        description: Specifies the canned response template where the footer can be used.
        items:
          type: string
          enum:
            - Campaign
    description: The Footer template identifies the Footer type and its footerUsage
  MessagingTemplate:
    type: object
    properties:
      whatsApp:
        description: Defines a messaging template for a WhatsApp messaging channel
        $ref: '#/definitions/WhatsAppDefinition'
    description: >-
      The messaging template identifies a structured message templates supported
      by a messaging channel.
  Response:
    type: object
    required:
      - libraries
      - texts
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      version:
        type: integer
        format: int32
        description: Version number required for updates.
      libraries:
        type: array
        description: One or more libraries response is associated with.
        items:
          $ref: '#/definitions/DomainEntityRef'
      texts:
        type: array
        description: One or more texts associated with the response.
        items:
          $ref: '#/definitions/ResponseText'
      createdBy:
        description: User that created the response
        readOnly: true
        $ref: '#/definitions/User'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date and time the response was created. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      interactionType:
        type: string
        description: The interaction type for this response.
        enum:
          - chat
          - email
          - twitter
      substitutions:
        type: array
        description: >-
          Details about any text substitutions used in the texts for this
          response.
        items:
          $ref: '#/definitions/ResponseSubstitution'
      substitutionsSchema:
        description: Metadata about the text substitutions in json schema format.
        $ref: '#/definitions/JsonSchemaDocument'
      responseType:
        type: string
        description: The response type represented by the response.
        enum:
          - MessagingTemplate
          - CampaignSmsTemplate
          - CampaignEmailTemplate
          - Footer
      messagingTemplate:
        description: >-
          An optional messaging template definition for
          responseType.MessagingTemplate.
        $ref: '#/definitions/MessagingTemplate'
      assets:
        type: array
        description: Assets used in the response
        items:
          $ref: '#/definitions/AddressableEntityRef'
      footer:
        description: Footer template definition for responseType.Footer.
        $ref: '#/definitions/FooterTemplate'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Contains information about a response.
  ResponseEntityList:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Response'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
    description: Query result list
  ResponseQueryResults:
    type: object
    required:
      - results
    properties:
      results:
        description: Contains the query results
        $ref: '#/definitions/ResponseEntityList'
    description: Used to return response query results
  ResponseSubstitution:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: Response substitution identifier.
      description:
        type: string
        description: Response substitution description.
      defaultValue:
        type: string
        description: Response substitution default value.
    description: Contains information about the substitutions associated with a response.
  ResponseText:
    type: object
    required:
      - content
    properties:
      content:
        type: string
        description: Response text content.
      contentType:
        type: string
        description: Response text content type.
        enum:
          - text/plain
          - text/html
    description: Contains information about the text associated with a response.
  WhatsAppDefinition:
    type: object
    required:
      - language
      - name
      - namespace
    properties:
      name:
        type: string
        description: The messaging template name.
      namespace:
        type: string
        description: The messaging template namespace.
      language:
        type: string
        description: >-
          The messaging template language configured for this template. This is
          a WhatsApp specific value. For example, 'en_US'
    description: >-
      A WhatsApp messaging template definition as defined in the WhatsApp
      Business Manager
  ResponseFilter:
    type: object
    required:
      - name
      - operator
      - values
    properties:
      name:
        type: string
        description: >-
          Field to filter on. Allowed values are 'name', 'libraryId',
          'text.contentType', 'messagingTemplate' and 'responseType'
      operator:
        type: string
        description: 'Filter operation: IN, EQUALS, NOTEQUALS.'
        enum:
          - IN
          - EQUALS
          - NOTEQUALS
      values:
        type: array
        description: >-
          Values to filter on. If name is 'responseType' then allowed values are
          'CampaignSmsTemplate', 'CampaignEmailTemplate', 'Footer' and
          'Signature'
        items:
          type: string
    description: Used to filter response queries
  ResponseQueryRequest:
    type: object
    properties:
      queryPhrase:
        type: string
        description: >-
          Query phrase to search response text and name. If not set will match
          all.
      pageSize:
        type: integer
        format: int32
        description: 'The maximum number of hits to return. Default: 25, Maximum: 500.'
      filters:
        type: array
        description: Filter the query results.
        items:
          $ref: '#/definitions/ResponseFilter'
    description: Used to query for responses
  ResponseEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Response'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ResponseAsset:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      contentLength:
        type: integer
        format: int64
        description: response asset size in bytes
      contentLocation:
        type: string
        description: response asset location.
      contentType:
        type: string
        description: MIME type of response asset
      dateCreated:
        type: string
        format: date-time
        description: >-
          Created date of the response asset. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: User who created the response asset
        $ref: '#/definitions/DomainEntityRef'
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified date of the response asset. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedBy:
        description: User who last modified the response asset
        $ref: '#/definitions/DomainEntityRef'
      responses:
        type: array
        description: Canned responses actively using this asset
        items:
          $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ResponseAssetRequest:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: >-
          Name of the file to upload. It must not start with a dot and not end
          with a forward slash. Whitespace and the following characters are not
          allowed: \{^}%`]">[~<#|
      divisionId:
        type: string
        description: >-
          Division to associate to this asset. Can only be used with this
          division.
  ResponseAssetStatus:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      status:
        type: string
        description: Upload status of the asset
        readOnly: true
        enum:
          - InProgress
          - Uploaded
          - Failed
      errorCode:
        type: string
        description: Error code. Used for localization
        readOnly: true
      errorMessage:
        type: string
        description: 'Error message that explains upload failure status '
        readOnly: true
  CreateResponseAssetResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      url:
        type: string
        description: Pre-signed URL to PUT the file to
        readOnly: true
      headers:
        type: object
        description: Required headers when uploading a file through PUT request to the URL
        readOnly: true
        additionalProperties:
          type: string
  CreateResponseAssetRequest:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: >-
          Name of the file to upload. It must not start with a dot and not end
          with a forward slash. Whitespace and the following characters are not
          allowed: \{^}%`]">[~<#|
      divisionId:
        type: string
        description: >-
          Division to associate to this asset. Can only be used with this
          division.
      contentMd5:
        type: string
        description: Content MD-5 of the file to upload
  ResponseAssetSearchResults:
    type: object
    properties:
      total:
        type: integer
        format: int64
        description: The total number of results found
      pageCount:
        type: integer
        format: int32
        description: The total number of pages
      pageSize:
        type: integer
        format: int32
        description: The current page size
      pageNumber:
        type: integer
        format: int32
        description: The current page number
      results:
        type: array
        description: Search results
        items:
          $ref: '#/definitions/ResponseAsset'
  ResponseAssetFilter:
    type: object
    properties:
      endValue:
        type: string
        description: >-
          The end value of the range. This field is used for range search types.
          Accepts numbers and date in ISO8601 format
      values:
        type: array
        description: A list of values for the search to match against
        items:
          type: string
      startValue:
        type: string
        description: >-
          The start value of the range. This field is used for range search
          types. Accepts numbers and date in ISO8601 format
      fields:
        type: array
        description: >-
          Field name to search against. Allowed Values: divisionId, name,
          contentLength, contentType, dateCreated
        items:
          type: string
      value:
        type: string
        description: A value for the search to match against
      type:
        type: string
        description: >-
          How to apply this search criteria against other criteria. Filter type
          supported for each field:- name:[STARTS_WITH, TERM], divisionId:[TERM,
          TERMS], contentLength:[RANGE, GREATER_THAN_EQUAL_TO,
          LESS_THAN_EQUAL_TO], contentType:[STARTS_WITH, TERM]
          dateCreated:[DATE_RANGE]
        enum:
          - TERM
          - TERMS
          - STARTS_WITH
          - RANGE
          - GREATER_THAN_EQUAL_TO
          - LESS_THAN_EQUAL_TO
          - DATE_RANGE
  ResponseAssetSearchRequest:
    type: object
    required:
      - query
    properties:
      pageSize:
        type: integer
        format: int32
        description: 'The number of results per page. Default: 25, Maximum: 100.'
      pageNumber:
        type: integer
        format: int32
        description: The page of resources you want to retrieve
      sortOrder:
        type: string
        description: The sort order for results
        enum:
          - ASC
          - DESC
      sortBy:
        type: string
        description: The field in the resource that you want to sort the results by
      query:
        type: array
        description: Filter the query results.
        items:
          $ref: '#/definitions/ResponseAssetFilter'
  AvailableMediaType:
    type: object
    properties:
      mediaType:
        type: string
        description: Name of the available media type
      availableSubTypes:
        type: array
        description: List of available subtypes for this media type
        items:
          type: string
  AvailableMediaTypeEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/AvailableMediaType'
  ComparisonPeriod:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      kpi:
        type: string
        description: Key Performance Indicator optimised during the comparison period.
        readOnly: true
      dateStarted:
        type: string
        format: date-time
        description: >-
          Start date of the comparison period. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateEnded:
        type: string
        format: date-time
        description: >-
          End date of the comparison period. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      percentageBenefit:
        type: number
        format: double
        description: >-
          The percentage benefit on this queue for the duration of the
          comparison period
        readOnly: true
      kpiResults:
        type: array
        description: KPI results for each metric
        readOnly: true
        items:
          $ref: '#/definitions/KpiResult'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ComparisonPeriodListing:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/ComparisonPeriod'
      selfUri:
        type: string
        format: uri
  KpiResult:
    type: object
    properties:
      kpiTotalOn:
        type: integer
        format: int64
        description: >-
          Absolute metric (in which the KPI is based) total for the interactions
          handled by predictive routing (GPR was on)
        readOnly: true
      kpiTotalOff:
        type: integer
        format: int64
        description: >-
          Absolute metric (in which the KPI is based) total for the interactions
          not routed by predictive routing (GPR was off)
        readOnly: true
      interactionCountOn:
        type: integer
        format: int64
        description: Total interactions handled by predictive routing (GPR was on)
        readOnly: true
      interactionCountOff:
        type: integer
        format: int64
        description: Total interactions not routed by predictive routing (GPR was off)
        readOnly: true
      mediaType:
        type: string
        description: Media type used for the KPI
        readOnly: true
        enum:
          - voice
          - email
          - message
      percentageBenefit:
        type: number
        format: double
        description: >-
          The percentage benefit for this media type for the duration of the
          comparison period
        readOnly: true
  QueueEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Queue'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  QueueRequest:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The queue name
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      description:
        type: string
        description: The queue description.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the queue was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the queue. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedBy:
        type: string
        description: The ID of the user that last modified the queue.
      createdBy:
        type: string
        description: The ID of the user that created the queue.
      memberCount:
        type: integer
        format: int32
        description: The total number of members in the queue.
        readOnly: true
      userMemberCount:
        type: integer
        format: int32
        description: The number of user members (i.e., non-group members) in the queue.
        readOnly: true
      joinedMemberCount:
        type: integer
        format: int32
        description: The number of joined members in the queue.
        readOnly: true
      mediaSettings:
        description: The media settings for the queue.
        $ref: '#/definitions/QueueMediaSettings'
      routingRules:
        type: array
        description: The routing rules for the queue, used for Preferred Agent Routing.
        items:
          $ref: '#/definitions/RoutingRule'
      conditionalGroupRouting:
        description: The Conditional Group Routing settings for the queue.
        $ref: '#/definitions/ConditionalGroupRouting'
      bullseye:
        description: The bullseye settings for the queue.
        $ref: '#/definitions/Bullseye'
      acwSettings:
        description: The ACW settings for the queue.
        $ref: '#/definitions/AcwSettings'
      skillEvaluationMethod:
        type: string
        description: The skill evaluation method to use when routing conversations.
        enum:
          - NONE
          - BEST
          - ALL
      memberGroups:
        type: array
        description: >-
          The groups of agents associated with the queue, if any.  Queue
          membership will update to match group membership changes.
        uniqueItems: true
        items:
          $ref: '#/definitions/MemberGroup'
      queueFlow:
        description: The in-queue flow to use for call conversations waiting in queue.
        $ref: '#/definitions/DomainEntityRef'
      emailInQueueFlow:
        description: The in-queue flow to use for email conversations waiting in queue.
        $ref: '#/definitions/DomainEntityRef'
      messageInQueueFlow:
        description: The in-queue flow to use for message conversations waiting in queue.
        $ref: '#/definitions/DomainEntityRef'
      whisperPrompt:
        description: The prompt used for whisper on the queue, if configured.
        $ref: '#/definitions/DomainEntityRef'
      onHoldPrompt:
        description: >-
          The audio to be played when calls on this queue are on hold. If not
          configured, the default on-hold music will play.
        $ref: '#/definitions/DomainEntityRef'
      autoAnswerOnly:
        type: boolean
        description: >-
          Specifies whether the configured whisper should play for all ACD
          calls, or only for those which are auto-answered.
      enableTranscription:
        type: boolean
        description: Indicates whether voice transcription is enabled for this queue.
      enableManualAssignment:
        type: boolean
        description: Indicates whether manual assignment is enabled for this queue.
      agentOwnedRouting:
        description: The Agent Owned Routing settings for the queue
        $ref: '#/definitions/AgentOwnedRouting'
      directRouting:
        description: The Direct Routing settings for the queue
        $ref: '#/definitions/DirectRouting'
      callingPartyName:
        type: string
        description: >-
          The name to use for caller identification for outbound calls from this
          queue.
      callingPartyNumber:
        type: string
        description: >-
          The phone number to use for caller identification for outbound calls
          from this queue.
      defaultScripts:
        type: object
        description: The default script Ids for the communication types.
        additionalProperties:
          $ref: '#/definitions/Script'
      outboundMessagingAddresses:
        description: The messaging addresses for the queue.
        $ref: '#/definitions/QueueMessagingAddresses'
      outboundEmailAddress:
        $ref: '#/definitions/QueueEmailAddress'
      peerId:
        type: string
        description: The ID of an associated external queue.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WrapupCodeEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WrapupCode'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  WrapUpCodeReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
  UserQueue:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The queue description.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the queue was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the queue. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedBy:
        type: string
        description: The ID of the user that last modified the queue.
      createdBy:
        type: string
        description: The ID of the user that created the queue.
      memberCount:
        type: integer
        format: int32
        description: The total number of members in the queue.
        readOnly: true
      userMemberCount:
        type: integer
        format: int32
        description: The number of user members (i.e., non-group members) in the queue.
        readOnly: true
      joinedMemberCount:
        type: integer
        format: int32
        description: The number of joined members in the queue.
        readOnly: true
      mediaSettings:
        description: The media settings for the queue.
        $ref: '#/definitions/QueueMediaSettings'
      routingRules:
        type: array
        description: The routing rules for the queue, used for Preferred Agent Routing.
        items:
          $ref: '#/definitions/RoutingRule'
      conditionalGroupRouting:
        description: The Conditional Group Routing settings for the queue.
        $ref: '#/definitions/ConditionalGroupRouting'
      bullseye:
        description: The bullseye settings for the queue.
        $ref: '#/definitions/Bullseye'
      acwSettings:
        description: The ACW settings for the queue.
        $ref: '#/definitions/AcwSettings'
      skillEvaluationMethod:
        type: string
        description: The skill evaluation method to use when routing conversations.
        enum:
          - NONE
          - BEST
          - ALL
      memberGroups:
        type: array
        description: >-
          The groups of agents associated with the queue, if any.  Queue
          membership will update to match group membership changes.
        uniqueItems: true
        items:
          $ref: '#/definitions/MemberGroup'
      queueFlow:
        description: The in-queue flow to use for call conversations waiting in queue.
        $ref: '#/definitions/DomainEntityRef'
      emailInQueueFlow:
        description: The in-queue flow to use for email conversations waiting in queue.
        $ref: '#/definitions/DomainEntityRef'
      messageInQueueFlow:
        description: The in-queue flow to use for message conversations waiting in queue.
        $ref: '#/definitions/DomainEntityRef'
      whisperPrompt:
        description: The prompt used for whisper on the queue, if configured.
        $ref: '#/definitions/DomainEntityRef'
      onHoldPrompt:
        description: >-
          The audio to be played when calls on this queue are on hold. If not
          configured, the default on-hold music will play.
        $ref: '#/definitions/DomainEntityRef'
      enableTranscription:
        type: boolean
        description: Indicates whether voice transcription is enabled for this queue.
      enableManualAssignment:
        type: boolean
        description: Indicates whether manual assignment is enabled for this queue.
      agentOwnedRouting:
        description: The Agent Owned Routing settings for the queue
        $ref: '#/definitions/AgentOwnedRouting'
      directRouting:
        description: The Direct Routing settings for the queue
        $ref: '#/definitions/DirectRouting'
      callingPartyName:
        type: string
        description: >-
          The name to use for caller identification for outbound calls from this
          queue.
      callingPartyNumber:
        type: string
        description: >-
          The phone number to use for caller identification for outbound calls
          from this queue.
      defaultScripts:
        type: object
        description: The default script Ids for the communication types.
        additionalProperties:
          $ref: '#/definitions/Script'
      outboundMessagingAddresses:
        description: The messaging addresses for the queue.
        $ref: '#/definitions/QueueMessagingAddresses'
      outboundEmailAddress:
        $ref: '#/definitions/QueueEmailAddress'
      peerId:
        type: string
        description: The ID of an associated external queue.
      joined:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UserQueueEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UserQueue'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CreateQueueRequest:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The queue name
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      description:
        type: string
        description: The queue description.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the queue was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the queue. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedBy:
        type: string
        description: The ID of the user that last modified the queue.
      createdBy:
        type: string
        description: The ID of the user that created the queue.
      memberCount:
        type: integer
        format: int32
        description: The total number of members in the queue.
        readOnly: true
      userMemberCount:
        type: integer
        format: int32
        description: The number of user members (i.e., non-group members) in the queue.
        readOnly: true
      joinedMemberCount:
        type: integer
        format: int32
        description: The number of joined members in the queue.
        readOnly: true
      mediaSettings:
        description: The media settings for the queue.
        $ref: '#/definitions/QueueMediaSettings'
      routingRules:
        type: array
        description: The routing rules for the queue, used for Preferred Agent Routing.
        items:
          $ref: '#/definitions/RoutingRule'
      conditionalGroupRouting:
        description: The Conditional Group Routing settings for the queue.
        $ref: '#/definitions/ConditionalGroupRouting'
      bullseye:
        description: The bullseye settings for the queue.
        $ref: '#/definitions/Bullseye'
      acwSettings:
        description: The ACW settings for the queue.
        $ref: '#/definitions/AcwSettings'
      skillEvaluationMethod:
        type: string
        description: The skill evaluation method to use when routing conversations.
        enum:
          - NONE
          - BEST
          - ALL
      memberGroups:
        type: array
        description: >-
          The groups of agents associated with the queue, if any.  Queue
          membership will update to match group membership changes.
        uniqueItems: true
        items:
          $ref: '#/definitions/MemberGroup'
      queueFlow:
        description: The in-queue flow to use for call conversations waiting in queue.
        $ref: '#/definitions/DomainEntityRef'
      emailInQueueFlow:
        description: The in-queue flow to use for email conversations waiting in queue.
        $ref: '#/definitions/DomainEntityRef'
      messageInQueueFlow:
        description: The in-queue flow to use for message conversations waiting in queue.
        $ref: '#/definitions/DomainEntityRef'
      whisperPrompt:
        description: The prompt used for whisper on the queue, if configured.
        $ref: '#/definitions/DomainEntityRef'
      onHoldPrompt:
        description: >-
          The audio to be played when calls on this queue are on hold. If not
          configured, the default on-hold music will play.
        $ref: '#/definitions/DomainEntityRef'
      autoAnswerOnly:
        type: boolean
        description: >-
          Specifies whether the configured whisper should play for all ACD
          calls, or only for those which are auto-answered.
      enableTranscription:
        type: boolean
        description: Indicates whether voice transcription is enabled for this queue.
      enableManualAssignment:
        type: boolean
        description: Indicates whether manual assignment is enabled for this queue.
      agentOwnedRouting:
        description: The Agent Owned Routing settings for the queue
        $ref: '#/definitions/AgentOwnedRouting'
      directRouting:
        description: The Direct Routing settings for the queue
        $ref: '#/definitions/DirectRouting'
      callingPartyName:
        type: string
        description: >-
          The name to use for caller identification for outbound calls from this
          queue.
      callingPartyNumber:
        type: string
        description: >-
          The phone number to use for caller identification for outbound calls
          from this queue.
      defaultScripts:
        type: object
        description: The default script Ids for the communication types.
        additionalProperties:
          $ref: '#/definitions/Script'
      outboundMessagingAddresses:
        description: The messaging addresses for the queue.
        $ref: '#/definitions/QueueMessagingAddresses'
      outboundEmailAddress:
        $ref: '#/definitions/QueueEmailAddress'
      peerId:
        type: string
        description: The ID of an associated external queue.
      sourceQueueId:
        type: string
        description: >-
          The id of an existing queue to copy the settings (does not include GPR
          settings) from when creating a new queue.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TranscriptionSettings:
    type: object
    required:
      - transcription
      - transcriptionConfidenceThreshold
    properties:
      transcription:
        type: string
        description: Setting to enable/disable transcription capability
        enum:
          - Disabled
          - EnabledGlobally
          - EnabledQueueFlow
      transcriptionConfidenceThreshold:
        type: integer
        format: int32
        description: Configure confidence threshold. The possible values are from 1 to 100.
      lowLatencyTranscriptionEnabled:
        type: boolean
        description: >-
          Boolean flag indicating whether low latency transcription via
          Notification API is enabled
      contentSearchEnabled:
        type: boolean
        description: Setting to enable/disable content search
  ContactCenterSettings:
    type: object
    properties:
      removeSkillsFromBlindTransfer:
        type: boolean
        description: Strip skills from transfer
  RoutingSettings:
    type: object
    properties:
      resetAgentScoreOnPresenceChange:
        type: boolean
        description: >-
          Reset agent score when agent presence changes from off-queue to
          on-queue
  RoutingSkill:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the skill.
      dateModified:
        type: string
        format: date-time
        description: >-
          Date last modified. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      state:
        type: string
        description: The current state for this skill.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      version:
        type: string
        description: >-
          Required when updating. Version must be the current version. Only the
          system can assign version.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SkillEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/RoutingSkill'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  MediaUtilization:
    type: object
    properties:
      maximumCapacity:
        type: integer
        format: int32
        description: >-
          Defines the maximum number of conversations of this type that an agent
          can handle at one time.
      interruptableMediaTypes:
        type: array
        description: >-
          Defines the list of other media types that can interrupt a
          conversation of this media type.  Values include call, chat, email,
          callback, and message.
        items:
          type: string
      includeNonAcd:
        type: boolean
        description: If true, then track non-ACD conversations against utilization
  Utilization:
    type: object
    properties:
      utilization:
        type: object
        description: >-
          Map of media type to utilization settings.  Valid media types include
          call, callback, chat, email, and message.
        additionalProperties:
          $ref: '#/definitions/MediaUtilization'
  BenefitAssessment:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      queues:
        type: array
        description: The list of queues that are assessed for Predictive Routing benefit.
        readOnly: true
        items:
          $ref: '#/definitions/AddressableEntityRef'
      kpiAssessments:
        type: array
        description: >-
          A set of key performance indicators applied on the queue to determine
          suitability of Predictive Routing.
        readOnly: true
        items:
          $ref: '#/definitions/KeyPerformanceIndicatorAssessment'
      state:
        type: string
        description: State of the benefit assessment.
        readOnly: true
        enum:
          - Created
          - Finished
          - Failed
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation Date of the benefit assessment. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Modified Date of the benefit assessment. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Check:
    type: object
    properties:
      result:
        type: string
        description: >-
          The result of a check executed. This indicates if the check was
          successful or not.
        readOnly: true
        enum:
          - Passed
          - Failed
          - Unknown
          - Skipped
          - Error
      type:
        type: string
        description: The type of check executed.
        readOnly: true
        enum:
          - HandleTimeValue
          - TransferRateValue
          - SalesConversionRateValue
          - SalesAmountValue
          - RetentionRateValue
          - ChurnRateValue
          - InteractionVolume
          - UserVariance
          - DataCoverage
          - ModelQuality
  KeyPerformanceIndicatorAssessment:
    type: object
    properties:
      kpi:
        type: string
        description: Name of the key performance indicator assessed.
        readOnly: true
      assessmentResult:
        type: string
        description: The overall result of the assessment for a key performance indicator.
        readOnly: true
        enum:
          - Unknown
          - NotSupported
          - High
          - Low
          - Error
      checks:
        type: array
        description: Set of checks executed as part of an assessment.
        readOnly: true
        items:
          $ref: '#/definitions/Check'
  CreateBenefitAssessmentRequest:
    type: object
    required:
      - queueIds
    properties:
      queueIds:
        type: array
        description: >-
          The list of queue ids that are to be assessed for Predictive Routing
          benefit.
        items:
          type: string
  AssessmentListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/BenefitAssessment'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  BenefitAssessmentJob:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      state:
        type: string
        description: State of the benefit assessment job.
        readOnly: true
        enum:
          - Created
          - Finished
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation Date of the benefit assessment job. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Modified Date of the benefit assessment job. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CreateBenefitAssessmentJobRequest:
    type: object
    properties:
      divisionIds:
        type: array
        description: >-
          The list of division ids for routing queues that are to be assessed
          for Predictive Routing benefit.
        items:
          type: string
  AssessmentJobListing:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/BenefitAssessmentJob'
      selfUri:
        type: string
        format: uri
  RoutingConversationAttributesResponse:
    type: object
    properties:
      priority:
        type: integer
        format: int32
        description: >-
          Current priority value on in-queue conversation. Range:[-25000000,
          25000000]
      skills:
        type: array
        description: Current routing skills on in-queue conversation
        items:
          $ref: '#/definitions/RoutingSkill'
      language:
        description: Current language on in-queue conversation
        $ref: '#/definitions/Language'
      scoredAgents:
        type: array
        description: Current scored agents on in-queue conversation
        items:
          $ref: '#/definitions/ScoredAgent'
  RequestScoredAgent:
    type: object
    properties:
      id:
        type: string
        description: Agent's user ID
      score:
        type: integer
        format: int32
        description: >-
          Agent's score for the current conversation, from 0 - 100, higher being
          better
  RoutingConversationAttributesRequest:
    type: object
    properties:
      priority:
        type: integer
        format: int32
        description: >-
          Priority for the conversation.  Each point of priority is equivalent
          to one minute of time in queue.  Range:[-25000000, 25000000].  To
          reset, specify 0.
        minimum: -25000000
        maximum: 25000000
      skillIds:
        type: array
        description: >-
          Skill requirements for the conversation.  To remove all skill
          requirements, specify an empty list, i.e. [].
        items:
          type: string
      languageId:
        type: string
        description: >-
          Language requirement for the conversation.  To remove the language
          requirement, specify an empty string, i.e., "".
      requestScoredAgents:
        type: array
        items:
          $ref: '#/definitions/RequestScoredAgent'
  InboundDomain:
    type: object
    properties:
      id:
        type: string
        description: 'Unique Id of the domain such as: example.com'
      name:
        type: string
      mxRecordStatus:
        type: string
        description: Mx Record Status
        enum:
          - VALID
          - INVALID
          - NOT_AVAILABLE
      subDomain:
        type: boolean
        description: >-
          Indicates if this a PureCloud sub-domain.  If true, then the
          appropriate DNS records are created for sending/receiving email.
      mailFromSettings:
        description: >-
          The DNS settings if the inbound domain is using a custom Mail From.
          These settings can only be used on InboundDomains where subDomain is
          false.
        $ref: '#/definitions/MailFromResult'
      customSMTPServer:
        description: >-
          The custom SMTP server integration to use when sending outbound emails
          from this domain.
        $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  MailFromResult:
    type: object
    required:
      - mailFromDomain
    properties:
      status:
        type: string
        description: The verification status.
        enum:
          - FAILED
          - PENDING
          - VERIFIED
          - UNKNOWN
      records:
        type: array
        description: >-
          The list of DNS records that pertain that need to exist for
          verification.
        items:
          $ref: '#/definitions/Record'
      mailFromDomain:
        type: string
        description: The custom MAIL FROM domain.
  Record:
    type: object
    required:
      - name
      - type
      - value
    properties:
      name:
        type: string
        description: The name of the record.
      type:
        type: string
        description: 'The type of the record. (Example values:  MX, TXT, CNAME)'
      value:
        type: string
        description: The value of the record.
  InboundDomainPatchRequest:
    type: object
    properties:
      mailFromSettings:
        description: >-
          The DNS settings if the inbound domain is using a custom Mail From.
          These settings can only be used on InboundDomains where subDomain is
          false.
        $ref: '#/definitions/MailFromResult'
      customSMTPServer:
        description: >-
          The custom SMTP server integration to use when sending outbound emails
          from this domain.
        $ref: '#/definitions/DomainEntityRef'
  TestMessage:
    type: object
    required:
      - from
      - textBody
      - to
    properties:
      id:
        type: string
        description: >-
          After the message has been sent, this is the value of the Message-ID
          email header.
        readOnly: true
      to:
        type: array
        description: The recipients of the email message.
        items:
          $ref: '#/definitions/EmailAddress'
      from:
        description: The sender of the email message.
        $ref: '#/definitions/EmailAddress'
      subject:
        type: string
        description: The subject of the email message.
      textBody:
        type: string
        description: The text body of the email message.
      htmlBody:
        type: string
        description: The html body of the email message
      time:
        type: string
        format: date-time
        description: >-
          The time when the message was sent. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  VerificationResult:
    type: object
    properties:
      status:
        type: string
        description: The verification status.
        enum:
          - FAILED
          - PENDING
          - VERIFIED
          - UNKNOWN
      records:
        type: array
        description: >-
          The list of DNS records that pertain that need to exist for
          verification.
        items:
          $ref: '#/definitions/Record'
  InboundDomainEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/InboundDomain'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  EmailSetup:
    type: object
    properties:
      rootDomain:
        type: string
        description: The root PureCloud domain that all sub-domains are created from.
  OutboundDomain:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: 'Unique Id of the domain such as: example.com'
      name:
        type: string
      cnameVerificationResult:
        description: CNAME registration Status
        $ref: '#/definitions/VerificationResult'
      dkimVerificationResult:
        description: DKIM registration Status
        $ref: '#/definitions/VerificationResult'
      senderType:
        type: string
        description: Sender Type
        enum:
          - Unknown
          - EmailDomain
          - MockEmailDomain
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DnsRecordEntry:
    type: object
    properties:
      host:
        type: string
        description: the hostname of the DNS entry
      recordContents:
        type: string
        description: the payload of the DNS entry
      verificationStatus:
        type: string
        description: the current status of the related verification process
        enum:
          - Pending
          - Verified
          - Failed
          - Unknown
  EmailOutboundDomainResult:
    type: object
    properties:
      dnsCnameBounceRecord:
        $ref: '#/definitions/DnsRecordEntry'
      dnsTxtSendingRecord:
        $ref: '#/definitions/DnsRecordEntry'
      domainName:
        type: string
      senderStatus:
        type: string
        enum:
          - RequestReceived
          - ProvisionRequestSentVendor
          - Provisioned
          - Error
          - Deprovisioned
      senderType:
        type: string
        enum:
          - Unknown
          - EmailDomain
          - MockEmailDomain
  OutboundDomainEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/OutboundDomain'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  InboundRouteEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/InboundRoute'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  Flow:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The flow identifier
      name:
        type: string
        description: The flow name
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      description:
        type: string
      type:
        type: string
        enum:
          - BOT
          - COMMONMODULE
          - DIGITALBOT
          - INBOUNDCALL
          - INBOUNDCHAT
          - INBOUNDEMAIL
          - INBOUNDSHORTMESSAGE
          - INQUEUECALL
          - INQUEUEEMAIL
          - INQUEUESHORTMESSAGE
          - OUTBOUNDCALL
          - SECURECALL
          - SPEECH
          - SURVEYINVITE
          - VOICE
          - VOICEMAIL
          - WORKFLOW
          - WORKITEM
      lockedUser:
        description: User that has the flow locked.
        $ref: '#/definitions/User'
      lockedClient:
        description: OAuth client that has the flow locked.
        $ref: '#/definitions/DomainEntityRef'
      active:
        type: boolean
      system:
        type: boolean
      deleted:
        type: boolean
      publishedVersion:
        $ref: '#/definitions/FlowVersion'
      savedVersion:
        $ref: '#/definitions/FlowVersion'
      inputSchema:
        type: object
        description: json schema describing the inputs for the flow
      outputSchema:
        type: object
        description: json schema describing the outputs for the flow
      checkedInVersion:
        $ref: '#/definitions/FlowVersion'
      debugVersion:
        $ref: '#/definitions/FlowVersion'
      publishedBy:
        $ref: '#/definitions/User'
      currentOperation:
        $ref: '#/definitions/Operation'
      nluInfo:
        description: >-
          Information about the natural language understanding configuration for
          the published version of the flow
        readOnly: true
        $ref: '#/definitions/NluInfo'
      supportedLanguages:
        type: array
        description: List of supported languages for the published version of the flow.
        readOnly: true
        items:
          $ref: '#/definitions/SupportedLanguage'
      compatibleFlowTypes:
        type: array
        description: >-
          Compatible flow types designate which flow types are allowed to embed
          a flow’s configuration within their own flow configuration.  Currently
          the only flows that can be embedded are Common Module flows and the
          embedding flow can invoke them using the Call Common Module action.
        readOnly: true
        items:
          type: string
          enum:
            - BOT
            - COMMONMODULE
            - DIGITALBOT
            - INBOUNDCALL
            - INBOUNDCHAT
            - INBOUNDEMAIL
            - INBOUNDSHORTMESSAGE
            - INQUEUECALL
            - INQUEUEEMAIL
            - INQUEUESHORTMESSAGE
            - OUTBOUNDCALL
            - SECURECALL
            - SPEECH
            - SURVEYINVITE
            - VOICE
            - VOICEMAIL
            - WORKFLOW
            - WORKITEM
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  FlowVersion:
    type: object
    properties:
      id:
        type: string
        description: The flow version identifier
      name:
        type: string
      commitVersion:
        type: string
      configurationVersion:
        type: string
      type:
        type: string
        enum:
          - PUBLISH
          - CHECKIN
          - SAVE
      secure:
        type: boolean
      debug:
        type: boolean
      createdBy:
        $ref: '#/definitions/User'
      createdByClient:
        $ref: '#/definitions/DomainEntityRef'
      configurationUri:
        type: string
      dateCreated:
        type: integer
        format: int64
      dateCheckedIn:
        type: integer
        format: int64
      dateSaved:
        type: integer
        format: int64
      generationId:
        type: string
      publishResultUri:
        type: string
        format: uri
      inputSchema:
        $ref: '#/definitions/JsonSchemaDocument'
      outputSchema:
        $ref: '#/definitions/JsonSchemaDocument'
      datePublished:
        type: string
        format: date-time
        description: >-
          The date this version became the published version of the flow. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      datePublishedEnd:
        type: string
        format: date-time
        description: >-
          The date this version was no longer the published version of the flow.
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      nluInfo:
        description: >-
          Information about the natural language understanding configuration for
          the flow version
        readOnly: true
        $ref: '#/definitions/NluInfo'
      supportedLanguages:
        type: array
        description: List of supported languages for this version of the flow
        readOnly: true
        items:
          $ref: '#/definitions/SupportedLanguage'
      compatibleFlowTypes:
        type: array
        description: >-
          Compatible flow types designate which flow types are allowed to embed
          a flow’s configuration within their own flow configuration.  Currently
          the only flows that can be embedded are Common Module flows and the
          embedding flow can invoke them using the Call Common Module action.
        readOnly: true
        items:
          type: string
          enum:
            - BOT
            - COMMONMODULE
            - DIGITALBOT
            - INBOUNDCALL
            - INBOUNDCHAT
            - INBOUNDEMAIL
            - INBOUNDSHORTMESSAGE
            - INQUEUECALL
            - INQUEUEEMAIL
            - INQUEUESHORTMESSAGE
            - OUTBOUNDCALL
            - SECURECALL
            - SPEECH
            - SURVEYINVITE
            - VOICE
            - VOICEMAIL
            - WORKFLOW
            - WORKITEM
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Intent:
    type: object
    properties:
      name:
        type: string
  NluInfo:
    type: object
    properties:
      domain:
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      version:
        readOnly: true
        $ref: '#/definitions/NluDomainVersion'
      intents:
        type: array
        items:
          $ref: '#/definitions/Intent'
      engineVersion:
        type: string
      nluData:
        $ref: '#/definitions/NluDomainVersion'
  Operation:
    type: object
    properties:
      id:
        type: string
      complete:
        type: boolean
      user:
        $ref: '#/definitions/User'
      client:
        $ref: '#/definitions/DomainEntityRef'
      errorMessage:
        type: string
      errorCode:
        type: string
      errorDetails:
        type: array
        items:
          $ref: '#/definitions/Detail'
      errorMessageParams:
        type: object
        additionalProperties:
          type: string
      actionName:
        type: string
        description: Action name
        enum:
          - CREATE
          - CHECKIN
          - CHECKOUT
          - DEBUG
          - DELETE
          - HISTORY
          - PUBLISH
          - REVERT
          - SAVE
          - STATE_CHANGE
          - UPDATE
          - VALIDATE
      actionStatus:
        type: string
        description: Action status
        enum:
          - LOCKED
          - UNLOCKED
          - STARTED
          - PENDING_GENERATION
          - PENDING_BACKEND_NOTIFICATION
          - SUCCESS
          - FAILURE
  Recipient:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      flow:
        description: >-
          An automate flow object which defines the set of actions to be taken,
          when a message is received by this provisioned phone number.
        $ref: '#/definitions/Flow'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date this recipient was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date this recipient was modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: User that created this recipient
        $ref: '#/definitions/User'
      modifiedBy:
        description: User that modified this recipient
        $ref: '#/definitions/User'
      messengerType:
        type: string
        description: The messenger type for this recipient
        enum:
          - sms
          - facebook
          - twitter
          - line
          - whatsapp
          - webmessaging
          - instagram
          - open
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SupportedLanguage:
    type: object
    properties:
      language:
        type: string
        description: Architect supported language tag, e.g. en-us, es-us
        readOnly: true
      isDefault:
        type: boolean
        description: Whether or not this language is the default language
        readOnly: true
  RecipientListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Recipient'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  SmsAddress:
    type: object
    properties:
      id:
        type: string
        description: The id of this address.
        readOnly: true
      name:
        type: string
      street:
        type: string
        description: The number and street address where this address is located.
      city:
        type: string
        description: The city in which this address is in
      region:
        type: string
        description: The state or region this address is in
      postalCode:
        type: string
        description: The postal code this address is in
      countryCode:
        type: string
        description: The ISO country code of this address
      validated:
        type: boolean
        description: >-
          In some countries, addresses are validated to comply with local
          regulation. In those countries, if the address you provide does not
          pass validation, it will not be accepted as an Address. This value
          will be true if the Address has been validated, or false for countries
          that don't require validation or if the Address is non-compliant.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SmsAddressProvision:
    type: object
    required:
      - city
      - countryCode
      - name
      - postalCode
      - region
      - street
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: Name associated with this address
      street:
        type: string
        description: The number and street address where this address is located.
      city:
        type: string
        description: The city in which this address is in
      region:
        type: string
        description: The state or region this address is in
      postalCode:
        type: string
        description: The postal code this address is in
      countryCode:
        type: string
        description: The ISO country code of this address
      autoCorrectAddress:
        type: boolean
        description: >-
          This is used when the address is created. If the value is not set or
          true, then the system will, if necessary, auto-correct the address you
          provide. Set this value to false if the system should not auto-correct
          the address.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SmsAddressEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/SmsAddress'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  SMSAvailablePhoneNumberEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/SmsAvailablePhoneNumber'
  SmsAvailablePhoneNumber:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      phoneNumber:
        type: string
        description: >-
          A phone number available for provisioning in E.164 format. E.g.
          +13175555555 or +34234234234
      countryCode:
        type: string
        description: >-
          The ISO 3166-1 alpha-2 country code of the country this phone number
          is associated with.
      region:
        type: string
        description: The region/province/state the phone number is associated with.
      city:
        type: string
        description: The city the phone number is associated with.
      capabilities:
        type: array
        description: The capabilities of the phone number available for provisioning.
        items:
          type: string
          enum:
            - sms
            - mms
            - voice
      phoneNumberType:
        type: string
        description: The type of phone number available for provisioning.
        enum:
          - local
          - mobile
          - tollfree
          - shortcode
      addressRequirement:
        type: string
        description: >-
          The address requirement needed for provisioning this number. If there
          is a requirement, the address must be the residence or place of
          business of the individual or entity using the phone number.
        enum:
          - none
          - any
          - local
          - foreign
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Compliance:
    type: object
    required:
      - helpSettings
      - optInSettings
      - stopSettings
    properties:
      stopSettings:
        type: array
        description: List of configurations for 'StopSettings' compliance
        items:
          $ref: '#/definitions/StopSettings'
      optInSettings:
        type: array
        description: List of configurations for 'OptInSettings' compliance
        items:
          $ref: '#/definitions/OptInSettings'
      helpSettings:
        type: array
        description: List of configurations for 'HelpSettings' compliance
        items:
          $ref: '#/definitions/HelpSettings'
  ComplianceResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        description: Message response
  HelpSettings:
    type: object
    required:
      - keyword
      - response
    properties:
      keyword:
        type: array
        description: List of keywords for compliance
        items:
          type: string
      response:
        description: The response configuration for the keywords
        $ref: '#/definitions/ComplianceResponse'
  OptInSettings:
    type: object
    required:
      - keyword
      - response
    properties:
      keyword:
        type: array
        description: List of keywords for compliance
        items:
          type: string
      response:
        description: The response configuration for the keywords
        $ref: '#/definitions/ComplianceResponse'
  SmsPhoneNumber:
    type: object
    required:
      - phoneNumber
      - version
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      phoneNumber:
        type: string
        description: >-
          A phone number provisioned for SMS communications in E.164 format.
          E.g. +13175555555 or +34234234234
      phoneNumberType:
        type: string
        description: Type of the phone number provisioned.
        readOnly: true
        enum:
          - local
          - mobile
          - tollfree
          - shortcode
      provisionedThroughPureCloud:
        type: boolean
        description: >-
          Is set to false, if the phone number is provisioned through a SMS
          provider, outside of PureCloud
      phoneNumberStatus:
        type: string
        description: Status of the provisioned phone number.
        enum:
          - INVALID
          - ACTIVE
          - PORTING
          - PENDING
          - PENDING_CANCELLATION
          - INITIATED
      capabilities:
        type: array
        description: The capabilities of the phone number available for provisioning.
        readOnly: true
        items:
          type: string
          enum:
            - sms
            - mms
            - voice
      countryCode:
        type: string
        description: >-
          The ISO 3166-1 alpha-2 country code of the country this phone number
          is associated with.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date this phone number was provisioned. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date this phone number was modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        description: User that provisioned this phone number
        $ref: '#/definitions/User'
      modifiedBy:
        description: User that last modified this phone number
        $ref: '#/definitions/User'
      version:
        type: integer
        format: int32
        description: Version number required for updates.
      purchaseDate:
        type: string
        format: date-time
        description: >-
          Date this phone number was purchased, if the phoneNumberType is
          shortcode. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      cancellationDate:
        type: string
        format: date-time
        description: >-
          Contract end date of this phone number, if the phoneNumberType is
          shortcode. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      renewalDate:
        type: string
        format: date-time
        description: >-
          Contract renewal date of this phone number, if the phoneNumberType is
          shortcode. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      autoRenewable:
        type: string
        description: >-
          Renewal time period of this phone number, if the phoneNumberType is
          shortcode.
        enum:
          - Quarterly
      addressId:
        description: The id of an address attached to this phone number.
        $ref: '#/definitions/SmsAddress'
      shortCodeBillingType:
        type: string
        description: BillingType of this phone number, if the phoneNumberType is shortcode.
        enum:
          - Basic
          - Vanity
      provisioningStatus:
        description: Status of latest asynchronous provisioning action
        $ref: '#/definitions/SmsProvisioningStatus'
      country:
        type: string
        description: >-
          Localized country name for the country code this phone number belongs
          too
      supportsSms:
        type: boolean
        description: Set to true if this phone number has the capability to support SMS
      supportsMms:
        type: boolean
        description: Set to true if this phone number has the capability to support MMS
      supportsVoice:
        type: boolean
        description: Set to true if this phone number has the capability to support voice
      integration:
        description: The Genesys Cloud integration this phone number belongs to.
        $ref: '#/definitions/DomainEntityRef'
      compliance:
        description: >-
          Compliance configuration for short codes, including help, stop and opt
          in.
        $ref: '#/definitions/Compliance'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SmsProvisioningStatus:
    type: object
    properties:
      action:
        type: string
        description: Provisioning action
        enum:
          - Unknown
          - Create
          - Update
          - Delete
      state:
        type: string
        description: Provisioning state
        enum:
          - Running
          - Completed
          - Failed
      error:
        description: Any error associated with a Failed state
        $ref: '#/definitions/ErrorBody'
      version:
        type: integer
        format: int64
        description: The phone number version associated with the provisioning action
  StopSettings:
    type: object
    required:
      - keyword
      - response
    properties:
      keyword:
        type: array
        description: List of keywords for compliance
        items:
          type: string
      response:
        description: The response configuration for the keywords
        $ref: '#/definitions/ComplianceResponse'
  SmsPhoneNumberEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/SmsPhoneNumber'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  SmsPhoneNumberProvision:
    type: object
    required:
      - countryCode
      - phoneNumber
      - phoneNumberType
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      phoneNumber:
        type: string
        description: >-
          A phone number to be used for SMS communications. E.g. +13175555555 or
          +34234234234
      phoneNumberType:
        type: string
        description: Type of the phone number provisioned.
        enum:
          - local
          - mobile
          - tollfree
          - shortcode
      countryCode:
        type: string
        description: >-
          The ISO 3166-1 alpha-2 country code of the country this phone number
          is associated with.
      name:
        type: string
      addressId:
        type: string
        description: >-
          The id of an address added on your account. Due to regulatory
          requirements in some countries, an address may be required when
          provisioning a sms number. In those cases you should provide the
          provisioned sms address id here
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Predictor:
    type: object
    required:
      - kpi
      - queues
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      queues:
        type: array
        description: The queue IDs associated with the predictor.
        items:
          $ref: '#/definitions/AddressableEntityRef'
      kpi:
        type: string
        description: The KPI that the predictor attempts to maximize/minimize.
      routingTimeoutSeconds:
        type: integer
        format: int32
        description: >-
          Number of seconds allocated to predictive routing before attempting a
          different routing method. This is a value between 12 and 900 seconds.
      schedule:
        description: >-
          The predictor schedule that determines when the predictor is used for
          routing interactions.
        $ref: '#/definitions/PredictorSchedule'
      state:
        type: string
        description: The predictor state.
        readOnly: true
        enum:
          - Created
          - Error
          - Active
      dateCreated:
        type: string
        format: date-time
        description: >-
          DateTime indicating when the predictor was created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          DateTime indicating when the predictor was last updated. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      workloadBalancingConfig:
        description: The predictor balancing configuration to enable workload balancing.
        $ref: '#/definitions/PredictorWorkloadBalancing'
      errorCode:
        type: string
        description: >-
          Predictor error code - optional details on why the predictor went into
          error state.
        readOnly: true
      models:
        type: array
        description: Predictor's models
        readOnly: true
        items:
          $ref: '#/definitions/PredictorModelBrief'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PredictorModelBrief:
    type: object
    properties:
      mediaType:
        type: string
        description: The media type of the model.
        readOnly: true
        enum:
          - voice
          - email
          - message
      dateModified:
        type: string
        format: date-time
        description: >-
          The date the model was modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      retrainingErrors:
        type: array
        description: The model's retraining errors.
        readOnly: true
        items:
          $ref: '#/definitions/PredictorModelRetrainingError'
      state:
        type: string
        description: The state of the model
        readOnly: true
        enum:
          - Trained
          - Error
          - InvalidDataset
          - Inactive
  PredictorModelRetrainingError:
    type: object
    required:
      - dateOfFirstOccurrence
      - errorCode
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      errorCode:
        type: string
        description: Error code describing model training failure.
        readOnly: true
        enum:
          - NotEnoughData
          - ServiceError
          - UnknownError
      dateOfFirstOccurrence:
        type: string
        format: date-time
        description: >-
          Date when the first retraining failure happened. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
  PredictorSchedule:
    type: object
    required:
      - scheduleType
    properties:
      scheduleType:
        type: string
        description: The predictor schedule type.
        enum:
          - HourOnHourOff
          - OngoingValueMonitoring
      dateStarted:
        type: string
        format: date-time
        description: >-
          DateTime indicating when the predictor schedule was started. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
  PredictorWorkloadBalancing:
    type: object
    required:
      - enabled
    properties:
      enabled:
        type: boolean
        description: Flag to activate and deactivate workload balancing.
      minimumOccupancy:
        type: integer
        format: int32
        description: >-
          Desired minimum occupancy threshold of agents. Must be between 0 and
          100.
      maximumOccupancy:
        type: integer
        format: int32
        description: >-
          Desired maximum occupancy threshold of agents. Must be between 0 and
          100.
  PatchPredictorRequest:
    type: object
    properties:
      routingTimeoutSeconds:
        type: integer
        format: int32
        description: >-
          Number of seconds allocated to predictive routing before attempting a
          different routing method. This is a value between 12 and 900 seconds.
      schedule:
        description: >-
          The predictor schedule that determines when the predictor is used for
          routing interactions.
        $ref: '#/definitions/PredictorSchedule'
      workloadBalancingConfig:
        description: The predictor balancing configuration to enable workload balancing
        $ref: '#/definitions/PredictorWorkloadBalancing'
  CreatePredictorRequest:
    type: object
    required:
      - kpi
      - queueIds
    properties:
      queueIds:
        type: array
        description: The queue IDs associated with the predictor.
        items:
          type: string
      kpi:
        type: string
        description: The KPI that the predictor attempts to maximize/minimize.
      routingTimeoutSeconds:
        type: integer
        format: int32
        description: >-
          Number of seconds allocated to predictive routing before attempting a
          different routing method. This is a value between 12 and 900 seconds.
      schedule:
        description: >-
          The predictor schedule that determines when the predictor is used for
          routing interactions.
        $ref: '#/definitions/PredictorSchedule'
      workloadBalancingConfig:
        description: The predictor balancing configuration to enable workload balancing
        $ref: '#/definitions/PredictorWorkloadBalancing'
  PredictorListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Predictor'
      nextUri:
        type: string
      selfUri:
        type: string
      previousUri:
        type: string
  KeyPerformanceIndicator:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the Key Performance Indicator.
        readOnly: true
      optimizationType:
        type: string
        description: The optimization type of the Key Performance Indicator.
        readOnly: true
        enum:
          - Maximization
          - Minimization
      problemType:
        type: string
        description: The problem type of the Key Performance Indicator.
        readOnly: true
        enum:
          - Classification
          - Regression
      dateCreated:
        type: string
        format: date-time
        description: >-
          DateTime indicating when the Key Performance Indicator was created.
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          DateTime indicating when the Key Performance Indicator was modified.
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      description:
        type: string
        description: The description of the Key Performance Indicator.
        readOnly: true
      kpiType:
        type: string
        description: The type of Key Performance Indicator.
        readOnly: true
        enum:
          - SalesConversion
          - Churn
          - Retention
          - SalesValue
          - HandleTime
          - NumberOfTransfers
      source:
        type: string
        description: Source of values for Key Performance Indicator.
        readOnly: true
        enum:
          - WrapUpCode
          - Outcome
          - None
      wrapUpCodeConfig:
        description: Defines what wrap up codes are mapped to Key Performance Indicator.
        readOnly: true
        $ref: '#/definitions/WrapUpCodeConfig'
      outcomeConfig:
        description: Defines what outcome ids are mapped to Key Performance Indicator.
        readOnly: true
        $ref: '#/definitions/OutcomeConfig'
      status:
        type: string
        description: The status of the Key Performance Indicator.
        readOnly: true
        enum:
          - Enabled
          - Disabled
      kpiGroup:
        type: string
        description: The group the Key Performance Indicator belongs to.
        readOnly: true
        enum:
          - Standard
          - Custom
      queues:
        type: array
        description: Queue IDs on which KPI specification is used.
        readOnly: true
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OutcomeConfig:
    type: object
    properties:
      values:
        type: array
        description: A set of valid Outcome UUIDs used to optimize a KPI.
        uniqueItems: true
        items:
          type: string
  WrapUpCodeConfig:
    type: object
    required:
      - values
    properties:
      values:
        type: array
        description: A set of valid Wrap Up Code UUIDs used to optimize a KPI.
        uniqueItems: true
        items:
          type: string
  PredictorModelFeature:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      type:
        type: string
        description: The type of feature.
        readOnly: true
        enum:
          - User
          - Customer
          - Other
      percentageImportance:
        type: number
        format: double
        description: The percentage of how important a feature is in the model.
        readOnly: true
  PredictorModelFeatureListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/PredictorModelFeature'
  PredictorModel:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      kpi:
        type: string
        description: The key performance indicator used in the model.
        readOnly: true
      queues:
        type: array
        description: The List of Queues that are assessed for Predictive Routing.
        readOnly: true
        items:
          $ref: '#/definitions/AddressableEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          DateTime indicating when the model was created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateTrained:
        type: string
        format: date-time
        description: >-
          DateTime indicating when the model was last trained. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      mediaType:
        type: string
        description: The media type of the model.
        readOnly: true
        enum:
          - voice
          - email
          - message
      features:
        type: array
        items:
          $ref: '#/definitions/PredictorModelFeature'
  PredictorModels:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/PredictorModel'
      predictorModels:
        type: array
        items:
          $ref: '#/definitions/PredictorModel'
  QueueMember:
    type: object
    properties:
      id:
        type: string
        description: The queue member's id.
      name:
        type: string
      user:
        $ref: '#/definitions/User'
      ringNumber:
        type: integer
        format: int32
      joined:
        type: boolean
      memberBy:
        type: string
      routingStatus:
        $ref: '#/definitions/RoutingStatus'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  QueueMemberEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/QueueMember'
      pageNumber:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
  QueueMemberEntityListingV1:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/QueueMember'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  SkillGroupMemberDivisions:
    type: object
    properties:
      addDivisionIds:
        type: array
        items:
          type: string
      removeDivisionIds:
        type: array
        items:
          type: string
  SkillGroupMemberDivisionList:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Division'
  SkillGroup:
    type: object
    required:
      - name
      - skillConditions
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The group name.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      description:
        type: string
        description: Group description
      memberCount:
        type: integer
        format: int64
        description: >-
          Estimated number of members in this group. It can take some time for
          the count to be updated after expressions are changed.
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified date/time of the skill group. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateCreated:
        type: string
        format: date-time
        description: >-
          Created date/time of the skill group. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      skillConditions:
        type: array
        description: Conditions for this group
        items:
          $ref: '#/definitions/SkillGroupCondition'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SkillGroupCondition:
    type: object
    required:
      - languageSkillConditions
      - operation
      - routingSkillConditions
    properties:
      routingSkillConditions:
        type: array
        description: Routing skill conditions that will be used for building the query
        items:
          $ref: '#/definitions/SkillGroupRoutingCondition'
      languageSkillConditions:
        type: array
        description: Routing skill conditions that will be used for building the query
        items:
          $ref: '#/definitions/SkillGroupLanguageCondition'
      operation:
        type: string
        description: Operator that will be applied to the conditions
        enum:
          - And
          - Not
          - Or
  SkillGroupLanguageCondition:
    type: object
    required:
      - comparator
      - languageSkill
      - proficiency
    properties:
      languageSkill:
        type: string
        example: English-Written
        description: The language skill to be used in the skill condition query
      comparator:
        type: string
        description: Comparator that will be applied to the proficiency
        enum:
          - EqualTo
          - NotEqualTo
          - LessThan
          - GreaterThan
          - GreaterThanOrEqualTo
          - LessThanOrEqualTo
      proficiency:
        type: integer
        format: int32
        example: 5
        description: >-
          The skill proficiency that will be used for the language skill.
          Integer range 0-5
      childConditions:
        type: array
        description: Nested conditions to be applied to this skill condition
        items:
          $ref: '#/definitions/SkillGroupCondition'
  SkillGroupRoutingCondition:
    type: object
    required:
      - comparator
      - proficiency
      - routingSkill
    properties:
      routingSkill:
        type: string
        description: The routing skill to be used in the skill condition query
      comparator:
        type: string
        description: Comparator that will be applied to the proficiency
        enum:
          - EqualTo
          - NotEqualTo
          - LessThan
          - GreaterThan
          - GreaterThanOrEqualTo
          - LessThanOrEqualTo
      proficiency:
        type: integer
        format: int32
        example: 5
        description: >-
          The skill proficiency that will be used for the routing skill. Integer
          range 0-5
      childConditions:
        type: array
        description: Nested conditions to be applied to this skill condition
        items:
          $ref: '#/definitions/SkillGroupCondition'
  SkillGroupMemberEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UserReferenceWithName'
      nextUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
  SkillGroupDefinition:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The group name.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      description:
        type: string
        description: Group description
      memberCount:
        type: integer
        format: int64
        description: >-
          Estimated number of members in this group. It can take some time for
          the count to be updated after expressions are changed.
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified date/time of the skill group. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateCreated:
        type: string
        format: date-time
        description: >-
          Created date/time of the skill group. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SkillGroupEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/SkillGroupDefinition'
      nextUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
  AgentMaxUtilization:
    type: object
    properties:
      utilization:
        type: object
        description: >-
          Map of media type to utilization settings.  Valid media types include
          call, callback, chat, email, and message.
        additionalProperties:
          $ref: '#/definitions/MediaUtilization'
      level:
        type: string
        enum:
          - Agent
          - Organization
  WrapupCodeRequest:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The wrap-up code name.
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date when the wrap-up code was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date when the wrap-up code was last modified. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      createdBy:
        type: string
        description: The ID of the user that created the wrap-up code.
      modifiedBy:
        type: string
        description: The ID of the user that modified the wrap-up code.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WritableStarrableDivision:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      name:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ScimConfigResourceType:
    type: object
    properties:
      id:
        type: string
        description: >-
          The ID of the SCIM resource. Set by the service provider. "caseExact"
          is set to "true". "mutability" is set to "readOnly". "returned" is set
          to "always".
        readOnly: true
      schemas:
        type: array
        description: The list of supported schemas.
        readOnly: true
        items:
          type: string
      name:
        type: string
        description: The name of the resource type.
        readOnly: true
      description:
        type: string
        description: The description of the resource type.
        readOnly: true
      schema:
        type: string
        description: The URI of the primary or base schema for the resource type.
        readOnly: true
      schemaExtensions:
        type: array
        description: The list of schema extensions for the resource type.
        readOnly: true
        items:
          $ref: '#/definitions/ScimConfigResourceTypeSchemaExtension'
      endpoint:
        type: string
        description: >-
          The HTTP-addressable endpoint of the resource type. Appears after the
          base URL.
        readOnly: true
      meta:
        description: >-
          The metadata of the SCIM resource. Only "location" and "resourceType"
          are set for "ResourceType" resources.
        readOnly: true
        $ref: '#/definitions/ScimMetadata'
    description: Defines a SCIM resource.
  ScimConfigResourceTypeSchemaExtension:
    type: object
    properties:
      schema:
        type: string
        description: >-
          The URI of an extended schema, for example, "urn:edu:2.0:Staff". Must
          be equal to the "id" attribute of a schema.
        readOnly: true
      required:
        type: boolean
        description: Indicates whether a schema extension is required.
        readOnly: true
    description: Defines a SCIM resource type's schema extension.
  ScimMetadata:
    type: object
    properties:
      resourceType:
        type: string
        description: The type of SCIM resource.
        readOnly: true
        enum:
          - User
          - Group
          - ServiceProviderConfig
          - ResourceType
          - Schema
      lastModified:
        type: string
        format: date-time
        description: >-
          The last time that the resource was modified. Date time is represented
          as an "ISO-8601 string", for example, yyyy-MM-ddTHH:mm:ss.SSSZ. Not
          included with "Schema" and "ResourceType" resources.
        readOnly: true
      location:
        type: string
        format: uri
        description: The URI of the resource.
        readOnly: true
      version:
        type: string
        description: >-
          The version of the resource. Matches the ETag HTTP response header.
          Not included with "Schema" and "ResourceType" resources.
        readOnly: true
    description: Defines the SCIM metadata.
  ScimConfigResourceTypesListResponse:
    type: object
    properties:
      schemas:
        type: array
        description: The list of supported schemas.
        items:
          type: string
      totalResults:
        type: integer
        format: int64
        description: The total number of results.
        readOnly: true
      startIndex:
        type: integer
        format: int64
        description: >-
          The 1-based index of the first result returned by this request. Add
          this to "itemsPerPage" when requesting the next page of results.
        readOnly: true
      itemsPerPage:
        type: integer
        format: int64
        description: The number of resources returned per page.
        readOnly: true
      Resources:
        type: array
        description: The list of requested resources.
        readOnly: true
        items:
          $ref: '#/definitions/ScimConfigResourceType'
    description: Defines a response for a list of SCIM resource types.
  ScimV2SchemaAttribute:
    type: object
    properties:
      name:
        type: string
        description: The name of the attribute.
        readOnly: true
      type:
        type: string
        description: The data type of the attribute.
        readOnly: true
        enum:
          - string
          - boolean
          - decimal
          - integer
          - dateTime
          - reference
          - complex
      subAttributes:
        type: array
        description: >-
          The list of subattributes for an attribute of the type "complex". Uses
          the same schema as "attributes".
        readOnly: true
        items:
          $ref: '#/definitions/ScimV2SchemaAttribute'
      multiValued:
        type: boolean
        description: Indicates whether an attribute contains multiple values.
        readOnly: true
      description:
        type: string
        description: The description of the attribute.
        readOnly: true
      required:
        type: boolean
        description: Indicates whether an attribute is required.
        readOnly: true
      canonicalValues:
        type: array
        description: >-
          The list of standard values that service providers may use. Service
          providers may ignore unsupported values.
        readOnly: true
        items:
          type: string
      caseExact:
        type: boolean
        description: >-
          Indicates whether a string attribute is case-sensitive. If set to
          "true", the server preserves case sensitivity. If set to "false", the
          server may change the case. The server also uses case sensitivity when
          evaluating filters. See section 3.4.2.2 "Filtering" in RFC 7644 for
          details.
        readOnly: true
      mutability:
        type: string
        description: >-
          The circumstances under which an attribute can be defined or
          redefined. The default is "readWrite".
        readOnly: true
        enum:
          - readWrite
          - readOnly
          - immutable
          - writeOnly
      returned:
        type: string
        description: >-
          The circumstances under which an attribute and its values are returned
          in response to a GET, PUT, POST, or PATCH request.
        readOnly: true
        enum:
          - always
          - never
          - default
          - request
      uniqueness:
        type: string
        description: >-
          The method by which the service provider enforces the uniqueness of an
          attribute value. A server can reject a value by returning the HTTP
          response code 400 (Bad Request). A client can enforce uniqueness to a
          greater degree than the server provider enforces. For example, a
          client could make a value unique even though the server has
          "uniqueness" set to "none".
        readOnly: true
        enum:
          - none
          - server
          - global
      referenceTypes:
        type: array
        description: >-
          The list of SCIM resource types that may be referenced. Only applies
          when "type" is set to "reference".
        readOnly: true
        items:
          type: string
          enum:
            - User
            - Group
            - external
            - uri
    description: >-
      A complex type that defines service provider attributes or subattributes
      and their qualities.
  ScimV2SchemaDefinition:
    type: object
    properties:
      id:
        type: string
        description: >-
          The ID of the SCIM resource. Set by the service provider. "caseExact"
          is set to "true". "mutability" is set to "readOnly". "returned" is set
          to "always".
        readOnly: true
      name:
        type: string
        description: The name of the schema.
        readOnly: true
      description:
        type: string
        description: The description of the schema.
        readOnly: true
      attributes:
        type: array
        description: The list of service provider attributes.
        readOnly: true
        items:
          $ref: '#/definitions/ScimV2SchemaAttribute'
      meta:
        description: >-
          The metadata of the SCIM resource. Only "location" and "resourceType"
          are set for "Schema" resources.
        readOnly: true
        $ref: '#/definitions/ScimMetadata'
    description: Defines a SCIM schema.
  ScimV2SchemaListResponse:
    type: object
    properties:
      schemas:
        type: array
        description: The list of supported schemas.
        items:
          type: string
      totalResults:
        type: integer
        format: int64
        description: The total number of results.
        readOnly: true
      startIndex:
        type: integer
        format: int64
        description: >-
          The 1-based index of the first result returned by this request. Add
          this to "itemsPerPage" when requesting the next page of results.
        readOnly: true
      itemsPerPage:
        type: integer
        format: int64
        description: The number of resources returned per page.
        readOnly: true
      Resources:
        type: array
        description: The list of requested resources.
        readOnly: true
        items:
          $ref: '#/definitions/ScimV2SchemaDefinition'
    description: Defines the list response for SCIM resource types.
  ScimGroupListResponse:
    type: object
    properties:
      schemas:
        type: array
        description: The list of supported schemas.
        items:
          type: string
      totalResults:
        type: integer
        format: int64
        description: The total number of results.
        readOnly: true
      startIndex:
        type: integer
        format: int64
        description: >-
          The 1-based index of the first result returned by this request. Add
          this to "itemsPerPage" when requesting the next page of results.
        readOnly: true
      itemsPerPage:
        type: integer
        format: int64
        description: The number of resources returned per page.
        readOnly: true
      Resources:
        type: array
        description: >-
          The list of requested resources. If "count" is 0, then the list will
          be empty.
        readOnly: true
        items:
          $ref: '#/definitions/ScimV2Group'
    description: Defines a response for a list of SCIM groups.
  ScimV2Group:
    type: object
    required:
      - displayName
    properties:
      id:
        type: string
        description: >-
          The ID of the SCIM resource. Set by the service provider. "caseExact"
          is set to "true". "mutability" is set to "readOnly". "returned" is set
          to "always".
        readOnly: true
      schemas:
        type: array
        description: The list of supported schemas.
        readOnly: true
        items:
          type: string
      displayName:
        type: string
        description: The display name of the group.
        readOnly: true
      externalId:
        type: string
        description: >-
          The external ID of the group. Set by the provisioning client.
          "caseExact" is set to "true". "mutability" is set to "readWrite".
      members:
        type: array
        description: The list of members in the group.
        items:
          $ref: '#/definitions/ScimV2MemberReference'
      meta:
        description: The metadata of the SCIM resource.
        readOnly: true
        $ref: '#/definitions/ScimMetadata'
    description: Defines a SCIM group.
  ScimV2MemberReference:
    type: object
    properties:
      type:
        type: string
        description: The type of SCIM resource.
        readOnly: true
        enum:
          - User
          - Group
          - ServiceProviderConfig
          - ResourceType
          - Schema
      value:
        type: string
        description: The ID of the group member. Can be "userId" or "groupId".
      $ref:
        type: string
        format: uri
        description: The reference URI of the SCIM resource.
        readOnly: true
    description: Defines a reference to SCIM group members.
  ScimError:
    type: object
    properties:
      schemas:
        type: array
        description: The list of schemas for the SCIM error.
        readOnly: true
        items:
          type: string
      status:
        type: string
        description: The HTTP status code returned for the SCIM error.
        readOnly: true
      scimType:
        type: string
        description: The type of SCIM error when httpStatus is a "400" error.
        readOnly: true
        enum:
          - invalidFilter
          - tooMany
          - uniqueness
          - mutability
          - invalidSyntax
          - invalidPath
          - noTarget
          - invalidValue
          - invalidVers
          - sensitive
      detail:
        type: string
        description: The detailed description of the SCIM error.
        readOnly: true
    description: Defines a SCIM error.
  ScimV2PatchOperation:
    type: object
    required:
      - op
    properties:
      op:
        type: string
        description: The PATCH operation to perform.
        enum:
          - add
          - replace
          - remove
      path:
        type: string
        description: >-
          The attribute path that describes the target of the operation.
          Required for a "remove" operation.
      value:
        description: The value to set in the path.
        $ref: '#/definitions/JsonNode'
    description: >-
      Defines a SCIM PATCH operation. The path and value follow very specific
      rules based on operation types. See section 3.5.2 "Modifying with PATCH"
      in RFC 7644 for details.
  ScimV2PatchRequest:
    type: object
    required:
      - schemas
    properties:
      schemas:
        type: array
        description: The list of schemas used in the PATCH request.
        items:
          type: string
      Operations:
        type: array
        description: The list of operations to perform for the PATCH request.
        items:
          $ref: '#/definitions/ScimV2PatchOperation'
    description: >-
      Defines a SCIM PATCH request. See section 3.5.2 "Modifying with PATCH" in
      RFC 7644 for details.
  ScimServiceProviderConfig:
    type: object
    properties:
      schemas:
        type: array
        description: The list of supported schemas.
        readOnly: true
        items:
          type: string
      documentationUri:
        type: string
        format: uri
        description: >-
          The HTTP-addressable URL that points to the service provider's
          documentation.
        readOnly: true
      patch:
        description: The "patch" configuration options.
        readOnly: true
        $ref: '#/definitions/ScimServiceProviderConfigSimpleFeature'
      filter:
        description: The "filter" configuration options.
        readOnly: true
        $ref: '#/definitions/ScimServiceProviderConfigFilterFeature'
      etag:
        description: The "etag" configuration options.
        readOnly: true
        $ref: '#/definitions/ScimServiceProviderConfigSimpleFeature'
      sort:
        description: The "sort" configuration options.
        readOnly: true
        $ref: '#/definitions/ScimServiceProviderConfigSimpleFeature'
      bulk:
        description: The "bulk" configuration options.
        readOnly: true
        $ref: '#/definitions/ScimServiceProviderConfigBulkFeature'
      changePassword:
        description: The "changePassword" configuration options.
        readOnly: true
        $ref: '#/definitions/ScimServiceProviderConfigSimpleFeature'
      authenticationSchemes:
        type: array
        description: The list of supported authentication schemes.
        readOnly: true
        items:
          $ref: '#/definitions/ScimServiceProviderConfigAuthenticationScheme'
      meta:
        description: The metadata of the SCIM resource.
        readOnly: true
        $ref: '#/definitions/ScimMetadata'
    description: Defines a SCIM service provider's configuration.
  ScimServiceProviderConfigAuthenticationScheme:
    type: object
    required:
      - description
      - name
      - type
    properties:
      name:
        type: string
        description: The name of the authentication scheme, for example, HTTP Basic.
        readOnly: true
      description:
        type: string
        description: The description of the authentication scheme.
        readOnly: true
      specUri:
        type: string
        format: uri
        description: >-
          The HTTP-addressable URL that points to the authentication scheme's
          specification.
        readOnly: true
      documentationUri:
        type: string
        format: uri
        description: >-
          The HTTP-addressable URL that points to the authentication scheme's
          usage documentation.
        readOnly: true
      type:
        type: string
        description: The type of authentication scheme.
        readOnly: true
        enum:
          - oauth
          - oauth2
          - oauthbearertoken
          - httpbasic
          - httpdigest
      primary:
        type: boolean
        description: >-
          Indicates whether this authentication scheme is the primary method of
          authentication.
        readOnly: true
    description: >-
      Defines an authentication scheme in the SCIM service provider's
      configuration.
  ScimServiceProviderConfigBulkFeature:
    type: object
    properties:
      supported:
        type: boolean
        description: Indicates whether configuration options are supported.
        readOnly: true
      maxOperations:
        type: integer
        format: int32
        description: The maximum number of operations for each bulk request.
        readOnly: true
      maxPayloadSize:
        type: integer
        format: int32
        description: The maximum payload size.
        readOnly: true
    description: Defines a "bulk" request in the SCIM service provider's configuration.
  ScimServiceProviderConfigFilterFeature:
    type: object
    properties:
      supported:
        type: boolean
        description: Indicates whether configuration options are supported.
        readOnly: true
      maxResults:
        type: integer
        format: int32
        description: The maximum number of results returned from a filtered query.
        readOnly: true
    description: Defines a "filter" request in the SCIM service provider's configuration.
  ScimServiceProviderConfigSimpleFeature:
    type: object
    properties:
      supported:
        type: boolean
        description: Indicates whether configuration options are supported.
        readOnly: true
    description: Defines a request in the SCIM service provider's configuration.
  Manager:
    type: object
    properties:
      value:
        type: string
        description: The ID of the manager.
      $ref:
        type: string
        format: uri
        description: The reference URI of the manager's user record.
        readOnly: true
    description: Defines a SCIM manager.
  ScimEmail:
    type: object
    properties:
      value:
        type: string
        description: The email address. Is immutable if "type" is set to "other".
      type:
        type: string
        description: >-
          The type of email address. "value" is immutable if "type" is set to
          "other".
        enum:
          - work
          - other
      primary:
        type: boolean
        description: Indicates whether the email address is the primary email address.
    description: Defines a SCIM email address.
  ScimGenesysUserExternalId:
    type: object
    required:
      - authority
      - value
    properties:
      authority:
        type: string
        description: >-
          Authority, or scope, of "externalId". Allows multiple external
          identifiers to be defined. Represents the source of the external
          identifier.
      value:
        type: string
        description: Identifier of the user in an external system.
    description: >-
      External Identifiers of user. The external identifier must be unique
      within the organization and the 'authority'
  ScimPhoneNumber:
    type: object
    properties:
      value:
        type: string
        description: >-
          The phone number in E.164 or tel URI format, for example,
          tel:+nnnnnnnn; ext=xxxxx.
      type:
        type: string
        description: The type of phone number.
        enum:
          - work
          - work2
          - work3
          - work4
          - home
          - mobile
          - other
          - microsoftteams
          - zoomphone
          - eightbyeight
      primary:
        type: boolean
        description: Indicates whether the phone number is the primary phone number.
    description: Defines a SCIM phone number.
  ScimUserExtensions:
    type: object
    properties:
      routingSkills:
        type: array
        description: The list of routing skills assigned to a user. Maximum 50 skills.
        items:
          $ref: '#/definitions/ScimUserRoutingSkill'
      routingLanguages:
        type: array
        description: >-
          The list of routing languages assigned to a user. Maximum 50
          languages.
        items:
          $ref: '#/definitions/ScimUserRoutingLanguage'
      externalIds:
        type: array
        description: >-
          The list of external identifiers assigned to user. Always includes an
          immutable SCIM authority prefixed with "x-pc:scimv2:v1". ExternalIds
          are searchable with complex filter query parameter using 'authority'
          and 'value', e.g.,
          filter=urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:externalIds[authority
          eq "matchAuthName" and value eq "matchingExternalKeyValue"].
        items:
          $ref: '#/definitions/ScimGenesysUserExternalId'
    description: Genesys Cloud user extensions to SCIM RFC.
  ScimUserRole:
    type: object
    properties:
      value:
        type: string
        description: The role of the Genesys Cloud user.
    description: Defines a user role.
  ScimUserRoutingLanguage:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: >-
          The case-sensitive name of a routing language configured in Genesys
          Cloud.
      proficiency:
        type: number
        format: double
        description: >-
          A rating from 0.0 to 5.0 that indicates how fluent an agent is in a
          particular language. ACD interactions are routed to agents with higher
          proficiency ratings.
    description: The routing language assigned to a user.
  ScimUserRoutingSkill:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: >-
          The case-sensitive name of a routing skill configured in Genesys
          Cloud.
      proficiency:
        type: number
        format: double
        description: >-
          A rating from 0.0 to 5.0 that indicates how adept an agent is at a
          particular skill. When "Best available skills" is enabled for a queue
          in Genesys Cloud, ACD interactions in that queue are routed to agents
          with higher proficiency ratings.
    description: The routing skill assigned to a user.
  ScimV2EnterpriseUser:
    type: object
    properties:
      division:
        type: string
        description: The division that the user belongs to.
      department:
        type: string
        description: The department that the user belongs to.
      manager:
        description: The user's manager.
        $ref: '#/definitions/Manager'
      employeeNumber:
        type: string
        description: The user's employee number.
    description: Defines a SCIM enterprise user.
  ScimV2GroupReference:
    type: object
    properties:
      type:
        type: string
        description: The type of SCIM resource.
        readOnly: true
        enum:
          - User
          - Group
          - ServiceProviderConfig
          - ResourceType
          - Schema
      value:
        type: string
        description: The ID of the group member. Can be "userId" or "groupId".
      $ref:
        type: string
        format: uri
        description: The reference URI of the SCIM resource.
        readOnly: true
    description: Defines a reference to SCIM groups.
  ScimV2User:
    type: object
    properties:
      id:
        type: string
        description: >-
          The ID of the SCIM resource. Set by the service provider. "caseExact"
          is set to "true". "mutability" is set to "readOnly". "returned" is set
          to "always".
        readOnly: true
      schemas:
        type: array
        description: The list of supported schemas.
        readOnly: true
        items:
          type: string
      active:
        type: boolean
        description: Indicates whether the user's administrative status is active.
      userName:
        type: string
        description: The user's Genesys Cloud email address. Must be unique.
      displayName:
        type: string
        description: The display name of the user.
      password:
        type: string
        description: >-
          The new password for the Genesys Cloud user. Does not return an
          existing password. When creating a user, if a password is not
          supplied, then a password will be randomly generated that is 40
          characters in length and contains five characters from each of the
          password policy groups.
      title:
        type: string
        description: The user's title.
      phoneNumbers:
        type: array
        description: The list of the user's phone numbers.
        items:
          $ref: '#/definitions/ScimPhoneNumber'
      emails:
        type: array
        description: The list of the user's email addresses.
        items:
          $ref: '#/definitions/ScimEmail'
      externalId:
        type: string
        description: >-
          The external ID of the user. Set by the provisioning client.
          "caseExact" is set to "true". "mutability" is set to "readWrite".
      groups:
        type: array
        description: The list of groups that the user is a member of.
        items:
          $ref: '#/definitions/ScimV2GroupReference'
      roles:
        type: array
        description: The list of roles assigned to the user.
        items:
          $ref: '#/definitions/ScimUserRole'
      urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:
        description: The URI of the schema for the enterprise user.
        $ref: '#/definitions/ScimV2EnterpriseUser'
      urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:
        description: The URI of the schema for the Genesys Cloud user.
        $ref: '#/definitions/ScimUserExtensions'
      meta:
        description: The metadata of the SCIM resource.
        readOnly: true
        $ref: '#/definitions/ScimMetadata'
    description: Defines a SCIM user.
  ScimUserListResponse:
    type: object
    properties:
      schemas:
        type: array
        description: The list of supported schemas.
        items:
          type: string
      totalResults:
        type: integer
        format: int64
        description: The total number of results.
        readOnly: true
      startIndex:
        type: integer
        format: int64
        description: >-
          The 1-based index of the first result returned by this request. Add
          this to "itemsPerPage" when requesting the next page of results.
        readOnly: true
      itemsPerPage:
        type: integer
        format: int64
        description: The number of resources returned per page.
        readOnly: true
      Resources:
        type: array
        description: >-
          The list of requested resources. If "count" is 0, then the list will
          be empty.
        readOnly: true
        items:
          $ref: '#/definitions/ScimV2User'
    description: Defines a response for a list of SCIM users.
  ScimV2CreateUser:
    type: object
    required:
      - displayName
      - userName
    properties:
      schemas:
        type: array
        description: The list of supported schemas.
        readOnly: true
        items:
          type: string
      active:
        type: boolean
        description: Indicates whether the user's administrative status is active.
      userName:
        type: string
        description: The user's Genesys Cloud email address. Must be unique.
      displayName:
        type: string
        description: The display name of the user.
      password:
        type: string
        description: >-
          The new password for the Genesys Cloud user. Does not return an
          existing password. When creating a user, if a password is not
          supplied, then a password will be randomly generated that is 40
          characters in length and contains five characters from each of the
          password policy groups.
      title:
        type: string
        description: The user's title.
      phoneNumbers:
        type: array
        description: The list of the user's phone numbers.
        items:
          $ref: '#/definitions/ScimPhoneNumber'
      emails:
        type: array
        description: The list of the user's email addresses.
        items:
          $ref: '#/definitions/ScimEmail'
      externalId:
        type: string
        description: >-
          The external ID of the user. Set by the provisioning client.
          "caseExact" is set to "true". "mutability" is set to "readWrite".
      groups:
        type: array
        description: The list of groups that the user is a member of.
        items:
          $ref: '#/definitions/ScimV2GroupReference'
      roles:
        type: array
        description: The list of roles assigned to the user.
        items:
          $ref: '#/definitions/ScimUserRole'
      urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:
        description: The URI of the schema for the enterprise user.
        $ref: '#/definitions/ScimV2EnterpriseUser'
      urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:
        description: The URI of the schema for the Genesys Cloud user.
        $ref: '#/definitions/ScimUserExtensions'
    description: Defines the creation of a SCIM user.
  SearchCriteria:
    type: object
    properties:
      endValue:
        type: string
        description: The end value of the range. This field is used for range search types.
      values:
        type: array
        description: A list of values for the search to match against
        items:
          type: string
      startValue:
        type: string
        description: >-
          The start value of the range. This field is used for range search
          types.
      value:
        type: string
        description: A value for the search to match against
      operator:
        type: string
        description: How to apply this search criteria against other criteria
        enum:
          - AND
          - OR
          - NOT
      group:
        type: array
        description: Groups multiple conditions
        items:
          $ref: '#/definitions/SearchCriteria'
      dateFormat:
        type: string
        description: >-
          Set date format for criteria values when using date range search
          type.  Supports Java date format syntax, example
          yyyy-MM-dd'T'HH:mm:ss.SSSX.
      type:
        type: string
        enum:
          - EXACT
          - CONTAINS
          - STARTS_WITH
          - REQUIRED_FIELDS
          - RANGE
          - DATE_RANGE
          - LESS_THAN
          - LESS_THAN_EQUAL_TO
          - GREATER_THAN
          - GREATER_THAN_EQUAL_TO
          - SIMPLE
          - TERM
          - TERMS
          - QUERY_STRING
          - MATCH_ALL
          - REGEX
      fields:
        type: array
        description: Field names to search against
        items:
          type: string
        x-genesys-search-fields:
          value:
            - addresses.email
            - addresses.voice
            - addresses.address
            - addresses.voicemailEnabled
            - chat.jabberId
            - department
            - email
            - username
            - siteId
            - manager.id
            - hr.employeeId
            - integration
            - groups.social.id
            - groups.official.id
            - groups.distribution.id
            - state
            - id
            - languages.guid
            - languages.name
            - languages.namespace
            - languages.proficiency
            - name
            - primaryContactInfo.voice
            - primaryContactInfo.sms
            - primaryContactInfo.email
            - profileSkills
            - queueMembership.added
            - queueMembership.joined
            - routingSkills.guid
            - routingSkills.name
            - routingSkills.namespace
            - routingSkills.proficiency
            - title
            - divisionId
            - teamId
            - description
            - notes
            - addressFields.city
            - addressFields.country
            - addressFields.state
            - addressFields.street1
            - addressFields.street2
            - addressFields.zipcode
            - addressVerified
            - emergencyNumber
            - voicemailId
            - ownerId
            - ownerType
            - deleted
            - read
            - callerAddress
            - callerUser
            - createdDate
            - modifiedDate
            - queueId
            - wrapupCodeId
            - body
            - created
            - fromUserJid
            - targetJids
  SearchRequest:
    type: object
    required:
      - types
    properties:
      sortOrder:
        type: string
        description: The sort order for results
        enum:
          - ASC
          - DESC
          - SCORE
      sortBy:
        type: string
        description: The field in the resource that you want to sort the results by
      pageSize:
        type: integer
        format: int32
        description: The number of results per page
      pageNumber:
        type: integer
        format: int32
        description: The page of resources you want to retrieve
      sort:
        type: array
        description: Multi-value sort order, list of multiple sort values
        items:
          $ref: '#/definitions/SearchSort'
      returnFields:
        type: array
        description: >-
          A List of strings.  Possible values are any field in the resource you
          are searching on.  The other option is to use ALL_FIELDS, when this is
          provided all fields in the resource will be returned in the search
          results.
        items:
          type: string
      expand:
        type: array
        description: Provides more details about a specified resource
        items:
          type: string
      types:
        type: array
        description: Resource domain type to search
        items:
          type: string
      query:
        type: array
        description: The search criteria
        items:
          $ref: '#/definitions/SearchCriteria'
      aggregations:
        type: array
        description: Aggregation criteria
        items:
          $ref: '#/definitions/SearchAggregation'
  SuggestSearchCriteria:
    type: object
    properties:
      endValue:
        type: string
        description: The end value of the range. This field is used for range search types.
      values:
        type: array
        description: A list of values for the search to match against
        items:
          type: string
      startValue:
        type: string
        description: >-
          The start value of the range. This field is used for range search
          types.
      value:
        type: string
        description: A value for the search to match against
      operator:
        type: string
        description: How to apply this search criteria against other criteria
        enum:
          - AND
          - OR
          - NOT
      group:
        type: array
        description: Groups multiple conditions
        items:
          $ref: '#/definitions/SuggestSearchCriteria'
      dateFormat:
        type: string
        description: >-
          Set date format for criteria values when using date range search
          type.  Supports Java date format syntax, example
          yyyy-MM-dd'T'HH:mm:ss.SSSX.
      fields:
        type: array
        description: Field names to search against
        items:
          type: string
  SuggestSearchRequest:
    type: object
    required:
      - query
      - types
    properties:
      expand:
        type: array
        description: Provides more details about a specified resource
        items:
          type: string
      types:
        type: array
        description: Resource domain type to search
        items:
          type: string
      query:
        type: array
        description: Suggest query
        items:
          $ref: '#/definitions/SuggestSearchCriteria'
  TranscriptConversationDetailSearchCriteria:
    type: object
    properties:
      endValue:
        type: string
        description: The end value of the range. This field is used for range search types.
      values:
        type: array
        description: A list of values for the search to match against
        items:
          type: string
      startValue:
        type: string
        description: >-
          The start value of the range. This field is used for range search
          types.
      value:
        type: string
        description: A value for the search to match against
      operator:
        type: string
        description: How to apply this search criteria against other criteria
        enum:
          - AND
          - OR
          - NOT
      group:
        type: array
        description: Groups multiple conditions
        items:
          $ref: '#/definitions/TranscriptConversationDetailSearchCriteria'
      dateFormat:
        type: string
        description: >-
          Set date format for criteria values when using date range search
          type.  Supports Java date format syntax, example
          yyyy-MM-dd'T'HH:mm:ss.SSSX.
      fields:
        type: array
        description: Field names to search against
        items:
          type: string
      type:
        type: string
        enum:
          - EXACT
          - EXACT_PHRASE
          - PHRASE
          - DATE_RANGE
  TranscriptConversationDetailSearchRequest:
    type: object
    required:
      - types
    properties:
      sortOrder:
        type: string
        description: The sort order for results
        enum:
          - ASC
          - DESC
          - SCORE
      sortBy:
        type: string
        description: The field in the resource that you want to sort the results by
      pageSize:
        type: integer
        format: int32
        description: The number of results per page
      pageNumber:
        type: integer
        format: int32
        description: The page of resources you want to retrieve
      sort:
        type: array
        description: Multi-value sort order, list of multiple sort values
        items:
          $ref: '#/definitions/SearchSort'
      types:
        type: array
        description: Resource domain type to search
        items:
          type: string
      query:
        type: array
        description: The search criteria
        items:
          $ref: '#/definitions/TranscriptConversationDetailSearchCriteria'
  ConversationMetrics:
    type: object
    properties:
      conversation:
        description: The Conversation Reference
        $ref: '#/definitions/AddressableEntityRef'
      sentimentScore:
        type: number
        format: double
        description: The Sentiment Score
      sentimentTrend:
        type: number
        format: double
        description: The Sentiment Trend
      sentimentTrendClass:
        type: string
        description: The Sentiment Trend Class
        enum:
          - NotCalculated
          - Declining
          - SlightlyDeclining
          - NoChange
          - SlightlyImproving
          - Improving
      participantMetrics:
        description: The Participant Metrics
        $ref: '#/definitions/ParticipantMetrics'
  ParticipantMetrics:
    type: object
    properties:
      agentDurationPercentage:
        type: number
        format: double
        description: Percentage of Agent duration in the conversation
      customerDurationPercentage:
        type: number
        format: double
        description: Percentage of Customer duration in the conversation
      silenceDurationPercentage:
        type: number
        format: double
        description: Percentage of Silence duration in the conversation
      ivrDurationPercentage:
        type: number
        format: double
        description: Percentage of IVR duration in the conversation
      acdDurationPercentage:
        type: number
        format: double
        description: Percentage of ACD duration in the conversation
      overtalkDurationPercentage:
        type: number
        format: double
        description: Percentage of Overtalk duration in the conversation
      otherDurationPercentage:
        type: number
        format: double
        description: Percentage of Other events duration in the conversation
      overtalkCount:
        type: integer
        format: int32
        description: Number of Overtalks in the conversation
  SentimentFeedback:
    type: object
    required:
      - dialect
      - feedbackValue
      - phrase
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      phrase:
        type: string
        description: The phrase for which sentiment feedback is provided
      dialect:
        type: string
        example: en-US
        description: >-
          The dialect for the given phrase, dialect format is
          {language}-{country} where language follows ISO 639-1 standard and
          country follows ISO 3166-1 alpha 2 standard
      feedbackValue:
        type: string
        description: The sentiment feedback value for the given phrase
        enum:
          - Neutral
          - Positive
          - Negative
      dateCreated:
        type: string
        format: date-time
        description: >-
          The Timestamp when sentiment feedback created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      createdBy:
        description: The Id of user who created the sentiment feedback
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
  SentimentFeedbackEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/SentimentFeedback'
  BaseProgramEntity:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ProgramTranscriptionEngines:
    type: object
    properties:
      program:
        description: The ID of the program
        $ref: '#/definitions/BaseProgramEntity'
      transcriptionEngines:
        type: array
        description: The program transcription engine settings
        items:
          $ref: '#/definitions/TranscriptionEngines'
      modifiedBy:
        description: The user last modified the record
        $ref: '#/definitions/AddressableEntityRef'
      dateModified:
        type: string
        format: date-time
        description: >-
          The last modified date of the record. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  TranscriptionEngines:
    type: object
    properties:
      engine:
        type: string
        enum:
          - Genesys
          - GenesysExtended
      dialects:
        type: array
        items:
          type: string
  TranscriptionEnginesRequest:
    type: object
    required:
      - transcriptionEngines
    properties:
      transcriptionEngines:
        type: array
        description: The transcription engine setting
        items:
          $ref: '#/definitions/TranscriptionEngines'
  SupportedDialectsEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/TranscriptionEngines'
  SpeechTextAnalyticsSettingsResponse:
    type: object
    properties:
      defaultProgram:
        description: Setting to choose name for the default program for topic detection
        $ref: '#/definitions/AddressableEntityRef'
      expectedDialects:
        type: array
        description: Setting to choose expected dialects
        items:
          type: string
  SpeechTextAnalyticsSettingsRequest:
    type: object
    properties:
      defaultProgramId:
        type: string
        description: Setting to choose name for the default program for topic detection
      expectedDialects:
        type: array
        description: Setting to choose expected dialects
        items:
          type: string
  GeneralProgramJob:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      state:
        type: string
        enum:
          - Running
          - Completed
          - Failed
      createdBy:
        $ref: '#/definitions/AddressableEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  GeneralProgramJobRequest:
    type: object
    required:
      - dialect
    properties:
      dialect:
        type: string
        description: >-
          The dialect of the topics to link with the general program, dialect
          format is {language}-{country} where language follows ISO 639-1
          standard and country follows ISO 3166-1 alpha 2 standard
        enum:
          - ar-001
          - ar-AE
          - ar-BH
          - ar-EG
          - ar-IL
          - ar-SA
          - ar-TN
          - de-DE
          - en-AU
          - en-GB
          - en-IN
          - en-US
          - en-ZA
          - es-ES
          - es-US
          - fr-CA
          - fr-FR
          - it-IT
          - ja-JP
          - ko-KR
          - nl-NL
          - pl-PL
          - pt-BR
          - pt-PT
      mode:
        type: string
        description: The mode to use for the general program job, default value is Skip
        enum:
          - Skip
          - Merge
          - ReplaceMerge
  GeneralTopic:
    type: object
    properties:
      name:
        type: string
  GeneralTopicsEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/GeneralTopic'
  ProgramMappings:
    type: object
    properties:
      program:
        $ref: '#/definitions/BaseProgramEntity'
      queues:
        type: array
        items:
          $ref: '#/definitions/AddressableEntityRef'
      flows:
        type: array
        items:
          $ref: '#/definitions/AddressableEntityRef'
      modifiedBy:
        $ref: '#/definitions/AddressableEntityRef'
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  ProgramMappingsRequest:
    type: object
    required:
      - flowIds
      - queueIds
    properties:
      queueIds:
        type: array
        description: The program queues
        items:
          type: string
      flowIds:
        type: array
        description: The program flows
        items:
          type: string
  ProgramJob:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      state:
        type: string
        enum:
          - Running
          - Completed
          - Failed
      programs:
        type: array
        items:
          $ref: '#/definitions/BaseProgramEntity'
      createdBy:
        $ref: '#/definitions/AddressableEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ProgramJobRequest:
    type: object
    required:
      - programIds
    properties:
      programIds:
        type: array
        description: The ids of the programs used for this job
        items:
          type: string
  BaseTopicEntitiy:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Program:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      description:
        type: string
      published:
        type: boolean
      topics:
        type: array
        items:
          $ref: '#/definitions/BaseTopicEntitiy'
      tags:
        type: array
        items:
          type: string
      modifiedBy:
        $ref: '#/definitions/AddressableEntityRef'
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      publishedBy:
        $ref: '#/definitions/AddressableEntityRef'
      datePublished:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ProgramRequest:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: The program name
      description:
        type: string
        description: The program description
      topicIds:
        type: array
        description: The ids of topics associated to the program
        items:
          type: string
      tags:
        type: array
        description: The program tags
        items:
          type: string
  ProgramsMappingsEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ProgramMappings'
      pageSize:
        type: integer
        format: int32
      nextUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
      selfUri:
        type: string
        format: uri
  ListedProgram:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      description:
        type: string
      published:
        type: boolean
      topicsCount:
        type: integer
        format: int32
      tags:
        type: array
        items:
          type: string
      modifiedBy:
        $ref: '#/definitions/AddressableEntityRef'
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ProgramsEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ListedProgram'
      pageSize:
        type: integer
        format: int32
      nextUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  TopicJob:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      state:
        type: string
        enum:
          - Running
          - Completed
          - Failed
      topics:
        type: array
        items:
          $ref: '#/definitions/BaseTopicEntitiy'
      createdBy:
        $ref: '#/definitions/AddressableEntityRef'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TopicJobRequest:
    type: object
    required:
      - topicIds
    properties:
      topicIds:
        type: array
        description: The ids of the topics used for this job
        items:
          type: string
  Phrase:
    type: object
    required:
      - text
    properties:
      text:
        type: string
        description: The phrase text
      strictness:
        type: string
        description: The phrase strictness, default value is null
        enum:
          - '1'
          - '55'
          - '65'
          - '72'
          - '85'
          - '90'
      sentiment:
        type: string
        description: >-
          The phrase sentiment, default value is Unspecified. Note: Sentiment
          value for phrases is currently not in use and has no impact to the
          system.
        enum:
          - Unspecified
          - Positive
          - Neutral
          - Negative
  Topic:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      description:
        type: string
      published:
        type: boolean
      strictness:
        type: string
        enum:
          - '1'
          - '55'
          - '65'
          - '72'
          - '85'
          - '90'
      programs:
        type: array
        items:
          $ref: '#/definitions/BaseProgramEntity'
      tags:
        type: array
        items:
          type: string
      dialect:
        type: string
      participants:
        type: string
        enum:
          - External
          - Internal
          - All
      phrases:
        type: array
        items:
          $ref: '#/definitions/Phrase'
      modifiedBy:
        $ref: '#/definitions/AddressableEntityRef'
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      publishedBy:
        $ref: '#/definitions/AddressableEntityRef'
      datePublished:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TopicRequest:
    type: object
    required:
      - dialect
      - name
    properties:
      name:
        type: string
        description: The topic name
      description:
        type: string
        description: The topic description
      strictness:
        type: string
        description: The topic strictness, default value is 72
        enum:
          - '1'
          - '55'
          - '65'
          - '72'
          - '85'
          - '90'
      programIds:
        type: array
        description: The ids of programs associated to the topic
        items:
          type: string
      tags:
        type: array
        description: The topic tags
        items:
          type: string
      dialect:
        type: string
        description: The topic dialect
      participants:
        type: string
        description: The topic participants, default value is All
        enum:
          - External
          - Internal
          - All
      phrases:
        type: array
        description: The topic phrases
        items:
          $ref: '#/definitions/Phrase'
  ListedTopic:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      description:
        type: string
      published:
        type: boolean
      strictness:
        type: string
        enum:
          - '1'
          - '55'
          - '65'
          - '72'
          - '85'
          - '90'
      programsCount:
        type: integer
        format: int32
      tags:
        type: array
        items:
          type: string
      dialect:
        type: string
      participants:
        type: string
        enum:
          - External
          - Internal
          - All
      phrasesCount:
        type: integer
        format: int32
      modifiedBy:
        $ref: '#/definitions/AddressableEntityRef'
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TopicsEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ListedTopic'
      pageSize:
        type: integer
        format: int32
      total:
        type: integer
        format: int32
      nextUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  UnifiedGeneralTopic:
    type: object
    properties:
      name:
        type: string
      status:
        type: string
        enum:
          - Deprecated
          - Outdated
          - Modified
          - UpToDate
          - ToBeCreated
          - CreatedByUser
  UnifiedGeneralTopicEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UnifiedGeneralTopic'
  UnpublishedProgramsEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Program'
      pageSize:
        type: integer
        format: int32
      nextUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
      selfUri:
        type: string
        format: uri
  JsonSearchResponse:
    type: object
    required:
      - pageCount
      - pageNumber
      - pageSize
      - results
      - total
      - types
    properties:
      total:
        type: integer
        format: int64
        description: The total number of results found
      pageCount:
        type: integer
        format: int32
        description: The total number of pages
      pageSize:
        type: integer
        format: int32
        description: The current page size
      pageNumber:
        type: integer
        format: int32
        description: The current page number
      types:
        type: array
        description: Resource types the search was performed against
        items:
          type: string
      results:
        description: Search results
        $ref: '#/definitions/ArrayNode'
      aggregations:
        $ref: '#/definitions/ArrayNode'
  TranscriptSearchCriteria:
    type: object
    properties:
      endValue:
        type: string
        description: The end value of the range. This field is used for range search types.
      values:
        type: array
        description: A list of values for the search to match against
        items:
          type: string
      startValue:
        type: string
        description: >-
          The start value of the range. This field is used for range search
          types.
      value:
        type: string
        description: A value for the search to match against
      operator:
        type: string
        description: How to apply this search criteria against other criteria
        enum:
          - AND
          - OR
          - NOT
      group:
        type: array
        description: Groups multiple conditions
        items:
          $ref: '#/definitions/TranscriptSearchCriteria'
      dateFormat:
        type: string
        description: >-
          Set date format for criteria values when using date range search
          type.  Supports Java date format syntax, example
          yyyy-MM-dd'T'HH:mm:ss.SSSX.
      type:
        type: string
        enum:
          - EXACT
          - EXACT_PHRASE
          - PHRASE
          - DATE_RANGE
          - RANGE
          - GREATER_THAN
          - LESS_THAN
      fields:
        type: array
        description: Field names to search against
        items:
          type: string
        x-genesys-search-fields:
          value:
            - transcript.content
            - language
            - mediaType
            - divisionId
            - communicationId
            - conversationId
            - conversationSentimentScore
            - conversationSentimentTrend
            - participants.initialDirection
            - participants.participantPurpose
            - participants.queueId
            - participants.userId
            - topic
            - transcriptId
  TranscriptSearchRequest:
    type: object
    required:
      - types
    properties:
      sortOrder:
        type: string
        description: The sort order for results
        enum:
          - ASC
          - DESC
          - SCORE
      sortBy:
        type: string
        description: The field in the resource that you want to sort the results by
      pageSize:
        type: integer
        format: int32
        description: The number of results per page
      pageNumber:
        type: integer
        format: int32
        description: The page of resources you want to retrieve
      sort:
        type: array
        description: Multi-value sort order, list of multiple sort values
        items:
          $ref: '#/definitions/SearchSort'
      returnFields:
        type: array
        items:
          type: string
      types:
        type: array
        description: Resource domain type to search
        items:
          type: string
      query:
        type: array
        description: The search criteria
        items:
          $ref: '#/definitions/TranscriptSearchCriteria'
  TranscriptUrl:
    type: object
    properties:
      url:
        type: string
        description: The pre-signed S3 URL of the transcript
  TeamMemberEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UserReferenceWithName'
      nextUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
  TeamAddMemberFailure:
    type: object
    properties:
      id:
        type: string
      reason:
        type: string
        description: Specific reason the member could not be added.
        readOnly: true
        enum:
          - UserNotFound
          - UserGroupLimitExceeded
          - UserGroupDivisionMismatch
  TeamMemberAddListingResponse:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UserReference'
      failures:
        type: array
        description: List of any user ids that were not added.
        readOnly: true
        items:
          $ref: '#/definitions/TeamAddMemberFailure'
  TeamMembers:
    type: object
    required:
      - memberIds
    properties:
      memberIds:
        type: array
        description: A list of the ids of the members to add or remove
        items:
          type: string
  TeamEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Team'
      nextUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
  TeamsSearchResponse:
    type: object
    required:
      - pageCount
      - pageNumber
      - pageSize
      - results
      - total
      - types
    properties:
      total:
        type: integer
        format: int64
        description: The total number of results found
      pageCount:
        type: integer
        format: int32
        description: The total number of pages
      pageSize:
        type: integer
        format: int32
        description: The current page size
      pageNumber:
        type: integer
        format: int32
        description: The current page number
      previousPage:
        type: string
        description: Q64 value for the previous page of results
      currentPage:
        type: string
        description: Q64 value for the current page of results
      nextPage:
        type: string
        description: Q64 value for the next page of results
      types:
        type: array
        description: Resource types the search was performed against
        items:
          type: string
      results:
        type: array
        description: Search results
        items:
          $ref: '#/definitions/Team'
  TeamSearchCriteria:
    type: object
    required:
      - type
    properties:
      endValue:
        type: string
        description: The end value of the range. This field is used for range search types.
      values:
        type: array
        description: A list of values for the search to match against
        items:
          type: string
      startValue:
        type: string
        description: >-
          The start value of the range. This field is used for range search
          types.
      value:
        type: string
        description: A value for the search to match against
      operator:
        type: string
        description: How to apply this search criteria against other criteria
        enum:
          - AND
          - OR
          - NOT
      group:
        type: array
        description: Groups multiple conditions
        items:
          $ref: '#/definitions/TeamSearchCriteria'
      dateFormat:
        type: string
        description: >-
          Set date format for criteria values when using date range search
          type.  Supports Java date format syntax, example
          yyyy-MM-dd'T'HH:mm:ss.SSSX.
      fields:
        type: array
        description: Field names to search against
        items:
          type: string
        x-genesys-search-fields:
          value:
            - description
            - name
      type:
        type: string
        description: Search Type
        enum:
          - EXACT
          - STARTS_WITH
  TeamSearchRequest:
    type: object
    required:
      - query
    properties:
      sortOrder:
        type: string
        description: The sort order for results
        enum:
          - ASC
          - DESC
          - SCORE
      sortBy:
        type: string
        description: The field in the resource that you want to sort the results by
      pageSize:
        type: integer
        format: int32
        description: The number of results per page
      pageNumber:
        type: integer
        format: int32
        description: The page of resources you want to retrieve
      sort:
        type: array
        description: Multi-value sort order, list of multiple sort values
        items:
          $ref: '#/definitions/SearchSort'
      query:
        type: array
        description: Team Search Criteria
        items:
          $ref: '#/definitions/TeamSearchCriteria'
  MediaRegions:
    type: object
    properties:
      awsHomeRegion:
        type: string
        description: The AWS region your organization is in.
        readOnly: true
      awsCoreRegions:
        type: array
        description: >-
          The list of AWS regions to which Genesys Cloud is deployed with full
          functionality including media streaming.
        readOnly: true
        items:
          type: string
      awsSatelliteRegions:
        type: array
        description: >-
          The list of AWS regions that Genesys Cloud uses only for media
          streaming.
        readOnly: true
        items:
          type: string
  SubscriberResponse:
    type: object
    required:
      - status
    properties:
      messageReturned:
        type: array
        description: Suggested valid addresses
        items:
          type: string
      status:
        type: string
        description: http status
  ValidateAddressResponse:
    type: object
    required:
      - valid
    properties:
      valid:
        type: boolean
        description: Was the passed in address valid
      response:
        description: Subscriber schema
        $ref: '#/definitions/SubscriberResponse'
  StreetAddress:
    type: object
    required:
      - A1
      - A3
      - HNO
      - PC
      - RD
      - country
    properties:
      country:
        type: string
        description: 2 Letter Country code, like US or GB
      A1:
        type: string
        description: State or Province
      A3:
        type: string
        description: City or township
      RD:
        type: string
        description: Number and street
      HNO:
        type: string
        description: House Number
      LOC:
        type: string
        description: extra location info like suite 300
      NAM:
        type: string
        description: Name of the customer
      PC:
        type: string
        description: Postal code
  ValidateAddressRequest:
    type: object
    properties:
      address:
        description: Address schema
        $ref: '#/definitions/StreetAddress'
  DomainCertificateAuthority:
    type: object
    required:
      - certificate
      - name
      - services
      - type
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      certificate:
        type: string
        description: The authorities signed X509 PEM encoded certificate.
      type:
        type: string
        description: >-
          The certificate authorities type.  Managed certificate authorities are
          generated and maintained by Interactive Intelligence.  These are
          read-only and not modifiable by clients.  Remote authorities are
          customer managed.
        enum:
          - MANAGED
          - REMOTE
      services:
        type: array
        description: The service(s) that the authority can be used to authenticate.
        items:
          type: string
          enum:
            - SIP
            - PROVISION
            - PROVISION_PHONE
      certificateDetails:
        type: array
        description: The details of the parsed certificate(s).
        items:
          $ref: '#/definitions/CertificateDetails'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: >-
      A certificate authority represents an organization that has issued a
      digital certificate for making secure connections with an edge device.
  CertificateAuthorityEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DomainCertificateAuthority'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  EdgeNetworkDiagnostic:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EdgeNetworkDiagnosticRequest:
    type: object
    required:
      - host
    properties:
      host:
        type: string
        description: IPv4/6 address or host to be probed for connectivity. No port allowed.
  EdgeNetworkDiagnosticResponse:
    type: object
    properties:
      commandCorrelationId:
        type: string
        description: UUID of each executed command on edge
      diagnostics:
        type: string
        description: Response string of executed command from edge
  DomainCapabilities:
    type: object
    properties:
      enabled:
        type: boolean
        description: True if this address family on the interface is enabled.
      dhcp:
        type: boolean
        description: True if this address family on the interface is using DHCP.
      metric:
        type: integer
        format: int32
        description: >-
          The metric being used for the address family on this interface. Lower
          values will have a higher priority. If autoMetric is true, this value
          will be the automatically calculated metric. To set this value be sure
          autoMetric is false. If no value is returned, metric configuration is
          not supported on this Edge.
      autoMetric:
        type: boolean
        description: >-
          True if the metric is being calculated automatically for the address
          family on this interface.
      supportsMetric:
        type: boolean
        description: True if metric configuration is supported.
        readOnly: true
      pingEnabled:
        type: boolean
        description: >-
          Set to true to enable this address family on this interface to respond
          to ping requests.
  DomainNetworkAddress:
    type: object
    properties:
      type:
        type: string
        description: The type of address.
        enum:
          - ip
          - dns
          - gateway
          - tdm
      address:
        type: string
        description: >-
          An IPv4 or IPv6 IP address. When specifying an address of type "ip",
          use CIDR format for the subnet mask.
      persistent:
        type: boolean
        description: >-
          True if this address will persist on Edge restart.  Addresses assigned
          by DHCP will be returned as false.
      family:
        type: integer
        format: int32
        description: The address family for this address.
        enum:
          - 2
          - 23
  DomainNetworkRoute:
    type: object
    properties:
      prefix:
        type: string
        description: The IPv4 or IPv6 route prefix in CIDR notation.
      nexthop:
        type: string
        description: The IPv4 or IPv6 nexthop IP address.
      persistent:
        type: boolean
        description: >-
          True if this route will persist on Edge restart.  Routes assigned by
          DHCP will be returned as false.
      metric:
        type: integer
        format: int32
        description: >-
          The metric being used for route. Lower values will have a higher
          priority.
      family:
        type: integer
        format: int32
        description: The address family for this route.
        enum:
          - 2
          - 23
  EdgeRebootParameters:
    type: object
    properties:
      callDrainingWaitTimeSeconds:
        type: integer
        format: int32
        description: >-
          The number of seconds to wait for call draining to complete before
          initiating the reboot. A value of 0 will prevent call draining and all
          calls will disconnect immediately.
  ConnectedEdge:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      interfaceName:
        type: string
        description: Edge interface name used for the connection
        readOnly: true
      interfaceIpAddress:
        type: string
        description: Edge interface IP address
        readOnly: true
      edgeConnectionList:
        type: array
        items:
          $ref: '#/definitions/EdgeConnectionInfo'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DomainEdgeSoftwareUpdateDto:
    type: object
    required:
      - version
    properties:
      version:
        description: Version
        $ref: '#/definitions/DomainEdgeSoftwareVersionDto'
      maxDownloadRate:
        type: integer
        format: int32
      downloadStartTime:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      executeStartTime:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      executeStopTime:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      executeOnIdle:
        type: boolean
      status:
        type: string
        enum:
          - NONE
          - INIT
          - IN_PROGRESS
          - EXPIRED
          - EXCEPTION
          - ABORTED
          - FAILED
          - SUCCEEDED
          - DELETE
      edgeUri:
        type: string
        format: uri
      callDrainingWaitTimeSeconds:
        type: integer
        format: int64
      current:
        type: boolean
  DomainEdgeSoftwareVersionDto:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      edgeVersion:
        type: string
      publishDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      edgeUri:
        type: string
        format: uri
      latestRelease:
        type: boolean
      current:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Edge:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      interfaces:
        type: array
        description: >-
          The list of interfaces for the edge. (Deprecated) Replaced by
          configuring trunks/ip info on the logical interface instead
        items:
          $ref: '#/definitions/EdgeInterface'
      make:
        type: string
      model:
        type: string
      apiVersion:
        type: string
      softwareVersion:
        type: string
      softwareVersionTimestamp:
        type: string
      softwareVersionPlatform:
        type: string
      softwareVersionConfiguration:
        type: string
      fullSoftwareVersion:
        type: string
      pairingId:
        type: string
        description: >-
          The pairing Id for a hardware Edge in the format:
          00000-00000-00000-00000-00000. This field is only required when
          creating an Edge with a deployment type of HARDWARE.
      fingerprint:
        type: string
      fingerprintHint:
        type: string
      currentVersion:
        type: string
      stagedVersion:
        type: string
      patch:
        type: string
      statusCode:
        type: string
        description: The current status of the Edge.
        enum:
          - NEW
          - AWAITING_CONNECTION
          - AWAITING_FINGERPRINT
          - AWAITING_FINGERPRINT_VERIFICATION
          - FINGERPRINT_VERIFIED
          - AWAITING_BOOTSTRAP
          - ACTIVE
          - INACTIVE
          - RMA
          - UNPAIRING
          - UNPAIRED
          - INITIALIZING
      edgeGroup:
        $ref: '#/definitions/EdgeGroup'
      site:
        description: The Site to which the Edge is assigned.
        $ref: '#/definitions/Site'
      softwareStatus:
        description: >-
          Details about an in-progress or recently in-progress Edge software
          upgrade. This node appears only if a software upgrade was recently
          initiated for this Edge.
        $ref: '#/definitions/DomainEdgeSoftwareUpdateDto'
      onlineStatus:
        type: string
        enum:
          - ONLINE
          - OFFLINE
      serialNumber:
        type: string
      physicalEdge:
        type: boolean
      managed:
        type: boolean
      edgeDeploymentType:
        type: string
        enum:
          - HARDWARE
          - LDM
          - CDM
          - CHS
          - INVALID
      callDrainingState:
        type: string
        description: >-
          The current state of the Edge's call draining process before it can be
          safely rebooted or updated.
        readOnly: true
        enum:
          - NONE
          - WAIT
          - WAIT_TIMEOUT
          - TERMINATE
          - COMPLETE
      conversationCount:
        type: integer
        format: int32
        description: >-
          The remaining number of conversations the Edge has to drain before it
          can be safely rebooted or updated. When an Edge is not draining
          conversations, this will be NULL or 0.
        readOnly: true
      proxy:
        type: string
        description: >-
          Edge HTTP proxy configuration for the WAN port. The field can be a
          hostname, FQDN, IPv4 or IPv6 address. If port is not included, port 80
          is assumed.
      offlineConfigCalled:
        type: boolean
        description: >-
          True if the offline edge configuration endpoint has been called for
          this edge.
        readOnly: true
      osName:
        type: string
        description: The name provided by the operating system of the Edge.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EdgeAutoUpdateConfig:
    type: object
    required:
      - end
      - rrule
      - start
      - timeZone
    properties:
      timeZone:
        type: string
        description: >-
          The timezone of the window in which any updates to the edges assigned
          to the site can be applied. The minimum size of the window is 2 hours.
      rrule:
        type: string
        description: >-
          The recurrence rule for updating the Edges assigned to the site. The
          only supported frequencies are daily and weekly. Weekly frequencies
          require a day list with at least oneday specified. All other
          configurations are not supported.
      start:
        type: string
        format: local-date-time
        description: >-
          Date time is represented as an ISO-8601 string without a timezone. For
          example: yyyy-MM-ddTHH:mm:ss.SSS
      end:
        type: string
        format: local-date-time
        description: >-
          Date time is represented as an ISO-8601 string without a timezone. For
          example: yyyy-MM-ddTHH:mm:ss.SSS
  EdgeConnectionInfo:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      interfaceName:
        type: string
        description: Interface used for the connection on the edge
        readOnly: true
      interfaceIpAddress:
        type: string
        description: IP address of the interface
        readOnly: true
      connectionErrors:
        type: array
        description: Connection errors
        readOnly: true
        items:
          type: string
      site:
        $ref: '#/definitions/AddressableEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EdgeGroup:
    type: object
    required:
      - edgeTrunkBaseAssignment
      - name
      - phoneTrunkBases
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      managed:
        type: boolean
        description: Is this edge group being managed remotely.
      hybrid:
        type: boolean
        description: Is this edge group hybrid.
      edgeTrunkBaseAssignment:
        description: >-
          A trunk base settings assignment of trunkType "EDGE" to use for
          edge-to-edge communication.
        $ref: '#/definitions/TrunkBaseAssignment'
      phoneTrunkBases:
        type: array
        description: >-
          Trunk base settings of trunkType "PHONE" to inherit to edge logical
          interface for phone communication.
        items:
          $ref: '#/definitions/TrunkBase'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EdgeInterface:
    type: object
    properties:
      type:
        type: string
      ipAddress:
        type: string
      name:
        type: string
      macAddress:
        type: string
      ifName:
        type: string
      endpoints:
        type: array
        items:
          $ref: '#/definitions/DomainEntityRef'
      lineTypes:
        type: array
        items:
          type: string
          enum:
            - TIE
            - NETWORK
            - TRUNK
            - STATION
      addressFamilyId:
        type: string
  NTPSettings:
    type: object
    properties:
      servers:
        type: array
        description: List of NTP servers, in priority order
        items:
          type: string
  Site:
    type: object
    required:
      - location
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      primarySites:
        type: array
        items:
          $ref: '#/definitions/DomainEntityRef'
      secondarySites:
        type: array
        items:
          $ref: '#/definitions/DomainEntityRef'
      primaryEdges:
        type: array
        items:
          $ref: '#/definitions/Edge'
      secondaryEdges:
        type: array
        items:
          $ref: '#/definitions/Edge'
      addresses:
        type: array
        items:
          $ref: '#/definitions/Contact'
      edges:
        type: array
        items:
          $ref: '#/definitions/Edge'
      edgeAutoUpdateConfig:
        description: >-
          Recurrance rule, time zone, and start/end settings for automatic edge
          updates for this site
        $ref: '#/definitions/EdgeAutoUpdateConfig'
      mediaRegionsUseLatencyBased:
        type: boolean
      location:
        description: Location
        $ref: '#/definitions/LocationDefinition'
      managed:
        type: boolean
      ntpSettings:
        description: Network Time Protocol settings for the site
        $ref: '#/definitions/NTPSettings'
      mediaModel:
        type: string
        description: Media model for the site
        enum:
          - Premises
          - Cloud
      coreSite:
        type: boolean
        description: Is this site a core site
      siteConnections:
        type: array
        description: The site connections
        items:
          $ref: '#/definitions/SiteConnection'
      mediaRegions:
        type: array
        description: The ordered list of AWS regions through which media can stream.
        items:
          type: string
      callerId:
        type: string
        description: The caller ID value for the site.
      callerName:
        type: string
        description: The caller name for the site.
      cloudProxyForceTurn:
        type: boolean
        description: 'Enables premises Edge Force Turn '
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SiteConnection:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      selfUri:
        type: string
        format: uri
      managed:
        type: boolean
      type:
        type: string
        description: Connection method from site to site (Direct, Indirect, CloudProxy
        enum:
          - Direct
          - Indirect
          - CloudProxy
      enabled:
        type: boolean
        description: Indicates if the current site is linked
      mediaModel:
        type: string
        description: Media model for the current site.
        readOnly: true
        enum:
          - Premises
          - Cloud
      edgeList:
        type: array
        description: All of the edges to which the site connects
        readOnly: true
        items:
          $ref: '#/definitions/ConnectedEdge'
      coreSite:
        type: boolean
        description: The core site
        readOnly: true
      primaryCoreSites:
        type: array
        description: List of site ids names and selfUris for the primary core sites
        readOnly: true
        items:
          $ref: '#/definitions/DomainEntityRef'
      secondaryCoreSites:
        type: array
        description: List of site ids names and selfUris for the secondary core sites
        readOnly: true
        items:
          $ref: '#/definitions/DomainEntityRef'
  TrunkBase:
    type: object
    required:
      - name
      - trunkMetabase
      - trunkType
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      trunkMetabase:
        description: The meta-base this trunk is based on.
        $ref: '#/definitions/DomainEntityRef'
      properties:
        type: object
        additionalProperties:
          type: object
      trunkType:
        type: string
        description: The type of this trunk base.
        enum:
          - EXTERNAL
          - PHONE
          - EDGE
      managed:
        type: boolean
        description: >-
          Is this trunk being managed remotely. This property is synchronized
          with the managed property of the Edge Group to which it is assigned.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TrunkBaseAssignment:
    type: object
    properties:
      family:
        type: integer
        format: int32
        description: >-
          The address family to use with the trunk base settings. 2=IPv4,
          23=IPv6
      trunkBase:
        description: A trunk base settings reference.
        $ref: '#/definitions/TrunkBase'
  EdgeServiceStateRequest:
    type: object
    required:
      - inService
    properties:
      inService:
        type: boolean
        description: A boolean that sets the Edge in-service or out-of-service.
      callDrainingWaitTimeSeconds:
        type: integer
        format: int32
        description: >-
          The number of seconds to wait for call draining to complete before
          initiating the reboot. A value of 0 will prevent call draining and all
          calls will disconnect immediately.
  DomainEdgeSoftwareVersionDtoEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DomainEdgeSoftwareVersionDto'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  RegionTimeZone:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      offset:
        type: integer
        format: int64
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TimeZoneEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/RegionTimeZone'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  EdgeVersionInformation:
    type: object
    properties:
      softwareVersion:
        type: string
  EdgeVersionReport:
    type: object
    properties:
      oldestVersion:
        $ref: '#/definitions/EdgeVersionInformation'
      newestVersion:
        $ref: '#/definitions/EdgeVersionInformation'
  DomainLogicalInterface:
    type: object
    required:
      - friendlyName
      - hardwareAddress
      - name
      - physicalAdapterId
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      edgeUri:
        type: string
        format: uri
      edgeAssignedId:
        type: string
      friendlyName:
        type: string
        description: Friendly Name
      vlanTagId:
        type: integer
        format: int32
      hardwareAddress:
        type: string
        description: Hardware Address
      physicalAdapterId:
        type: string
        description: Physical Adapter Id
      ifStatus:
        type: string
      interfaceType:
        type: string
        description: The type of this network interface.
        readOnly: true
        enum:
          - DIAGNOSTIC
          - SYSTEM
      publicNatAddressIpV4:
        type: string
        description: IPv4 NENT IP Address
      publicNatAddressIpV6:
        type: string
        description: IPv6 NENT IP Address
      routes:
        type: array
        description: The list of routes assigned to this interface.
        items:
          $ref: '#/definitions/DomainNetworkRoute'
      addresses:
        type: array
        description: >-
          The list of IP addresses on this interface.  Priority of dns addresses
          are based on order in the list.
        items:
          $ref: '#/definitions/DomainNetworkAddress'
      ipv4Capabilities:
        description: IPv4 interface settings.
        $ref: '#/definitions/DomainCapabilities'
      ipv6Capabilities:
        description: IPv6 interface settings.
        $ref: '#/definitions/DomainCapabilities'
      currentState:
        type: string
        enum:
          - INIT
          - CREATING
          - UPDATING
          - OK
          - EXCEPTION
          - DELETING
      lastModifiedUserId:
        type: string
      lastModifiedCorrelationId:
        type: string
      commandResponses:
        type: array
        items:
          $ref: '#/definitions/DomainNetworkCommandResponse'
      inheritPhoneTrunkBasesIPv4:
        type: boolean
        description: >-
          The IPv4 phone trunk base assignment will be inherited from the Edge
          Group.
      inheritPhoneTrunkBasesIPv6:
        type: boolean
        description: >-
          The IPv6 phone trunk base assignment will be inherited from the Edge
          Group.
      useForInternalEdgeCommunication:
        type: boolean
        description: >-
          This interface will be used for all internal edge-to-edge
          communication using settings from the edgeTrunkBaseAssignment on the
          Edge Group.
      useForIndirectEdgeCommunication:
        type: boolean
        description: >-
          Site Interconnects using the "Indirect" method will communicate using
          the Public IP Address specified on the interface. Use this option when
          a NAT enabled firewall is between the Edge and the far end.
      useForCloudProxyEdgeCommunication:
        type: boolean
        description: >-
          Site Interconnects using the "Cloud Proxy" method will broker the
          connection between them with a Cloud Proxy. This method is required
          for connections between one or more Sites using Cloud Media, but can
          optionally be used between two premises Sites if Direct or Indirect
          are not an option.
      useForWanInterface:
        type: boolean
        description: This interface will be used for all communication with the internet.
        readOnly: true
      externalTrunkBaseAssignments:
        type: array
        description: >-
          External trunk base settings to use for external communication from
          this interface.
        items:
          $ref: '#/definitions/TrunkBaseAssignment'
      phoneTrunkBaseAssignments:
        type: array
        description: >-
          Phone trunk base settings to use for phone communication from this
          interface.  These settings will be ignored when
          "inheritPhoneTrunkBases" is true.
        items:
          $ref: '#/definitions/TrunkBaseAssignment'
      traceEnabled:
        type: boolean
      startDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endDate:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DomainNetworkCommandResponse:
    type: object
    properties:
      correlationId:
        type: string
      commandName:
        type: string
      acknowledged:
        type: boolean
      errorInfo:
        $ref: '#/definitions/ErrorDetails'
  ErrorDetails:
    type: object
    properties:
      status:
        type: integer
        format: int32
      message:
        type: string
      messageWithParams:
        type: string
      messageParams:
        type: object
        additionalProperties:
          type: string
      code:
        type: string
      contextId:
        type: string
      nested:
        $ref: '#/definitions/ErrorDetails'
      details:
        type: string
        format: uri
  LogicalInterfaceEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DomainLogicalInterface'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  DomainPhysicalCapabilities:
    type: object
    properties:
      vlan:
        type: boolean
      team:
        type: boolean
  DomainPhysicalInterface:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      edgeUri:
        type: string
        format: uri
      friendlyName:
        type: string
      hardwareAddress:
        type: string
      portLabel:
        type: string
      physicalCapabilities:
        $ref: '#/definitions/DomainPhysicalCapabilities'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PhysicalInterfaceEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DomainPhysicalInterface'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  EdgeEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Edge'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  AvailableLanguageList:
    type: object
    properties:
      languages:
        type: array
        items:
          type: string
  DIDPool:
    type: object
    required:
      - endPhoneNumber
      - name
      - startPhoneNumber
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      startPhoneNumber:
        type: string
        description: >-
          The starting phone number for the range of this DID pool. Must be in
          E.164 format
      endPhoneNumber:
        type: string
        description: >-
          The ending phone number for the range of this DID pool. Must be in
          E.164 format
      comments:
        type: string
      provider:
        type: string
        description: The provider for this DID pool
        enum:
          - PURE_CLOUD
          - PURE_CLOUD_VOICE
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DIDNumber:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      number:
        type: string
        description: The number of the DID formatted as E164.
      assigned:
        type: boolean
        description: True if this DID is assigned to an entity.  False otherwise.
      didPool:
        description: A Uri reference to the DID Pool this DID is a part of.
        $ref: '#/definitions/AddressableEntityRef'
      owner:
        description: >-
          A Uri reference to the owner of this DID.  The owner's type can be
          found in ownerType.  If the DID is unassigned, this will be NULL.
        $ref: '#/definitions/DomainEntityRef'
      ownerType:
        type: string
        description: >-
          The type of the entity that owns this DID.  If the DID is unassigned,
          this will be NULL.
        enum:
          - USER
          - PHONE
          - IVR_CONFIG
          - GROUP
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Represents an unassigned or assigned DID in a DID Pool.
  DIDNumberEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DIDNumber'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  DIDPoolEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DIDPool'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  DID:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      phoneNumber:
        type: string
      didPool:
        $ref: '#/definitions/DomainEntityRef'
      owner:
        description: >-
          A Uri reference to the owner of this DID, which is either a User or an
          IVR
        $ref: '#/definitions/DomainEntityRef'
      ownerType:
        type: string
        enum:
          - USER
          - PHONE
          - IVR_CONFIG
          - GROUP
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DIDEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DID'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  EdgeTrunkBase:
    type: object
    required:
      - name
      - trunkMetabase
      - trunkType
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      trunkMetabase:
        description: The meta-base this trunk is based on.
        $ref: '#/definitions/DomainEntityRef'
      properties:
        type: object
        additionalProperties:
          type: object
      trunkType:
        type: string
        description: The type of this trunk base.
        enum:
          - EXTERNAL
          - PHONE
          - EDGE
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EdgeGroupEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/EdgeGroup'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ExtensionPool:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      startNumber:
        type: string
        description: >-
          The starting phone number for the range of this Extension pool. The
          number must be between 3 and 9 digits in length and the same length as
          the endNumber.
      endNumber:
        type: string
        description: >-
          The ending phone number for the range of this Extension pool. The
          number must be between 3 and 9 digits in length and the same length as
          the startNumber.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ExtensionPoolEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ExtensionPool'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  Extension:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      number:
        type: string
      owner:
        description: >-
          A Uri reference to the owner of this extension, which is either a User
          or an IVR
        $ref: '#/definitions/DomainEntityRef'
      extensionPool:
        $ref: '#/definitions/DomainEntityRef'
      ownerType:
        type: string
        enum:
          - USER
          - PHONE
          - IVR_CONFIG
          - GROUP
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ExtensionEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Extension'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  LineBase:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      lineMetaBase:
        $ref: '#/definitions/DomainEntityRef'
      properties:
        type: object
        additionalProperties:
          type: object
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LineBaseEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/LineBase'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  Line:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      properties:
        type: object
        additionalProperties:
          type: object
      edgeGroup:
        description: The edge group associated with the line. (Deprecated)
        $ref: '#/definitions/DomainEntityRef'
      template:
        $ref: '#/definitions/DomainEntityRef'
      site:
        $ref: '#/definitions/DomainEntityRef'
      lineBaseSettings:
        $ref: '#/definitions/DomainEntityRef'
      primaryEdge:
        description: The primary edge associated to the line. (Deprecated)
        $ref: '#/definitions/Edge'
      secondaryEdge:
        description: The secondary edge associated to the line. (Deprecated)
        $ref: '#/definitions/Edge'
      loggedInUser:
        $ref: '#/definitions/DomainEntityRef'
      defaultForUser:
        $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LineEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Line'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  EdgeLogsJob:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      files:
        type: array
        description: The files available to upload from the Edge to the cloud.
        items:
          $ref: '#/definitions/EdgeLogsJobFile'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EdgeLogsJobFile:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      timeCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      timeModified:
        type: string
        format: date-time
        description: >-
          The time this log file was last modified on the Edge. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      sizeBytes:
        type: number
        format: double
        description: The size of this file in bytes.
      uploadStatus:
        type: string
        description: >-
          The status of the upload of this file from the Edge to the cloud.  Use
          /upload to start an upload.
        enum:
          - UPLOADING
          - NOT_UPLOADED
          - UPLOADED
          - ERROR_ON_UPLOAD
      edgePath:
        type: string
        format: uri
        description: The path of this file on the Edge.
      downloadId:
        type: string
        description: The download ID to use with the downloads API.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EdgeLogsJobUploadRequest:
    type: object
    required:
      - fileIds
    properties:
      fileIds:
        type: array
        description: A list of file ids to upload.
        items:
          type: string
  EdgeLogsJobResponse:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The created job id.
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  EdgeLogsJobRequest:
    type: object
    properties:
      path:
        type: string
        description: A relative directory to the root Edge log folder to query from.
      query:
        type: string
        description: >-
          The pattern to use when searching for logs, which may include the
          wildcards {*, ?}.  Multiple search patterns may be combined using a
          pipe '|' as a delimiter.
      recurse:
        type: boolean
        description: Boolean whether or not to recurse into directories.
  EdgeMetrics:
    type: object
    properties:
      edge:
        $ref: '#/definitions/DomainEntityRef'
      eventTime:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      upTimeMsec:
        type: integer
        format: int64
      processors:
        type: array
        items:
          $ref: '#/definitions/EdgeMetricsProcessor'
      memory:
        type: array
        items:
          $ref: '#/definitions/EdgeMetricsMemory'
      disks:
        type: array
        items:
          $ref: '#/definitions/EdgeMetricsDisk'
      subsystems:
        type: array
        items:
          $ref: '#/definitions/EdgeMetricsSubsystem'
      networks:
        type: array
        items:
          $ref: '#/definitions/EdgeMetricsNetwork'
  EdgeMetricsDisk:
    type: object
    properties:
      availableBytes:
        type: number
        format: double
        description: Available memory in bytes.
      partitionName:
        type: string
        description: Disk partition name.
      totalBytes:
        type: number
        format: double
        description: Total memory in bytes.
  EdgeMetricsMemory:
    type: object
    properties:
      availableBytes:
        type: number
        format: double
        description: Available memory in bytes.
      type:
        type: string
        description: Type of memory. Virtual or physical.
      totalBytes:
        type: number
        format: double
        description: Total memory in bytes.
  EdgeMetricsNetwork:
    type: object
    properties:
      ifname:
        type: string
        description: Identifier for the network adapter.
      sentBytesPerSec:
        type: integer
        format: int32
        description: Number of byes sent per second.
      receivedBytesPerSec:
        type: integer
        format: int32
        description: Number of byes received per second.
      bandwidthBitsPerSec:
        type: number
        format: double
        description: Total bandwidth of the adapter in bits per second.
      utilizationPct:
        type: number
        format: double
        description: Percent utilization of the network adapter.
  EdgeMetricsProcessor:
    type: object
    properties:
      activeTimePct:
        type: number
        format: double
        description: Percent time processor was active.
      cpuId:
        type: string
        description: >-
          Machine CPU identifier. 'total' will always be included in the array
          and is the total of all CPU resources.
      idleTimePct:
        type: number
        format: double
        description: Percent time processor was idle.
      privilegedTimePct:
        type: number
        format: double
        description: Percent time processor spent in privileged mode.
      userTimePct:
        type: number
        format: double
        description: Percent time processor spent in user mode.
  EdgeMetricsSubsystem:
    type: object
    properties:
      delayMs:
        type: integer
        format: int32
        description: Delay in milliseconds.
      processName:
        type: string
        description: Name of the Edge process.
      mediaSubsystem:
        description: Subsystem for an Edge device.
        $ref: '#/definitions/EdgeMetricsSubsystem'
  DigitLength:
    type: object
    properties:
      start:
        type: string
      end:
        type: string
  Number:
    type: object
    properties:
      start:
        type: string
      end:
        type: string
  NumberPlan:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      match:
        type: string
      normalizedFormat:
        type: string
      priority:
        type: integer
        format: int32
      numbers:
        type: array
        items:
          $ref: '#/definitions/Number'
      digitLength:
        $ref: '#/definitions/DigitLength'
      classification:
        type: string
      matchType:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OutboundRoute:
    type: object
    required:
      - classificationTypes
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      classificationTypes:
        type: array
        description: The site associated to the outbound route.
        items:
          type: string
      enabled:
        type: boolean
      distribution:
        type: string
        enum:
          - SEQUENTIAL
          - RANDOM
      externalTrunkBases:
        type: array
        description: >-
          Trunk base settings of trunkType "EXTERNAL".  This base must also be
          set on an edge logical interface for correct routing.
        items:
          $ref: '#/definitions/DomainEntityRef'
      site:
        description: The site associated to the outbound route.
        readOnly: true
        $ref: '#/definitions/Site'
      managed:
        type: boolean
        description: Is this outbound route being managed remotely.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OutboundRouteEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/OutboundRoute'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  PhoneBase:
    type: object
    required:
      - lines
      - name
      - phoneMetaBase
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      phoneMetaBase:
        description: >-
          A phone metabase is essentially a database for storing phone
          configuration settings, which simplifies the configuration process.
        $ref: '#/definitions/DomainEntityRef'
      lines:
        type: array
        description: The list of linebases associated with the phone base.
        items:
          $ref: '#/definitions/LineBase'
      properties:
        type: object
        additionalProperties:
          type: object
      capabilities:
        $ref: '#/definitions/PhoneCapabilities'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PhoneCapabilities:
    type: object
    properties:
      provisions:
        type: boolean
      registers:
        type: boolean
      dualRegisters:
        type: boolean
      hardwareIdType:
        type: string
      allowReboot:
        type: boolean
      noRebalance:
        type: boolean
      noCloudProvisioning:
        type: boolean
      mediaCodecs:
        type: array
        items:
          type: string
          enum:
            - audio/opus
            - audio/pcmu
            - audio/pcma
            - audio/g729
            - audio/g722
      cdm:
        type: boolean
  PhoneBaseEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/PhoneBase'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  Metabase:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      type:
        type: string
        enum:
          - EXTERNAL
          - EXTERNAL_PCV
          - EXTERNAL_PCV_AWS
          - EXTERNAL_BYOC_CARRIER
          - EXTERNAL_BYOC_PBX
          - STATION_CDM
          - STATION_CDM_WEBRTC
          - STATION
          - TIE
          - TIE_DIRECT
          - TIE_INDIRECT
          - TIE_CLOUD_PROXY
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PhoneMetaBaseEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Metabase'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  LineStatus:
    type: object
    properties:
      id:
        type: string
        description: The id of this line
      reachable:
        type: boolean
        description: Indicates whether the edge can reach the line.
      addressOfRecord:
        type: string
        description: The line's address of record.
      contactAddresses:
        type: array
        description: The addresses used to contact the line.
        items:
          type: string
      reachableStateTime:
        type: string
        format: date-time
        description: >-
          The time the line entered its current reachable state. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  Phone:
    type: object
    required:
      - lines
      - name
      - phoneBaseSettings
      - site
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      site:
        description: The site associated to the phone.
        $ref: '#/definitions/DomainEntityRef'
      phoneBaseSettings:
        description: Phone Base Settings
        $ref: '#/definitions/PhoneBaseSettings'
      lineBaseSettings:
        $ref: '#/definitions/DomainEntityRef'
      phoneMetaBase:
        $ref: '#/definitions/DomainEntityRef'
      lines:
        type: array
        description: Lines
        items:
          $ref: '#/definitions/Line'
      status:
        description: The status of the phone and lines from the primary Edge.
        $ref: '#/definitions/PhoneStatus'
      secondaryStatus:
        description: The status of the phone and lines from the secondary Edge.
        $ref: '#/definitions/PhoneStatus'
      userAgentInfo:
        description: >-
          User Agent Information for this phone. This includes model, firmware
          version, and manufacturer.
        readOnly: true
        $ref: '#/definitions/UserAgentInfo'
      properties:
        type: object
        additionalProperties:
          type: object
      capabilities:
        $ref: '#/definitions/PhoneCapabilities'
      webRtcUser:
        description: >-
          This is the user associated with a WebRTC type phone.  It is required
          for all WebRTC phones.
        $ref: '#/definitions/DomainEntityRef'
      primaryEdge:
        $ref: '#/definitions/Edge'
      secondaryEdge:
        $ref: '#/definitions/Edge'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PhoneBaseSettings:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The globally unique identifier for this phone base settings
      name:
        type: string
      selfUri:
        type: string
        format: uri
  PhoneStatus:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      operationalStatus:
        type: string
        description: The Operational Status of this phone
        enum:
          - OPERATIONAL
          - DEGRADED
          - OFFLINE
          - UNKNOWN
      edgesStatus:
        type: string
        description: >-
          The status of the primary or secondary Edges assigned to the phone
          lines.
        enum:
          - IN_SERVICE
          - MIXED_SERVICE
          - OUT_OF_SERVICE
          - NO_EDGES
      eventCreationTime:
        type: string
        description: >-
          Event Creation Time represents an ISO-8601 string. For example: UTC,
          UTC+01:00, or Europe/London
      provision:
        description: Provision information for this phone
        $ref: '#/definitions/ProvisionInfo'
      lineStatuses:
        type: array
        description: A list of LineStatus information for each of the lines of this phone
        items:
          $ref: '#/definitions/LineStatus'
      phoneAssignmentToEdgeType:
        type: string
        description: The phone status's edge assignment type.
        enum:
          - PRIMARY
          - SECONDARY
      edge:
        description: The URI of the edge that provided this status information.
        $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ProvisionInfo:
    type: object
    properties:
      time:
        type: string
        format: date-time
        description: >-
          The time at which this phone was provisioned. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      source:
        type: string
        description: The source of the provisioning
      errorInfo:
        type: string
        description: The error information from the provision process, if any
  UserAgentInfo:
    type: object
    properties:
      firmwareVersion:
        type: string
        description: The firmware version of the phone.
      manufacturer:
        type: string
        description: The manufacturer of the phone.
      model:
        type: string
        description: The model of the phone.
  PhoneEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Phone'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  PhonesReboot:
    type: object
    properties:
      phoneIds:
        type: array
        description: The list of phone Ids to reboot.
        items:
          type: string
      siteId:
        type: string
        description: |-
          ID of the site for which to reboot all phones at that site.
          no.active.edge and phone.cannot.resolve errors are ignored.
  ExpiredEdgeListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DomainEntityRef'
  SiteEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Site'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  OutboundRouteBase:
    type: object
    required:
      - classificationTypes
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      classificationTypes:
        type: array
        description: The site associated to the outbound route.
        items:
          type: string
      enabled:
        type: boolean
      distribution:
        type: string
        enum:
          - SEQUENTIAL
          - RANDOM
      externalTrunkBases:
        type: array
        description: >-
          Trunk base settings of trunkType "EXTERNAL".  This base must also be
          set on an edge logical interface for correct routing.
        items:
          $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  OutboundRouteBaseEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/OutboundRouteBase'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  TrunkMetrics:
    type: object
    properties:
      eventTime:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      logicalInterface:
        $ref: '#/definitions/DomainEntityRef'
      trunk:
        $ref: '#/definitions/DomainEntityRef'
      calls:
        $ref: '#/definitions/TrunkMetricsCalls'
      qos:
        $ref: '#/definitions/TrunkMetricsQoS'
  TrunkMetricsCalls:
    type: object
    properties:
      inboundCallCount:
        type: integer
        format: int32
      outboundCallCount:
        type: integer
        format: int32
  TrunkMetricsQoS:
    type: object
    required:
      - mismatchCount
    properties:
      mismatchCount:
        type: integer
        format: int32
        description: >-
          Total number of QoS mismatches over the course of the last 24-hour
          period (sliding window).
  TrunkBaseEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/TrunkBase'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  TrunkMetabaseEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Metabase'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  TrunkRecordingEnabledCount:
    type: object
    properties:
      enabledCount:
        type: integer
        format: int32
        description: The amount of trunks that have recording enabled
      disabledCount:
        type: integer
        format: int32
        description: The amount of trunks that do not have recording enabled
  Trunk:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      trunkType:
        type: string
        description: The type of this trunk.
        enum:
          - EXTERNAL
          - PHONE
          - EDGE
      edge:
        description: The Edge using this trunk.
        $ref: '#/definitions/DomainEntityRef'
      trunkBase:
        description: The trunk base configuration used on this trunk.
        $ref: '#/definitions/DomainEntityRef'
      trunkMetabase:
        description: The metabase used to create this trunk.
        $ref: '#/definitions/DomainEntityRef'
      edgeGroup:
        description: The edge group associated with this trunk.
        $ref: '#/definitions/DomainEntityRef'
      inService:
        type: boolean
        description: >-
          True if this trunk is in-service.  This comes from the trunk_enabled
          property of the referenced trunk base.
        readOnly: true
      enabled:
        type: boolean
        description: True if the Edge used by this trunk is in-service
      logicalInterface:
        description: The Logical Interface on the Edge to which the trunk is assigned.
        readOnly: true
        $ref: '#/definitions/DomainEntityRef'
      connectedStatus:
        description: The connected status of the trunk
        readOnly: true
        $ref: '#/definitions/TrunkConnectedStatus'
      optionsStatus:
        type: array
        description: The trunk optionsStatus
        readOnly: true
        items:
          $ref: '#/definitions/TrunkMetricsOptions'
      registersStatus:
        type: array
        description: The trunk registersStatus
        readOnly: true
        items:
          $ref: '#/definitions/TrunkMetricsRegisters'
      ipStatus:
        description: The trunk ipStatus
        readOnly: true
        $ref: '#/definitions/TrunkMetricsNetworkTypeIp'
      optionsEnabledStatus:
        type: string
        description: >-
          Returns Enabled when the trunk base supports the availability interval
          and it has a value greater than 0.
        readOnly: true
        enum:
          - ENABLED
          - DISABLED
          - NOT_SUPPORTED
      registersEnabledStatus:
        type: string
        description: >-
          Returns Enabled when the trunk base supports the registration interval
          and it has a value greater than 0.
        readOnly: true
        enum:
          - ENABLED
          - DISABLED
          - NOT_SUPPORTED
      family:
        type: integer
        format: int32
        description: The IP Network Family of the trunk
        readOnly: true
      proxyAddressList:
        type: array
        description: The list of proxy addresses (ports if provided) for the trunk
        readOnly: true
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TrunkConnectedStatus:
    type: object
    properties:
      connected:
        type: boolean
      connectedStateTime:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  TrunkEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Trunk'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  TrunkErrorInfo:
    type: object
    properties:
      text:
        type: string
      code:
        type: string
      details:
        $ref: '#/definitions/TrunkErrorInfoDetails'
  TrunkErrorInfoDetails:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      hostname:
        type: string
  TrunkMetricsNetworkTypeIp:
    type: object
    properties:
      address:
        type: string
        description: Assigned IP Address for the interface
      errorInfo:
        description: Information about the error.
        $ref: '#/definitions/TrunkErrorInfo'
  TrunkMetricsOptions:
    type: object
    properties:
      proxyAddress:
        type: string
        description: Server proxy address that this options array element represents.
      optionState:
        type: boolean
      optionStateTime:
        type: string
        format: date-time
        description: >-
          ISO 8601 format UTC absolute date & time of the last change of the
          option state.
      errorInfo:
        $ref: '#/definitions/TrunkErrorInfo'
  TrunkMetricsRegisters:
    type: object
    properties:
      proxyAddress:
        type: string
        description: Server proxy address that this registers array element represents.
      registerState:
        type: boolean
        description: >-
          True if last REGISTER message had positive response; false if error
          response or no response.
      registerStateTime:
        type: string
        format: date-time
        description: >-
          ISO 8601 format UTC absolute date & time of the last change of the
          register state.
      errorInfo:
        $ref: '#/definitions/TrunkErrorInfo'
  MetaData:
    type: object
    properties:
      pairing-token:
        type: string
      pairing-trust:
        type: array
        items:
          type: string
      pairing-url:
        type: string
  VmPairingInfo:
    type: object
    properties:
      meta-data:
        description: >-
          This is to be used to complete the setup process of a locally deployed
          virtual edge device.
        $ref: '#/definitions/MetaData'
      edge-id:
        type: string
      auth-token:
        type: string
      org-id:
        type: string
  HomerRecord:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      date:
        type: string
        format: date-time
        description: >-
          metadata associated to the SIP calls. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      milliTs:
        type: string
        description: metadata associated to the SIP calls
      microTs:
        type: string
        description: metadata associated to the SIP calls
      method:
        type: string
        description: metadata associated to the SIP calls
      replyReason:
        type: string
        description: metadata associated to the SIP calls
      ruri:
        type: string
        description: metadata associated to the SIP calls
      ruriUser:
        type: string
        description: metadata associated to the SIP calls
      ruriDomain:
        type: string
        description: metadata associated to the SIP calls
      fromUser:
        type: string
        description: metadata associated to the SIP calls
      fromDomain:
        type: string
        description: metadata associated to the SIP calls
      fromTag:
        type: string
        description: metadata associated to the SIP calls
      toUser:
        type: string
        description: metadata associated to the SIP calls
      toDomain:
        type: string
        description: metadata associated to the SIP calls
      toTag:
        type: string
        description: metadata associated to the SIP calls
      pidUser:
        type: string
        description: metadata associated to the SIP calls
      contactUser:
        type: string
        description: metadata associated to the SIP calls
      authUser:
        type: string
        description: metadata associated to the SIP calls
      callid:
        type: string
        description: metadata associated to the SIP calls
      callidAleg:
        type: string
        description: metadata associated to the SIP calls
      via1:
        type: string
        description: metadata associated to the SIP calls
      via1Branch:
        type: string
        description: metadata associated to the SIP calls
      cseq:
        type: string
        description: metadata associated to the SIP calls
      diversion:
        type: string
        description: metadata associated to the SIP calls
      reason:
        type: string
        description: metadata associated to the SIP calls
      contentType:
        type: string
        description: metadata associated to the SIP calls
      auth:
        type: string
        description: metadata associated to the SIP calls
      userAgent:
        type: string
        description: metadata associated to the SIP calls
      sourceIp:
        type: string
        description: metadata associated to the SIP calls
      sourcePort:
        type: string
        description: metadata associated to the SIP calls
      destinationIp:
        type: string
        description: metadata associated to the SIP calls
      destinationPort:
        type: string
        description: metadata associated to the SIP calls
      contactIp:
        type: string
        description: metadata associated to the SIP calls
      contactPort:
        type: string
        description: metadata associated to the SIP calls
      originatorIp:
        type: string
        description: metadata associated to the SIP calls
      originatorPort:
        type: string
        description: metadata associated to the SIP calls
      correlationId:
        type: string
        description: metadata associated to the SIP calls
      proto:
        type: string
        description: metadata associated to the SIP calls
      family:
        type: string
        description: metadata associated to the SIP calls
      rtpStat:
        type: string
        description: metadata associated to the SIP calls
      type:
        type: string
        description: metadata associated to the SIP calls
      node:
        type: string
        description: metadata associated to the SIP calls
      trans:
        type: string
        description: metadata associated to the SIP calls
      dbnode:
        type: string
        description: metadata associated to the SIP calls
      msg:
        type: string
        description: metadata associated to the SIP calls
      sourceAlias:
        type: string
        description: metadata associated to the SIP calls
      destinationAlias:
        type: string
        description: metadata associated to the SIP calls
      conversationId:
        type: string
        description: metadata associated to the SIP calls
      participantId:
        type: string
        description: metadata associated to the SIP calls
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SipSearchResult:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      status:
        type: integer
        format: int32
        description: Status of the search request
      sid:
        type: string
        description: Session id associated to the search request
      auth:
        type: string
        description: Auth token used for this search request
      message:
        type: string
        description: Any messages returned from homer as part of the response
      data:
        type: array
        description: Homer search data that is returned
        items:
          $ref: '#/definitions/HomerRecord'
      count:
        type: integer
        format: int32
        description: Number of records returned
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SipDownloadResponse:
    type: object
    properties:
      downloadId:
        type: string
        description: unique id of the downloaded file
      documentId:
        type: string
        description: Document id of pcap file
  SIPSearchPublicRequest:
    type: object
    required:
      - dateEnd
      - dateStart
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      callId:
        type: string
        description: unique identification of the placed call
      toUser:
        type: string
        description: SIP user to who the call was placed
      fromUser:
        type: string
        description: SIP user who placed the call
      conversationId:
        type: string
        description: Unique identification of the conversation
      participantId:
        type: string
        description: Unique identification of the participant
      dateStart:
        type: string
        format: date-time
        description: >-
          Start date of the search. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateEnd:
        type: string
        format: date-time
        description: >-
          End date of the search. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SignedUrlResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      url:
        type: string
        format: url
        description: Url of the downloaded pcap file
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  AcceleratorSpecification:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: name of this accelerator
        readOnly: true
      description:
        type: string
        description: a description of the general purpose of this accelerator
        readOnly: true
      origin:
        type: string
        description: where the accelerator originated
        readOnly: true
        enum:
          - Community
          - Partner
          - Genesys
      type:
        type: string
        description: type of the artifact
        readOnly: true
        enum:
          - Module
          - Accelerator
          - Blueprint
      classification:
        type: string
        description: architectural classification into which the accelerator belongs
        readOnly: true
      tags:
        type: array
        description: tags
        readOnly: true
        items:
          type: string
      permissions:
        type: array
        description: Genesys Cloud permissions required to install the accelerator
        readOnly: true
        items:
          type: string
      products:
        type: array
        description: Genesys Cloud products required to install the accelerator
        readOnly: true
        items:
          type: string
      documentation:
        type: array
        description: additional documentation about the artifact
        readOnly: true
        items:
          $ref: '#/definitions/MetadataDocumentation'
      presentation:
        type: array
        description: presentation of data fields to be gathered for the accelerator
        readOnly: true
        items:
          $ref: '#/definitions/MetadataPresentation'
      results:
        description: resources created or modified as a result of running the accelerator
        readOnly: true
        $ref: '#/definitions/MetadataResults'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Metadata for a CX infrastructure as code accelerator
  MetadataDocumentation:
    type: object
    properties:
      description:
        type: string
        description: description of the documentation
        readOnly: true
      location:
        type: string
        description: location where the documentation can be accessed
        readOnly: true
    description: Additional documentation about an artifact
  MetadataPresentation:
    type: object
    properties:
      title:
        type: string
        description: title for a set of data to be gathered
        readOnly: true
      schema:
        description: description of the contents of the data gathering interface
        readOnly: true
        $ref: '#/definitions/MetadataSchema'
    description: >-
      A representation of data fields to be gathered for installing the
      accelerator
  MetadataProperty:
    type: object
    properties:
      type:
        type: string
        description: the data type of the input property
        readOnly: true
      description:
        type: string
        description: brief description of the input property
        readOnly: true
      help:
        type: string
        description: optional URL with addition information about the input property
        readOnly: true
      default:
        type: string
        description: optional default value of the input property
        readOnly: true
      enum:
        type: array
        description: set of possible values if the input property is an enumeration
        readOnly: true
        items:
          type: string
    description: Data property required as input for installing an accelerator
  MetadataResultEntity:
    type: object
    properties:
      type:
        type: string
        description: object type of the modified resource
        readOnly: true
      description:
        type: string
        description: description of the modified resource
        readOnly: true
      visibility:
        type: string
        description: whether the modified resource is visible or hidden
        readOnly: true
        enum:
          - Visible
          - Hidden
    description: >-
      A Genesys Cloud resource created or modified as a result of running an
      accelerator
  MetadataResults:
    type: object
    properties:
      entities:
        type: array
        description: list of resources
        readOnly: true
        items:
          $ref: '#/definitions/MetadataResultEntity'
    description: >-
      List of resources created or modified as a result of running an
      accelerator
  MetadataSchema:
    type: object
    properties:
      title:
        type: string
        description: title for the data gathering page
        readOnly: true
      description:
        type: string
        description: description of the data being gathered on this page
        readOnly: true
      type:
        type: string
        description: type of data being gathered
        readOnly: true
      properties:
        type: array
        description: >-
          list of properties for which input is to be gathered, bother required
          and optional
        readOnly: true
        items:
          type: object
          additionalProperties:
            $ref: '#/definitions/MetadataProperty'
      required:
        type: array
        description: list of required properties
        readOnly: true
        items:
          type: string
    description: >-
      A description of the contents of a data gathering interface for an
      accelerator
  AcceleratorList:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/AcceleratorMetadata'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  AcceleratorMetadata:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: name of this accelerator
        readOnly: true
      description:
        type: string
        description: a description of the general purpose of this accelerator
        readOnly: true
      origin:
        type: string
        description: where the accelerator originated
        readOnly: true
        enum:
          - Community
          - Partner
          - Genesys
      type:
        type: string
        description: type of the artifact
        readOnly: true
        enum:
          - Module
          - Accelerator
          - Blueprint
      classification:
        type: string
        description: architectural classification into which the accelerator belongs
        readOnly: true
      tags:
        type: array
        description: tags
        readOnly: true
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Metadata for a CX infrastructure as code accelerator
  InfrastructureascodeJob:
    type: object
    required:
      - dryRun
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      dryRun:
        type: boolean
        description: dryRun
      acceleratorId:
        type: string
        description: acceleratorId
        readOnly: true
      dateSubmitted:
        type: string
        format: date-time
        description: >-
          dateSubmitted. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      submittedBy:
        description: submittedBy
        readOnly: true
        $ref: '#/definitions/UserReference'
      status:
        type: string
        description: status
        readOnly: true
        enum:
          - Created
          - Queued
          - Running
          - Complete
          - Failed
          - Incomplete
      errorInfo:
        description: errorInfo
        readOnly: true
        $ref: '#/definitions/ErrorInfo'
      results:
        type: string
        description: results
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Information about a CX infrastructure as code job
  AcceleratorInput:
    type: object
    required:
      - acceleratorId
    properties:
      dryRun:
        type: boolean
        description: >-
          Set this true to test the job without making any changes. Defaults to
          false.
      acceleratorId:
        type: string
        description: Accelerator ID
      parameters:
        type: array
        description: Parameters required for this accelerator
        items:
          $ref: '#/definitions/AcceleratorParameter'
    description: >-
      Identity of a CX infrastructure as code accelerator to be run and its
      inputs
  AcceleratorParameter:
    type: object
    required:
      - name
      - value
    properties:
      name:
        type: string
        description: Parameter Name
      value:
        type: string
        description: Parameter Value
    description: Input parameter for a CX infrastructure as code accelerator
  Format:
    type: object
    properties:
      flags:
        type: array
        description: >-
          The Set of prompt segment format flags i.e. each entry is a part of
          describing the overall format. E.g. "format": { "flags":
          [StringPlayChars] }
        uniqueItems: true
        items:
          type: string
          enum:
            - BoolPlayYesNo
            - CurrencyAsMinorUnits
            - CurrencyMajorUnitsOnly
            - CurrencyMinorUnitsOnly
            - CurrencyPlayDigits
            - DateLongYear
            - DateShortYear
            - DateShortMonthAndDay
            - DateDayOfWeekOnly
            - DateDayOnly
            - DateMonthOnly
            - DateShortYearOnly
            - DateLongYearOnly
            - TimeTwentyFourHours
            - TimeTwelveHours
            - TimePartDays
            - TimePartHours
            - TimePartMinutes
            - TimePartSeconds
            - StringPlayChars
            - NumberPlayDigits
            - NumberOrdinal
            - LanguageCaseArticle
            - LanguageCaseAccusative
            - LanguageCaseDative
            - LanguageCaseGenitive
            - LanguageCaseNominative
            - LanguageQuantityPlural
            - LanguageQuantitySingular
            - LanguageGenderCommon
            - LanguageGenderFeminine
            - LanguageGenderMasculine
            - LanguageGenderNeuter
            - CaseArticle
            - CaseAccusative
            - CaseDative
            - CaseGenitive
            - CaseNominative
            - QuantityPlural
            - QuantitySingular
            - GenderCommon
            - GenderFeminine
            - GenderMasculine
            - GenderNeuter
  TextBotDisconnectAction:
    type: object
    required:
      - reason
    properties:
      reason:
        type: string
        description: The reason for the disconnect.
        enum:
          - TriggeredByUser
          - TriggeredByFlow
          - SessionExpired
          - Error
          - RecognitionFailure
      reasonExtendedInfo:
        type: string
        description: Extended information related to the reason, if available.
      flowLocation:
        description: >-
          Describes where in the Bot Flow the user was when the disconnect
          occurred.
        $ref: '#/definitions/TextBotFlowLocation'
      flowOutcomes:
        type: array
        description: The list of Flow Outcomes for the bot flow and their details.
        items:
          $ref: '#/definitions/TextBotFlowOutcome'
    description: >-
      Settings for a next-action of disconnecting, including the reason code for
      the disconnect.
  TextBotExitAction:
    type: object
    required:
      - reason
    properties:
      reason:
        type: string
        description: The reason for the exit.
        enum:
          - TriggeredByUser
          - AgentRequestedByUser
          - TriggeredByFlow
          - Error
          - RecognitionFailure
      reasonExtendedInfo:
        type: string
        description: Extended information related to the reason, if available.
      activeIntent:
        type: string
        description: The active intent at the time of the exit.
      flowLocation:
        description: Describes where in the Bot Flow the user was when the exit occurred.
        $ref: '#/definitions/TextBotFlowLocation'
      outputData:
        description: The output data for the bot flow.
        $ref: '#/definitions/TextBotInputOutputData'
      flowOutcomes:
        type: array
        description: The list of Flow Outcomes for the bot flow and their details.
        items:
          $ref: '#/definitions/TextBotFlowOutcome'
    description: >-
      Settings for a next-action of exiting the bot flow. Any output variables
      are available in the details.
  TextBotFlowLocation:
    type: object
    required:
      - actionName
      - actionNumber
      - sequenceName
    properties:
      actionName:
        type: string
        description: >-
          The name of the action that was active when the event of interest
          happened.
      actionNumber:
        type: integer
        format: int32
        description: >-
          The number of the action that was active when the event of interest
          happened.
      sequenceName:
        type: string
        description: >-
          The name of the state or task which was active when the event of
          interest happened.
    description: Describes a flow location.
  TextBotFlowMilestone:
    type: object
    required:
      - dateReached
      - id
      - sequence
    properties:
      id:
        type: string
        description: The Milestone's ID.
      dateReached:
        type: string
        format: date-time
        description: >-
          The timestamp of when the milestone was reached. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      sequence:
        type: integer
        format: int64
        description: The sequence number of the milestone.
  TextBotFlowOutcome:
    type: object
    properties:
      outcomeId:
        type: string
        description: The Flow Outcome ID.
      outcomeValue:
        type: string
        description: The value of the FlowOutcome.
        enum:
          - SUCCESS
          - FAILURE
      dateStart:
        type: string
        format: date-time
        description: >-
          The timestamp for when the Flow Outcome began. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateEnd:
        type: string
        format: date-time
        description: >-
          The timestamp for when the Flow Outcome finished. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      milestones:
        type: array
        description: The Flow Milestones for the Flow Outcome.
        items:
          $ref: '#/definitions/TextBotFlowMilestone'
    description: Flow Outcome data related to a bot flow which is exiting gracefully.
  TextBotFlowTurnResponse:
    type: object
    required:
      - id
      - nextActionType
    properties:
      id:
        type: string
        description: >-
          The ID of the bot flow turn. If additional turns are needed, supply
          this ID as the previous turn in your next turn request.
      previousTurn:
        description: The reference to a previous turn, if applicable.
        $ref: '#/definitions/TextBotTurnReference'
      prompts:
        description: The output prompts for this turn.
        $ref: '#/definitions/TextBotOutputPrompts'
      nextActionType:
        type: string
        description: >-
          Indicates the suggested next action. If appropriate, the matching
          output event object includes additional information.
        enum:
          - NoOp
          - Disconnect
          - WaitForInput
          - Exit
      nextActionDisconnect:
        description: The next action directive for this turn if it is a Disconnect type.
        $ref: '#/definitions/TextBotDisconnectAction'
      nextActionWaitForInput:
        description: The next action directive for this turn if it is a WaitForInput type.
        $ref: '#/definitions/TextBotWaitForInputAction'
      nextActionExit:
        description: The next action directive for this turn if it is an Exit type.
        $ref: '#/definitions/TextBotExitAction'
    description: Information related to a success bot flow turn request.
  TextBotInputOutputData:
    type: object
    required:
      - variables
    properties:
      variables:
        type: object
        description: >-
          The input/output variables using the format as appropriate for the
          variable data type in the flow definition.
        additionalProperties:
          type: object
    description: Input/Output data related to a bot flow which is exiting gracefully.
  TextBotModeConstraints:
    type: object
    properties:
      text:
        description: Mode constraints that apply to text scenarios.
        $ref: '#/definitions/TextBotTextModeConstraints'
    description: Mode constraints to observe when operating on a bot flow.
  TextBotModeOutputPrompts:
    type: object
    required:
      - segments
    properties:
      segments:
        type: array
        description: The list of prompt segments.
        items:
          $ref: '#/definitions/TextBotPromptSegment'
    description: Prompt information related to a bot flow turn.
  TextBotOutputPrompts:
    type: object
    required:
      - outputLanguage
    properties:
      outputLanguage:
        type: string
        description: The ISO code of the output language for this prompt item.
      textPrompts:
        description: Text output prompts, if any.
        $ref: '#/definitions/TextBotModeOutputPrompts'
    description: Prompt information related to a bot flow turn.
  TextBotPromptSegment:
    type: object
    required:
      - text
      - type
    properties:
      text:
        type: string
        description: The text of this prompt segment.
      type:
        type: string
        description: >-
          The segment type which describes any semantics about the 'text' and
          also indicates which other field might include additional relevant
          info.
        enum:
          - Text
          - RichMedia
      format:
        description: >-
          Additional details describing the segment’s contents, which the client
          should honour where possible.
        $ref: '#/definitions/Format'
      content:
        type: array
        description: >-
          Details to display Rich Media content. This is only populated when the
          segment 'type' is 'Rich Media'.
        items:
          $ref: '#/definitions/MessageContent'
    description: Data for a single bot flow prompt segment.
  TextBotTextModeConstraints:
    type: object
    required:
      - languagePreferences
    properties:
      languagePreferences:
        type: array
        description: The list of language preferences by their ISO language code.
        items:
          type: string
      noInputTimeoutMilliseconds:
        type: integer
        format: int32
        description: >-
          The amount of time, in milliseconds, before the client should send the
          'NoInput' event
           to trigger the "no input" bot response and handling on digital channels.
           Note: This optional field will only be returned for 'Digital Bot Flow' turns.
    description: Mode constraints to observe when operating on a bot flow.
  TextBotTurnReference:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The id of the turn.
    description: A reference to a bot flow turn.
  TextBotWaitForInputAction:
    type: object
    required:
      - modeConstraints
    properties:
      modeConstraints:
        description: The mode constraints for the user input.
        $ref: '#/definitions/TextBotModeConstraints'
    description: >-
      Settings for a next-action of waiting for additional user input and
      sending the data as an input action to the bot flow.
  TextBotErrorInputEvent:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: string
        description: The error code.
      message:
        type: string
        description: The error message.
    description: >-
      Settings for an input event to the bot flow indicating an error has
      occurred.
  TextBotFlowTurnRequest:
    type: object
    required:
      - inputEventType
    properties:
      previousTurn:
        description: >-
          The reference to a previous turn if appropriate, used to avoid race
          conditions.
        $ref: '#/definitions/TextBotTurnReference'
      inputEventType:
        type: string
        description: >-
          Indicates the type of input event being requested. If appropriate,
          fill out the matching user input object details on this request.
        enum:
          - NoOp
          - UserInput
          - Error
          - NoMatch
          - NoInput
          - UserDisconnect
          - ClientSessionExpired
      inputEventUserInput:
        description: >-
          The data for the input event of this turn if it is a user input event.
          Only one inputEvent may be set.
        $ref: '#/definitions/TextBotUserInputEvent'
      inputEventError:
        description: >-
          The data for the input event of this turn if it is an error event.
          Only one inputEvent may be set.
        $ref: '#/definitions/TextBotErrorInputEvent'
    description: Settings for a turn request to a bot flow.
  TextBotTranscript:
    type: object
    required:
      - text
    properties:
      text:
        type: string
        description: The text of the transcript item.
      confidence:
        type: number
        format: float
        description: >-
          The confidence factor, expressed as a decimal between 0.0 and 1.0, of
          the transcript item.
    description: Data for a single bot flow transcript.
  TextBotUserInputAlternative:
    type: object
    required:
      - transcript
    properties:
      transcript:
        description: The user input transcript.
        $ref: '#/definitions/TextBotTranscript'
    description: User input data used in a bot flow turn.
  TextBotUserInputEvent:
    type: object
    required:
      - alternatives
      - mode
    properties:
      mode:
        type: string
        description: The input mode.
        enum:
          - Text
      alternatives:
        type: array
        description: The input alternatives.
        items:
          $ref: '#/definitions/TextBotUserInputAlternative'
    description: >-
      Settings for an input event to the bot flow indicating user input is
      available.
  TextBotFlowLaunchResponse:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: >-
          The session ID of the bot flow, used to send to subsequent turn
          requests
    description: >-
      Information related to a successful launch of a bot flow. The ID will be
      used in subsequent turn requests of the bot flow.
  TextBotChannel:
    type: object
    required:
      - inputModes
      - name
      - outputModes
      - userAgent
    properties:
      name:
        type: string
        description: The name of the channel.
        enum:
          - Chat
          - Call
          - Messaging
      inputModes:
        type: array
        description: The input modes for the channel.
        uniqueItems: true
        items:
          type: string
          enum:
            - Text
      outputModes:
        type: array
        description: The output modes for the channel.
        uniqueItems: true
        items:
          type: string
          enum:
            - Text
      userAgent:
        description: Information about the end user agent calling the bot flow.
        $ref: '#/definitions/TextBotUserAgent'
    description: Channel information relevant to a bot flow.
  TextBotFlow:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The Bot Flow ID.
    description: Description of the Bot Flow.
  TextBotFlowLaunchRequest:
    type: object
    required:
      - channel
      - externalSessionId
      - flow
    properties:
      flow:
        description: Specifies which Bot Flow to launch.
        $ref: '#/definitions/TextBotFlow'
      externalSessionId:
        type: string
        description: The ID of the external session that is associated with the bot flow.
      conversationId:
        type: string
        description: A conversation ID to associate with the bot flow, if available.
      inputData:
        description: >-
          Input values to the flow. Valid values are defined by the flow's input
          JSON schema.
        $ref: '#/definitions/TextBotInputOutputData'
      channel:
        description: Channel information relevant to the bot flow.
        $ref: '#/definitions/TextBotChannel'
      language:
        type: string
        description: >-
          The language that the bot will use in the session. Validated against
          list of supported languages and if the value is omitted or is invalid,
          the default language will be used.
    description: Settings for launching an instance of a bot flow.
  PostTextMessage:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Message type
        enum:
          - Text
          - Structured
          - Receipt
          - Event
          - Message
          - Unknown
      text:
        type: string
        description: >-
          Message text. If type is structured, used as fallback for clients that
          do not support particular structured content
      content:
        type: array
        description: A list of content elements in message
        items:
          $ref: '#/definitions/ConversationMessageContent'
  PostTextResponse:
    type: object
    required:
      - botState
    properties:
      botState:
        type: string
        description: The state of the bot after completion of the request
        enum:
          - Complete
          - Failed
          - MoreData
      replyMessages:
        type: array
        description: The list of messages to respond with, if any
        items:
          $ref: '#/definitions/PostTextMessage'
      intentName:
        type: string
        description: >-
          The name of the intent the bot is either processing or has processed,
          this will be blank if no intent could be detected.
      slots:
        type: object
        description: Data parameters detected and filled by the bot.
        additionalProperties:
          type: string
      botCorrelationId:
        type: string
        description: The optional ID specified in the request
      amazonLex:
        type: object
        description: Raw data response from AWS (if called)
        additionalProperties:
          type: object
      googleDialogFlow:
        type: object
        description: Raw data response from Google Dialogflow (if called)
        additionalProperties:
          type: object
      genesysDialogEngine:
        type: object
        description: Raw data response from Genesys' Dialogengine (if called)
        additionalProperties:
          type: object
      genesysBotConnector:
        type: object
        description: Raw data response from Genesys' BotConnector (if called)
        additionalProperties:
          type: object
      nuanceMixDlg:
        type: object
        description: Raw data response from Nuance Mix Dlg (if called)
        additionalProperties:
          type: object
  AmazonLexRequest:
    type: object
    properties:
      requestAttributes:
        type: object
        description: >-
          AttributeName/AttributeValue pairs of User Defined Request Attributes
          to be sent to the amazon bot See -
          https://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-request-attribs
        additionalProperties:
          type: string
      sessionAttributes:
        type: object
        description: >-
          AttributeName/AttributeValue pairs of Session Attributes to be sent to
          the amazon bot. See -
          https://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-session-attribs
        additionalProperties:
          type: string
  GenesysBotConnector:
    type: object
    properties:
      queryParameters:
        type: object
        description: User defined name/value parameters passed to the BotConnector bot.
        additionalProperties:
          type: string
  GoogleDialogflowCustomSettings:
    type: object
    properties:
      environment:
        type: string
        description: >-
          If set this environment will be used to initiate the dialogflow bot,
          otherwise the default configuration will be used.  See
          https://cloud.google.com/dialogflow/docs/agents-versions
      eventName:
        type: string
        description: >-
          If set this eventName will be used to initiate the dialogflow bot
          rather than language processing on the input text.  See
          https://cloud.google.com/dialogflow/es/docs/events-overview
      webhookQueryParameters:
        type: object
        description: Parameters passed to the fulfillment webhook of the bot (if any).
        additionalProperties:
          type: string
      eventInputParameters:
        type: object
        description: Parameters passed to the event input of the bot.
        additionalProperties:
          type: string
  NuanceMixDlgSettings:
    type: object
    properties:
      channelId:
        type: string
        description: >-
          The Nuance channel ID to use when launching the Nuance bot, which must
          one of the code names of the bot's registered input channels.
      inputParameters:
        type: object
        description: >-
          Name/value pairs of input variables to be sent to the Nuance bot. The
          values must be in the appropriate format for the variable's type (see
          https://docs.mix.nuance.com/dialog-grpc/v1/#simple-variable-types for
          help)
        additionalProperties:
          type: object
  PostTextRequest:
    type: object
    required:
      - botId
      - botSessionId
      - integrationId
      - postTextMessage
    properties:
      botId:
        type: string
        description: ID of the bot to send the text to.
      botAlias:
        type: string
        description: Alias/Version of the bot
      integrationId:
        type: string
        description: the integration service id for the bot's credentials
      botSessionId:
        type: string
        description: GUID for this bot's session
      postTextMessage:
        description: Message to send to the bot
        $ref: '#/definitions/PostTextMessage'
      languageCode:
        type: string
        description: The launguage code the bot will run under
      botSessionTimeoutMinutes:
        type: integer
        format: int32
        description: >-
          Override timeout for the bot session. This should be greater than 10
          minutes.
      botChannels:
        type: array
        description: The channels this bot is utilizing
        items:
          type: string
          enum:
            - Call
            - Callback
            - Messaging
            - Webchat
      botCorrelationId:
        type: string
        description: Id for tracking the activity - this will be returned in the response
      messagingPlatformType:
        type: string
        description: >-
          If the channels list contains a 'Messaging' item and the messaging
          platform is known, include it here to get accurate analytics
        enum:
          - Phone
          - SMS
          - GenesysWebWidget
          - FacebookMessenger
          - WeChat
          - Whatsapp
          - AppleBusinessChat
          - Telegram
          - Slack
          - Signal
          - Line
          - Discord
          - TwitterDirectMessage
          - Other
          - Unknown
      amazonLexRequest:
        description: Provider specific settings, if any
        $ref: '#/definitions/AmazonLexRequest'
      googleDialogflow:
        description: Provider specific settings, if any
        $ref: '#/definitions/GoogleDialogflowCustomSettings'
      genesysBotConnector:
        description: Provider specific settings, if any
        $ref: '#/definitions/GenesysBotConnector'
      nuanceMixDlg:
        description: Provider specific settings, if any
        $ref: '#/definitions/NuanceMixDlgSettings'
  BotSearchResponse:
    type: object
    required:
      - botType
      - id
      - name
    properties:
      id:
        type: string
        description: The id of the bot
      name:
        type: string
        description: The name of the bot
      botType:
        type: string
        description: The provider of the bot
        enum:
          - GenesysBotConnector
          - GenesysDialogEngine
          - AmazonLex
          - GoogleDialogFlowES
          - GoogleDialogFlowCX
          - NuanceDlg
          - GenesysBotFlow
      description:
        type: string
        description: The description of the bot
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BotSearchResponseEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/BotSearchResponse'
  UCI10n:
    type: object
    properties:
      name:
        type: string
  UCIcon:
    type: object
    required:
      - vector
    properties:
      vector:
        type: string
        description: vector
        readOnly: true
  UCIntegration:
    type: object
    required:
      - badgeIcons
      - i10n
      - icon
      - integrationPresenceSource
      - pbxPermission
      - polledPresence
      - ucIntegrationKey
      - userPermissions
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      ucIntegrationKey:
        type: string
        description: ucIntegrationKey
        readOnly: true
      integrationPresenceSource:
        type: string
        description: integrationPresenceType
        readOnly: true
        enum:
          - MicrosoftTeams
          - ZoomPhone
          - EightByEight
      pbxPermission:
        type: string
        description: pbxPermission
        readOnly: true
      icon:
        description: icon
        readOnly: true
        $ref: '#/definitions/UCIcon'
      badgeIcons:
        type: object
        description: badgeIcon
        readOnly: true
        additionalProperties:
          $ref: '#/definitions/UCIcon'
      i10n:
        type: object
        description: i10n
        readOnly: true
        additionalProperties:
          $ref: '#/definitions/UCI10n'
      polledPresence:
        type: boolean
        description: polledPresence
        readOnly: true
      userPermissions:
        type: array
        description: userPermissions
        readOnly: true
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: UC Integration UI configuration data
  UCIntegrationListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UCIntegration'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  UCThirdPartyPresence:
    type: object
    required:
      - email
      - presence
    properties:
      email:
        type: string
        description: Primary Email address of the associated Genesys Cloud user.
      presence:
        type: string
        description: Integration presence value.
      message:
        type: string
        description: Integration presence message.
      dateModified:
        type: string
        format: date-time
        description: ISO 8601 timestamp of presence value change.
    description: Update a Genesys Cloud user's presence from a given 3rd-party integration
  ApiUsageOrganizationQuery:
    type: object
    required:
      - interval
    properties:
      interval:
        type: string
        description: >-
          Behaves like one clause in a SQL WHERE. Specifies the date and time
          range of data being queried. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      granularity:
        type: string
        description: Date granularity of the results
        enum:
          - Day
          - Week
          - Month
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Enables retrieving only named
          metrics. If omitted, all metrics that are available will be returned
          (like SELECT *).
        items:
          type: string
          enum:
            - Status200
            - Status300
            - Status400
            - Status500
            - Status429
            - Requests
      groupBy:
        type: array
        description: >-
          Behaves like a SQL GROUPBY. Allows for multiple levels of grouping as
          a list of dimensions. Partitions resulting aggregate computations into
          distinct named subgroups rather than across the entire result set as
          if it were one group.
        items:
          type: string
          enum:
            - OAuthClientId
            - OrganizationId
            - UserId
            - TemplateUri
            - HttpMethod
  ApiUsageSimpleSearch:
    type: object
    required:
      - interval
    properties:
      interval:
        type: string
        description: >-
          Behaves like one clause in a SQL WHERE. Specifies the date and time
          range of data being queried. Intervals are represented as an ISO-8601
          string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      metrics:
        type: array
        description: >-
          Behaves like a SQL SELECT clause. Enables retrieving only named
          metrics. If omitted, all metrics that are available will be returned
          (like SELECT *).
        items:
          type: string
          enum:
            - Date
            - ClientName
            - HttpMethod
            - TemplateUri
            - Status200
            - Status300
            - Status400
            - Status500
            - Status429
      oauthClientNames:
        type: array
        description: >-
          Behaves like a SQL WHERE with multiple AND operators. Specifies a list
          of OAuth client names to be queried.
        items:
          type: string
      httpMethods:
        type: array
        description: >-
          Behaves like a SQL WHERE with multiple AND operators. Specifies a list
          of HTTP methods to be queried.
        items:
          type: string
      templateUris:
        type: array
        description: >-
          Behaves like a SQL WHERE with multiple AND operators. Specifies a list
          of Template Uris to be queried.
        items:
          type: string
  UserRecording:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateModified:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      contentUri:
        type: string
        format: uri
      workspace:
        $ref: '#/definitions/DomainEntityRef'
      createdBy:
        $ref: '#/definitions/DomainEntityRef'
      conversation:
        $ref: '#/definitions/Conversation'
      contentLength:
        type: integer
        format: int64
      durationMilliseconds:
        type: integer
        format: int64
      thumbnails:
        type: array
        items:
          $ref: '#/definitions/DocumentThumbnail'
      read:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UserRecordingEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UserRecording'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  UserExternalIdentifier:
    type: object
    required:
      - authorityName
      - externalKey
    properties:
      authorityName:
        type: string
        description: Authority or System of Record which owns the External Identifier
      externalKey:
        type: string
        description: External Key
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: >-
      Defines a link between an External Identifier and Authority pair to a
      Entity Type and Entity Identifier pair. Represents the two way, one to one
      mapping of an External Authority or System of Record's identifier to a
      PureCloud entity. e.g. (ExternalId='05001',Authority='XyzCRM') to
      (entityType=user,entityId='8eb03b33-3acb-4bc1-a244-50b9b9f19495')
  ChangeMyPasswordRequest:
    type: object
    required:
      - newPassword
      - oldPassword
    properties:
      newPassword:
        type: string
        description: The new password
      oldPassword:
        type: string
        description: Your current password
  FieldConfigs:
    type: object
    properties:
      org:
        $ref: '#/definitions/FieldConfig'
      person:
        $ref: '#/definitions/FieldConfig'
      group:
        $ref: '#/definitions/FieldConfig'
      externalContact:
        $ref: '#/definitions/FieldConfig'
  UserMe:
    type: object
    required:
      - version
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/Division'
      chat:
        $ref: '#/definitions/Chat'
      department:
        type: string
      email:
        type: string
      primaryContactInfo:
        type: array
        description: Auto populated from addresses.
        readOnly: true
        items:
          $ref: '#/definitions/Contact'
      addresses:
        type: array
        description: Email addresses and phone numbers for this user
        items:
          $ref: '#/definitions/Contact'
      state:
        type: string
        description: The current state for this user.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      title:
        type: string
      username:
        type: string
      manager:
        $ref: '#/definitions/User'
      images:
        type: array
        items:
          $ref: '#/definitions/UserImage'
      version:
        type: integer
        format: int32
        description: >-
          Required when updating a user, this value should be the current
          version of the user.  The current version can be obtained with a GET
          on the user before doing a PATCH.
      certifications:
        type: array
        items:
          type: string
      biography:
        $ref: '#/definitions/Biography'
      employerInfo:
        $ref: '#/definitions/EmployerInfo'
      routingStatus:
        description: ACD routing status
        readOnly: true
        $ref: '#/definitions/RoutingStatus'
      presence:
        description: Active presence
        readOnly: true
        $ref: '#/definitions/UserPresence'
      integrationPresence:
        description: Integration presence
        readOnly: true
        $ref: '#/definitions/UserPresence'
      conversationSummary:
        description: Summary of conversion statistics for conversation types.
        readOnly: true
        $ref: '#/definitions/UserConversationSummary'
      outOfOffice:
        description: Determine if out of office is enabled
        readOnly: true
        $ref: '#/definitions/OutOfOffice'
      geolocation:
        description: Current geolocation position
        readOnly: true
        $ref: '#/definitions/Geolocation'
      station:
        description: Effective, default, and last station information
        readOnly: true
        $ref: '#/definitions/UserStations'
      authorization:
        description: Roles and permissions assigned to the user
        readOnly: true
        $ref: '#/definitions/UserAuthorization'
      profileSkills:
        type: array
        description: Profile skills possessed by the user
        readOnly: true
        items:
          type: string
      locations:
        type: array
        description: The user placement at each site location.
        readOnly: true
        items:
          $ref: '#/definitions/Location'
      groups:
        type: array
        description: The groups the user is a member of
        readOnly: true
        items:
          $ref: '#/definitions/Group'
      team:
        description: The team the user is a member of
        readOnly: true
        $ref: '#/definitions/Team'
      skills:
        type: array
        description: Routing (ACD) skills possessed by the user
        readOnly: true
        items:
          $ref: '#/definitions/UserRoutingSkill'
      languages:
        type: array
        description: Routing (ACD) languages possessed by the user
        readOnly: true
        items:
          $ref: '#/definitions/UserRoutingLanguage'
      acdAutoAnswer:
        type: boolean
        description: acd auto answer
      languagePreference:
        type: string
        description: preferred language by the user
        readOnly: true
      lastTokenIssued:
        $ref: '#/definitions/OAuthLastTokenIssued'
      dateLastLogin:
        type: string
        format: date-time
        description: >-
          The last time the user logged in using username and password. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      date:
        description: The PureCloud system date time.
        readOnly: true
        $ref: '#/definitions/ServerDate'
      geolocationSettings:
        description: Geolocation settings for user's organization.
        readOnly: true
        $ref: '#/definitions/GeolocationSettings'
      organization:
        description: Organization details for this user.
        readOnly: true
        $ref: '#/definitions/Organization'
      presenceDefinitions:
        type: array
        description: >-
          The first 100 non-divisioned presence definitions for user's
          organization.
        readOnly: true
        items:
          $ref: '#/definitions/OrganizationPresence'
      divisionedPresenceDefinitions:
        type: array
        description: The presence definitions that the user has access to
        readOnly: true
        items:
          $ref: '#/definitions/OrganizationPresenceDefinition'
      locationDefinitions:
        type: array
        description: The first 100 site locations for user's organization
        readOnly: true
        items:
          $ref: '#/definitions/LocationDefinition'
      orgAuthorization:
        type: array
        description: >-
          The first 100 organization roles, with applicable permission policies,
          for user's organization.
        readOnly: true
        items:
          $ref: '#/definitions/DomainOrganizationRole'
      favorites:
        type: array
        description: The first 50 favorited users.
        readOnly: true
        items:
          $ref: '#/definitions/User'
      superiors:
        type: array
        description: The first 50 superiors of this user.
        readOnly: true
        items:
          $ref: '#/definitions/User'
      directReports:
        type: array
        description: The first 50 direct reports to this user.
        readOnly: true
        items:
          $ref: '#/definitions/User'
      adjacents:
        description: >-
          The first 50 superiors, direct reports, and siblings of this user.
          Mutually exclusive with superiors and direct reports expands.
        readOnly: true
        $ref: '#/definitions/Adjacents'
      routingSkills:
        type: array
        description: The first 50 routing skills for user's organizations
        readOnly: true
        items:
          $ref: '#/definitions/RoutingSkill'
      fieldConfigs:
        description: The field config for all entities types of user's organization
        readOnly: true
        $ref: '#/definitions/FieldConfigs'
      token:
        description: Information about the current token
        readOnly: true
        $ref: '#/definitions/TokenInfo'
      trustors:
        type: array
        description: Organizations having this user as a trustee
        readOnly: true
        items:
          $ref: '#/definitions/Trustor'
      orgProducts:
        type: array
        description: Products enabled in this organization
        readOnly: true
        items:
          $ref: '#/definitions/DomainOrganizationProduct'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ChangePasswordRequest:
    type: object
    required:
      - newPassword
    properties:
      newPassword:
        type: string
        description: The new password
  UpdateUser:
    type: object
    required:
      - version
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      chat:
        $ref: '#/definitions/Chat'
      department:
        type: string
      email:
        type: string
      primaryContactInfo:
        type: array
        description: >-
          The address(s) used for primary contact. Updates to the corresponding
          address in the addresses list will be reflected here.
        readOnly: true
        items:
          $ref: '#/definitions/Contact'
      addresses:
        type: array
        description: >-
          Email address, phone number, and/or extension for this user. One entry
          is allowed per media type
        items:
          $ref: '#/definitions/Contact'
      title:
        type: string
      username:
        type: string
      manager:
        type: string
      images:
        type: array
        items:
          $ref: '#/definitions/UserImage'
      version:
        type: integer
        format: int32
        description: >-
          This value should be the current version of the user. The current
          version can be obtained with a GET on the user before doing a PATCH.
      profileSkills:
        type: array
        description: Profile skills possessed by the user
        items:
          type: string
      locations:
        type: array
        description: The user placement at each site location.
        items:
          $ref: '#/definitions/Location'
      groups:
        type: array
        description: The groups the user is a member of
        items:
          $ref: '#/definitions/Group'
      state:
        type: string
        description: >-
          The state of the user. This property can be used to restore a deleted
          user or transition between active and inactive. If specified, it is
          the only modifiable field.
        enum:
          - active
          - inactive
          - deleted
      acdAutoAnswer:
        type: boolean
        description: The value that denotes if acdAutoAnswer is set on the user
      certifications:
        type: array
        items:
          type: string
      biography:
        $ref: '#/definitions/Biography'
      employerInfo:
        $ref: '#/definitions/EmployerInfo'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UserRoutingLanguagePost:
    type: object
    required:
      - id
      - proficiency
    properties:
      id:
        type: string
        description: The id of the existing routing language to add to the user
      proficiency:
        type: number
        format: double
        description: >-
          Proficiency is a rating from 0.0 to 5.0 on how competent an agent is
          for a particular language. It is used when a queue is set to "Best
          available language" mode to allow acd interactions to target agents
          with higher proficiency ratings.
      languageUri:
        type: string
        format: uri
        description: URI to the organization language used by this user language.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: >-
      Represents an organization language assigned to a user. When assigning to
      a user specify the organization langauge id as the id.
  UserLanguageEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UserRoutingLanguage'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  UserRoutingSkillPost:
    type: object
    required:
      - id
      - proficiency
    properties:
      id:
        type: string
        description: The id of the existing routing skill to add to the user
      proficiency:
        type: number
        format: double
        description: >-
          Proficiency is a rating from 0.0 to 5.0 on how competent an agent is
          for a particular skill. It is used when a queue is set to "Best
          available skills" mode to allow acd interactions to target agents with
          higher proficiency ratings.
      skillUri:
        type: string
        format: uri
        description: URI to the organization skill used by this user skill.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: >-
      Represents an organization skill assigned to a user. When assigning to a
      user specify the organization skill id as the id.
  UserSkillEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UserRoutingSkill'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  UserSkillGroupEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/SkillGroup'
      nextUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
  UserState:
    type: object
    properties:
      state:
        type: string
        description: User's current state.
        enum:
          - active
          - inactive
          - deleted
      version:
        type: integer
        format: int32
        description: Version of this user.
      stateChangeReason:
        type: string
        description: Reason for a change in the user's state.
        enum:
          - Voluntary
          - Seasonal
          - Leave
          - Performance
          - Conduct
          - Unknown
      stateChangeDate:
        type: string
        format: date-time
        description: >-
          Date that the state was last changed. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
  PatchUser:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      acdAutoAnswer:
        type: boolean
        description: The value that denotes if acdAutoAnswer is set on the user
  CreateUser:
    type: object
    required:
      - divisionId
      - email
      - name
    properties:
      name:
        type: string
        description: User's full name
      department:
        type: string
      email:
        type: string
        description: User's email and username
      addresses:
        type: array
        description: Email addresses and phone numbers for this user
        items:
          $ref: '#/definitions/Contact'
      title:
        type: string
      password:
        type: string
        description: User's password
      divisionId:
        type: string
        description: The division to which this user will belong
      state:
        type: string
        description: >-
          Optional initialized state of the user. If not specified, state will
          be Active if invites are sent, otherwise Inactive.
        enum:
          - active
          - inactive
          - deleted
  UsersSearchResponse:
    type: object
    required:
      - pageCount
      - pageNumber
      - pageSize
      - results
      - total
      - types
    properties:
      total:
        type: integer
        format: int64
        description: The total number of results found
      pageCount:
        type: integer
        format: int32
        description: The total number of pages
      pageSize:
        type: integer
        format: int32
        description: The current page size
      pageNumber:
        type: integer
        format: int32
        description: The current page number
      previousPage:
        type: string
        description: Q64 value for the previous page of results
      currentPage:
        type: string
        description: Q64 value for the current page of results
      nextPage:
        type: string
        description: Q64 value for the next page of results
      types:
        type: array
        description: Resource types the search was performed against
        items:
          type: string
      results:
        type: array
        description: Search results
        items:
          $ref: '#/definitions/User'
  UserSearchCriteria:
    type: object
    required:
      - type
    properties:
      endValue:
        type: string
        description: The end value of the range. This field is used for range search types.
      values:
        type: array
        description: A list of values for the search to match against
        items:
          type: string
      startValue:
        type: string
        description: >-
          The start value of the range. This field is used for range search
          types.
      value:
        type: string
        description: A value for the search to match against
      operator:
        type: string
        description: How to apply this search criteria against other criteria
        enum:
          - AND
          - OR
          - NOT
      group:
        type: array
        description: Groups multiple conditions
        items:
          $ref: '#/definitions/UserSearchCriteria'
      dateFormat:
        type: string
        description: >-
          Set date format for criteria values when using date range search
          type.  Supports Java date format syntax, example
          yyyy-MM-dd'T'HH:mm:ss.SSSX.
      fields:
        type: array
        description: Field names to search against
        items:
          type: string
        x-genesys-search-fields:
          value:
            - addresses.email
            - addresses.voice
            - addresses.address
            - addresses.voicemailEnabled
            - chat.jabberId
            - department
            - email
            - username
            - siteId
            - manager.id
            - hr.employeeId
            - integration
            - groups.social.id
            - groups.official.id
            - groups.distribution.id
            - state
            - id
            - languages.guid
            - languages.name
            - languages.namespace
            - languages.proficiency
            - name
            - primaryContactInfo.voice
            - primaryContactInfo.sms
            - primaryContactInfo.email
            - profileSkills
            - queueMembership.added
            - queueMembership.joined
            - routingSkills.guid
            - routingSkills.name
            - routingSkills.namespace
            - routingSkills.proficiency
            - title
            - divisionId
            - teamId
      type:
        type: string
        description: Search Type
        enum:
          - EXACT
          - STARTS_WITH
          - CONTAINS
          - REGEX
          - TERM
          - TERMS
          - REQUIRED_FIELDS
          - MATCH_ALL
          - QUERY_STRING
  UserSearchRequest:
    type: object
    properties:
      sortOrder:
        type: string
        description: The sort order for results
        enum:
          - ASC
          - DESC
          - SCORE
      sortBy:
        type: string
        description: The field in the resource that you want to sort the results by
      pageSize:
        type: integer
        format: int32
        description: The number of results per page
      pageNumber:
        type: integer
        format: int32
        description: The page of resources you want to retrieve
      sort:
        type: array
        description: Multi-value sort order, list of multiple sort values
        items:
          $ref: '#/definitions/SearchSort'
      expand:
        type: array
        description: Provides more details about a specified resource
        items:
          type: string
      query:
        type: array
        items:
          $ref: '#/definitions/UserSearchCriteria'
      integrationPresenceSource:
        type: string
        description: >-
          Gets an integration presence for users instead of their defaults. This
          parameter will only be used when presence is provided as an "expand".
          When using this parameter the maximum number of users that can be
          returned is 100.
        enum:
          - MicrosoftTeams
          - ZoomPhone
          - EightByEight
      enforcePermissions:
        type: boolean
        description: >-
          This property only applies to api/v2/user/search; when set to true add
          additional search criteria to filter users by: directory:user:view
  VoicemailCopyRecord:
    type: object
    properties:
      user:
        description: The user that the voicemail message was copied to/from
        readOnly: true
        $ref: '#/definitions/User'
      group:
        description: The group that the voicemail message was copied to/from
        readOnly: true
        $ref: '#/definitions/Group'
      date:
        type: string
        format: date-time
        description: >-
          The date when the voicemail was copied. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
  VoicemailMessage:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      conversation:
        description: The conversation that the voicemail message is associated with
        readOnly: true
        $ref: '#/definitions/Conversation'
      read:
        type: boolean
        description: Whether the voicemail message is marked as read
      audioRecordingDurationSeconds:
        type: integer
        format: int32
        description: The voicemail message's audio recording duration in seconds
        readOnly: true
      audioRecordingSizeBytes:
        type: integer
        format: int64
        description: The voicemail message's audio recording size in bytes
        readOnly: true
      createdDate:
        type: string
        format: date-time
        description: >-
          The date the voicemail message was created. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedDate:
        type: string
        format: date-time
        description: >-
          The date the voicemail message was last modified. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      deletedDate:
        type: string
        format: date-time
        description: >-
          The date the voicemail message deleted property was set to true. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      callerAddress:
        type: string
        description: The caller address
        readOnly: true
      callerName:
        type: string
        description: >-
          Optionally the name of the caller that left the voicemail message if
          the caller was a known user
        readOnly: true
      callerUser:
        description: >-
          Optionally the user that left the voicemail message if the caller was
          a known user
        readOnly: true
        $ref: '#/definitions/User'
      deleted:
        type: boolean
        description: Whether the voicemail message has been marked as deleted
      note:
        type: string
        description: An optional note
      user:
        description: >-
          The user that the voicemail message belongs to or null which means the
          voicemail message belongs to a group or queue
        readOnly: true
        $ref: '#/definitions/User'
      group:
        description: >-
          The group that the voicemail message belongs to or null which means
          the voicemail message belongs to a user or queue
        readOnly: true
        $ref: '#/definitions/Group'
      queue:
        description: >-
          The queue that the voicemail message belongs to or null which means
          the voicemail message belongs to a user or group
        readOnly: true
        $ref: '#/definitions/Queue'
      copiedFrom:
        description: Represents where this voicemail message was copied from
        readOnly: true
        $ref: '#/definitions/VoicemailCopyRecord'
      copiedTo:
        type: array
        description: Represents where this voicemail has been copied to
        readOnly: true
        items:
          $ref: '#/definitions/VoicemailCopyRecord'
      deleteRetentionPolicy:
        description: The retention policy for this voicemail when deleted is set to true
        $ref: '#/definitions/VoicemailRetentionPolicy'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  VoicemailMessageEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/VoicemailMessage'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  VoicemailRetentionPolicy:
    type: object
    properties:
      voicemailRetentionPolicyType:
        type: string
        description: The retention policy type
        enum:
          - RETAIN_INDEFINITELY
          - RETAIN_WITH_TTL
          - IMMEDIATE_DELETE
      numberOfDays:
        type: integer
        format: int32
        description: >-
          If retentionPolicyType == RETAIN_WITH_TTL, then this value represents
          the number of days for the TTL
    description: Governs how the voicemail is retained
  VoicemailGroupPolicy:
    type: object
    properties:
      name:
        type: string
      group:
        description: The group associated with the policy
        readOnly: true
        $ref: '#/definitions/Group'
      enabled:
        type: boolean
        description: Whether voicemail is enabled for the group
      sendEmailNotifications:
        type: boolean
        description: >-
          Whether email notifications are sent to group members when a new
          voicemail is received
      disableEmailPii:
        type: boolean
        description: >-
          Removes any PII from group emails. This is overridden by the analogous
          organization configuration value. This is always true if HIPAA is
          enabled or unknown for an organization.
      includeEmailTranscriptions:
        type: boolean
        description: >-
          Whether to include the voicemail transcription in a group notification
          email
      languagePreference:
        type: string
        description: >-
          The language preference for the group.  Used for group voicemail
          transcription
      rotateCallsSecs:
        type: integer
        format: int32
        description: >-
          How many seconds to ring before rotating to the next member in the
          group
      stopRingingAfterRotations:
        type: integer
        format: int32
        description: How many rotations to go through
      overflowGroupId:
        type: string
        description: >-
          A fallback group to contact when all of the members in this group did
          not answer the call.
      groupAlertType:
        type: string
        description: >-
          Specifies if the members in this group should be contacted randomly,
          in a specific order, or by round-robin.
        enum:
          - RANDOM
          - ROUND_ROBIN
          - SEQUENTIAL
      interactiveResponsePromptId:
        type: string
        description: The prompt to use when connecting a user to a Group Ring call
      interactiveResponseRequired:
        type: boolean
        description: >-
          Whether user should be prompted with a confirmation prompt when
          connecting to a Group Ring call
  VoicemailMailboxInfo:
    type: object
    properties:
      usageSizeBytes:
        type: integer
        format: int64
        description: The total number of bytes for all voicemail message audio recordings
        readOnly: true
      totalCount:
        type: integer
        format: int32
        description: The total number of voicemail messages
        readOnly: true
      unreadCount:
        type: integer
        format: int32
        description: The total number of voicemail messages marked as unread
        readOnly: true
      deletedCount:
        type: integer
        format: int32
        description: The total number of voicemail messages marked as deleted
        readOnly: true
      createdDate:
        type: string
        format: date-time
        description: >-
          The date of the oldest voicemail message. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedDate:
        type: string
        format: date-time
        description: >-
          The date of the most recent voicemail message. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
  VoicemailUserPolicy:
    type: object
    properties:
      enabled:
        type: boolean
        description: Whether the user has voicemail enabled
        readOnly: true
      alertTimeoutSeconds:
        type: integer
        format: int32
        description: >-
          The number of seconds to ring the user's phone before a call is
          transfered to voicemail
      pin:
        type: string
        description: >-
          The user's PIN to access their voicemail. This property is only used
          for updates and never provided otherwise to ensure security
      modifiedDate:
        type: string
        format: date-time
        description: >-
          The date the policy was last modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      sendEmailNotifications:
        type: boolean
        description: >-
          Whether email notifications are sent to the user when a new voicemail
          is received
  VoicemailMediaInfo:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      mediaFileUri:
        type: string
        format: uri
      mediaImageUri:
        type: string
        format: uri
      waveformData:
        type: array
        items:
          type: number
          format: float
  CopyVoicemailMessage:
    type: object
    required:
      - voicemailMessageId
    properties:
      voicemailMessageId:
        type: string
        description: The id of the VoicemailMessage to copy
      userId:
        type: string
        description: The id of the User to copy the VoicemailMessage to
      groupId:
        type: string
        description: The id of the Group to copy the VoicemailMessage to
    description: Used to copy a VoicemailMessage to either a User or a Group
  PINConfiguration:
    type: object
    properties:
      minimumLength:
        type: integer
        format: int32
      maximumLength:
        type: integer
        format: int32
  VoicemailOrganizationPolicy:
    type: object
    properties:
      enabled:
        type: boolean
        description: Whether voicemail is enabled for this organization
        readOnly: true
      alertTimeoutSeconds:
        type: integer
        format: int32
        description: >-
          The organization's default number of seconds to ring a user's phone
          before a call is transferred to voicemail
      pinConfiguration:
        description: The configuration for user PINs to access their voicemail from a phone
        $ref: '#/definitions/PINConfiguration'
      voicemailExtension:
        type: string
        description: The extension for voicemail retrieval.  The default value is *86.
      pinRequired:
        type: boolean
        description: >-
          If this is true, a PIN is required when accessing a user's voicemail
          from a phone.
      interactiveResponseRequired:
        type: boolean
        description: >-
          Whether user should be prompted with a confirmation prompt when
          connecting to a Group Ring call
      sendEmailNotifications:
        type: boolean
        description: >-
          Whether email notifications are sent for new voicemails in the
          organization. If false, new voicemail email notifications are not be
          sent for the organization overriding any user or group setting.
      includeEmailTranscriptions:
        type: boolean
        description: >-
          Whether to include the voicemail transcription in the notification
          email
      disableEmailPii:
        type: boolean
        description: >-
          Removes any PII from emails. This overrides any analogous group
          configuration value. This is always true if HIPAA is enabled or
          unknown for an organization.
      maximumRecordingTimeSeconds:
        type: integer
        format: int32
        description: >-
          Default value for the maximum length of time in seconds of a recorded
          voicemail
      modifiedDate:
        type: string
        format: date-time
        description: >-
          The date the policy was last modified. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
  VoicemailsSearchResponse:
    type: object
    required:
      - pageCount
      - pageNumber
      - pageSize
      - results
      - total
      - types
    properties:
      total:
        type: integer
        format: int64
        description: The total number of results found
      pageCount:
        type: integer
        format: int32
        description: The total number of pages
      pageSize:
        type: integer
        format: int32
        description: The current page size
      pageNumber:
        type: integer
        format: int32
        description: The current page number
      previousPage:
        type: string
        description: Q64 value for the previous page of results
      currentPage:
        type: string
        description: Q64 value for the current page of results
      nextPage:
        type: string
        description: Q64 value for the next page of results
      types:
        type: array
        description: Resource types the search was performed against
        items:
          type: string
      results:
        type: array
        description: Search results
        items:
          $ref: '#/definitions/VoicemailMessage'
  VoicemailSearchCriteria:
    type: object
    required:
      - type
    properties:
      endValue:
        type: string
        description: The end value of the range. This field is used for range search types.
      values:
        type: array
        description: A list of values for the search to match against
        items:
          type: string
      startValue:
        type: string
        description: >-
          The start value of the range. This field is used for range search
          types.
      value:
        type: string
        description: A value for the search to match against
      operator:
        type: string
        description: How to apply this search criteria against other criteria
        enum:
          - AND
          - OR
          - NOT
      group:
        type: array
        description: Groups multiple conditions
        items:
          $ref: '#/definitions/VoicemailSearchCriteria'
      dateFormat:
        type: string
        description: >-
          Set date format for criteria values when using date range search
          type.  Supports Java date format syntax, example
          yyyy-MM-dd'T'HH:mm:ss.SSSX.
      fields:
        type: array
        description: Field names to search against
        items:
          type: string
        x-genesys-search-fields:
          value:
            - voicemailId
            - ownerId
            - ownerType
            - deleted
            - read
            - callerAddress
            - callerUser
            - createdDate
            - modifiedDate
      type:
        type: string
        description: Search Type
        enum:
          - EXACT
          - STARTS_WITH
          - CONTAINS
          - REGEX
          - TERM
          - TERMS
          - REQUIRED_FIELDS
          - MATCH_ALL
  VoicemailSearchRequest:
    type: object
    properties:
      sortOrder:
        type: string
        description: The sort order for results
        enum:
          - ASC
          - DESC
          - SCORE
      sortBy:
        type: string
        description: The field in the resource that you want to sort the results by
      pageSize:
        type: integer
        format: int32
        description: The number of results per page
      pageNumber:
        type: integer
        format: int32
        description: The page of resources you want to retrieve
      sort:
        type: array
        description: Multi-value sort order, list of multiple sort values
        items:
          $ref: '#/definitions/SearchSort'
      expand:
        type: array
        description: Provides more details about a specified resource
        items:
          type: string
      query:
        type: array
        items:
          $ref: '#/definitions/VoicemailSearchCriteria'
  RegisterArchitectJobResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      presignedUrl:
        type: string
        description: Presigned URL to upload the file in S3
        readOnly: true
      headers:
        type: object
        description: Required headers when uploading a file through PUT request to the URL
        readOnly: true
        additionalProperties:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ArchitectJobMessage:
    type: object
    properties:
      dateTime:
        type: string
        format: date-time
        description: >-
          The DateTime when the message was generated. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      type:
        type: string
        description: The message type.
        enum:
          - Error
          - Warning
      text:
        type: string
        description: The text of the message.
  ArchitectJobStateResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      flow:
        description: Flow created from the Architect Job
        $ref: '#/definitions/AddressableEntityRef'
      status:
        type: string
        description: Status of the Architect Job
        enum:
          - Registered
          - Started
          - Success
          - Failure
      command:
        type: string
        description: The command executed by the Architect Job
        enum:
          - Publish
          - Create
          - Update
      messages:
        type: array
        description: Warnings and Errors messages of the Architect Job
        items:
          $ref: '#/definitions/ArchitectJobMessage'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DependencyType:
    type: object
    properties:
      id:
        type: string
        description: The dependency type identifier
      name:
        type: string
      versioned:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ConsumedResourcesEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Dependency'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  Dependency:
    type: object
    properties:
      id:
        type: string
        description: The dependency identifier
      name:
        type: string
      version:
        type: string
      type:
        type: string
        enum:
          - ACDLANGUAGE
          - ACDSKILL
          - ACDWRAPUPCODE
          - BOTCONNECTORBOT
          - BOTCONNECTORINTEGRATION
          - BOTFLOW
          - BRIDGEACTION
          - COMMONMODULEFLOW
          - COMPOSERSCRIPT
          - CONTACTLIST
          - DATAACTION
          - DATATABLE
          - DIALOGENGINEBOT
          - DIALOGENGINEBOTVERSION
          - DIALOGFLOWAGENT
          - DIALOGFLOWCXAGENT
          - DIGITALBOTFLOW
          - EMAILROUTE
          - EMERGENCYGROUP
          - FLOWACTION
          - FLOWDATATYPE
          - FLOWMILESTONE
          - FLOWOUTCOME
          - GRAMMAR
          - GROUP
          - IMAGE
          - INBOUNDCALLFLOW
          - INBOUNDCHATFLOW
          - INBOUNDEMAILFLOW
          - INBOUNDSHORTMESSAGEFLOW
          - INQUEUECALLFLOW
          - INQUEUEEMAILFLOW
          - INQUEUESHORTMESSAGEFLOW
          - IVRCONFIGURATION
          - KNOWLEDGEBASE
          - KNOWLEDGEBASEDOCUMENT
          - LANGUAGE
          - LEXBOT
          - LEXBOTALIAS
          - LEXV2BOT
          - LEXV2BOTALIAS
          - NLUDOMAIN
          - NUANCEMIXBOT
          - NUANCEMIXINTEGRATION
          - OAUTHCLIENT
          - OUTBOUNDCALLFLOW
          - QUEUE
          - RECORDINGPOLICY
          - RESPONSE
          - SCHEDULE
          - SCHEDULEGROUP
          - SECUREACTION
          - SECURECALLFLOW
          - STTENGINE
          - SURVEYINVITEFLOW
          - SYSTEMPROMPT
          - TTSENGINE
          - TTSVOICE
          - USER
          - USERPROMPT
          - VOICEFLOW
          - VOICEMAILFLOW
          - WIDGET
          - WORKFLOW
          - WORKITEMFLOW
      deleted:
        type: boolean
      updated:
        type: boolean
      stateUnknown:
        type: boolean
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ConsumingResourcesEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Dependency'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  DependencyObject:
    type: object
    properties:
      id:
        type: string
        description: The dependency identifier
      name:
        type: string
      version:
        type: string
      type:
        type: string
        enum:
          - ACDLANGUAGE
          - ACDSKILL
          - ACDWRAPUPCODE
          - BOTCONNECTORBOT
          - BOTCONNECTORINTEGRATION
          - BOTFLOW
          - BRIDGEACTION
          - COMMONMODULEFLOW
          - COMPOSERSCRIPT
          - CONTACTLIST
          - DATAACTION
          - DATATABLE
          - DIALOGENGINEBOT
          - DIALOGENGINEBOTVERSION
          - DIALOGFLOWAGENT
          - DIALOGFLOWCXAGENT
          - DIGITALBOTFLOW
          - EMAILROUTE
          - EMERGENCYGROUP
          - FLOWACTION
          - FLOWDATATYPE
          - FLOWMILESTONE
          - FLOWOUTCOME
          - GRAMMAR
          - GROUP
          - IMAGE
          - INBOUNDCALLFLOW
          - INBOUNDCHATFLOW
          - INBOUNDEMAILFLOW
          - INBOUNDSHORTMESSAGEFLOW
          - INQUEUECALLFLOW
          - INQUEUEEMAILFLOW
          - INQUEUESHORTMESSAGEFLOW
          - IVRCONFIGURATION
          - KNOWLEDGEBASE
          - KNOWLEDGEBASEDOCUMENT
          - LANGUAGE
          - LEXBOT
          - LEXBOTALIAS
          - LEXV2BOT
          - LEXV2BOTALIAS
          - NLUDOMAIN
          - NUANCEMIXBOT
          - NUANCEMIXINTEGRATION
          - OAUTHCLIENT
          - OUTBOUNDCALLFLOW
          - QUEUE
          - RECORDINGPOLICY
          - RESPONSE
          - SCHEDULE
          - SCHEDULEGROUP
          - SECUREACTION
          - SECURECALLFLOW
          - STTENGINE
          - SURVEYINVITEFLOW
          - SYSTEMPROMPT
          - TTSENGINE
          - TTSVOICE
          - USER
          - USERPROMPT
          - VOICEFLOW
          - VOICEMAILFLOW
          - WIDGET
          - WORKFLOW
          - WORKITEMFLOW
      deleted:
        type: boolean
      updated:
        type: boolean
      stateUnknown:
        type: boolean
      consumedResources:
        type: array
        items:
          $ref: '#/definitions/Dependency'
      consumingResources:
        type: array
        items:
          $ref: '#/definitions/Dependency'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  DependencyObjectEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DependencyObject'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  DependencyStatus:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      user:
        description: User that initiated the build.
        $ref: '#/definitions/User'
      client:
        description: OAuth client that initiated the build.
        $ref: '#/definitions/DomainEntityRef'
      buildId:
        type: string
      dateStarted:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      dateCompleted:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      status:
        type: string
        enum:
          - BUILDINITIALIZING
          - BUILDINPROGRESS
          - NOTBUILT
          - OPERATIONAL
          - OPERATIONALNEEDSREBUILD
      failedObjects:
        type: array
        items:
          $ref: '#/definitions/FailedObject'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  FailedObject:
    type: object
    properties:
      id:
        type: string
      version:
        type: string
      name:
        type: string
      errorCode:
        type: string
  DependencyTypeEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DependencyType'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  EmergencyCallFlow:
    type: object
    properties:
      emergencyFlow:
        description: The call flow to execute in an emergency.
        $ref: '#/definitions/DomainEntityRef'
      ivrs:
        type: array
        description: The IVR(s) to route to the call flow during an emergency.
        items:
          $ref: '#/definitions/DomainEntityRef'
    description: >-
      An emergency flow associates a call flow to use in an emergency with the
      ivr(s) to route to it.
  EmergencyGroup:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      enabled:
        type: boolean
        description: >-
          True if an emergency is occurring and the associated emergency call
          flow(s) should be used.  False otherwise.
      emergencyCallFlows:
        type: array
        description: The emergency call flow(s) to use during an emergency.
        items:
          $ref: '#/definitions/EmergencyCallFlow'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: A group of emergency call flows to use in an emergency.
  EmergencyGroupListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/EmergencyGroup'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  FlowRuntimeExecution:
    type: object
    required:
      - dateLaunched
      - flowVersion
      - status
    properties:
      id:
        type: string
        description: The flow execution ID
      name:
        type: string
        description: The flow execution name.
      flowVersion:
        description: The Version of the flow definition of the flow execution.
        $ref: '#/definitions/FlowVersion'
      dateLaunched:
        type: string
        format: date-time
        description: >-
          The time the flow was launched. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      status:
        type: string
        description: >-
          The flow's running status, which indicates whether the flow is running
          normally or completed, etc.
        enum:
          - UNKNOWN
          - RUNNING
          - ERROR
          - TERMINATED
          - COMPLETED
          - FAILED
      dateCompleted:
        type: string
        format: date-time
        description: >-
          The time the flow completed, if applicable. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      completionReason:
        type: string
        description: The completion reason set at the flow completion time, if applicable.
      flowErrorInfo:
        description: Additional information if the flow is in error
        $ref: '#/definitions/ErrorBody'
      outputData:
        type: object
        description: >-
          List of the flow's output variables, if any. Output variables are only
          supplied for Completed flows.
        additionalProperties:
          type: object
      conversation:
        description: The conversation to which this Flow execution is related
        $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Details about the current state of a Flow execution
  FlowExecutionLaunchResponse:
    type: object
    properties:
      id:
        type: string
        description: The flow execution ID
      name:
        type: string
        description: The flow execution name.
      flowVersion:
        description: The version of the flow that launched
        $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Response object from launching a flow.
  FlowExecutionLaunchRequest:
    type: object
    required:
      - flowId
    properties:
      flowId:
        type: string
        description: ID of the flow to launch.
      flowVersion:
        type: string
        description: >-
          The version of the flow to launch. Omit this value (or supply
          null/empty) to use the latest published version.
      inputData:
        type: object
        description: >-
          Input values to the flow. Valid values are defined by a flow's input
          JSON schema.
        additionalProperties:
          type: object
      name:
        type: string
        description: A displayable name to assign to the new flow execution
    description: Parameters for launching a flow.
  FlowMilestone:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The flow milestone identifier
        readOnly: true
      name:
        type: string
        description: The flow milestone name.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      description:
        type: string
        description: The flow milestone description.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  FlowMilestoneDivisionView:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The flow milestone identifier
      name:
        type: string
        description: The flow milestone name
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  FlowMilestoneDivisionViewEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/FlowMilestoneDivisionView'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  FlowMilestoneListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/FlowMilestone'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  FlowOutcome:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The flow outcome identifier
      name:
        type: string
        description: The flow outcome name.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      description:
        type: string
      currentOperation:
        $ref: '#/definitions/Operation'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  FlowOutcomeDivisionView:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The flow outcome identifier
      name:
        type: string
        description: The flow outcome name
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  FlowOutcomeDivisionViewEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/FlowOutcomeDivisionView'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  FlowOutcomeListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/FlowOutcome'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  HistoryEntry:
    type: object
    properties:
      action:
        type: string
        description: The action performed
        enum:
          - CHECKIN
          - CHECKOUT
          - CREATE
          - DEACTIVATE
          - DEBUG
          - DELETE
          - PUBLISH
          - REVERT
          - SAVE
          - TRANSCODE
          - UPDATE
          - UPLOAD
      resource:
        type: string
        description: >-
          For actions performed not on the item itself, but on a sub-item, this
          field identifies the sub-item by name.  For example, for actions
          performed on prompt resources, this will be the prompt resource name.
      timestamp:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      user:
        description: User associated with this entry.
        $ref: '#/definitions/User'
      client:
        description: OAuth client associated with this entry.
        $ref: '#/definitions/DomainEntityRef'
      version:
        type: string
      secure:
        type: boolean
  HistoryListing:
    type: object
    properties:
      id:
        type: string
      complete:
        type: boolean
      user:
        $ref: '#/definitions/User'
      client:
        $ref: '#/definitions/DomainEntityRef'
      errorMessage:
        type: string
      errorCode:
        type: string
      errorDetails:
        type: array
        items:
          $ref: '#/definitions/Detail'
      errorMessageParams:
        type: object
        additionalProperties:
          type: string
      actionName:
        type: string
        description: Action name
        enum:
          - CREATE
          - CHECKIN
          - CHECKOUT
          - DEBUG
          - DELETE
          - HISTORY
          - PUBLISH
          - REVERT
          - SAVE
          - STATE_CHANGE
          - UPDATE
          - VALIDATE
      actionStatus:
        type: string
        description: Action status
        enum:
          - LOCKED
          - UNLOCKED
          - STARTED
          - PENDING_GENERATION
          - PENDING_BACKEND_NOTIFICATION
          - SUCCESS
          - FAILURE
      name:
        type: string
      description:
        type: string
      system:
        type: boolean
      started:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      completed:
        type: string
        format: date-time
        description: >-
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/HistoryEntry'
      pageCount:
        type: integer
        format: int32
  FlowVersionEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/FlowVersion'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  FlowDivisionView:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The flow identifier
      name:
        type: string
        description: The flow name
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      type:
        type: string
        enum:
          - BOT
          - COMMONMODULE
          - DIGITALBOT
          - INBOUNDCALL
          - INBOUNDCHAT
          - INBOUNDEMAIL
          - INBOUNDSHORTMESSAGE
          - INQUEUECALL
          - INQUEUEEMAIL
          - INQUEUESHORTMESSAGE
          - OUTBOUNDCALL
          - SECURECALL
          - SPEECH
          - SURVEYINVITE
          - VOICE
          - VOICEMAIL
          - WORKFLOW
          - WORKITEM
      description:
        type: string
        description: the flow description
      inputSchema:
        description: json schema describing the inputs for the flow
        $ref: '#/definitions/JsonSchemaDocument'
      outputSchema:
        description: json schema describing the outputs for the flow
        $ref: '#/definitions/JsonSchemaDocument'
      supportedLanguages:
        type: array
        description: List of supported languages for the published version of the flow.
        readOnly: true
        items:
          $ref: '#/definitions/SupportedLanguage'
      publishedVersion:
        description: published version information if there is a published version
        $ref: '#/definitions/FlowVersion'
      debugVersion:
        description: debug version information if there is a debug version
        $ref: '#/definitions/FlowVersion'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  FlowDivisionViewEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/FlowDivisionView'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  FlowEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Flow'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  IVR:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      dnis:
        type: array
        description: >-
          The phone number(s) to contact the IVR by.  Each phone number must be
          unique and not in use by another resource.  For example, a user and an
          iVR cannot have the same phone number.
        items:
          type: string
      openHoursFlow:
        description: >-
          The Architect flow to execute during the hours an organization is
          open.
        $ref: '#/definitions/DomainEntityRef'
      closedHoursFlow:
        description: >-
          The Architect flow to execute during the hours an organization is
          closed.
        $ref: '#/definitions/DomainEntityRef'
      holidayHoursFlow:
        description: The Architect flow to execute during an organization's holiday hours.
        $ref: '#/definitions/DomainEntityRef'
      scheduleGroup:
        description: >-
          The schedule group defining the open and closed hours for an
          organization.  If this is provided, an open flow and a closed flow
          must be specified as well.
        $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: >-
      Defines the phone numbers, operating hours, and the Architect flows to
      execute for an IVR.
  IVREntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/IVR'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  PromptAsset:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      promptId:
        type: string
        description: Associated prompt ID
        readOnly: true
      language:
        type: string
        description: Prompt resource language
        readOnly: true
      mediaUri:
        type: string
        description: URI of the resource audio
        readOnly: true
      ttsString:
        type: string
        description: Text to speech of the resource
      text:
        type: string
        description: Text of the resource
      uploadStatus:
        type: string
        description: Audio upload status
        readOnly: true
        enum:
          - created
          - uploaded
          - transcoded
          - transcodeFailed
      uploadUri:
        type: string
        description: Upload URI for the resource audio
        readOnly: true
      languageDefault:
        type: boolean
        description: Whether or not this resource locale is the default for the language
        readOnly: true
      tags:
        type: object
        additionalProperties:
          type: array
          items:
            type: string
      durationSeconds:
        type: number
        format: double
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PromptAssetEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/PromptAsset'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  PromptAssetCreate:
    type: object
    required:
      - language
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      promptId:
        type: string
        description: Associated prompt ID
        readOnly: true
      language:
        type: string
        description: The prompt language.
      mediaUri:
        type: string
        description: URI of the resource audio
        readOnly: true
      ttsString:
        type: string
        description: Text to speech of the resource
      text:
        type: string
        description: Text of the resource
      uploadStatus:
        type: string
        description: Audio upload status
        readOnly: true
        enum:
          - created
          - uploaded
          - transcoded
          - transcodeFailed
      uploadUri:
        type: string
        description: Upload URI for the resource audio
        readOnly: true
      languageDefault:
        type: boolean
        description: Whether or not this resource locale is the default for the language
        readOnly: true
      tags:
        type: object
        additionalProperties:
          type: array
          items:
            type: string
      durationSeconds:
        type: number
        format: double
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  Prompt:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The prompt identifier
      name:
        type: string
        description: The prompt name.
      description:
        type: string
      resources:
        type: array
        description: List of resources associated with this prompt
        readOnly: true
        items:
          $ref: '#/definitions/PromptAsset'
      currentOperation:
        description: Current prompt operation status
        readOnly: true
        $ref: '#/definitions/Operation'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  PromptEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Prompt'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  ScheduleGroup:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      timeZone:
        type: string
        description: >-
          The timezone the schedules are a part of.  This is not a schedule
          property to allow a schedule to be used in multiple timezones.
      openSchedules:
        type: array
        description: The schedules defining the hours an organization is open.
        items:
          $ref: '#/definitions/DomainEntityRef'
      closedSchedules:
        type: array
        description: The schedules defining the hours an organization is closed.
        items:
          $ref: '#/definitions/DomainEntityRef'
      holidaySchedules:
        type: array
        description: >-
          The schedules defining the hours an organization is closed for the
          holidays.
        items:
          $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: A group of schedules that define the operating hours of an organization.
  ScheduleGroupEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ScheduleGroup'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  Schedule:
    type: object
    required:
      - end
      - name
      - start
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the entity.
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/WritableDivision'
      description:
        type: string
        description: The resource's description.
      version:
        type: integer
        format: int32
        description: The current version of the resource.
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the resource was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date of the last modification to the resource. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        type: string
        description: The ID of the user that last modified the resource.
        readOnly: true
      createdBy:
        type: string
        description: The ID of the user that created the resource.
        readOnly: true
      state:
        type: string
        description: Indicates if the resource is active, inactive, or deleted.
        readOnly: true
        enum:
          - active
          - inactive
          - deleted
      modifiedByApp:
        type: string
        description: The application that last modified the resource.
        readOnly: true
      createdByApp:
        type: string
        description: The application that created the resource.
        readOnly: true
      start:
        type: string
        format: local-date-time
        description: >-
          Date time is represented as an ISO-8601 string without a timezone. For
          example: yyyy-MM-ddTHH:mm:ss.SSS
      end:
        type: string
        format: local-date-time
        description: >-
          Date time is represented as an ISO-8601 string without a timezone. For
          example: yyyy-MM-ddTHH:mm:ss.SSS
      rrule:
        type: string
        description: >-
          An iCal Recurrence Rule (RRULE) string. It is required to be set for
          schedules determining when upgrades to the Edge software can be
          applied.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: >-
      Defines a period of time to perform a specific action.  Each schedule must
      be associated with one or more schedule groups to be used.
  ScheduleEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/Schedule'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  SystemPromptAsset:
    type: object
    required:
      - language
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      promptId:
        type: string
      language:
        type: string
        description: The asset resource language
      durationSeconds:
        type: number
        format: double
      mediaUri:
        type: string
      ttsString:
        type: string
      text:
        type: string
      uploadUri:
        type: string
      uploadStatus:
        type: string
        enum:
          - created
          - uploaded
          - transcoded
          - transcodeFailed
      hasDefault:
        type: boolean
      languageDefault:
        type: boolean
      tags:
        type: object
        additionalProperties:
          type: array
          items:
            type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SystemPromptAssetEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/SystemPromptAsset'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  SystemPrompt:
    type: object
    properties:
      id:
        type: string
        description: The system prompt identifier
      name:
        type: string
      description:
        type: string
      resources:
        type: array
        items:
          $ref: '#/definitions/SystemPromptAsset'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SystemPromptEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/SystemPrompt'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  WebChatConfig:
    type: object
    properties:
      webChatSkin:
        type: string
        description: css class to be applied to the web chat widget.
        enum:
          - basic
          - modern-caret-skin
  WebChatDeployment:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      description:
        type: string
      authenticationRequired:
        type: boolean
      authenticationUrl:
        type: string
        description: >-
          URL for third party service authenticating web chat clients. See
          https://github.com/MyPureCloud/authenticated-web-chat-server-examples
      disabled:
        type: boolean
      webChatConfig:
        $ref: '#/definitions/WebChatConfig'
      allowedDomains:
        type: array
        items:
          type: string
      flow:
        description: >-
          The URI of the Inbound Chat Flow to run when new chats are initiated
          under this Deployment.
        $ref: '#/definitions/DomainEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WebChatDeploymentEntityListing:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/WebChatDeployment'
      selfUri:
        type: string
        format: uri
  WebChatSettings:
    type: object
    properties:
      requireDeployment:
        type: boolean
  WebChatGuestMediaRequest:
    type: object
    required:
      - state
      - types
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      types:
        type: array
        description: The types of media being requested.
        items:
          type: string
          enum:
            - COBROWSE
            - SCREENSHARE
      state:
        type: string
        description: >-
          The state of the media request, one of
          PENDING|ACCEPTED|DECLINED|TIMEDOUT|CANCELLED|ERRORED.
        enum:
          - PENDING
          - ACCEPTED
          - DECLINED
          - TIMEDOUT
          - CANCELLED
          - ERRORED
      communicationId:
        type: string
        description: The ID of the new media communication, if applicable.
      securityKey:
        type: string
        description: The security information related to a media request.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: >-
      Object representing the guest model of a media request of a chat
      conversation.
  WebChatGuestMediaRequestEntityList:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WebChatGuestMediaRequest'
  WebChatMemberInfoEntityList:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WebChatMemberInfo'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  AuthenticationSettings:
    type: object
    required:
      - enabled
      - integrationId
    properties:
      enabled:
        type: boolean
        description: >-
          Indicate if these auth is required for this deployment. If, for
          example, this flag is set to true then webmessaging sessions can not
          send messages unless the end-user is authenticated.
      integrationId:
        type: string
        description: >-
          The integration identifier which contains the auth settings required
          on the deployment.
    description: Settings for authenticated webdeployments.
  AutoStart:
    type: object
    properties:
      enabled:
        type: boolean
        description: whether or not auto start is enabled
  BotMessengerProfile:
    type: object
    properties:
      name:
        type: string
        description: Name of the Bot
      avatarUrl:
        type: string
        description: Avatar for Bot
  CobrowseSettings:
    type: object
    properties:
      enabled:
        type: boolean
        description: Whether or not cobrowse is enabled
      allowAgentControl:
        type: boolean
        description: Whether the viewer should have option to request control
      maskSelectors:
        type: array
        description: Mask patterns that will apply to pages being shared
        items:
          type: string
      channels:
        type: array
        description: Cobrowse channels for web messenger
        items:
          type: string
          enum:
            - Webmessaging
            - Voice
      readonlySelectors:
        type: array
        description: Readonly patterns that will apply to pages being shared
        items:
          type: string
    description: Settings concerning cobrowse
  ConversationAppSettings:
    type: object
    properties:
      enabled:
        type: boolean
        description: The toggle to enable or disable conversations
      showAgentTypingIndicator:
        type: boolean
        description: The toggle to enable or disable typing indicator for messenger
      showUserTypingIndicator:
        type: boolean
        description: The toggle to enable or disable typing indicator for messenger
      autoStartType:
        type: string
        description: Deprecated. The auto start type for the messenger conversation
        enum:
          - Standard
          - Automatic
      autoStart:
        description: The auto start for the messenger conversation
        $ref: '#/definitions/AutoStart'
      markdown:
        description: The markdown for the messenger app
        $ref: '#/definitions/Markdown'
      conversationDisconnect:
        description: The conversation disconnect settings for the messenger app
        $ref: '#/definitions/ConversationDisconnectSettings'
      conversationClear:
        description: The conversation clear settings for the messenger app
        $ref: '#/definitions/ConversationClearSettings'
      humanize:
        description: The humanize conversations settings for the messenger app
        $ref: '#/definitions/Humanize'
    description: Conversation settings that handles chats within the messenger
  ConversationClearSettings:
    type: object
    properties:
      enabled:
        type: boolean
        description: whether or not conversation clear setting is enabled
  ConversationDisconnectSettings:
    type: object
    properties:
      enabled:
        type: boolean
        description: whether or not conversation disconnect setting is enabled
      type:
        type: string
        description: Conversation disconnect type
        enum:
          - Send
          - ReadOnly
  CustomI18nLabels:
    type: object
    properties:
      language:
        type: string
        description: Language of localized labels in homescreen app (eg. en-us, de-de)
      localizedLabels:
        type: array
        description: Contains localized labels used in homescreen app
        items:
          $ref: '#/definitions/LocalizedLabels'
    description: The localization settings for homescreen
  FileUploadMode:
    type: object
    properties:
      fileTypes:
        type: array
        description: A list of supported content types for uploading files
        items:
          type: string
          enum:
            - image/jpeg
            - image/gif
            - image/png
      maxFileSizeKB:
        type: integer
        format: int64
        description: >-
          The maximum file size for file uploads in kilobytes. Default is 10240
          (10 MB)
  FileUploadSettings:
    type: object
    properties:
      enableAttachments:
        type: boolean
        description: whether or not attachments is enabled
      useSupportedContentProfile:
        type: boolean
        description: whether or not supported content profile is enabled
      modes:
        type: array
        description: The list of supported file upload modes
        items:
          $ref: '#/definitions/FileUploadMode'
    description: File upload settings for messenger
  FormsTrackTrigger:
    type: object
    required:
      - captureDataOnFormAbandon
      - captureDataOnFormSubmit
      - formName
      - selector
    properties:
      selector:
        type: string
        description: Form element that triggers the form submitted or abandoned event.
      formName:
        type: string
        description: Prefix for the form submitted or abandoned event name.
      captureDataOnFormAbandon:
        type: boolean
        description: Whether to capture the form data in the form abandoned event.
      captureDataOnFormSubmit:
        type: boolean
        description: Whether to capture the form data in the form submitted event.
    description: Details about a forms tracking event trigger
  Humanize:
    type: object
    properties:
      enabled:
        type: boolean
        description: Whether or not humanize conversations setting is enabled
      bot:
        description: Bot messenger profile setting
        $ref: '#/definitions/BotMessengerProfile'
  IdleEventTrigger:
    type: object
    required:
      - eventName
    properties:
      eventName:
        type: string
        description: Name of event triggered after period of inactivity.
      idleAfterSeconds:
        type: integer
        format: int64
        description: Number of seconds of inactivity before an event is triggered.
    description: Details about an idle event trigger
  JourneyEventsSettings:
    type: object
    properties:
      enabled:
        type: boolean
        description: Whether or not journey event collection is enabled.
      excludedQueryParameters:
        type: array
        description: List of parameters to be excluded from the query string.
        items:
          type: string
      shouldKeepUrlFragment:
        type: boolean
        description: Whether or not to keep the URL fragment.
      searchQueryParameters:
        type: array
        description: List of query parameters used for search (e.g. 'q').
        items:
          type: string
      pageviewConfig:
        type: string
        description: Controls how the pageview events are tracked.
        enum:
          - Auto
          - Once
          - 'Off'
      clickEvents:
        type: array
        description: Tracks when and where a visitor clicks on a webpage.
        items:
          $ref: '#/definitions/SelectorEventTrigger'
      formsTrackEvents:
        type: array
        description: >-
          Controls how the form submitted and form abandoned events are tracked
          after a visitor interacts with a form element.
        items:
          $ref: '#/definitions/FormsTrackTrigger'
      idleEvents:
        type: array
        description: Tracks when and where a visitor becomes inactive on a webpage.
        items:
          $ref: '#/definitions/IdleEventTrigger'
      inViewportEvents:
        type: array
        description: Tracks when elements become visible or hidden on screen.
        items:
          $ref: '#/definitions/SelectorEventTrigger'
      scrollDepthEvents:
        type: array
        description: Tracks when a visitor scrolls to a specific percentage of a webpage.
        items:
          $ref: '#/definitions/ScrollPercentageEventTrigger'
    description: Settings concerning journey events
  Knowledge:
    type: object
    properties:
      enabled:
        type: boolean
        description: whether or not knowledge base is enabled
      knowledgeBase:
        description: The knowledge base for messenger
        $ref: '#/definitions/AddressableEntityRef'
  LauncherButtonSettings:
    type: object
    properties:
      visibility:
        type: string
        description: The visibility settings for the button
        enum:
          - 'On'
          - 'Off'
          - OnDemand
    description: The settings for the launcher button
  LocalizedLabels:
    type: object
    properties:
      key:
        type: string
        description: Contains localized label key used in messenger homescreen
        enum:
          - MessengerHomeHeaderTitle
          - MessengerHomeHeaderSubTitle
      value:
        type: string
        description: Contains localized label value used in messenger homescreen
    description: Contains localized labels used in messenger apps
  Markdown:
    type: object
    properties:
      enabled:
        type: boolean
        description: whether or not markdown is enabled
  MessengerApps:
    type: object
    properties:
      conversations:
        description: The conversation settings that handles chats within the messenger
        $ref: '#/definitions/ConversationAppSettings'
      knowledge:
        description: The knowledge base config for messenger
        $ref: '#/definitions/Knowledge'
    description: The apps embedded in the messenger
  MessengerHomeScreen:
    type: object
    properties:
      enabled:
        type: boolean
        description: whether or not homescreen is enabled
      logoUrl:
        type: string
        description: to capture uploaded company logoUrl
  MessengerSettings:
    type: object
    properties:
      enabled:
        type: boolean
        description: Whether or not messenger is enabled
      styles:
        description: The style settings for messenger
        $ref: '#/definitions/MessengerStyles'
      launcherButton:
        description: The launcher button settings for messenger
        $ref: '#/definitions/LauncherButtonSettings'
      fileUpload:
        description: The file upload settings for messenger
        $ref: '#/definitions/FileUploadSettings'
      apps:
        description: The apps embedded in the messenger
        $ref: '#/definitions/MessengerApps'
      homeScreen:
        description: The homescreen settings for messenger
        $ref: '#/definitions/MessengerHomeScreen'
    description: Settings concerning messenger
  MessengerStyles:
    type: object
    properties:
      primaryColor:
        type: string
        example: '#a7017c'
        description: The primary color of messenger in hexadecimal
  PositionSettings:
    type: object
    properties:
      alignment:
        type: string
        description: The alignment for position
        enum:
          - Auto
          - Left
          - Right
      sideSpace:
        type: integer
        format: int32
        description: The sidespace value for position
      bottomSpace:
        type: integer
        format: int32
        description: The bottomspace value for position
    description: Settings concerning position
  ScrollPercentageEventTrigger:
    type: object
    required:
      - eventName
      - percentage
    properties:
      percentage:
        type: integer
        format: int32
        description: Percentage of a webpage at which an event is triggered.
      eventName:
        type: string
        description: Name of event triggered after scrolling to the specified percentage.
    description: Details about a scroll percentage event trigger
  SelectorEventTrigger:
    type: object
    required:
      - eventName
      - selector
    properties:
      selector:
        type: string
        description: Element that triggers event.
      eventName:
        type: string
        description: >-
          Name of event triggered when element matching selector is interacted
          with.
    description: Details about a selector event trigger
  SupportCenterCustomMessage:
    type: object
    properties:
      defaultValue:
        type: string
        description: Default value for the message
      type:
        type: string
        description: Type of the message
        enum:
          - Welcome
          - Fallback
  SupportCenterFeedbackSettings:
    type: object
    properties:
      enabled:
        type: boolean
        description: >-
          Whether or not requesting customer feedback on article content and
          article search results is enabled
  SupportCenterGlobalStyle:
    type: object
    properties:
      backgroundColor:
        type: string
        description: 'Global background color, in hexadecimal format, eg #ffffff'
      primaryColor:
        type: string
        description: 'Global primary color, in hexadecimal format, eg #ffffff'
      primaryColorDark:
        type: string
        description: 'Global dark primary color, in hexadecimal format, eg #ffffff'
      primaryColorLight:
        type: string
        description: 'Global light primary color, in hexadecimal format, eg #ffffff'
      textColor:
        type: string
        description: 'Global text color, in hexadecimal format, eg #ffffff'
      fontFamily:
        type: string
        description: Global font family
  SupportCenterHeroStyle:
    type: object
    properties:
      backgroundColor:
        type: string
        description: 'Background color for hero section, in hexadecimal format, eg #ffffff'
      textColor:
        type: string
        description: 'Text color for hero section, in hexadecimal format, eg #ffffff'
  SupportCenterModuleSetting:
    type: object
    properties:
      type:
        type: string
        description: Screen module type
        enum:
          - Search
          - Categories
          - FAQ
          - Contact
          - Results
          - Article
          - TopViewedArticles
      enabled:
        type: boolean
        description: Whether or not support center screen module is enabled
  SupportCenterScreen:
    type: object
    properties:
      type:
        type: string
        description: The type of the screen
        enum:
          - Home
          - Category
          - SearchResults
          - Article
      moduleSettings:
        type: array
        description: Module settings for the screen
        items:
          $ref: '#/definitions/SupportCenterModuleSetting'
  SupportCenterSettings:
    type: object
    properties:
      enabled:
        type: boolean
        description: Whether or not support center is enabled
      knowledgeBase:
        description: The knowledge base for support center
        $ref: '#/definitions/AddressableEntityRef'
      customMessages:
        type: array
        description: Customizable display texts for support center
        items:
          $ref: '#/definitions/SupportCenterCustomMessage'
      routerType:
        type: string
        description: Router type for support center
        enum:
          - Hash
          - Browser
      screens:
        type: array
        description: Available screens for the support center with its modules
        items:
          $ref: '#/definitions/SupportCenterScreen'
      enabledCategories:
        type: array
        description: Enabled article categories for support center
        items:
          $ref: '#/definitions/AddressableEntityRef'
      styleSetting:
        description: Style attributes for support center
        $ref: '#/definitions/SupportCenterStyleSetting'
      feedback:
        description: Customer feedback settings
        $ref: '#/definitions/SupportCenterFeedbackSettings'
    description: Settings concerning support center
  SupportCenterStyleSetting:
    type: object
    properties:
      heroStyle:
        description: Support center hero customizations
        $ref: '#/definitions/SupportCenterHeroStyle'
      globalStyle:
        description: Support center global customizations
        $ref: '#/definitions/SupportCenterGlobalStyle'
  WebDeploymentConfigurationVersion:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The configuration version ID
        readOnly: true
      name:
        type: string
        description: The configuration version name
      version:
        type: string
        example: DRAFT, 1, 2
        description: The version of the configuration
        readOnly: true
      headlessMode:
        description: >-
          Headless Mode Support which Controls UI components. When enabled,
          native UI components will be disabled and allows for custom-built UI.
        $ref: '#/definitions/WebDeploymentHeadlessMode'
      description:
        type: string
        description: The description of the configuration
      languages:
        type: array
        example: en-us, de-de
        description: >-
          A list of languages supported on the configuration required if the
          messenger is enabled
        items:
          type: string
      defaultLanguage:
        type: string
        example: en-us, de-de
        description: >-
          The default language to use for the configuration required if the
          messenger is enabled
      customI18nLabels:
        type: array
        description: The localization settings for homescreen app
        items:
          $ref: '#/definitions/CustomI18nLabels'
      messenger:
        description: The settings for messenger
        $ref: '#/definitions/MessengerSettings'
      position:
        description: The settings for position
        $ref: '#/definitions/PositionSettings'
      supportCenter:
        description: The settings for support center
        $ref: '#/definitions/SupportCenterSettings'
      cobrowse:
        description: The settings for cobrowse
        $ref: '#/definitions/CobrowseSettings'
      journeyEvents:
        description: The settings for journey events
        $ref: '#/definitions/JourneyEventsSettings'
      authenticationSettings:
        description: The settings for authenticated deployments
        $ref: '#/definitions/AuthenticationSettings'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the configuration version was created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date the configuration version was most recently modified. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      datePublished:
        type: string
        format: date-time
        description: >-
          The date the configuration version was most recently published. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      lastModifiedUser:
        description: >-
          A reference to the user who most recently modified the configuration
          version
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      createdUser:
        description: A reference to the user who created the configuration version
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      publishedUser:
        description: A reference to the user who published the configuration version
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      status:
        type: string
        description: The current status of the configuration version
        enum:
          - Pending
          - Active
          - Inactive
          - Error
          - Deleting
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Details about the configuration version of a Web Deployment
  WebDeploymentHeadlessMode:
    type: object
    properties:
      enabled:
        type: boolean
        description: Whether or not Headless Mode is enabled
  WebDeploymentConfigurationVersionEntityListing:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/WebDeploymentConfigurationVersion'
      selfUri:
        type: string
        format: uri
  SupportedContentProfile:
    type: object
    properties:
      id:
        type: string
        description: The supported content profile ID
  WebDeployment:
    type: object
    required:
      - configuration
      - name
    properties:
      id:
        type: string
        description: The deployment ID
        readOnly: true
      name:
        type: string
        description: The deployment name
      description:
        type: string
        description: The description of the config
      allowAllDomains:
        type: boolean
        description: >-
          Property indicates whether all domains are allowed or not.
          allowedDomains must be empty when this is set as true.
      allowedDomains:
        type: array
        description: >-
          The list of domains that are approved to use this deployment; the list
          will be added to CORS headers for ease of web use.
        items:
          type: string
      supportedContentProfile:
        description: The supported content profile for a deployment
        $ref: '#/definitions/SupportedContentProfile'
      snippet:
        type: string
        description: Javascript snippet used to load the config
        readOnly: true
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the deployment was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date the deployment was most recently modified. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      lastModifiedUser:
        description: A reference to the user who most recently modified the deployment
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      flow:
        description: A reference to the inboundshortmessage flow used by this deployment
        $ref: '#/definitions/DomainEntityRef'
      status:
        type: string
        description: The current status of the deployment
        enum:
          - Pending
          - Active
          - Inactive
          - Error
          - Deleting
      configuration:
        description: The config version this deployment uses
        $ref: '#/definitions/WebDeploymentConfigurationVersionEntityRef'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Details about a Web Deployment
  WebDeploymentConfigurationVersionEntityRef:
    type: object
    required:
      - id
      - version
    properties:
      id:
        type: string
        description: The configuration version ID
      name:
        type: string
        description: The configuration version name
      selfUri:
        type: string
        format: uri
      version:
        type: string
        example: DRAFT, 1, 2
        description: The version of the configuration
  WebDeploymentActiveConfigurationOnDeployment:
    type: object
    properties:
      configurationVersion:
        description: The active configuration on a deployment
        $ref: '#/definitions/WebDeploymentConfigurationVersion'
      deployment:
        description: The web deployment associated with the active configuration
        $ref: '#/definitions/WebDeployment'
    description: Details about the active configuration on a deployment
  ExpandableWebDeployment:
    type: object
    required:
      - configuration
      - name
    properties:
      id:
        type: string
        description: The deployment ID
        readOnly: true
      name:
        type: string
        description: The deployment name
      description:
        type: string
        description: The description of the config
      allowAllDomains:
        type: boolean
        description: >-
          Property indicates whether all domains are allowed or not.
          allowedDomains must be empty when this is set as true.
      allowedDomains:
        type: array
        description: >-
          The list of domains that are approved to use this deployment; the list
          will be added to CORS headers for ease of web use.
        items:
          type: string
      supportedContentProfile:
        description: The supported content profile for a deployment
        $ref: '#/definitions/SupportedContentProfile'
      snippet:
        type: string
        description: Javascript snippet used to load the config
        readOnly: true
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the deployment was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date the deployment was most recently modified. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      lastModifiedUser:
        description: A reference to the user who most recently modified the deployment
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      flow:
        description: A reference to the inboundshortmessage flow used by this deployment
        $ref: '#/definitions/DomainEntityRef'
      status:
        type: string
        description: The current status of the deployment
        enum:
          - Pending
          - Active
          - Inactive
          - Error
          - Deleting
      configuration:
        description: The config version this deployment uses
        $ref: '#/definitions/WebDeploymentConfigurationVersionResponse'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Details about a Web Deployment
  ExpandableWebDeploymentEntityListing:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/ExpandableWebDeployment'
      selfUri:
        type: string
        format: uri
  WebDeploymentConfigurationVersionResponse:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The configuration version ID
      name:
        type: string
        description: The configuration version name
      version:
        type: string
        example: DRAFT, 1, 2
        description: The version of the configuration
      headlessMode:
        description: >-
          Headless Mode Support which Controls UI components. When enabled,
          native UI components will be disabled and allows for custom-built UI.
        $ref: '#/definitions/WebDeploymentHeadlessMode'
      description:
        type: string
        description: The description of the configuration
      languages:
        type: array
        example: en-us, de-de
        description: >-
          A list of languages supported on the configuration required if the
          messenger is enabled
        items:
          type: string
      defaultLanguage:
        type: string
        example: en-us, de-de
        description: >-
          The default language to use for the configuration required if the
          messenger is enabled
      customI18nLabels:
        type: array
        description: The localization settings for homescreen app
        items:
          $ref: '#/definitions/CustomI18nLabels'
      messenger:
        description: The settings for messenger
        $ref: '#/definitions/MessengerSettings'
      position:
        description: The settings for position
        $ref: '#/definitions/PositionSettings'
      supportCenter:
        description: The settings for support center
        $ref: '#/definitions/SupportCenterSettings'
      cobrowse:
        description: The settings for cobrowse
        $ref: '#/definitions/CobrowseSettings'
      journeyEvents:
        description: The settings for journey events
        $ref: '#/definitions/JourneyEventsSettings'
      authenticationSettings:
        description: The settings for authenticated deployments
        $ref: '#/definitions/AuthenticationSettings'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the configuration version was created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date the configuration version was most recently modified. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      datePublished:
        type: string
        format: date-time
        description: >-
          The date the configuration version was most recently published. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      lastModifiedUser:
        description: >-
          A reference to the user who most recently modified the configuration
          version
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      createdUser:
        description: A reference to the user who created the configuration version
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      publishedUser:
        description: A reference to the user who published the configuration version
        readOnly: true
        $ref: '#/definitions/AddressableEntityRef'
      status:
        type: string
        description: The current status of the configuration version
        enum:
          - Pending
          - Active
          - Inactive
          - Error
          - Deleting
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Details about the configuration version of a Web Deployment
  WebMessagingAttachment:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      mediaType:
        type: string
        description: The type of attachment this instance represents.
        readOnly: true
        enum:
          - Image
          - Video
          - Audio
          - File
          - Link
      url:
        type: string
        description: URL of the attachment.
        readOnly: true
      mime:
        type: string
        description: >-
          Attachment mime type
          (https://www.iana.org/assignments/media-types/media-types.xhtml).
        readOnly: true
      text:
        type: string
        description: Text associated with attachment such as an image caption.
        readOnly: true
      sha256:
        type: string
        description: Secure hash of the attachment content.
        readOnly: true
      filename:
        type: string
        description: Suggested file name for attachment.
        readOnly: true
      fileSize:
        type: integer
        format: int32
        description: The file size associated with the file
        readOnly: true
    description: Attachment object.
  WebMessagingButtonResponse:
    type: object
    required:
      - payload
      - text
    properties:
      id:
        type: string
        description: An ID assigned to the button response (Deprecated).
      type:
        type: string
        description: Describes the button that resulted in the Button Response.
        enum:
          - Button
          - QuickReply
      text:
        type: string
        description: The response text from the button click.
      payload:
        type: string
        description: The response payload associated with the clicked button.
    description: >-
      Button response object representing the click of a structured message
      button, such as a quick reply.
  WebMessagingChannel:
    type: object
    properties:
      from:
        description: Information about the recipient the message is received from.
        readOnly: true
        $ref: '#/definitions/WebMessagingRecipient'
      to:
        description: Information about the recipient the message is sent to.
        readOnly: true
        $ref: '#/definitions/WebMessagingRecipient'
      time:
        type: string
        format: date-time
        description: >-
          When the message was processed by Genesys Cloud. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      messageId:
        type: string
        description: Unique provider ID of the message.
        readOnly: true
    description: >-
      Channel-specific information that describes the message and the message
      channel/provider.
  WebMessagingContent:
    type: object
    properties:
      contentType:
        type: string
        description: >-
          Type of this content element. If contentType = "Attachment" only one
          item is allowed.
        readOnly: true
        enum:
          - Attachment
          - QuickReply
          - ButtonResponse
          - GenericTemplate
          - Card
          - Carousel
      attachment:
        description: Attachment content.
        readOnly: true
        $ref: '#/definitions/WebMessagingAttachment'
      quickReply:
        description: Quick reply content.
        $ref: '#/definitions/WebMessagingQuickReply'
      buttonResponse:
        description: Button response content.
        $ref: '#/definitions/WebMessagingButtonResponse'
      generic:
        description: Generic content (Deprecated).
        $ref: '#/definitions/WebMessagingGeneric'
      card:
        description: Card content
        $ref: '#/definitions/ContentCard'
      carousel:
        description: Carousel content
        $ref: '#/definitions/ContentCarousel'
    description: Message content element.
  WebMessagingEvent:
    type: object
    required:
      - eventType
    properties:
      eventType:
        type: string
        description: Type of this event element
        enum:
          - CoBrowse
          - Presence
      coBrowse:
        description: Cobrowse event.
        $ref: '#/definitions/WebMessagingEventCoBrowse'
      presence:
        description: Presence event.
        $ref: '#/definitions/WebMessagingEventPresence'
    description: >-
      Message event element.  Examples include: system messages, typing
      indicators, cobrowse offerings.
  WebMessagingEventCoBrowse:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Describes the type of Cobrowse event.
        enum:
          - Offering
          - OfferingExpired
          - OfferingAccepted
          - OfferingRejected
      sessionId:
        type: string
        description: The Cobrowse session ID.
      sessionJoinToken:
        type: string
        description: The Cobrowse session join token.
    description: A Cobrowse event.
  WebMessagingEventPresence:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: Describes the type of Presence event.
        enum:
          - Join
          - Disconnect
    description: A Presence event.
  WebMessagingGeneric:
    type: object
    properties:
      title:
        type: string
        description: Text to show in the title.
      description:
        type: string
        description: Text to show in the description.
      image:
        type: string
        description: URL of an image.
      actions:
        description: Actions to be taken.
        $ref: '#/definitions/ContentActions'
      components:
        type: array
        description: An array of component objects.
        items:
          $ref: '#/definitions/ButtonComponent'
    description: Generic content object. (Deprecated
  WebMessagingMessage:
    type: object
    properties:
      id:
        type: string
        description: >-
          Unique ID of the message. This ID is generated by Messaging Platform.
          Message receipts will have the same ID as the message they reference.
      channel:
        description: >-
          Channel-specific information that describes the message and the
          message channel/provider.
        $ref: '#/definitions/WebMessagingChannel'
      type:
        type: string
        description: Message type.
        enum:
          - Text
          - Structured
          - Receipt
          - Event
      text:
        type: string
        description: Message text.
      content:
        type: array
        description: List of content elements.
        items:
          $ref: '#/definitions/WebMessagingContent'
      events:
        type: array
        description: List of event elements.
        items:
          $ref: '#/definitions/WebMessagingEvent'
      direction:
        type: string
        description: >-
          The direction of the message.  Direction is always from the
          perspective of the Genesys Cloud platform.  An Inbound message is one
          sent from a guest to the Genesys Cloud Platform.  An Outbound message
          is one sent from the Genesys Cloud Platform to a guest.
        enum:
          - Inbound
          - Outbound
      originatingEntity:
        type: string
        description: >-
          Specifies if this message was sent by a human agent or bot. The
          platform may use this to apply appropriate provider policies.
        enum:
          - Human
          - Bot
      metadata:
        type: object
        description: Additional metadata about this message.
        additionalProperties:
          type: string
    description: A web messaging message
  WebMessagingMessageEntityList:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WebMessagingMessage'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      pageCount:
        type: integer
        format: int32
  WebMessagingQuickReply:
    type: object
    required:
      - payload
      - text
    properties:
      text:
        type: string
        description: >-
          Text to show inside the quick reply. This is also used as the response
          text after clicking on the quick reply.
      payload:
        type: string
        description: >-
          Content of the payload included in the quick reply response. Could be
          an ID identifying the quick reply response.
      image:
        type: string
        description: URL of an image associated with the quick reply.
      action:
        type: string
        description: >-
          Specifies the type of action that is triggered upon clicking the quick
          reply.
        enum:
          - Message
    description: Quick reply object
  WebMessagingRecipient:
    type: object
    properties:
      firstName:
        type: string
        description: First name of the recipient.
        readOnly: true
      lastName:
        type: string
        description: Last name of the recipient.
        readOnly: true
      nickname:
        type: string
        description: Nickname or display name of the recipient.
        readOnly: true
      image:
        type: string
        description: URL of an image that represents the recipient.
        readOnly: true
      additionalIds:
        type: array
        description: List of recipient additional identifiers
        readOnly: true
        items:
          $ref: '#/definitions/RecipientAdditionalIdentifier'
    description: Information about the recipient the message is sent to or received from.
  CoachingAnnotation:
    type: object
    required:
      - text
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      createdBy:
        description: The user who created the annotation.
        readOnly: true
        $ref: '#/definitions/UserReference'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date/time the annotation was created. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        description: The last user to modify the annotation.
        readOnly: true
        $ref: '#/definitions/UserReference'
      dateModified:
        type: string
        format: date-time
        description: >-
          The date/time the annotation was last modified. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      text:
        type: string
        description: The text of the annotation.
      isDeleted:
        type: boolean
        description: Flag indicating whether the annotation is deleted.
        readOnly: true
      accessType:
        type: string
        description: Determines the permissions required to view this item.
        readOnly: true
        enum:
          - Public
          - Private
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CoachingAnnotationCreateRequest:
    type: object
    required:
      - accessType
      - text
    properties:
      text:
        type: string
        description: The text of the annotation.
      accessType:
        type: string
        description: Determines the permissions required to view this item.
        enum:
          - Public
          - Private
  CoachingAnnotationList:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CoachingAnnotation'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CoachingAppointmentResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of coaching appointment
        readOnly: true
      description:
        type: string
        description: The description of coaching appointment
        readOnly: true
      dateStart:
        type: string
        format: date-time
        description: >-
          The date/time the coaching appointment starts. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      lengthInMinutes:
        type: integer
        format: int32
        description: The duration of coaching appointment in minutes
        readOnly: true
      status:
        type: string
        description: The status of coaching appointment
        readOnly: true
        enum:
          - Scheduled
          - InProgress
          - Completed
          - InvalidSchedule
      facilitator:
        description: The facilitator of coaching appointment
        readOnly: true
        $ref: '#/definitions/UserReference'
      attendees:
        type: array
        description: The list of attendees attending the coaching
        readOnly: true
        uniqueItems: true
        items:
          $ref: '#/definitions/UserReference'
      createdBy:
        description: The user who created the coaching appointment
        readOnly: true
        $ref: '#/definitions/UserReference'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date/time the coaching appointment was created. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        description: The last user to modify the coaching appointment
        readOnly: true
        $ref: '#/definitions/UserReference'
      dateModified:
        type: string
        format: date-time
        description: >-
          The date/time the coaching appointment was last modified. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      conversations:
        type: array
        description: The list of conversations associated with coaching appointment.
        readOnly: true
        uniqueItems: true
        items:
          $ref: '#/definitions/ConversationReference'
      documents:
        type: array
        description: The list of documents associated with coaching appointment.
        readOnly: true
        uniqueItems: true
        items:
          $ref: '#/definitions/DocumentReference'
      isOverdue:
        type: boolean
        description: Whether the appointment is overdue.
        readOnly: true
      wfmSchedule:
        description: The Workforce Management schedule the appointment is associated with.
        readOnly: true
        $ref: '#/definitions/WfmScheduleReference'
      dateCompleted:
        type: string
        format: date-time
        description: >-
          The date/time the coaching appointment was set to completed status.
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      externalLinks:
        type: array
        description: The list of external links related to the appointment
        readOnly: true
        items:
          type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Coaching appointment response
  DocumentReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WfmBusinessUnitReference:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The ID of the business unit
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WfmScheduleReference:
    type: object
    required:
      - businessUnit
      - id
      - weekDate
    properties:
      id:
        type: string
        description: The ID of the WFM schedule
      businessUnit:
        description: A reference to a Workforce Management Business Unit
        $ref: '#/definitions/WfmBusinessUnitReference'
      weekDate:
        type: string
        format: date
        description: >-
          The start week date for this schedule. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  AddConversationResponse:
    type: object
    properties:
      conversation:
        description: The conversation reference
        readOnly: true
        $ref: '#/definitions/ConversationReference'
      appointment:
        description: The appointment reference
        readOnly: true
        $ref: '#/definitions/CoachingAppointmentReference'
  CoachingAppointmentReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  AddConversationRequest:
    type: object
    required:
      - conversationId
    properties:
      conversationId:
        type: string
        description: The id of the conversation to add
    description: Update coaching appointment request
  UpdateCoachingAppointmentRequest:
    type: object
    properties:
      name:
        type: string
        description: The name of coaching appointment.
      description:
        type: string
        description: The description of coaching appointment.
      dateStart:
        type: string
        format: date-time
        description: >-
          The date/time the coaching appointment starts. Times will be rounded
          down to the minute. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      lengthInMinutes:
        type: integer
        format: int32
        description: The duration of coaching appointment in minutes.
      conversationIds:
        type: array
        description: IDs of conversations associated with this coaching appointment.
        uniqueItems: true
        items:
          type: string
      documentIds:
        type: array
        description: IDs of documents associated with this coaching appointment.
        uniqueItems: true
        items:
          type: string
      status:
        type: string
        description: The status of the coaching appointment.
        enum:
          - Scheduled
          - InProgress
          - Completed
      wfmSchedule:
        description: The Workforce Management schedule the appointment is associated with.
        $ref: '#/definitions/WfmScheduleReference'
      externalLinks:
        type: array
        description: The list of external links related to the appointment
        items:
          type: string
    description: Update coaching appointment request
  CoachingAppointmentStatusResponse:
    type: object
    properties:
      appointment:
        description: The coaching appointment this status belongs to
        readOnly: true
        $ref: '#/definitions/CoachingAppointmentReference'
      createdBy:
        description: User who updated the status
        readOnly: true
        $ref: '#/definitions/UserReference'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Creation time of the status. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      status:
        type: string
        description: The status of the coaching appointment
        readOnly: true
        enum:
          - Scheduled
          - InProgress
          - Completed
          - InvalidSchedule
  CoachingAppointmentStatusResponseList:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CoachingAppointmentStatusResponse'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      pageCount:
        type: integer
        format: int32
  CoachingAppointmentStatusRequest:
    type: object
    required:
      - status
    properties:
      status:
        type: string
        description: The status of the coaching appointment
        enum:
          - Scheduled
          - InProgress
          - Completed
  CoachingAppointmentAggregateResponse:
    type: object
    properties:
      results:
        type: array
        description: The results of the query
        items:
          $ref: '#/definitions/QueryResponseGroupedData'
  QueryResponseData:
    type: object
    properties:
      interval:
        type: string
        description: >-
          Interval with start and end represented as ISO-8601 string. i.e:
          yyyy-MM-dd'T'HH:mm:ss.SSS'Z'/yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
      metrics:
        type: array
        description: A list of aggregated metrics
        items:
          $ref: '#/definitions/QueryResponseMetric'
  QueryResponseGroupedData:
    type: object
    properties:
      group:
        type: object
        description: The group values for this data
        additionalProperties:
          type: string
      data:
        type: array
        description: The metrics in this group
        items:
          $ref: '#/definitions/QueryResponseData'
  QueryResponseMetric:
    type: object
    properties:
      metric:
        type: string
        description: The metric this applies to
        enum:
          - nActivities
          - nPlannedActivities
          - nInProgressActivities
          - nCompleteActivities
          - nOverdueActivities
          - nInvalidScheduleActivities
      stats:
        description: The aggregated values for this metric
        $ref: '#/definitions/QueryResponseStats'
  QueryResponseStats:
    type: object
    properties:
      count:
        type: integer
        format: int32
        description: The count for this metric
  CoachingAppointmentAggregateRequest:
    type: object
    required:
      - filter
      - interval
    properties:
      interval:
        type: string
        description: >-
          Interval to aggregate across. End date is not inclusive. Intervals are
          represented as an ISO-8601 string. For example:
          YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      metrics:
        type: array
        description: A list of metrics to aggregate.  If omitted, all metrics are returned.
        items:
          type: string
          enum:
            - nActivities
            - nPlannedActivities
            - nInProgressActivities
            - nCompleteActivities
            - nOverdueActivities
            - nInvalidScheduleActivities
      groupBy:
        type: array
        description: An optional list of items by which to group the result data.
        items:
          type: string
          enum:
            - attendeeId
      filter:
        description: The filter applied to the data
        $ref: '#/definitions/QueryRequestFilter'
  QueryRequestClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: The logic used to combine the predicates
        enum:
          - And
          - Or
      predicates:
        type: array
        description: The list of predicates used to filter the data
        items:
          $ref: '#/definitions/QueryRequestPredicate'
  QueryRequestFilter:
    type: object
    required:
      - clauses
      - type
    properties:
      type:
        type: string
        description: The logic used to combine the clauses
        enum:
          - And
          - Or
      clauses:
        type: array
        description: The list of clauses used to filter the data
        items:
          $ref: '#/definitions/QueryRequestClause'
  QueryRequestPredicate:
    type: object
    required:
      - dimension
      - value
    properties:
      dimension:
        type: string
        description: The dimension to be filtered
        enum:
          - attendeeId
          - facilitatorId
          - status
      value:
        type: string
        description: The value to filter by
  CreateCoachingAppointmentRequest:
    type: object
    required:
      - attendeeIds
      - dateStart
      - description
      - lengthInMinutes
      - name
    properties:
      name:
        type: string
        description: The name of coaching appointment.
      description:
        type: string
        description: The description of coaching appointment.
      dateStart:
        type: string
        format: date-time
        description: >-
          The date/time the coaching appointment starts. Times will be rounded
          down to the minute. Date time is represented as an ISO-8601 string.
          For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      lengthInMinutes:
        type: integer
        format: int32
        description: The duration of coaching appointment in minutes.
      facilitatorId:
        type: string
        description: The facilitator ID of coaching appointment.
      attendeeIds:
        type: array
        description: IDs of attendees in the coaching appointment.
        uniqueItems: true
        items:
          type: string
      conversationIds:
        type: array
        description: IDs of conversations associated with this coaching appointment.
        uniqueItems: true
        items:
          type: string
      documentIds:
        type: array
        description: IDs of documents associated with this coaching appointment.
        uniqueItems: true
        items:
          type: string
      wfmSchedule:
        description: The Workforce Management schedule the appointment is associated with.
        $ref: '#/definitions/WfmScheduleReference'
      externalLinks:
        type: array
        description: The list of external links related to the appointment
        items:
          type: string
    description: Create coaching appointment request
  CoachingAppointmentResponseList:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CoachingAppointmentResponse'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  CoachingNotification:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of the appointment for this notification.
        readOnly: true
      markedAsRead:
        type: boolean
        description: Indicates if notification is read or unread
      actionType:
        type: string
        description: Action causing the notification.
        readOnly: true
        enum:
          - Create
          - Update
          - Delete
          - StatusChange
      relationship:
        type: string
        description: The relationship of this user to this notification's appointment
        readOnly: true
        enum:
          - Attendee
          - Creator
          - Facilitator
      dateStart:
        type: string
        format: date-time
        description: >-
          The start time of the appointment relating to this notification. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      lengthInMinutes:
        type: integer
        format: int32
        description: The duration of the appointment on this notification
        readOnly: true
      status:
        type: string
        description: The status of the appointment for this notification
        readOnly: true
        enum:
          - Scheduled
          - InProgress
          - Completed
          - InvalidSchedule
      user:
        description: The user of this notification
        readOnly: true
        $ref: '#/definitions/UserReference'
      appointment:
        description: The appointment
        readOnly: true
        $ref: '#/definitions/CoachingAppointmentResponse'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CoachingNotificationList:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/CoachingNotification'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  AvailableTime:
    type: object
    properties:
      dateStart:
        type: string
        format: date-time
        description: >-
          Start of the availability period. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      lengthInMinutes:
        type: integer
        format: int32
        description: Length of availability period in minutes
        readOnly: true
      isPaid:
        type: boolean
        description: >-
          Indicates if this availability period is paid in Workforce Management
          schedule
        readOnly: true
      activityCategory:
        type: string
        description: Workforce Management activity category for this availability period
        readOnly: true
        enum:
          - OnQueueWork
          - Break
          - Meal
          - Meeting
          - OffQueueWork
          - TimeOff
          - Training
          - Unavailable
      wfmSchedule:
        description: >-
          Workforce Management schedule information associated with the
          available time
        readOnly: true
        $ref: '#/definitions/WfmScheduleReference'
  CoachingSlot:
    type: object
    properties:
      dateStart:
        type: string
        format: date-time
        description: >-
          Start date and time of scheduled coaching appointment slot. Date time
          is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      lengthInMinutes:
        type: integer
        format: int32
        description: Length of coaching appointment slot in minutes
        readOnly: true
      staffingDifference:
        type: number
        format: double
        description: >-
          Difference between scheduled and forecast headcount for this slot
          after scheduling the coaching appointment
        readOnly: true
      differenceRating:
        type: string
        description: Rating based on the staffing difference for scheduled slot
        readOnly: true
        enum:
          - Poor
          - Neutral
          - Good
      wfmSchedule:
        description: Workforce Management schedule information associated with the slot
        readOnly: true
        $ref: '#/definitions/WfmScheduleReference'
  CoachingSlotsResponse:
    type: object
    properties:
      suggestedSlots:
        type: array
        description: List of slots where coaching appointment can be scheduled
        readOnly: true
        items:
          $ref: '#/definitions/CoachingSlot'
      attendeeSchedules:
        type: array
        description: Periods of availability for attendees to schedule coaching appointment
        readOnly: true
        items:
          $ref: '#/definitions/UserAvailableTimes'
      facilitatorSchedules:
        type: array
        description: >-
          Periods of availability for facilitators to schedule coaching
          appointment
        readOnly: true
        items:
          $ref: '#/definitions/UserAvailableTimes'
      wfmScheduleActivities:
        type: array
        description: Detailed data for WFM scheduled activities
        readOnly: true
        items:
          $ref: '#/definitions/WfmScheduleActivity'
  FullDayTimeOffMarker:
    type: object
    properties:
      businessUnitDate:
        type: string
        format: date
        description: >-
          The date of the time off marker, interpreted in the business unit's
          time zone. Dates are represented as an ISO-8601 string. For example:
          yyyy-MM-dd
      lengthMinutes:
        type: integer
        format: int32
        description: The length of the time off marker in minutes
      description:
        type: string
        description: The description of the time off marker
      activityCodeId:
        type: string
        description: The ID of the activity code associated with the time off marker
      paid:
        type: boolean
        description: Whether the time off marker is paid
      timeOffRequestId:
        type: string
        description: The ID of the time off request
  ScheduleActivity:
    type: object
    properties:
      dateStart:
        type: string
        format: date-time
        description: >-
          The start date/time of this activity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      lengthMinutes:
        type: integer
        format: int32
        description: The length of this activity in minutes
      description:
        type: string
        description: The description of this activity
      activityCodeId:
        type: string
        description: The ID of the activity code associated with this activity
      paid:
        type: boolean
        description: Whether this activity is paid
      timeOffRequestId:
        type: string
        description: >-
          The ID of the time off request associated with this activity, if
          applicable
      externalActivityId:
        type: string
        description: >-
          The ID of the external activity associated with this activity, if
          applicable
      externalActivityType:
        type: string
        description: >-
          The type of the external activity associated with this activity, if
          applicable
        enum:
          - Coaching
          - Learning
  UserAvailableTimes:
    type: object
    properties:
      user:
        description: User reference
        readOnly: true
        $ref: '#/definitions/UserReference'
      availableTimes:
        type: array
        description: Periods of availability to schedule coaching appointment for an user
        readOnly: true
        items:
          $ref: '#/definitions/AvailableTime'
  WfmScheduleActivity:
    type: object
    properties:
      userReference:
        description: ID of user that the schedule is for
        readOnly: true
        $ref: '#/definitions/UserReference'
      activities:
        type: array
        description: List of user's scheduled activities
        readOnly: true
        items:
          $ref: '#/definitions/ScheduleActivity'
      fullDayTimeOffMarkers:
        type: array
        description: List of user's days off
        readOnly: true
        items:
          $ref: '#/definitions/FullDayTimeOffMarker'
  CoachingSlotsRequest:
    type: object
    required:
      - attendeeIds
      - interval
      - lengthInMinutes
    properties:
      interval:
        type: string
        description: >-
          Range of time to get slots for scheduling coaching appointments.
          Intervals are represented as an ISO-8601 string. For example:
          YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      lengthInMinutes:
        type: integer
        format: int32
        description: >-
          The duration of coaching appointment to schedule in 15 minutes
          granularity up to maximum of 60 minutes
      attendeeIds:
        type: array
        description: List of attendees to determine coaching appointment slots
        uniqueItems: true
        items:
          type: string
      facilitatorIds:
        type: array
        description: List of facilitators to determine coaching appointment slots
        uniqueItems: true
        items:
          type: string
      interruptibleAppointmentIds:
        type: array
        description: >-
          List of appointment ids to exclude from consideration when determining
          blocked slots
        uniqueItems: true
        items:
          type: string
  DevelopmentActivity:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      dateCompleted:
        type: string
        format: date-time
        description: >-
          Date that activity was completed. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      createdBy:
        description: User that created activity
        readOnly: true
        $ref: '#/definitions/UserReference'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date activity was created. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      percentageScore:
        type: number
        format: float
        description: The user's percentage score for this activity
        readOnly: true
      isPassed:
        type: boolean
        description: True if the activity was passed
        readOnly: true
      isLatest:
        type: boolean
        description: True if this is the latest version of assignment assigned to the user
      isModuleArchived:
        type: boolean
        description: True if the associated module is archived
      archivalMode:
        type: string
        description: Module archive type
        enum:
          - Graceful
          - Immediate
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      name:
        type: string
        position: 2
        description: The name of the activity
      type:
        type: string
        position: 3
        description: The type of activity
        enum:
          - Informational
          - Coaching
          - AssessedContent
          - Assessment
          - External
      status:
        type: string
        position: 4
        description: The status of the activity
        enum:
          - Planned
          - InProgress
          - Completed
          - InvalidSchedule
          - NotCompleted
      dateDue:
        type: string
        format: date-time
        position: 5
        description: >-
          Due date for completion of the activity. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      facilitator:
        position: 6
        description: Facilitator of the activity
        $ref: '#/definitions/UserReference'
      attendees:
        type: array
        position: 7
        description: List of users attending the activity
        items:
          $ref: '#/definitions/UserReference'
      isOverdue:
        type: boolean
        position: 8
        description: Indicates if the activity is overdue
    description: Development Activity object
  DevelopmentActivityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/DevelopmentActivity'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  DevelopmentActivityAggregateQueryResponseData:
    type: object
    properties:
      interval:
        type: string
        description: >-
          Specifies the range of due dates to be used for filtering. A maximum
          of 1 year can be specified in the range. Intervals are represented as
          an ISO-8601 string. For example:
          YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      metrics:
        type: array
        description: The list of aggregated metrics
        items:
          $ref: '#/definitions/DevelopmentActivityAggregateQueryResponseMetric'
  DevelopmentActivityAggregateQueryResponseGroupedData:
    type: object
    properties:
      group:
        type: object
        description: The group values for this data
        additionalProperties:
          type: string
      data:
        type: array
        description: The metrics in this group
        items:
          $ref: '#/definitions/DevelopmentActivityAggregateQueryResponseData'
  DevelopmentActivityAggregateQueryResponseMetric:
    type: object
    properties:
      metric:
        type: string
        description: The metric this applies to
        enum:
          - nActivities
          - nPlannedActivities
          - nInProgressActivities
          - nCompleteActivities
          - nOverdueActivities
          - nInvalidScheduleActivities
          - nPassedActivities
          - nFailedActivities
          - oActivityScore
          - nNotCompletedActivities
      stats:
        description: The aggregated values for this metric
        $ref: '#/definitions/DevelopmentActivityAggregateQueryResponseStatistics'
  DevelopmentActivityAggregateQueryResponseStatistics:
    type: object
    properties:
      count:
        type: integer
        format: int32
        description: The count for this metric
      min:
        type: number
        description: The minimum value in this metric
      max:
        type: number
        description: The maximum value in this metric
      sum:
        type: number
        description: The total of the values for this metric
  DevelopmentActivityAggregateResponse:
    type: object
    properties:
      results:
        type: array
        description: The results of the query
        items:
          $ref: '#/definitions/DevelopmentActivityAggregateQueryResponseGroupedData'
  DevelopmentActivityAggregateParam:
    type: object
    required:
      - filter
      - interval
    properties:
      interval:
        type: string
        description: >-
          Specifies the range of due dates to be used for filtering.
          Milliseconds will be truncated. A maximum of 1 year can be specified
          in the range. End date is not inclusive. Intervals are represented as
          an ISO-8601 string. For example:
          YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      metrics:
        type: array
        description: >-
          The list of metrics to be returned. If omitted, all metrics are
          returned.
        items:
          type: string
          enum:
            - nActivities
            - nPlannedActivities
            - nInProgressActivities
            - nCompleteActivities
            - nOverdueActivities
            - nInvalidScheduleActivities
            - nPassedActivities
            - nFailedActivities
            - oActivityScore
            - nNotCompletedActivities
      groupBy:
        type: array
        description: >-
          Specifies if the aggregated data is combined into a single set of
          metrics (groupBy is empty or not specified), or contains an element
          per attendeeId (groupBy is "attendeeId")
        items:
          type: string
          enum:
            - attendeeId
      filter:
        description: >-
          The filter applied to the data. This is ANDed with the interval
          parameter.
        $ref: '#/definitions/DevelopmentActivityAggregateQueryRequestFilter'
  DevelopmentActivityAggregateQueryRequestClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: The logic used to combine the predicates
        enum:
          - And
          - Or
      predicates:
        type: array
        description: The list of predicates used to filter the data
        items:
          $ref: '#/definitions/DevelopmentActivityAggregateQueryRequestPredicate'
  DevelopmentActivityAggregateQueryRequestFilter:
    type: object
    required:
      - clauses
      - type
    properties:
      type:
        type: string
        description: The logic used to combine the clauses
        enum:
          - And
          - Or
      clauses:
        type: array
        description: >-
          The list of clauses used to filter the data. Note that clauses must
          filter by attendeeId and a maximum of 100 user IDs are allowed
        items:
          $ref: '#/definitions/DevelopmentActivityAggregateQueryRequestClause'
  DevelopmentActivityAggregateQueryRequestPredicate:
    type: object
    required:
      - dimension
      - value
    properties:
      dimension:
        type: string
        description: Each predicates specifies a dimension.
        enum:
          - attendeeId
          - type
          - moduleId
          - isPassed
      value:
        type: string
        description: >-
          Corresponding value for dimensions in predicates. If the dimension is
          type, Valid Values: Informational, AssessedContent, Assessment,
          Coaching
  AssessmentQuestionGroupScore:
    type: object
    required:
      - questionGroupId
    properties:
      questionGroupId:
        type: string
        description: The ID of the question group
      totalScore:
        type: number
        format: float
        description: The total score for the questions
        readOnly: true
      maxTotalScore:
        type: number
        format: float
        description: The maximum total score for the questions
        readOnly: true
      markedNA:
        type: boolean
        description: True if this question group is marked NA
      totalCriticalScore:
        type: number
        format: float
        description: The total score for the critical questions
        readOnly: true
      maxTotalCriticalScore:
        type: number
        format: float
        description: The maximum total score for the critical questions
        readOnly: true
      totalNonCriticalScore:
        type: number
        format: float
        description: The total score for the non-critical questions
        readOnly: true
      maxTotalNonCriticalScore:
        type: number
        format: float
        description: The maximum total score for the non-critical questions
        readOnly: true
      totalScoreUnweighted:
        type: number
        format: float
        description: The unweighted total score for this question group
        readOnly: true
      maxTotalScoreUnweighted:
        type: number
        format: float
        description: The maximum unweighted total score for this question group
        readOnly: true
      totalCriticalScoreUnweighted:
        type: number
        format: float
        description: The unweighted total score for the critical questions
        readOnly: true
      maxTotalCriticalScoreUnweighted:
        type: number
        format: float
        description: The maximum unweighted total score for the critical questions
        readOnly: true
      totalNonCriticalScoreUnweighted:
        type: number
        format: float
        description: The total unweighted score for the non-critical questions
        readOnly: true
      maxTotalNonCriticalScoreUnweighted:
        type: number
        format: float
        description: The maximum unweighted total score for the non-critical questions
        readOnly: true
      questionScores:
        type: array
        description: The individual question scores
        items:
          $ref: '#/definitions/AssessmentQuestionScore'
  AssessmentQuestionScore:
    type: object
    required:
      - questionId
    properties:
      failedKillQuestion:
        type: boolean
        description: True if this was a failed Kill question
        readOnly: true
      comments:
        type: string
        description: Comments provided for the answer
      questionId:
        type: string
        description: The ID of the question
      answerId:
        type: string
        description: The ID of the selected answer
      score:
        type: integer
        format: int32
        description: The score received for this question
        readOnly: true
      markedNA:
        type: boolean
        description: True if this question was marked as NA
      freeTextAnswer:
        type: string
        description: Answer for free text answer type
  AssessmentScoringSet:
    type: object
    required:
      - questionGroupScores
    properties:
      totalScore:
        type: number
        format: float
        description: The total score of the answers
        readOnly: true
      totalCriticalScore:
        type: number
        format: float
        description: The total score for the critical questions
        readOnly: true
      totalNonCriticalScore:
        type: number
        format: float
        description: The total score for the non-critical questions
        readOnly: true
      questionGroupScores:
        type: array
        description: The individual scores for each question group
        items:
          $ref: '#/definitions/AssessmentQuestionGroupScore'
      failureReasons:
        type: array
        description: If the assessment was not passed, the reasons for failure.
        readOnly: true
        uniqueItems: true
        items:
          type: string
          enum:
            - Score
            - CriticalScore
            - KillQuestion
      comments:
        type: string
        description: Comments provided for these answers.
      agentComments:
        type: string
        description: Comments provided by agent.
      isPassed:
        type: boolean
        description: True if the assessment was passed
        readOnly: true
  AssessmentForm:
    type: object
    required:
      - passPercent
      - questionGroups
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Last modified date of the assessment form. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      contextId:
        type: string
        description: The unique Id for all versions of this assessment form
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      published:
        type: boolean
        position: 2
        description: If true, assessment form is published
        readOnly: true
      passPercent:
        type: integer
        format: int32
        position: 3
        description: The pass percent for the assessment form
      questionGroups:
        type: array
        position: 4
        description: A list of question groups
        items:
          $ref: '#/definitions/AssessmentFormQuestionGroup'
  AssessmentFormQuestion:
    type: object
    required:
      - text
    properties:
      id:
        type: string
      type:
        type: string
        enum:
          - multipleChoiceQuestion
          - freeTextQuestion
          - npsQuestion
          - readOnlyTextBlockQuestion
      text:
        type: string
        description: The question text
      helpText:
        type: string
      naEnabled:
        type: boolean
      commentsRequired:
        type: boolean
      visibilityCondition:
        $ref: '#/definitions/VisibilityCondition'
      answerOptions:
        type: array
        description: >-
          Options from which to choose an answer for this question. Only used by
          Multiple Choice type questions.
        items:
          $ref: '#/definitions/AnswerOption'
      maxResponseCharacters:
        type: integer
        format: int32
        description: >-
          How many characters are allowed in the text response to this question.
          Used by Free Text question types.
      isKill:
        type: boolean
        description: >-
          Does an incorrect answer to this question mark the form as having a
          failed kill question. Only used by Multiple Choice type questions.
      isCritical:
        type: boolean
        description: >-
          Does this question contribute to the critical score. Only used by
          Multiple Choice type questions.
  AssessmentFormQuestionGroup:
    type: object
    required:
      - name
      - questions
      - type
    properties:
      id:
        type: string
        description: The ID of the question group,
      name:
        type: string
        description: The question group name
      type:
        type: string
        description: The question group type
      defaultAnswersToHighest:
        type: boolean
      defaultAnswersToNA:
        type: boolean
      naEnabled:
        type: boolean
      weight:
        type: number
        format: float
      manualWeight:
        type: boolean
      questions:
        type: array
        description: The list of questions for this question group
        items:
          $ref: '#/definitions/AssessmentFormQuestion'
      visibilityCondition:
        $ref: '#/definitions/VisibilityCondition'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LearningAssessmentScoringRequest:
    type: object
    required:
      - answers
      - assessmentForm
    properties:
      assessmentForm:
        position: 1
        description: The assessment form to score against
        $ref: '#/definitions/AssessmentForm'
      answers:
        position: 2
        description: The answers to score
        $ref: '#/definitions/AssessmentScoringSet'
  LearningAssignmentAggregateQueryResponseData:
    type: object
    properties:
      interval:
        type: string
        description: >-
          Specifies the range of due dates to be used for filtering. A maximum
          of 1 year can be specified in the range. Intervals are represented as
          an ISO-8601 string. For example:
          YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      metrics:
        type: array
        description: The list of aggregated metrics
        items:
          $ref: '#/definitions/LearningAssignmentAggregateQueryResponseMetric'
  LearningAssignmentAggregateQueryResponseGroupedData:
    type: object
    properties:
      group:
        type: object
        description: The group values for this data
        additionalProperties:
          type: string
      data:
        type: array
        description: The metrics in this group
        items:
          $ref: '#/definitions/LearningAssignmentAggregateQueryResponseData'
  LearningAssignmentAggregateQueryResponseMetric:
    type: object
    properties:
      metric:
        type: string
        description: The metric this applies to
        enum:
          - nActivities
          - nPlannedActivities
          - nInProgressActivities
          - nCompleteActivities
          - nOverdueActivities
          - nInvalidScheduleActivities
          - nPassedActivities
          - nFailedActivities
          - oActivityScore
          - nNotCompletedActivities
      stats:
        description: The aggregated values for this metric
        $ref: '#/definitions/LearningAssignmentAggregateQueryResponseStats'
  LearningAssignmentAggregateQueryResponseStats:
    type: object
    properties:
      count:
        type: integer
        format: int32
        description: The count for this metric
      min:
        type: number
        description: The minimum value in this metric
      max:
        type: number
        description: The maximum value in this metric
      sum:
        type: number
        description: The total of the values for this metric
  LearningAssignmentAggregateResponse:
    type: object
    properties:
      results:
        type: array
        description: The results of the query
        items:
          $ref: '#/definitions/LearningAssignmentAggregateQueryResponseGroupedData'
  LearningAssignmentAggregateParam:
    type: object
    required:
      - filter
      - interval
    properties:
      interval:
        type: string
        description: >-
          Specifies the range of due dates to be used for filtering.
          Milliseconds will be truncated. A maximum of 1 year can be specified
          in the range. End date is not inclusive. Intervals are represented as
          an ISO-8601 string. For example:
          YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      metrics:
        type: array
        description: >-
          The list of metrics to be returned. If omitted, all metrics are
          returned.
        items:
          type: string
          enum:
            - nActivities
            - nPlannedActivities
            - nInProgressActivities
            - nCompleteActivities
            - nOverdueActivities
            - nInvalidScheduleActivities
            - nPassedActivities
            - nFailedActivities
            - oActivityScore
            - nNotCompletedActivities
      groupBy:
        type: array
        description: >-
          Specifies if the aggregated data is combined into a single set of
          metrics (groupBy is empty or not specified), or contains an element
          per attendeeId (groupBy is "attendeeId")
        items:
          type: string
          enum:
            - attendeeId
      filter:
        description: >-
          The filter applied to the data.  This is ANDed with the interval
          parameter. 
        $ref: '#/definitions/LearningAssignmentAggregateQueryRequestFilter'
  LearningAssignmentAggregateQueryRequestClause:
    type: object
    required:
      - predicates
      - type
    properties:
      type:
        type: string
        description: The logic used to combine the predicates
        enum:
          - And
          - Or
      predicates:
        type: array
        description: The list of predicates used to filter the data
        items:
          $ref: '#/definitions/LearningAssignmentAggregateQueryRequestPredicate'
  LearningAssignmentAggregateQueryRequestFilter:
    type: object
    required:
      - clauses
      - type
    properties:
      type:
        type: string
        description: The logic used to combine the clauses
        enum:
          - And
          - Or
      clauses:
        type: array
        description: >-
          The list of clauses used to filter the data. Note that clauses must
          filter by attendeeId and a maximum of 100 user IDs are allowed
        items:
          $ref: '#/definitions/LearningAssignmentAggregateQueryRequestClause'
  LearningAssignmentAggregateQueryRequestPredicate:
    type: object
    required:
      - dimension
      - value
    properties:
      dimension:
        type: string
        description: Each predicates specifies a dimension.
        enum:
          - attendeeId
          - type
          - moduleId
          - isPassed
      value:
        type: string
        description: >-
          Corresponding value for dimensions in predicates. If the dimension is
          type, Valid Values: Informational, AssessedContent, Assessment
  LearningAssessment:
    type: object
    properties:
      assessmentId:
        type: string
        description: The Id of the assessment
        readOnly: true
      contextId:
        type: string
        description: The context Id of the related assessment form
        readOnly: true
      assessmentFormId:
        type: string
        description: The Id of the related assessment form
        readOnly: true
      status:
        type: string
        description: Status of the assessment
        readOnly: true
        enum:
          - Pending
          - InProgress
          - Finished
      answers:
        description: Answers for the assessment
        $ref: '#/definitions/AssessmentScoringSet'
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date the assessment was created. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Date the assessment was last updated. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateSubmitted:
        type: string
        format: date-time
        description: >-
          Date the assessment was submitted. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
  LearningAssignment:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      assessment:
        description: The assessment associated with this assignment
        $ref: '#/definitions/LearningAssessment'
      createdBy:
        description: The user who created the assignment
        readOnly: true
        $ref: '#/definitions/UserReference'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date when the assignment was created. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        description: The user who modified the assignment
        readOnly: true
        $ref: '#/definitions/UserReference'
      dateModified:
        type: string
        format: date-time
        description: >-
          The date when the assignment was last modified. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      isOverdue:
        type: boolean
        description: True if the assignment is overdue
        readOnly: true
      percentageScore:
        type: number
        format: float
        description: The user's percentage score for this assignment
        readOnly: true
      isRule:
        type: boolean
        description: True if this assignment was created by a Rule
        readOnly: true
      isManual:
        type: boolean
        description: True if this assignment was created manually
        readOnly: true
      isPassed:
        type: boolean
        description: True if the assessment was passed
        readOnly: true
      isLatest:
        type: boolean
        description: True if the assignment is based on latest module
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      state:
        type: string
        position: 2
        description: The Learning Assignment state
        enum:
          - Assigned
          - InProgress
          - Completed
          - Deleted
          - NotCompleted
          - InvalidSchedule
      dateRecommendedForCompletion:
        type: string
        format: date-time
        position: 3
        description: >-
          The recommended completion date of the assignment. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      version:
        type: integer
        format: int32
        position: 4
        description: The version of Learning module assigned
      module:
        position: 5
        description: The Learning module object associated with this assignment
        $ref: '#/definitions/LearningModule'
      user:
        position: 6
        description: The user to whom the assignment is assigned
        $ref: '#/definitions/UserReference'
      assessmentForm:
        position: 7
        description: The assessment form associated with this assignment
        $ref: '#/definitions/AssessmentForm'
    description: Learning module assignment with user information
  LearningCoverArtThumbnail:
    type: object
    properties:
      resolution:
        type: string
        position: 1
        description: Resolution of thumbnail
      url:
        type: string
        position: 2
        description: The URL for the thumbnail
  LearningModule:
    type: object
    required:
      - completionTimeInDays
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of learning module
      createdBy:
        description: The user who created learning module
        readOnly: true
        $ref: '#/definitions/UserReference'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date/time learning module was created. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        description: The user who modified learning module
        readOnly: true
        $ref: '#/definitions/UserReference'
      dateModified:
        type: string
        format: date-time
        description: >-
          The date/time learning module was modified. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: The version of published learning module
        readOnly: true
      externalId:
        type: string
        description: The external ID of the learning module
        readOnly: true
      source:
        type: string
        description: The source of the learning module
        readOnly: true
        enum:
          - UserCreated
          - GenesysBeyond
      rule:
        description: >-
          The rule for learning module; read-only, and only populated when
          requested via expand param.
        readOnly: true
        $ref: '#/definitions/LearningModuleRule'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      isArchived:
        type: boolean
        description: If true, learning module is archived
        readOnly: true
      isPublished:
        type: boolean
        description: If true, learning module is published
        readOnly: true
      description:
        type: string
        position: 1
        description: The description of learning module
      completionTimeInDays:
        type: integer
        format: int32
        position: 2
        description: The completion time of learning module in days
      type:
        type: string
        position: 3
        description: The type for the learning module
        enum:
          - Informational
          - AssessedContent
          - Assessment
          - External
      informSteps:
        type: array
        position: 5
        description: The list of inform steps in a learning module
        items:
          $ref: '#/definitions/LearningModuleInformStep'
      assessmentForm:
        position: 6
        description: The assessment form for learning module
        $ref: '#/definitions/AssessmentForm'
      summaryData:
        position: 7
        description: The learning module summary data
        $ref: '#/definitions/LearningModuleSummary'
      reassignSummaryData:
        position: 8
        description: The learning module reassign summary data
        $ref: '#/definitions/LearningModuleReassignSummary'
      coverArt:
        position: 9
        description: The cover art for the learning module
        $ref: '#/definitions/LearningModuleCoverArtResponse'
      archivalMode:
        type: string
        position: 11
        description: The mode of archival for learning module
        enum:
          - Graceful
          - Immediate
    description: Learning module response
  LearningModuleCoverArtResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      url:
        type: string
        position: 1
        description: The URL for the cover art
      thumbnails:
        type: array
        position: 2
        description: Thumbnails for the cover art
        items:
          $ref: '#/definitions/LearningCoverArtThumbnail'
    description: Learning module cover art response
  LearningModuleInformStep:
    type: object
    required:
      - order
      - type
      - value
    properties:
      type:
        type: string
        position: 1
        description: The learning module inform step type
        enum:
          - Url
          - Content
          - GenesysBuiltInCourse
          - RichText
          - Scorm
      name:
        type: string
        position: 2
        description: The name of the inform step or content
      value:
        type: string
        position: 3
        description: The value for inform step
      sharingUri:
        type: string
        position: 4
        description: The sharing uri for Content type inform step
      contentType:
        type: string
        position: 5
        description: The document type for Content type Inform step
      order:
        type: integer
        format: int32
        position: 6
        description: The order of inform step in a learning module
      displayName:
        type: string
        position: 7
        description: The display name for the inform step
      description:
        type: string
        position: 8
        description: The description for the inform step
  LearningModuleReassignSummary:
    type: object
    properties:
      totalReassigned:
        type: integer
        format: int32
        description: The total number of users for whom assignment is reassigned
      completedCount:
        type: integer
        format: int32
        description: The total number of users who have the assignment in Completed state
      inProgressCount:
        type: integer
        format: int32
        description: The total number of users who have the assignment in InProgress state
      assignedCount:
        type: integer
        format: int32
        description: The total number of users who have the assignment in Assigned state
      notCompletedCount:
        type: integer
        format: int32
        description: The total number of users who have their assignment overdue
    description: Learning module reassign summary data
  LearningModuleRule:
    type: object
    required:
      - isActive
      - parts
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      isActive:
        type: boolean
        description: If true, rule is active
      parts:
        type: array
        description: The parts of a learning module rule
        items:
          $ref: '#/definitions/LearningModuleRuleParts'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LearningModuleRuleParts:
    type: object
    required:
      - operation
      - order
      - selector
      - value
    properties:
      operation:
        type: string
        description: The learning module rule operation
        enum:
          - Include
          - Exclude
      selector:
        type: string
        description: The learning module rule selector
        enum:
          - AcdSkills
          - AgentName
          - Division
          - Group
          - Location
          - Queue
          - Role
          - Team
      value:
        type: array
        description: The value of rules
        items:
          type: string
      order:
        type: integer
        format: int32
        description: The order of rules in learning module rule
  LearningModuleSummary:
    type: object
    properties:
      assignedCount:
        type: integer
        format: int32
        description: The total number of assignments assigned for a learning module
      completedCount:
        type: integer
        format: int32
        description: The number of assignments completed for a learning module
      passedCount:
        type: integer
        format: int32
        description: The number of assignments passed for a learning module
      completedSum:
        type: number
        format: float
        description: The sum of assignment scores for a learning module
    description: Learning module summary data
  ReviewAssessmentResults:
    type: object
    properties: {}
  LearningAssignmentCreate:
    type: object
    required:
      - moduleId
      - userId
    properties:
      moduleId:
        type: string
        position: 1
        description: The Learning module Id associated with this assignment
      userId:
        type: string
        position: 2
        description: The User for whom the assignment is assigned
      recommendedCompletionDate:
        type: string
        format: date-time
        position: 3
        description: >-
          The recommended completion date of assignment. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  LearningAssignmentUpdate:
    type: object
    properties:
      state:
        type: string
        description: The Learning Assignment state
        enum:
          - Assigned
          - InProgress
          - Completed
          - Deleted
          - NotCompleted
          - InvalidSchedule
      assessment:
        description: An updated Assessment
        $ref: '#/definitions/LearningAssessment'
  LearningAssignmentReschedule:
    type: object
    required:
      - dateRecommendedForCompletion
    properties:
      dateRecommendedForCompletion:
        type: string
        format: date-time
        description: >-
          The recommended completion date of the assignment. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      lengthInMinutes:
        type: integer
        format: int32
        description: The length in minutes of the assignment
  LearningAssignmentsDomainEntity:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/LearningAssignment'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  LearningAssignmentReassign:
    type: object
    properties:
      recommendedCompletionDate:
        type: string
        format: date-time
        description: >-
          The recommended completion date of assignment. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      lengthInMinutes:
        type: integer
        format: int32
        description: The length in minutes of assignment
  DisallowedEntityLearningAssignmentItem:
    type: object
    properties:
      errorCode:
        type: string
        description: The error code associated with this disallowed entity
      entity:
        description: The entity that was disallowed
        $ref: '#/definitions/LearningAssignmentItem'
  LearningAssignmentBulkAddResponse:
    type: object
    properties:
      entities:
        type: array
        description: The learning assignments that were assigned correctly
        items:
          $ref: '#/definitions/LearningAssignment'
      disallowedEntities:
        type: array
        description: The items that were not allowed to be assigned
        items:
          $ref: '#/definitions/DisallowedEntityLearningAssignmentItem'
  LearningAssignmentItem:
    type: object
    required:
      - moduleId
      - userId
    properties:
      moduleId:
        type: string
        position: 1
        description: The Learning Module ID associated with this assignment
      userId:
        type: string
        position: 2
        description: The User ID associated with this assignment
  DisallowedEntityLearningAssignmentReference:
    type: object
    properties:
      errorCode:
        type: string
        description: The error code associated with this disallowed entity
      entity:
        description: The entity that was disallowed
        $ref: '#/definitions/LearningAssignmentReference'
  LearningAssignmentBulkRemoveResponse:
    type: object
    properties:
      entities:
        type: array
        description: The learning assignments that were removed successfully
        items:
          $ref: '#/definitions/LearningAssignmentEntity'
      disallowedEntities:
        type: array
        description: >-
          The learning assignments that were not removed due to missing
          permissions
        items:
          $ref: '#/definitions/DisallowedEntityLearningAssignmentReference'
  LearningAssignmentEntity:
    type: object
    properties:
      assignmentId:
        type: string
  LearningAssignmentReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LearningAssignmentUser:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  LearningAssignmentUserListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/LearningAssignmentUser'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
        description: The number of users matching search term
      unfilteredTotal:
        type: integer
        format: int32
        description: The total number of users
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
    description: List of users matching the learning module rule
  LearningAssignmentUserQuery:
    type: object
    required:
      - rule
    properties:
      rule:
        description: Learning module rule object
        $ref: '#/definitions/LearningModuleRule'
      searchTerm:
        type: string
        description: The user name to be searched for
    description: Learning module users query request model
  LearningModuleJobResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      status:
        type: string
        description: The status of learning module job
        enum:
          - Accepted
          - Running
          - Completed
          - Failed
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Learning module job response
  LearningModuleCoverArtRequest:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The key identifier for the cover art
  LearningModuleInformStepRequest:
    type: object
    required:
      - order
      - type
      - value
    properties:
      type:
        type: string
        position: 1
        description: The learning module inform step type
        enum:
          - Url
          - Content
          - GenesysBuiltInCourse
          - RichText
          - Scorm
      name:
        type: string
        position: 2
        description: The name of the inform step or content
      value:
        type: string
        position: 3
        description: The value for inform step
      sharingUri:
        type: string
        position: 4
        description: The sharing uri for Content type inform step
      contentType:
        type: string
        position: 5
        description: The document type for Content type Inform step
      order:
        type: integer
        format: int32
        position: 6
        description: The order of inform step in a learning module
      displayName:
        type: string
        position: 7
        description: The display name for the inform step
      description:
        type: string
        position: 8
        description: The description for the inform step
    description: Learning module inform steps request
  LearningModuleRequest:
    type: object
    required:
      - completionTimeInDays
      - name
    properties:
      name:
        type: string
        description: The name of learning module
      description:
        type: string
        description: The description of learning module
      completionTimeInDays:
        type: integer
        format: int32
        description: The completion time of learning module in days
      informSteps:
        type: array
        description: The list of inform steps in a learning module
        items:
          $ref: '#/definitions/LearningModuleInformStepRequest'
      type:
        type: string
        description: The type for the learning module
        enum:
          - Informational
          - AssessedContent
          - Assessment
          - External
      assessmentForm:
        description: The assessment form for learning module
        $ref: '#/definitions/AssessmentForm'
      coverArt:
        description: The cover art for the learning module
        $ref: '#/definitions/LearningModuleCoverArtRequest'
    description: Learning module request
  LearningModulesDomainEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/LearningModule'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  LearningModulePublishResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      version:
        type: integer
        format: int32
        description: The version of published learning module
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
    description: Learning module publish response
  LearningModuleJobRequest:
    type: object
    required:
      - action
    properties:
      action:
        type: string
        description: The type for the learning module job
        enum:
          - Reassign
          - GracefulArchive
          - ImmediateArchive
          - Unarchive
    description: Learning module job request
  AssignedLearningModule:
    type: object
    required:
      - completionTimeInDays
      - name
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of learning module
      createdBy:
        description: The user who created learning module
        readOnly: true
        $ref: '#/definitions/UserReference'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date/time learning module was created. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      modifiedBy:
        description: The user who modified learning module
        readOnly: true
        $ref: '#/definitions/UserReference'
      dateModified:
        type: string
        format: date-time
        description: >-
          The date/time learning module was modified. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      version:
        type: integer
        format: int32
        description: The version of published learning module
        readOnly: true
      externalId:
        type: string
        description: The external ID of the learning module
        readOnly: true
      source:
        type: string
        description: The source of the learning module
        readOnly: true
        enum:
          - UserCreated
          - GenesysBeyond
      rule:
        description: >-
          The rule for learning module; read-only, and only populated when
          requested via expand param.
        readOnly: true
        $ref: '#/definitions/LearningModuleRule'
      currentAssignments:
        type: array
        description: The current assignments for the requested users
        items:
          $ref: '#/definitions/LearningAssignment'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      isArchived:
        type: boolean
        description: If true, learning module is archived
        readOnly: true
      isPublished:
        type: boolean
        description: If true, learning module is published
        readOnly: true
      description:
        type: string
        position: 1
        description: The description of learning module
      completionTimeInDays:
        type: integer
        format: int32
        position: 2
        description: The completion time of learning module in days
      type:
        type: string
        position: 3
        description: The type for the learning module
        enum:
          - Informational
          - AssessedContent
          - Assessment
          - External
      informSteps:
        type: array
        position: 5
        description: The list of inform steps in a learning module
        items:
          $ref: '#/definitions/LearningModuleInformStep'
      assessmentForm:
        position: 6
        description: The assessment form for learning module
        $ref: '#/definitions/AssessmentForm'
      summaryData:
        position: 7
        description: The learning module summary data
        $ref: '#/definitions/LearningModuleSummary'
      reassignSummaryData:
        position: 8
        description: The learning module reassign summary data
        $ref: '#/definitions/LearningModuleReassignSummary'
      coverArt:
        position: 9
        description: The cover art for the learning module
        $ref: '#/definitions/LearningModuleCoverArtResponse'
      archivalMode:
        type: string
        position: 11
        description: The mode of archival for learning module
        enum:
          - Graceful
          - Immediate
    description: Learning module response
  AssignedLearningModuleDomainEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/AssignedLearningModule'
      pageSize:
        type: integer
        format: int32
      pageNumber:
        type: integer
        format: int32
      total:
        type: integer
        format: int64
      firstUri:
        type: string
        format: uri
      nextUri:
        type: string
        format: uri
      previousUri:
        type: string
        format: uri
      lastUri:
        type: string
        format: uri
      selfUri:
        type: string
        format: uri
      pageCount:
        type: integer
        format: int32
  LearningScheduleSlotsQueryResponse:
    type: object
    properties:
      suggestedSlots:
        type: array
        description: List of slots where Learning activity can be scheduled
        items:
          $ref: '#/definitions/LearningSlot'
      wfmScheduleActivities:
        type: array
        description: Detailed data for WFM scheduled activities
        items:
          $ref: '#/definitions/LearningSlotWfmScheduleActivity'
  LearningSlot:
    type: object
    properties:
      dateStart:
        type: string
        format: date-time
        description: >-
          Start date and time of scheduled Learning activity slot. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      lengthInMinutes:
        type: integer
        format: int32
        description: Length of Learning activity slot in minutes
      staffingDifference:
        type: number
        format: double
        description: >-
          Difference between scheduled and forecast headcount for this slot
          after scheduling the Learning activity
      differenceRating:
        type: string
        description: Rating based on the staffing difference for scheduled slot
        enum:
          - Poor
          - Neutral
          - Good
  LearningSlotFullDayTimeOffMarker:
    type: object
    properties:
      businessUnitDate:
        type: string
        format: date
        description: >-
          The date of the time off marker, interpreted in the business unit's
          time zone. Dates are represented as an ISO-8601 string. For example:
          yyyy-MM-dd
      lengthMinutes:
        type: integer
        format: int32
        description: The length of the time off marker in minutes
      description:
        type: string
        description: The description of the time off marker
      activityCodeId:
        type: string
        description: The ID of the activity code associated with the time off marker
      paid:
        type: boolean
        description: Whether the time off marker is paid
      timeOffRequestId:
        type: string
        description: The ID of the time off request
  LearningSlotScheduleActivity:
    type: object
    properties:
      dateStart:
        type: string
        format: date-time
        description: >-
          The start date/time of this activity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      lengthMinutes:
        type: integer
        format: int32
        description: The length of this activity in minutes
      description:
        type: string
        description: The description of this activity
      activityCodeId:
        type: string
        description: The ID of the activity code associated with this activity
      paid:
        type: boolean
        description: Whether this activity is paid
      timeOffRequestId:
        type: string
        description: >-
          The ID of the time off request associated with this activity, if
          applicable
      externalActivityId:
        type: string
        description: >-
          The ID of the external activity associated with this activity, if
          applicable
      externalActivityType:
        type: string
        description: >-
          The type of the external activity associated with this activity, if
          applicable
        enum:
          - Coaching
          - Learning
  LearningSlotWfmScheduleActivity:
    type: object
    properties:
      user:
        description: User that the schedule is for
        $ref: '#/definitions/UserReference'
      activities:
        type: array
        description: List of user's scheduled activities
        items:
          $ref: '#/definitions/LearningSlotScheduleActivity'
      fullDayTimeOffMarkers:
        type: array
        description: List of user's days off
        items:
          $ref: '#/definitions/LearningSlotFullDayTimeOffMarker'
  LearningScheduleSlotsQueryRequest:
    type: object
    required:
      - interval
      - lengthInMinutes
      - userIds
    properties:
      interval:
        type: string
        description: >-
          Range of time to get slots for scheduling learning activities.
          Intervals are represented as an ISO-8601 string. For example:
          YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      lengthInMinutes:
        type: integer
        format: int32
        description: >-
          The duration of coaching appointment to schedule in 15 minutes
          granularity
      userIds:
        type: array
        description: The user IDs for which to fetch schedules. Must be only 1.
        items:
          type: string
      interruptibleAssignmentId:
        type: string
        description: >-
          Assignment ID to exclude from consideration when determining blocked
          slots
  WidgetClientConfig:
    type: object
    properties:
      v1:
        $ref: '#/definitions/WidgetClientConfigV1'
      v2:
        $ref: '#/definitions/WidgetClientConfigV2'
      v1-http:
        $ref: '#/definitions/WidgetClientConfigV1Http'
      third-party:
        $ref: '#/definitions/WidgetClientConfigThirdParty'
  WidgetClientConfigThirdParty:
    type: object
  WidgetClientConfigV1:
    type: object
    properties:
      webChatSkin:
        type: string
        enum:
          - basic
          - modern-caret-skin
      authenticationUrl:
        type: string
        format: uri
  WidgetClientConfigV1Http:
    type: object
    properties:
      webChatSkin:
        type: string
        enum:
          - basic
          - modern-caret-skin
      authenticationUrl:
        type: string
        format: uri
  WidgetClientConfigV2:
    type: object
  WidgetDeployment:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      description:
        type: string
        description: A human-readable description of this Deployment.
      authenticationRequired:
        type: boolean
        description: >-
          When true, the customer members starting a chat must be authenticated
          by supplying their JWT to the create operation.
      disabled:
        type: boolean
        description: >-
          When true, all create chat operations using this Deployment will be
          rejected.
      flow:
        description: >-
          The URI of the Inbound Chat Flow to run when new chats are initiated
          under this Deployment.
        $ref: '#/definitions/DomainEntityRef'
      allowedDomains:
        type: array
        description: >-
          The list of domains that are approved to use this Deployment; the list
          will be added to CORS headers for ease of web use.
        items:
          type: string
      clientType:
        type: string
        description: >-
          The type of display widget for which this Deployment is configured,
          which controls the administrator settings shown.
        enum:
          - v1
          - v2
          - v1-http
          - third-party
      clientConfig:
        description: >-
          The client configuration options that should be made available to the
          clients of this Deployment.
        $ref: '#/definitions/WidgetClientConfig'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WidgetDeploymentEntityListing:
    type: object
    properties:
      total:
        type: integer
        format: int64
      entities:
        type: array
        items:
          $ref: '#/definitions/WidgetDeployment'
      selfUri:
        type: string
        format: uri
  ActivityCode:
    type: object
    required:
      - metadata
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      name:
        type: string
        description: >-
          The name of the activity code. Default activity codes will be created
          with an empty name
      isActive:
        type: boolean
        description: Whether this activity code is active or has been deleted
      isDefault:
        type: boolean
        description: Whether this is a default activity code
      category:
        type: string
        description: The activity code's category.
        enum:
          - OnQueueWork
          - Break
          - Meal
          - Meeting
          - OffQueueWork
          - TimeOff
          - Training
          - Unavailable
          - Unscheduled
      lengthInMinutes:
        type: integer
        format: int32
        description: The default length of the activity in minutes
      countsAsPaidTime:
        type: boolean
        description: Whether an agent is paid while performing this activity
      countsAsWorkTime:
        type: boolean
        description: >-
          Indicates whether or not the activity should be counted as contiguous
          work time for calculating daily constraints
      agentTimeOffSelectable:
        type: boolean
        description: >-
          Whether an agent can select this activity code when creating or
          editing a time off request. Null if the activity's category is not
          time off.
      metadata:
        description: >-
          Version metadata for the associated management unit's list of activity
          codes
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  ActivityCodeContainer:
    type: object
    required:
      - metadata
    properties:
      activityCodes:
        type: object
        description: Map of activity code id to activity code
        additionalProperties:
          $ref: '#/definitions/ActivityCode'
      metadata:
        description: >-
          Version metadata for the associated management unit's list of activity
          codes
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  WfmVersionedEntityMetadata:
    type: object
    required:
      - version
    properties:
      version:
        type: integer
        format: int32
        description: >-
          The version of the associated entity.  Used to prevent conflicts on
          concurrent edits
      modifiedBy:
        description: The user who last modified the associated entity
        readOnly: true
        $ref: '#/definitions/UserReference'
      dateModified:
        type: string
        format: date-time
        description: >-
          The date the associated entity was last modified. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      createdBy:
        description: The user who created the associated entity, if available
        readOnly: true
        $ref: '#/definitions/UserReference'
      dateCreated:
        type: string
        format: date-time
        description: >-
          The date the associated entity was created, if available. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
  BusinessUnitActivityCode:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      active:
        type: boolean
        description: Whether this activity code is active or has been deleted
      defaultCode:
        type: boolean
        description: Whether this is a default activity code
      category:
        type: string
        description: The category of the activity code
        enum:
          - OnQueueWork
          - Break
          - Meal
          - Meeting
          - OffQueueWork
          - TimeOff
          - Training
          - Unavailable
          - Unscheduled
      lengthInMinutes:
        type: integer
        format: int32
        description: The default length of the activity in minutes
      countsAsPaidTime:
        type: boolean
        description: Whether an agent is paid while performing this activity
      countsAsWorkTime:
        type: boolean
        description: >-
          Indicates whether or not the activity should be counted as contiguous
          work time for calculating daily constraints
      agentTimeOffSelectable:
        type: boolean
        description: >-
          Whether an agent can select this activity code when creating or
          editing a time off request. Null if the activity's category is not
          time off.
      countsTowardShrinkage:
        type: boolean
        description: Whether or not this activity code counts toward shrinkage calculations
      plannedShrinkage:
        type: boolean
        description: >-
          Whether this activity code is considered planned or unplanned
          shrinkage
      interruptible:
        type: boolean
        description: Whether this activity code is considered interruptible
      secondaryPresences:
        type: array
        description: The secondary presences of this activity code
        items:
          $ref: '#/definitions/SecondaryPresence'
      metadata:
        description: Version metadata of this activity code
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BusinessUnitActivityCodeListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/BusinessUnitActivityCode'
  SecondaryPresence:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CreateActivityCodeRequest:
    type: object
    required:
      - category
      - name
    properties:
      name:
        type: string
        description: The name of the activity code
      category:
        type: string
        description: The activity code's category
        enum:
          - OnQueueWork
          - Break
          - Meal
          - Meeting
          - OffQueueWork
          - TimeOff
          - Training
          - Unavailable
          - Unscheduled
      lengthInMinutes:
        type: integer
        format: int32
        description: The default length of the activity in minutes
      countsAsPaidTime:
        type: boolean
        description: Whether an agent is paid while performing this activity
      countsAsWorkTime:
        type: boolean
        description: Indicates whether or not the activity should be counted as work time
      agentTimeOffSelectable:
        type: boolean
        description: >-
          Whether an agent can select this activity code when creating or
          editing a time off request
      countsTowardShrinkage:
        type: boolean
        description: Whether or not this activity code counts toward shrinkage calculations
      plannedShrinkage:
        type: boolean
        description: >-
          Whether this activity code is considered planned or unplanned
          shrinkage
      interruptible:
        type: boolean
        description: Whether this activity code is considered interruptible
      secondaryPresences:
        type: array
        description: The secondary presences of this activity code
        items:
          $ref: '#/definitions/SecondaryPresence'
  ListWrapperSecondaryPresence:
    type: object
    properties:
      values:
        type: array
        items:
          $ref: '#/definitions/SecondaryPresence'
  UpdateActivityCodeRequest:
    type: object
    required:
      - metadata
    properties:
      name:
        type: string
        description: The name of the activity code
      category:
        type: string
        description: >-
          The activity code's category. Attempting to change the category of a
          default activity code will return an error
        enum:
          - OnQueueWork
          - Break
          - Meal
          - Meeting
          - OffQueueWork
          - TimeOff
          - Training
          - Unavailable
          - Unscheduled
      lengthInMinutes:
        type: integer
        format: int32
        description: The default length of the activity in minutes
      countsAsPaidTime:
        type: boolean
        description: Whether an agent is paid while performing this activity
      countsAsWorkTime:
        type: boolean
        description: Indicates whether or not the activity should be counted as work time
      agentTimeOffSelectable:
        type: boolean
        description: >-
          Whether an agent can select this activity code when creating or
          editing a time off request
      countsTowardShrinkage:
        type: boolean
        description: Whether or not this activity code counts toward shrinkage calculations
      plannedShrinkage:
        type: boolean
        description: >-
          Whether this activity code is considered planned or unplanned
          shrinkage
      interruptible:
        type: boolean
        description: Whether this activity code is considered interruptible
      secondaryPresences:
        description: The secondary presences of this activity code
        $ref: '#/definitions/ListWrapperSecondaryPresence'
      metadata:
        description: >-
          Version metadata for the associated business unit's list of activity
          codes
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  ForecastAbandonRateResponse:
    type: object
    properties:
      percent:
        type: integer
        format: int32
        description: The target percent abandon rate goal
  ForecastAverageSpeedOfAnswerResponse:
    type: object
    properties:
      seconds:
        type: integer
        format: int32
        description: the average speed of answer goal in seconds
  ForecastPlanningGroupResponse:
    type: object
    properties:
      id:
        type: string
        description: The ID of the planning group
      name:
        type: string
        description: The name of the planning group
      routePaths:
        type: array
        description: Route path configuration for this planning group
        items:
          $ref: '#/definitions/RoutePathResponse'
      serviceGoalTemplate:
        description: Service goals for this planning group
        $ref: '#/definitions/ForecastServiceGoalTemplateResponse'
  ForecastServiceGoalTemplateImpactOverrideResponse:
    type: object
    properties:
      serviceLevel:
        description: >-
          Allowed service level percent increase and decrease; undefined if the
          goal is not enabled
        $ref: '#/definitions/WfmServiceGoalImpact'
      averageSpeedOfAnswer:
        description: >-
          Allowed average speed of answer percent increase and decrease;
          undefined if the goal is not enabled
        $ref: '#/definitions/WfmServiceGoalImpact'
      abandonRate:
        description: >-
          Allowed abandon rate percent increase and decrease; undefined if the
          goal is not enabled
        $ref: '#/definitions/WfmServiceGoalImpact'
  ForecastServiceGoalTemplateResponse:
    type: object
    properties:
      serviceLevel:
        description: The service level goal for this forecast
        $ref: '#/definitions/ForecastServiceLevelResponse'
      averageSpeedOfAnswer:
        description: The average speed of answer goal for this forecast
        $ref: '#/definitions/ForecastAverageSpeedOfAnswerResponse'
      abandonRate:
        description: The abandon rate goal for this forecast
        $ref: '#/definitions/ForecastAbandonRateResponse'
  ForecastServiceLevelResponse:
    type: object
    properties:
      percent:
        type: integer
        format: int32
        description: The percent of calls to answer in the number of seconds defined
      seconds:
        type: integer
        format: int32
        description: >-
          The number of seconds to define for the percent of calls to be
          answered
  LanguageReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  RoutePathResponse:
    type: object
    properties:
      queue:
        description: The ID of the queue associated with the route path
        $ref: '#/definitions/QueueReference'
      mediaType:
        type: string
        description: The media type of the given queue associated with the route path
        enum:
          - Voice
          - Chat
          - Email
          - Callback
          - Message
      language:
        description: The ID of the language associated with the route path
        $ref: '#/definitions/LanguageReference'
      skills:
        type: array
        description: The set of skills associated with the route path
        uniqueItems: true
        items:
          $ref: '#/definitions/RoutingSkillReference'
  RoutingSkillReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WfmIntradayPlanningGroupListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ForecastPlanningGroupResponse'
      noDataReason:
        type: string
        description: The reason there was no data for the request
        enum:
          - NoPublishedSchedule
          - NoSourceForecast
  WfmServiceGoalImpact:
    type: object
    required:
      - decreaseByPercent
      - increaseByPercent
    properties:
      increaseByPercent:
        type: number
        format: double
        description: The maximum allowed percent increase from the configured goal
      decreaseByPercent:
        type: number
        format: double
        description: The maximum allowed percent decrease from the configured goal
  AsyncIntradayResponse:
    type: object
    properties:
      status:
        type: string
        description: The status of the operation
        enum:
          - Processing
          - Complete
          - Canceled
          - Error
      operationId:
        type: string
        description: The ID for the operation
      result:
        description: The result of the operation.  Null unless status == Complete
        $ref: '#/definitions/BuIntradayResponse'
  BuIntradayDataGroup:
    type: object
    properties:
      mediaType:
        type: string
        description: The media type associated with this intraday group
        enum:
          - Voice
          - Chat
          - Email
          - Callback
          - Message
      forecastDataSummary:
        description: Forecast data summary for this date range
        $ref: '#/definitions/BuIntradayForecastData'
      forecastDataPerInterval:
        type: array
        description: Forecast data per interval for this date range
        items:
          $ref: '#/definitions/BuIntradayForecastData'
      scheduleDataSummary:
        description: Schedule data summary for this date range
        $ref: '#/definitions/BuIntradayScheduleData'
      scheduleDataPerInterval:
        type: array
        description: Schedule data per interval for this date range
        items:
          $ref: '#/definitions/BuIntradayScheduleData'
      performancePredictionDataSummary:
        description: Performance prediction data summary for this date range
        $ref: '#/definitions/IntradayPerformancePredictionData'
      performancePredictionDataPerInterval:
        type: array
        description: Performance prediction data per interval for this date range
        items:
          $ref: '#/definitions/IntradayPerformancePredictionData'
  BuIntradayForecastData:
    type: object
    properties:
      offered:
        type: number
        format: double
        description: >-
          The number of interactions routed into the queues in the selected
          planning groups for the given media type for an agent to answer
      averageHandleTimeSeconds:
        type: number
        format: double
        description: >-
          The average handle time in seconds an agent spent handling
          interactions
  BuIntradayResponse:
    type: object
    properties:
      startDate:
        type: string
        format: date-time
        description: >-
          The start of the date range for which this data applies.  This is also
          the start reference point for the intervals represented in the various
          arrays. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endDate:
        type: string
        format: date-time
        description: >-
          The end of the date range for which this data applies. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      intervalLengthMinutes:
        type: integer
        format: int32
        description: >-
          The aggregation period in minutes, which determines the interval
          duration of the returned data
      noDataReason:
        type: string
        description: If not null, the reason there was no data for the request
        enum:
          - NoPublishedSchedule
          - NoSourceForecast
      categories:
        type: array
        description: The categories to which this data corresponds
        items:
          type: string
          enum:
            - ForecastData
            - ScheduleData
            - PerformancePredictionData
      shortTermForecast:
        description: Short term forecast reference
        $ref: '#/definitions/BuShortTermForecastReference'
      schedule:
        description: Schedule reference
        $ref: '#/definitions/BuScheduleReference'
      intradayDataGroupings:
        type: array
        description: >-
          Intraday data grouped by a single media type and set of planning group
          IDs
        items:
          $ref: '#/definitions/BuIntradayDataGroup'
  BuIntradayScheduleData:
    type: object
    properties:
      onQueueTimeSeconds:
        type: integer
        format: int64
        description: The total on-queue time in seconds for all agents in this group
  BuScheduleReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      weekDate:
        type: string
        format: date
        description: >-
          The start week date for this schedule. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BuShortTermForecastReference:
    type: object
    required:
      - weekDate
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      weekDate:
        type: string
        format: date
        description: >-
          The weekDate of the short term forecast in yyyy-MM-dd format. Dates
          are represented as an ISO-8601 string. For example: yyyy-MM-dd
      description:
        type: string
        description: The description of the short term forecast
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  IntradayPerformancePredictionData:
    type: object
    properties:
      serviceLevelPercent:
        type: number
        format: double
        description: >-
          Percentage of interactions that meets service level target as defined
          in the matching service goal templates
      averageSpeedOfAnswerSeconds:
        type: number
        format: double
        description: >-
          Predicted average time in seconds it takes to answer an interaction
          once the interaction becomes available to be routed
      occupancyPercent:
        type: number
        format: double
        description: >-
          Percentage of on-queue time for all agents in this group that are
          occupied handling interactions
  IntradayPlanningGroupRequest:
    type: object
    required:
      - businessUnitDate
      - categories
    properties:
      businessUnitDate:
        type: string
        format: date
        description: >-
          Requested date in yyyy-MM-dd format. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      categories:
        type: array
        description: The metric categories
        items:
          type: string
          enum:
            - ForecastData
            - ScheduleData
            - PerformancePredictionData
      planningGroupIds:
        type: array
        description: >-
          The IDs of the planning groups for which to fetch data.  Omitting or
          passing an empty list will return all available planning groups
        items:
          type: string
      intervalLengthMinutes:
        type: integer
        format: int32
        description: >-
          The period/interval in minutes for which to aggregate the data.
          Required, defaults to 15
  BuImportShortTermForecastSchema:
    type: object
    required:
      - description
      - planningGroups
      - weekCount
    properties:
      description:
        type: string
        description: The description for the forecast
      weekCount:
        type: integer
        format: int32
        description: The number of weeks covered by the forecast
      planningGroups:
        type: array
        description: The short term planning group data
        items:
          $ref: '#/definitions/ForecastPlanningGroupData'
      longTermPlanningGroups:
        type: array
        description: The long term planning group data
        items:
          $ref: '#/definitions/LongTermForecastPlanningGroupData'
      canUseForScheduling:
        type: boolean
        description: Whether this forecast can be used for scheduling
  ForecastPlanningGroupData:
    type: object
    required:
      - averageHandleTimeSecondsPerInterval
      - offeredPerInterval
      - planningGroupId
    properties:
      planningGroupId:
        type: string
        description: >-
          The ID of the planning group to which this data applies. Note this is
          a snapshot of the planning group at the time of forecast creation and
          may not correspond to the current configuration
      offeredPerInterval:
        type: array
        description: >-
          Forecast offered counts per 15 minute interval for this week of the
          forecast
        items:
          type: number
          format: double
      averageHandleTimeSecondsPerInterval:
        type: array
        description: Forecast average handle time per 15 minute interval in seconds
        items:
          type: number
          format: double
  ImportForecastUploadResponse:
    type: object
    properties:
      uploadKey:
        type: string
        description: >-
          The key to pass to the secondary request to start processing of the
          upload
      url:
        type: string
        description: The url to which to PUT the upload body
      headers:
        type: object
        description: Required headers for the PUT request to the url
        additionalProperties:
          type: string
      uploadBodySchema:
        description: >-
          Always null. Defines the schema of the json body to be PUT to the url.
          The json body should be gzip encoded before uploading
        $ref: '#/definitions/BuImportShortTermForecastSchema'
  LongTermForecastPlanningGroupData:
    type: object
    required:
      - averageHandleTimeSecondsPerDay
      - offeredPerDay
      - planningGroupId
    properties:
      planningGroupId:
        type: string
        description: >-
          The ID of the planning group to which this data applies. Note this is
          a snapshot of the planning group at the time of forecast creation and
          may not correspond to the current configuration
      offeredPerDay:
        type: array
        description: Forecast offered counts per day for this planning group
        items:
          type: number
          format: double
      averageHandleTimeSecondsPerDay:
        type: array
        description: Forecast average handle time per day in seconds
        items:
          type: number
          format: double
  UploadUrlRequestBody:
    type: object
    required:
      - contentLengthBytes
    properties:
      contentLengthBytes:
        type: integer
        format: int64
        description: >-
          The expected content length (in bytes) of the gzip-encoded data that
          will be PUT to the returned signed URL
  BuForecastGenerationPlanningGroupResult:
    type: object
    properties:
      planningGroupId:
        type: string
        description: The ID of the planning group
      metricResults:
        type: array
        description: The generation results for the associated planning group
        items:
          $ref: '#/definitions/BuForecastTimeSeriesResult'
  BuForecastGenerationResult:
    type: object
    properties:
      planningGroupResults:
        type: array
        description: Generation results, broken down by planning group
        items:
          $ref: '#/definitions/BuForecastGenerationPlanningGroupResult'
  BuForecastModificationResponse:
    type: object
    required:
      - displayGranularity
      - enabled
      - granularity
      - metric
      - planningGroupIds
      - type
      - values
    properties:
      type:
        type: string
        description: The type of the modification
        enum:
          - MinimumPerInterval
          - MaximumPerInterval
          - SetValuePerInterval
          - ChangeValuePerInterval
          - ChangePercentPerInterval
          - SetValueOverRange
          - ChangeValueOverRange
          - SetValuesForIntervalSet
          - SetMultiGranularityValuesForIntervalSet
      startIntervalIndex:
        type: integer
        format: int32
        description: >-
          The number of intervals past referenceStartDate representing the first
          interval to which this modification applies
      endIntervalIndex:
        type: integer
        format: int32
        description: >-
          The number of intervals past referenceStartDate representing the last
          interval to which this modification applies
      metric:
        type: string
        description: The metric to which this modification applies
        enum:
          - Offered
          - AverageHandleTimeSeconds
      legacyMetric:
        type: string
        description: The legacy metric to which this modification applies if applicable
        enum:
          - AverageAfterCallWorkTimeSeconds
          - AverageHandleTimeSeconds
          - AverageTalkTimeSeconds
          - Offered
      value:
        type: number
        format: double
        description: The value of the modification
      values:
        type: array
        description: >-
          The list of modification values. Only applicable for grid-type
          modifications
        items:
          $ref: '#/definitions/WfmForecastModificationIntervalOffsetValue'
      displayGranularity:
        type: string
        description: >-
          The client side display granularity of the modification, expressed in
          the ISO-8601 duration format. Periods are represented as an ISO-8601
          string. For example: P1D or P1DT12H
      granularity:
        type: string
        description: >-
          The actual granularity of the modification as stored behind the
          scenes, expressed in the ISO-8601 duration format. Periods are
          represented as an ISO-8601 string. For example: P1D or P1DT12H
      enabled:
        type: boolean
        description: Whether the modification is enabled for the forecast
      planningGroupIds:
        type: array
        description: >-
          The IDs of the planning groups to which this forecast modification
          applies
        uniqueItems: true
        items:
          type: string
  BuForecastTimeSeriesResult:
    type: object
    properties:
      metric:
        type: string
        description: The metric this result applies to
        enum:
          - Offered
          - AverageHandleTimeSeconds
      forecastingMethod:
        type: string
        description: The forecasting method that was used for this metric
        enum:
          - AutoRegressiveIntegratedMovingAverage
          - MovingAverage
          - SingleExponentialSmoothing
          - RandomWalk
          - DecompositionUsingAdditiveSeasonality
          - DecompositionUsingMultiplicativeSeasonality
          - HoltWintersAdditiveSeasonality
          - HoltWintersAdditiveSeasonalityWithDampedTrend
          - HoltWintersMultiplicativeSeasonality
          - HoltWintersMultiplicativeSeasonalityWithDampedTrend
          - DampedLinearExponentialSmoothing
          - DoubleExponentialSmoothing
          - DoubleMovingAverage
          - LinearExponentialSmoothing
          - LinearWeightedMovingAverage
          - PointEstimateUsingDampedLinearExponentialSmoothing
          - PointEstimateUsingDoubleExponentialSmoothing
          - PointEstimateUsingLatestWeek
          - PointEstimateUsingLinearExponentialSmoothing
          - PointEstimateUsingWeightedAverage
          - CurveFit
          - MultiLinearRegression
          - DynamicHarmonicRegression
          - Theta
          - Ensemble
          - Other
      forecastType:
        type: string
        description: The forecasting type in this forecast result
        enum:
          - LongTerm
          - ShortTerm
  BuShortTermForecast:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      weekDate:
        type: string
        format: date
        description: >-
          The start week date of this forecast in yyyy-MM-dd.  Must fall on the
          start day of week for the associated business unit. Dates are
          represented as an ISO-8601 string. For example: yyyy-MM-dd
      weekCount:
        type: integer
        format: int32
        description: The number of weeks this forecast covers
      creationMethod:
        type: string
        description: The method by which this forecast was created
        enum:
          - Import
          - ImportedHistoricalWeightedAverage
          - HistoricalWeightedAverage
          - Advanced
      description:
        type: string
        description: The description of this forecast
      legacy:
        type: boolean
        description: Whether this forecast contains modifications on legacy metrics
        readOnly: true
      metadata:
        description: Metadata for this forecast
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      canUseForScheduling:
        type: boolean
        description: Whether this forecast can be used for scheduling
      referenceStartDate:
        type: string
        format: date-time
        description: >-
          The reference start date for interval-based data for this forecast.
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      sourceDays:
        type: array
        description: The source day pointers for this forecast
        items:
          $ref: '#/definitions/ForecastSourceDayPointer'
      modifications:
        type: array
        description: Any manual modifications applied to this forecast
        items:
          $ref: '#/definitions/BuForecastModificationResponse'
      generationResults:
        description: Generation result metadata
        $ref: '#/definitions/BuForecastGenerationResult'
      timeZone:
        type: string
        description: The time zone for this forecast
      planningGroupsVersion:
        type: integer
        format: int32
        description: The version of the planning groups that was used for this forecast
      planningGroups:
        description: >-
          A snapshot of the planning groups used for this forecast as of the
          version number indicated
        $ref: '#/definitions/ForecastPlanningGroupsResponse'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ForecastPlanningGroupsResponse:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ForecastPlanningGroupResponse'
  ForecastSourceDayPointer:
    type: object
    properties:
      dayOfWeek:
        type: string
        description: The forecast day of week for this source data
        enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - EighthDay
      weight:
        type: integer
        format: int32
        description: >-
          The relative weight to apply to this source data item for weighted
          averages
      date:
        type: string
        description: The date this source data represents, in yyyy-MM-dd format
      fileName:
        type: string
        description: >-
          The name of the source file this data came from if it originated from
          a data import
      dataKey:
        type: string
        description: The key to look up the forecast source data for this source day
  ImportForecastResponse:
    type: object
    properties:
      status:
        type: string
        description: The status of the operation
        enum:
          - Processing
          - Complete
          - Canceled
          - Error
      operationId:
        type: string
        description: The ID for the operation
      result:
        description: >-
          The result of the operation. Always null, result will come via
          notification
        $ref: '#/definitions/BuShortTermForecast'
  WfmForecastModificationIntervalOffsetValue:
    type: object
    required:
      - intervalIndex
      - value
    properties:
      intervalIndex:
        type: integer
        format: int32
        description: >-
          The number of 15 minute intervals past referenceStartDate to which to
          apply this modification
      value:
        type: number
        format: double
        description: The value to set for the given interval
  WfmServiceGoalImpactSettings:
    type: object
    required:
      - abandonRate
      - averageSpeedOfAnswer
      - serviceLevel
    properties:
      serviceLevel:
        description: Allowed service level percent increase and decrease
        $ref: '#/definitions/WfmServiceGoalImpact'
      averageSpeedOfAnswer:
        description: Allowed average speed of answer percent increase and decrease
        $ref: '#/definitions/WfmServiceGoalImpact'
      abandonRate:
        description: Allowed abandon rate percent increase and decrease
        $ref: '#/definitions/WfmServiceGoalImpact'
  WfmProcessUploadRequest:
    type: object
    required:
      - uploadKey
    properties:
      uploadKey:
        type: string
        description: The uploadKey provided by the request to get an upload URL
  BuShortTermForecastListItem:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      weekDate:
        type: string
        format: date
        description: >-
          The start week date of this forecast in yyyy-MM-dd.  Must fall on the
          start day of week for the associated business unit. Dates are
          represented as an ISO-8601 string. For example: yyyy-MM-dd
      weekCount:
        type: integer
        format: int32
        description: The number of weeks this forecast covers
      creationMethod:
        type: string
        description: The method by which this forecast was created
        enum:
          - Import
          - ImportedHistoricalWeightedAverage
          - HistoricalWeightedAverage
          - Advanced
      description:
        type: string
        description: The description of this forecast
      legacy:
        type: boolean
        description: Whether this forecast contains modifications on legacy metrics
        readOnly: true
      metadata:
        description: Metadata for this forecast
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      canUseForScheduling:
        type: boolean
        description: Whether this forecast can be used for scheduling
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BuShortTermForecastListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/BuShortTermForecastListItem'
  AsyncForecastOperationResult:
    type: object
    properties:
      status:
        type: string
        description: The status of the operation
        enum:
          - Processing
          - Complete
          - Canceled
          - Error
      operationId:
        type: string
        description: The ID for the operation
      result:
        description: The result of the operation.  Null unless status == Complete
        $ref: '#/definitions/BuShortTermForecast'
      progress:
        type: integer
        format: int32
        description: Percent progress for the operation
  GenerateBuForecastRequest:
    type: object
    required:
      - description
    properties:
      description:
        type: string
        description: The description for the forecast
      weekCount:
        type: integer
        format: int32
        description: The number of weeks this forecast covers
      canUseForScheduling:
        type: boolean
        description: Whether this forecast can be used for scheduling
  BuForecastResult:
    type: object
    properties:
      referenceStartDate:
        type: string
        format: date-time
        description: >-
          The reference start date for interval-based data for this forecast.
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      planningGroups:
        type: array
        description: The forecast data broken up by planning group
        items:
          $ref: '#/definitions/ForecastPlanningGroupData'
      weekNumber:
        type: integer
        format: int32
        description: The week number represented by this response
      weekCount:
        type: integer
        format: int32
        description: The number of weeks in this forecast
  BuForecastResultResponse:
    type: object
    properties:
      result:
        description: >-
          The result of the operation.  Populated whenever the result is small
          enough to pass through the api directly
        $ref: '#/definitions/BuForecastResult'
      downloadUrl:
        type: string
        description: >-
          The download url to fetch the result.  Only populated if the result is
          too large to pass through the api directly
  LongTermForecastResult:
    type: object
    properties:
      planningGroups:
        type: array
        description: The forecast data broken up by planning group
        items:
          $ref: '#/definitions/LongTermForecastPlanningGroupData'
      referenceStartDate:
        type: string
        format: date
        description: >-
          The reference start date relative to the business unit time zone in
          this forecast. Dates are represented as an ISO-8601 string. For
          example: yyyy-MM-dd
      weekCount:
        type: integer
        format: int32
        description: The number of weeks in this forecast
  LongTermForecastResultResponse:
    type: object
    properties:
      result:
        description: >-
          The result of the operation.  Populated whenever the result is small
          enough to pass through the api directly
        $ref: '#/definitions/LongTermForecastResult'
      downloadUrl:
        type: string
        description: >-
          The download url to fetch the result.  Only populated if the result is
          too large to pass through the api directly
  CopyBuForecastRequest:
    type: object
    required:
      - description
      - weekDate
    properties:
      description:
        type: string
        description: The description for the forecast
      weekDate:
        type: string
        format: date
        description: >-
          The start date of the new forecast to create from the existing
          forecast. Must correspond to the start day of week for the business
          unit. Dates are represented as an ISO-8601 string. For example:
          yyyy-MM-dd
  BuSchedulingSettingsResponse:
    type: object
    properties:
      messageSeverities:
        type: array
        description: Schedule generation message severity configuration
        items:
          $ref: '#/definitions/SchedulerMessageTypeSeverity'
  BuShortTermForecastingSettings:
    type: object
    properties:
      defaultHistoryWeeks:
        type: integer
        format: int32
        description: >-
          The number of historical weeks to consider when creating a forecast.
          This setting is only used for legacy weighted average forecasts
  BusinessUnitResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      settings:
        description: Settings for this business unit
        $ref: '#/definitions/BusinessUnitSettingsResponse'
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/DivisionReference'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BusinessUnitSettingsResponse:
    type: object
    required:
      - metadata
      - startDayOfWeek
      - timeZone
    properties:
      startDayOfWeek:
        type: string
        description: The start day of week for this business unit
        enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
      timeZone:
        type: string
        description: >-
          The time zone for this business unit, using the Olsen tz database
          format
      shortTermForecasting:
        description: Short term forecasting settings
        $ref: '#/definitions/BuShortTermForecastingSettings'
      scheduling:
        description: Scheduling settings
        $ref: '#/definitions/BuSchedulingSettingsResponse'
      metadata:
        description: Version metadata for this business unit
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  SchedulerMessageTypeSeverity:
    type: object
    properties:
      type:
        type: string
        description: The type of the message
        enum:
          - AgentNotFound
          - AgentNotInSelectedManagementUnit
          - AgentNotLicensed
          - AgentWithoutWorkPlan
          - WorkPlanNotEnabled
          - WorkPlanNotFound
          - AgentWithoutCapability
          - NoNeedDays
          - UnableToProduceAgentSchedule
          - UnableToScheduleMaxConsecutiveWorkingDaysFromAgentHistory
          - UnableToScheduleMaxConsecutiveWorkingWeekendsFromAgentHistory
          - UnableToScheduleMaxWeeklyPaidTimeFromTimeOff
          - UnableToScheduleMaxWorkDayPaidTimeFromTimeOff
          - UnableToScheduleMinIntershiftTimeFromAgentHistory
          - UnableToScheduleMinIntershiftTimeFromDst
          - UnableToScheduleMinShiftStartDistanceFromAgentHistory
          - UnableToScheduleMinShiftStartDistanceFromDst
          - UnableToScheduleMinWeeklyPaidTimeFromTimeOff
          - UnableToScheduleMinWeeklyWorkDaysFromTimeOff
          - UnableToScheduleMinWorkDayPaidTimeFromTimeOff
          - UnableToSchedulePlanningPeriodMaxDaysOffFromAgentHistory
          - UnableToSchedulePlanningPeriodMaxDaysOffFromTimeOff
          - UnableToSchedulePlanningPeriodMaxPaidTimeFromAgentHistory
          - UnableToSchedulePlanningPeriodMaxPaidTimeFromTimeOff
          - UnableToSchedulePlanningPeriodMinDaysOffFromAgentHistory
          - UnableToSchedulePlanningPeriodMinPaidTimeFromAgentHistory
          - UnableToSchedulePlanningPeriodMinPaidTimeFromTimeOff
          - UnableToScheduleWorkDayFromTimeOff
          - UnableToScheduleMaxConsecutiveWorkingDays
          - UnableToScheduleMaxConsecutiveWorkingWeekends
          - UnableToScheduleMaxWeeklyPaidTime
          - UnableToScheduleMaxWeeklyWorkDays
          - UnableToScheduleMaxWorkDayPaidTime
          - UnableToScheduleMinConsecutiveNonWorkingTimePerWeek
          - UnableToScheduleMinIntershiftTime
          - UnableToScheduleMinShiftStartDistance
          - UnableToScheduleMinWeeklyPaidTime
          - UnableToScheduleMinWeeklyWorkDays
          - UnableToScheduleMinWorkDayPaidTime
          - UnableToSchedulePlanningPeriodMaxDaysOff
          - UnableToSchedulePlanningPeriodMaxPaidTime
          - UnableToSchedulePlanningPeriodMinDaysOff
          - UnableToSchedulePlanningPeriodMinPaidTime
          - UnableToScheduleShiftVariance
          - UnableToScheduleWorkDay
      severity:
        type: string
        description: The severity of the message
        enum:
          - Ignore
          - Information
          - Warning
          - Error
  BuSchedulingSettingsRequest:
    type: object
    properties:
      messageSeverities:
        type: array
        description: Schedule generation message severity configuration
        items:
          $ref: '#/definitions/SchedulerMessageTypeSeverity'
  SetWrapperSyncTimeOffProperty:
    type: object
    properties:
      values:
        type: array
        uniqueItems: true
        items:
          type: string
          enum:
            - PayableMinutes
  UpdateBusinessUnitRequest:
    type: object
    properties:
      name:
        type: string
        description: The name of the business unit
      divisionId:
        type: string
        description: The ID of the division to which the business unit should be moved
      settings:
        description: Configuration for the business unit
        $ref: '#/definitions/UpdateBusinessUnitSettingsRequest'
  UpdateBusinessUnitSettingsRequest:
    type: object
    required:
      - metadata
    properties:
      startDayOfWeek:
        type: string
        description: The start day of week for this business unit
        readOnly: true
        enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
      timeZone:
        type: string
        description: >-
          The time zone for this business unit, using the Olsen tz database
          format
        readOnly: true
      shortTermForecasting:
        description: Short term forecasting settings
        $ref: '#/definitions/BuShortTermForecastingSettings'
      scheduling:
        description: Scheduling settings
        $ref: '#/definitions/BuSchedulingSettingsRequest'
      metadata:
        description: Version metadata for this business unit
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  AdherenceSettings:
    type: object
    properties:
      severeAlertThresholdMinutes:
        type: integer
        format: int32
        description: >-
          The threshold in minutes where an alert will be triggered when an
          agent is considered severely out of adherence
      adherenceTargetPercent:
        type: integer
        format: int32
        description: Target adherence percentage
      adherenceExceptionThresholdSeconds:
        type: integer
        format: int32
        description: >-
          The threshold in seconds for which agents should not be penalized for
          being momentarily out of adherence
      nonOnQueueActivitiesEquivalent:
        type: boolean
        description: >-
          Whether to treat all non-on-queue activities as equivalent for
          adherence purposes
      trackOnQueueActivity:
        type: boolean
        description: Whether to track on-queue activities
      ignoredActivityCategories:
        description: Activity categories that should be ignored for adherence purposes
        $ref: '#/definitions/IgnoredActivityCategories'
  BusinessUnitReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  IgnoredActivityCategories:
    type: object
    properties:
      values:
        type: array
        description: Activity categories list
        items:
          type: string
          enum:
            - OnQueueWork
            - Break
            - Meal
            - Meeting
            - OffQueueWork
            - TimeOff
            - Training
            - Unavailable
            - Unscheduled
  ManagementUnit:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      businessUnit:
        description: The business unit to which this management unit belongs
        $ref: '#/definitions/BusinessUnitReference'
      startDayOfWeek:
        type: string
        description: >-
          Start day of week for scheduling and forecasting purposes. Moving to
          Business Unit
        enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
      timeZone:
        type: string
        description: >-
          The time zone for the management unit in standard Olson format. 
          Moving to Business Unit
      settings:
        description: The configuration settings for this management unit
        $ref: '#/definitions/ManagementUnitSettingsResponse'
      metadata:
        description: >-
          Version info metadata for this management unit. Deprecated, use
          settings.metadata
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/DivisionReference'
      modifiedBy:
        description: >-
          The user who last modified this entity.  Deprecated, use field from
          settings.metadata instead
        readOnly: true
        $ref: '#/definitions/UserReference'
      version:
        type: integer
        format: int32
        description: >-
          The version of the underlying entity.  Deprecated, use field from
          settings.metadata instead
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          The date and time at which this entity was last modified.  Deprecated,
          use field from settings.metadata instead. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ManagementUnitListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ManagementUnit'
      pageSize:
        type: integer
        format: int32
        description: Deprecated, paging is not supported
      pageNumber:
        type: integer
        format: int32
        description: Deprecated, paging is not supported
      total:
        type: integer
        format: int64
        description: Deprecated, paging is not supported
      firstUri:
        type: string
        format: uri
        description: Deprecated, paging is not supported
      nextUri:
        type: string
        format: uri
        description: Deprecated, paging is not supported
      pageCount:
        type: integer
        format: int32
        description: Deprecated, paging is not supported
      previousUri:
        type: string
        format: uri
        description: Deprecated, paging is not supported
      lastUri:
        type: string
        format: uri
        description: Deprecated, paging is not supported
      selfUri:
        type: string
        format: uri
  ManagementUnitSettingsResponse:
    type: object
    required:
      - metadata
    properties:
      adherence:
        description: Adherence settings for this management unit
        $ref: '#/definitions/AdherenceSettings'
      shortTermForecasting:
        description: Short term forecasting settings for this management unit
        $ref: '#/definitions/ShortTermForecastingSettings'
      timeOff:
        description: Time off request settings for this management unit
        $ref: '#/definitions/TimeOffRequestSettings'
      scheduling:
        description: >-
          Scheduling settings for this management unit. These settings are only
          available if you have the permission wfm:managementUnit:view
        $ref: '#/definitions/SchedulingSettingsResponse'
      shiftTrading:
        description: Shift trade settings for this management unit
        $ref: '#/definitions/ShiftTradeSettings'
      metadata:
        description: Version info metadata for the associated management unit
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  PlanningPeriodSettings:
    type: object
    required:
      - startDate
      - weekCount
    properties:
      weekCount:
        type: integer
        format: int32
        description: Planning period length in weeks
      startDate:
        type: string
        format: date
        description: >-
          Start date of the planning period in yyyy-MM-dd format. Dates are
          represented as an ISO-8601 string. For example: yyyy-MM-dd
  SchedulingSettingsResponse:
    type: object
    properties:
      maxOccupancyPercentForDeferredWork:
        type: integer
        format: int32
        description: Max occupancy percent for deferred work
      defaultShrinkagePercent:
        type: number
        format: double
        description: Default shrinkage percent for scheduling
      shrinkageOverrides:
        description: Shrinkage overrides for scheduling
        $ref: '#/definitions/ShrinkageOverrides'
      planningPeriod:
        description: Planning period settings for scheduling
        $ref: '#/definitions/PlanningPeriodSettings'
      startDayOfWeekend:
        type: string
        description: Start day of weekend for scheduling
        enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
  ShiftTradeActivityRule:
    type: object
    required:
      - action
      - activityCategory
    properties:
      activityCategory:
        type: string
        description: The activity category to which to apply this rule
        enum:
          - OnQueueWork
          - Break
          - Meal
          - Meeting
          - OffQueueWork
          - TimeOff
          - Training
          - Unavailable
          - Unscheduled
      action:
        type: string
        description: The action this rule invokes
        enum:
          - Replace
          - DoNotAllowTrade
          - KeepWithSchedule
      activityCodeIdReplacement:
        type: string
        description: >-
          The activity code ID with which to replace activities belonging to the
          original category if applicable (required if action == Replace, must
          be a default activity code ID)
  ShiftTradeSettings:
    type: object
    properties:
      enabled:
        type: boolean
        description: Whether shift trading is enabled for this management unit
      autoReview:
        type: boolean
        description: >-
          Whether automatic shift trade review is enabled according to the rules
          defined in for this management unit
      allowDirectTrades:
        type: boolean
        description: Whether direct shift trades between agents are allowed
      minHoursInFuture:
        type: integer
        format: int32
        description: The minimum number of hours in the future shift trades are allowed
      unequalPaid:
        type: string
        description: How to handle shift trades which involve unequal paid times
        enum:
          - Allow
          - Disallow
          - AdminReview
      oneSided:
        type: string
        description: How to handle one-sided shift trades
        enum:
          - Allow
          - Disallow
          - AdminReview
      weeklyMinPaidViolations:
        type: string
        description: >-
          How to handle shift trades which result in violations of weekly
          minimum paid time constraint
        enum:
          - Allow
          - Disallow
          - AdminReview
      weeklyMaxPaidViolations:
        type: string
        description: >-
          How to handle shift trades which result in violations of weekly
          maximum paid time constraint
        enum:
          - Allow
          - Disallow
          - AdminReview
      requiresMatchingQueues:
        type: boolean
        description: Whether to constrain shift trades to agents with matching queues
      requiresMatchingLanguages:
        type: boolean
        description: Whether to constrain shift trades to agents with matching languages
      requiresMatchingSkills:
        type: boolean
        description: Whether to constrain shift trades to agents with matching skills
      requiresMatchingPlanningGroups:
        type: boolean
        description: >-
          Whether to constrain shift trades to agents with matching planning
          groups
      activityCategoryRules:
        type: array
        description: >-
          Rules that specify what to do with activity categories that are part
          of a shift defined in a trade
        items:
          $ref: '#/definitions/ShiftTradeActivityRule'
  ShortTermForecastingSettings:
    type: object
    properties:
      defaultHistoryWeeks:
        type: integer
        format: int32
        description: >-
          The number of weeks to consider by default when generating a volume
          forecast
  ShrinkageOverride:
    type: object
    required:
      - intervalIndex
    properties:
      intervalIndex:
        type: integer
        format: int32
        description: >-
          Index of shrinkage override interval. Starting index is 0 and indexes
          are based on 15 minute intervals for a 7 day week
      shrinkagePercent:
        type: number
        format: double
        description: >-
          Shrinkage override percent. Setting a null value will reset the
          interval to the default
  ShrinkageOverrides:
    type: object
    properties:
      clear:
        type: boolean
        description: Set true to clear the shrinkage interval overrides
      values:
        type: array
        description: List of interval shrinkage overrides
        items:
          $ref: '#/definitions/ShrinkageOverride'
  TimeOffRequestSettings:
    type: object
    properties:
      submissionRangeEnforced:
        type: boolean
        description: Whether to enforce a submission range for agent time off requests
      submissionEarliestDaysFromNow:
        type: integer
        format: int32
        description: >-
          The earliest number of days from now for which an agent can submit a
          time off request.  Use negative numbers to indicate days in the past
      submissionLatestDaysFromNow:
        type: integer
        format: int32
        description: >-
          The latest number of days from now for which an agent can submit a
          time off request
  CreateBusinessUnitRequest:
    type: object
    required:
      - divisionId
      - name
      - settings
    properties:
      name:
        type: string
        description: The name of the business unit
      divisionId:
        type: string
        description: The ID of the division to which the business unit should be added
      settings:
        description: Configuration for the business unit
        $ref: '#/definitions/CreateBusinessUnitSettingsRequest'
  CreateBusinessUnitSettingsRequest:
    type: object
    required:
      - startDayOfWeek
      - timeZone
    properties:
      startDayOfWeek:
        type: string
        description: The start day of week for this business unit
        enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
      timeZone:
        type: string
        description: >-
          The time zone for this business unit, using the Olsen tz database
          format
      shortTermForecasting:
        description: Short term forecasting settings
        $ref: '#/definitions/BuShortTermForecastingSettings'
      scheduling:
        description: Scheduling settings
        $ref: '#/definitions/BuSchedulingSettingsRequest'
  BusinessUnitListItem:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      authorized:
        type: boolean
        description: Whether the user has authorization to interact with this business unit
        readOnly: true
      division:
        description: The division to which this entity belongs.
        $ref: '#/definitions/DivisionReference'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BusinessUnitListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/BusinessUnitListItem'
  ManagementUnitSettingsRequest:
    type: object
    required:
      - metadata
    properties:
      adherence:
        description: Adherence settings for this management unit
        $ref: '#/definitions/AdherenceSettings'
      shortTermForecasting:
        description: >-
          Short term forecasting settings for this management unit.  Moving to
          Business Unit
        $ref: '#/definitions/ShortTermForecastingSettings'
      timeOff:
        description: Time off request settings for this management unit
        $ref: '#/definitions/TimeOffRequestSettings'
      scheduling:
        description: Scheduling settings for this management unit
        $ref: '#/definitions/SchedulingSettingsRequest'
      shiftTrading:
        description: Shift trade settings for this management unit
        $ref: '#/definitions/ShiftTradeSettings'
      metadata:
        description: Version info metadata for the associated management unit
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  SchedulingSettingsRequest:
    type: object
    properties:
      maxOccupancyPercentForDeferredWork:
        type: integer
        format: int32
        description: Max occupancy percent for deferred work
      defaultShrinkagePercent:
        type: number
        format: double
        description: Default shrinkage percent for scheduling
      shrinkageOverrides:
        description: Shrinkage overrides for scheduling
        $ref: '#/definitions/ShrinkageOverrides'
      planningPeriod:
        description: Planning period settings for scheduling
        $ref: '#/definitions/ValueWrapperPlanningPeriodSettings'
      startDayOfWeekend:
        type: string
        description: Start day of weekend for scheduling
        enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
  UpdateManagementUnitRequest:
    type: object
    properties:
      name:
        type: string
        description: The new name of the management unit
      divisionId:
        type: string
        description: The new division id for the management unit
      settings:
        description: Updated settings for the management unit
        $ref: '#/definitions/ManagementUnitSettingsRequest'
  ValueWrapperPlanningPeriodSettings:
    type: object
    properties:
      value:
        description: The value for the associated field
        $ref: '#/definitions/PlanningPeriodSettings'
  MoveManagementUnitResponse:
    type: object
    properties:
      businessUnit:
        description: The new business unit
        $ref: '#/definitions/BusinessUnitReference'
      status:
        type: string
        description: >-
          The status of the move.  Will always be 'Processing' unless the
          Management Unit is already in the requested Business Unit in which
          case it will be 'Complete'
        enum:
          - Processing
          - Complete
          - Canceled
          - Error
  MoveManagementUnitRequest:
    type: object
    required:
      - businessUnitId
    properties:
      businessUnitId:
        type: string
        description: The ID of the business unit to which to move the management unit
  CreateManagementUnitApiRequest:
    type: object
    required:
      - businessUnitId
      - name
    properties:
      name:
        type: string
        description: The name of the management unit
      timeZone:
        type: string
        description: >-
          The default time zone to use for this management unit.  Moving to
          Business Unit
      startDayOfWeek:
        type: string
        description: >-
          The configured first day of the week for scheduling and forecasting
          purposes. Moving to Business Unit
        enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
      settings:
        description: >-
          The configuration for the management unit.  If omitted, reasonable
          defaults will be assigned
        $ref: '#/definitions/CreateManagementUnitSettingsRequest'
      divisionId:
        type: string
        description: >-
          The id of the division to which this management unit belongs. 
          Defaults to home division ID
      businessUnitId:
        type: string
        description: The id of the business unit to which this management unit belongs
  CreateManagementUnitSettingsRequest:
    type: object
    properties:
      adherence:
        description: Adherence settings for this management unit
        $ref: '#/definitions/AdherenceSettings'
      shortTermForecasting:
        description: >-
          Short term forecasting settings for this management unit.  Moving to
          Business Unit
        $ref: '#/definitions/ShortTermForecastingSettings'
      timeOff:
        description: Time off request settings for this management unit
        $ref: '#/definitions/TimeOffRequestSettings'
      scheduling:
        description: Scheduling settings for this management unit
        $ref: '#/definitions/SchedulingSettingsRequest'
      shiftTrading:
        description: Shift trade settings for this management unit
        $ref: '#/definitions/ShiftTradeSettings'
  ManagementUnitReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WfmAgent:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      user:
        description: The user associated with this data
        $ref: '#/definitions/UserReference'
      workPlan:
        description: The work plan associated with this agent, if applicable
        $ref: '#/definitions/WorkPlanReference'
      workPlanRotation:
        description: The work plan rotation associated with this agent, if applicable
        $ref: '#/definitions/WorkPlanRotationReference'
      acceptDirectShiftTrades:
        type: boolean
        description: Whether the agent accepts direct shift trade requests
      queues:
        type: array
        description: List of queues to which this agent is capable of handling
        items:
          $ref: '#/definitions/QueueReference'
      languages:
        type: array
        description: The list of languages this agent is capable of handling
        items:
          $ref: '#/definitions/LanguageReference'
      skills:
        type: array
        description: The list of skills this agent is capable of handling
        items:
          $ref: '#/definitions/RoutingSkillReference'
      schedulable:
        type: boolean
        description: >-
          Whether the agent has the permission to be included in schedule
          generation
      metadata:
        description: Metadata for this agent
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WorkPlanReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      managementUnit:
        description: >-
          The management unit to which this work plan belongs.  Nullable in some
          routes
        $ref: '#/definitions/ManagementUnitReference'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WorkPlanRotationReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BuScheduleReferenceForMuRoute:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      weekDate:
        type: string
        format: date
        description: >-
          The start week date for this schedule. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      businessUnit:
        description: The start week date for this schedule
        $ref: '#/definitions/BusinessUnitReference'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ShiftTradeListResponse:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ShiftTradeResponse'
  ShiftTradeResponse:
    type: object
    properties:
      id:
        type: string
        description: The ID of this shift trade
      weekDate:
        type: string
        format: date
        description: >-
          The start week date of the associated schedule in yyyy-MM-dd format.
          Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
      schedule:
        description: A reference to the associated schedule
        $ref: '#/definitions/BuScheduleReferenceForMuRoute'
      state:
        type: string
        description: The state of this shift trade
        enum:
          - Unmatched
          - Matched
          - Approved
          - Denied
          - Expired
          - Canceled
      initiatingUser:
        description: The user who initiated this trade
        $ref: '#/definitions/UserReference'
      initiatingShiftId:
        type: string
        description: The ID of the shift offered for trade by the initiating user
      initiatingShiftStart:
        type: string
        format: date-time
        description: >-
          The start date/time of the shift being offered for trade. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      initiatingShiftEnd:
        type: string
        format: date-time
        description: >-
          The end date/time of the shift being offered for trade. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      receivingUser:
        description: >-
          The user matching the trade, or if the state is not Matched, the user
          to whom the trade request was sent
        $ref: '#/definitions/UserReference'
      receivingShiftId:
        type: string
        description: >-
          The ID of the shift being exchanged for the initiating shift, null if
          the receiving user is picking up a shift
      receivingShiftStart:
        type: string
        format: date-time
        description: >-
          The start date/time of the receiving shift. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      receivingShiftEnd:
        type: string
        format: date-time
        description: >-
          The end date/time of the receiving shift. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      expiration:
        type: string
        format: date-time
        description: >-
          When this shift trade offer will expire if not matched or approved.
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      oneSided:
        type: boolean
        description: >-
          Whether this is a one-sided shift trade (e.g. the initiating user is
          not asking for a shift in return)
      acceptableIntervals:
        type: array
        items:
          type: string
          description: >-
            Intervals are represented as an ISO-8601 string. For example:
            YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
      reviewedBy:
        description: The user who reviewed this shift trade
        $ref: '#/definitions/UserReference'
      reviewedDate:
        type: string
        format: date-time
        description: >-
          The timestamp when this shift trade was reviewed. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      metadata:
        description: Version data for this trade
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  WfmUserEntityListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/User'
  PlanningGroup:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      serviceGoalTemplate:
        description: >-
          The ID of the service goal template associated with this planning
          group
        $ref: '#/definitions/ServiceGoalTemplateReference'
      routePaths:
        type: array
        description: Set of route paths associated with the planning group
        uniqueItems: true
        items:
          $ref: '#/definitions/RoutePathResponse'
      metadata:
        description: Version metadata for the planning group
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ServiceGoalTemplateReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  RoutePathRequest:
    type: object
    required:
      - mediaType
      - queueId
    properties:
      queueId:
        type: string
        example: f27450c9-c1a0-451a-804c-2579b268b273
        description: The ID of the queue to associate with the route path
      mediaType:
        type: string
        example: Email
        description: The media type of the given queue to associate with the route path
        enum:
          - Voice
          - Chat
          - Email
          - Callback
          - Message
      languageId:
        type: string
        example: e3d65f6a-c0d2-41da-8152-82d3f075d77c
        description: The ID of the language to associate with the route path
      skillIds:
        type: array
        example: '["33d29376-4267-4968-8042-dcabdf2c1d98"]'
        description: The set of skill IDs to associate with the route path
        uniqueItems: true
        items:
          type: string
      sourcePlanningGroup:
        description: >-
          The planning group from which to take route paths. This property is
          only needed if a route path already exists in another planning
          group.Note that taking a route path from another planning group will
          modify the other planning group
        $ref: '#/definitions/SourcePlanningGroupRequest'
  SetWrapperRoutePathRequest:
    type: object
    properties:
      values:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/RoutePathRequest'
  SourcePlanningGroupRequest:
    type: object
    required:
      - id
      - metadata
    properties:
      id:
        type: string
        description: The ID of the planning group
      metadata:
        description: Version metadata for the planning group
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  UpdatePlanningGroupRequest:
    type: object
    required:
      - metadata
    properties:
      name:
        type: string
        description: The name of the planning group
      routePaths:
        description: Set of route paths to associate with the planning group
        $ref: '#/definitions/SetWrapperRoutePathRequest'
      serviceGoalTemplateId:
        type: string
        description: >-
          The ID of the service goal template to associate with this planning
          group
      metadata:
        description: Version metadata for the planning group
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  PlanningGroupList:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/PlanningGroup'
  BuAbandonRate:
    type: object
    required:
      - include
    properties:
      include:
        type: boolean
        description: Whether to include abandon rate in the associated configuration
      percent:
        type: integer
        format: int32
        description: Abandon rate percent goal. Required if include == true
  BuAverageSpeedOfAnswer:
    type: object
    required:
      - include
    properties:
      include:
        type: boolean
        description: >-
          Whether to include average speed of answer (ASA) in the associated
          configuration
      seconds:
        type: integer
        format: int32
        description: >-
          The target average speed of answer (ASA) in seconds. Required if
          include == true
  BuServiceLevel:
    type: object
    required:
      - include
    properties:
      include:
        type: boolean
        description: >-
          Whether to include service level targets in the associated
          configuration
      percent:
        type: integer
        format: int32
        description: Service level target percent answered. Required if include == true
      seconds:
        type: integer
        format: int32
        description: Service level target answer time. Required if include == true
  ServiceGoalTemplate:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      serviceLevel:
        description: Service level targets for this service goal template
        $ref: '#/definitions/BuServiceLevel'
      averageSpeedOfAnswer:
        description: Average speed of answer targets for this service goal template
        $ref: '#/definitions/BuAverageSpeedOfAnswer'
      abandonRate:
        description: Abandon rate targets for this service goal template
        $ref: '#/definitions/BuAbandonRate'
      metadata:
        description: Version metadata for the service goal template
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ServiceGoalTemplateImpactOverride:
    type: object
    required:
      - enabled
      - impact
    properties:
      enabled:
        type: boolean
        description: >-
          Whether service goal overrides are enabled for this service goal
          template
      impact:
        description: >-
          Settings controlling max percent increase and decrease of service
          goals for this service goal template
        $ref: '#/definitions/WfmServiceGoalImpactSettings'
  CreatePlanningGroupRequest:
    type: object
    required:
      - name
      - routePaths
      - serviceGoalTemplateId
    properties:
      name:
        type: string
        description: The name of the planning group
      routePaths:
        type: array
        description: Set of route paths to associate with the planning group
        uniqueItems: true
        items:
          $ref: '#/definitions/RoutePathRequest'
      serviceGoalTemplateId:
        type: string
        description: >-
          The ID of the service goal template to associate with this planning
          group
  UpdateServiceGoalTemplate:
    type: object
    required:
      - metadata
    properties:
      name:
        type: string
        description: The name of the service goal template.
      serviceLevel:
        description: Service level targets for this service goal template
        $ref: '#/definitions/BuServiceLevel'
      averageSpeedOfAnswer:
        description: Average speed of answer targets for this service goal template
        $ref: '#/definitions/BuAverageSpeedOfAnswer'
      abandonRate:
        description: Abandon rate targets for this service goal template
        $ref: '#/definitions/BuAbandonRate'
      metadata:
        description: Version metadata for the service goal template
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  ServiceGoalTemplateList:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ServiceGoalTemplate'
  CreateServiceGoalTemplate:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: The name of the service goal template.
      serviceLevel:
        description: Service level targets for this service goal template
        $ref: '#/definitions/BuServiceLevel'
      averageSpeedOfAnswer:
        description: Average speed of answer targets for this service goal template
        $ref: '#/definitions/BuAverageSpeedOfAnswer'
      abandonRate:
        description: Abandon rate targets for this service goal template
        $ref: '#/definitions/BuAbandonRate'
  ShiftTradeMatchesSummaryResponse:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WeekShiftTradeMatchesSummaryResponse'
  WeekShiftTradeMatchesSummaryResponse:
    type: object
    properties:
      weekDate:
        type: string
        format: date
        description: >-
          The schedule week date in yyyy-MM-dd format. Dates are represented as
          an ISO-8601 string. For example: yyyy-MM-dd
      count:
        type: integer
        format: int32
        description: The number of trades in the Matched state for the given week
  SetWrapperString:
    type: object
    properties:
      values:
        type: array
        uniqueItems: true
        items:
          type: string
  TimeOffLimit:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      granularity:
        type: string
        description: Granularity choice for the time off limit
        enum:
          - Daily
      defaultLimitMinutes:
        type: integer
        format: int32
        description: The default time off limit value in minutes per granularity interval
      metadata:
        description: Version metadata for the time off limit
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TimeOffLimitListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/TimeOffLimit'
  CreateTimeOffLimitRequest:
    type: object
    properties:
      granularity:
        type: string
        description: >-
          Granularity choice for time off limit. If not specified, 'Daily' is
          assumed
        enum:
          - Daily
      defaultLimitMinutes:
        type: integer
        format: int32
        description: >-
          The default limit value in minutes per granularity. If not specified,
          then 0 is assumed, which means there are no time off minutes available
  SetTimeOffLimitValuesRequest:
    type: object
    required:
      - metadata
    properties:
      values:
        type: array
        items:
          $ref: '#/definitions/TimeOffLimitRange'
      metadata:
        description: Version metadata for the time off limit
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  TimeOffLimitRange:
    type: object
    required:
      - granularity
      - limitMinutesPerInterval
      - startDate
    properties:
      startDate:
        type: string
        format: date
        description: >-
          Start date of the range. The end date is determined by 'granularity'
          and the size of 'limitMinutesPerInterval'. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      granularity:
        type: string
        description: Granularity choice for the time off limit
        enum:
          - Daily
      limitMinutesPerInterval:
        type: array
        description: >-
          The list of time off limit values in minutes per granularity interval.
          If 'null' is specified, then interval specific value is cleared. Such
          interval will have 'defaultLimitMinutes' value
        items:
          type: integer
          format: int32
  QueryTimeOffLimitValuesResponse:
    type: object
    properties:
      values:
        type: array
        items:
          $ref: '#/definitions/TimeOffLimitValueRange'
  TimeOffLimitReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TimeOffLimitValueRange:
    type: object
    required:
      - granularity
      - startDate
    properties:
      timeOffLimit:
        description: The ID of the time off limit
        $ref: '#/definitions/TimeOffLimitReference'
      startDate:
        type: string
        format: date
        description: >-
          Start date of the requested date range, in ISO-8601 format. The end
          date is determined by the size of interval lists
      granularity:
        type: string
        description: Granularity choice for time off limit
        enum:
          - Daily
      limitMinutesPerInterval:
        type: array
        description: A list of time off limit values in minutes per granularity interval
        items:
          type: integer
          format: int32
      allocatedMinutesPerInterval:
        type: array
        description: A list of allocated time off minutes per granularity interval
        items:
          type: integer
          format: int32
      waitlistedMinutesPerInterval:
        type: array
        description: A list of waitlisted time off minutes per granularity interval
        items:
          type: integer
          format: int32
      waitlistedRequestsPerInterval:
        type: array
        description: >-
          The current number of waitlisted time off requests for every interval
          per granularity
        items:
          type: integer
          format: int32
      metadata:
        description: Version metadata for the time off limit
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  LocalDateRange:
    type: object
    properties:
      startDate:
        type: string
        format: date
        description: >-
          The inclusive start of a date range in yyyy-MM-dd format. Dates are
          represented as an ISO-8601 string. For example: yyyy-MM-dd
      endDate:
        type: string
        format: date
        description: >-
          The inclusive end of a date range in yyyy-MM-dd format. Dates are
          represented as an ISO-8601 string. For example: yyyy-MM-dd
  QueryTimeOffLimitValuesRequest:
    type: object
    required:
      - dateRanges
    properties:
      timeOffLimitId:
        type: string
        description: >-
          The time off limit object id to retrieve values for. Required if
          activityCodeId is not specified
      activityCodeId:
        type: string
        description: >-
          The activity code id to filter the affected limit objects by. Required
          if timeOffLimitId is not specified
      dateRanges:
        type: array
        description: >-
          The list of the date ranges to return time off limit, allocated and
          waitlisted minutes. The valid number of date ranges is between 1 and
          30. Maximum total number of days in all ranges in 366.
        items:
          $ref: '#/definitions/LocalDateRange'
  UpdateTimeOffLimitRequest:
    type: object
    required:
      - metadata
    properties:
      defaultLimitMinutes:
        type: integer
        format: int32
        description: The default time off limit value in minutes per granularity
      metadata:
        description: Version metadata for the time off limit
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  HrisTimeOffType:
    type: object
    required:
      - hrisIntegrationId
      - id
      - name
    properties:
      id:
        type: string
        description: The ID of the time off type configured in integration.
      name:
        type: string
        description: The name of the time off type configured in integration.
      hrisIntegrationId:
        type: string
        description: The ID of the integration.
      secondaryId:
        type: string
        description: Secondary ID of the time off type, if configured in integration.
  TimeOffPlan:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
        description: The name of this time off plan.
      activityCodeIds:
        type: array
        description: The set of activity code IDs associated with this time off plan.
        uniqueItems: true
        items:
          type: string
      timeOffLimits:
        type: array
        description: The set of time off limit IDs associated with this time off plan.
        uniqueItems: true
        items:
          $ref: '#/definitions/TimeOffLimitReference'
      autoApprovalRule:
        type: string
        description: Auto approval rule for this time off plan
        enum:
          - Never
          - Always
          - CheckLimits
      daysBeforeStartToExpireFromWaitlist:
        type: integer
        format: int32
        description: >-
          The number of days before the time off request start date for when the
          request will be expired from the waitlist.
      active:
        type: boolean
        description: Whether this time off plan is currently being used by agents.
      metadata:
        description: Version metadata for the time off plan.
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CreateTimeOffPlanRequest:
    type: object
    required:
      - active
      - autoApprovalRule
      - name
    properties:
      name:
        type: string
        description: The name of this time off plan.
      activityCodeIds:
        type: array
        description: The set of activity code IDs to associate with this time off plan.
        uniqueItems: true
        items:
          type: string
      timeOffLimitIds:
        type: array
        description: The set of time off limit IDs to associate with this time off plan.
        uniqueItems: true
        items:
          type: string
      autoApprovalRule:
        type: string
        description: Auto approval rule for the time off plan.
        enum:
          - Never
          - Always
          - CheckLimits
      daysBeforeStartToExpireFromWaitlist:
        type: integer
        format: int32
        description: >-
          The number of days before the time off request start date for when the
          request will be expired from the waitlist.
      active:
        type: boolean
        description: Whether this time off plan should be used by agents.
  TimeOffPlanListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/TimeOffPlan'
  UpdateTimeOffPlanRequest:
    type: object
    required:
      - metadata
    properties:
      name:
        type: string
        description: The name of this time off plan.
      activityCodeIds:
        description: The set of activity code IDs to associate with this time off plan.
        $ref: '#/definitions/SetWrapperString'
      timeOffLimitIds:
        description: The set of time off limit IDs to associate with this time off plan.
        $ref: '#/definitions/SetWrapperString'
      autoApprovalRule:
        type: string
        description: Auto approval rule for the time off plan.
        enum:
          - Never
          - Always
          - CheckLimits
      daysBeforeStartToExpireFromWaitlist:
        type: integer
        format: int32
        description: >-
          The number of days before the time off request start date for when the
          request will be expired from the waitlist.
      active:
        type: boolean
        description: Whether this time off plan should be used by agents.
      metadata:
        description: Version metadata for the time off plan
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  ValueWrapperHrisTimeOffType:
    type: object
    properties:
      value:
        description: The value for the associated field
        $ref: '#/definitions/HrisTimeOffType'
  TimeOffRequestReference:
    type: object
    properties:
      id:
        type: string
        description: The id of the time off request
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TimeOffRequestList:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      timeOffRequests:
        type: array
        items:
          $ref: '#/definitions/TimeOffRequestResponse'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TimeOffRequestResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      user:
        description: The user associated with this time off request
        $ref: '#/definitions/UserReference'
      isFullDayRequest:
        type: boolean
        description: Whether this is a full day request (false means partial day)
      markedAsRead:
        type: boolean
        description: Whether this request has been marked as read by the agent
      activityCodeId:
        type: string
        description: >-
          The ID of the activity code associated with this time off request.
          Activity code must be of the TimeOff category
      paid:
        type: boolean
        description: Whether this is a paid time off request
      status:
        type: string
        description: The status of this time off request
        enum:
          - PENDING
          - APPROVED
          - DENIED
          - CANCELED
      substatus:
        type: string
        description: The substatus of this time off request
        enum:
          - AdvanceTimeElapsed
          - AutoApproved
          - InsufficientBalance
          - InvalidDailyDuration
          - OutsideShift
          - RemovedFromWaitlist
          - Waitlisted
      partialDayStartDateTimes:
        type: array
        description: >-
          A set of start date-times in ISO-8601 format for partial day requests.
          Will be not empty if isFullDayRequest == false
        items:
          type: string
          format: date-time
      fullDayManagementUnitDates:
        type: array
        description: >-
          A set of dates in yyyy-MM-dd format.  Should be interpreted in the
          management unit's configured time zone. Will be not empty if
          isFullDayRequest == true
        items:
          type: string
      dailyDurationMinutes:
        type: integer
        format: int32
        description: The daily duration of this time off request in minutes
      notes:
        type: string
        description: Notes about the time off request
      submittedBy:
        description: The user who submitted this time off request
        $ref: '#/definitions/UserReference'
      submittedDate:
        type: string
        format: date-time
        description: >-
          The timestamp when this request was submitted. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      reviewedBy:
        description: The user who reviewed this time off request
        $ref: '#/definitions/UserReference'
      reviewedDate:
        type: string
        format: date-time
        description: >-
          The timestamp when this request was reviewed. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedBy:
        description: The user who last modified this TimeOffRequestResponse
        $ref: '#/definitions/UserReference'
      modifiedDate:
        type: string
        format: date-time
        description: >-
          The timestamp when this request was last modified. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      metadata:
        description: The version metadata of the time off request
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TimeOffRequest:
    type: object
    required:
      - id
      - user
    properties:
      id:
        type: string
        description: The id of the time off request
      user:
        description: The user that the time off request belongs to
        $ref: '#/definitions/UserReference'
      isFullDayRequest:
        type: boolean
        description: Whether this is a full day request (false means partial day)
      markedAsRead:
        type: boolean
        description: Whether this request has been marked as read by the agent
      activityCodeId:
        type: string
        description: >-
          The ID of the activity code associated with this time off request.
          Activity code must be of the TimeOff category
      paid:
        type: boolean
        description: Whether this is a paid time off request
      status:
        type: string
        description: The status of this time off request
        enum:
          - PENDING
          - APPROVED
          - DENIED
          - CANCELED
      substatus:
        type: string
        description: The substatus of this time off request
        enum:
          - AdvanceTimeElapsed
          - AutoApproved
          - InsufficientBalance
          - InvalidDailyDuration
          - OutsideShift
          - RemovedFromWaitlist
          - Waitlisted
      partialDayStartDateTimes:
        type: array
        description: >-
          A set of start date-times in ISO-8601 format for partial day
          requests.  Will be not empty if isFullDayRequest == false
        items:
          type: string
          format: date-time
      fullDayManagementUnitDates:
        type: array
        description: >-
          A set of dates in yyyy-MM-dd format.  Should be interpreted in the
          management unit's configured time zone.  Will be not empty if
          isFullDayRequest == true
        items:
          type: string
      dailyDurationMinutes:
        type: integer
        format: int32
        description: The daily duration of this time off request in minutes
      notes:
        type: string
        description: Notes about the time off request
      submittedBy:
        description: The user who submitted this time off request
        $ref: '#/definitions/UserReference'
      submittedDate:
        type: string
        format: date-time
        description: >-
          The timestamp when this request was submitted. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      reviewedBy:
        description: The user who reviewed this time off request
        $ref: '#/definitions/UserReference'
      reviewedDate:
        type: string
        format: date-time
        description: >-
          The timestamp when this request was reviewed. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      metadata:
        description: The version metadata of the time off request
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TimeOffRequestListing:
    type: object
    required:
      - entities
    properties:
      entities:
        type: array
        description: List of time off requests
        items:
          $ref: '#/definitions/TimeOffRequest'
  DateRange:
    type: object
    properties:
      startDate:
        type: string
        description: >-
          The inclusive start of a date range in yyyy-MM-dd format. Should be
          interpreted in the management unit's configured time zone.
      endDate:
        type: string
        description: >-
          The inclusive end of a date range in yyyy-MM-dd format. Should be
          interpreted in the management unit's configured time zone.
  TimeOffRequestQueryBody:
    type: object
    properties:
      ids:
        type: array
        description: The set of ids to filter time off requests
        uniqueItems: true
        items:
          type: string
      userIds:
        type: array
        description: The set of user ids to filter time off requests
        uniqueItems: true
        items:
          type: string
      statuses:
        type: array
        description: The set of statuses to filter time off requests
        uniqueItems: true
        items:
          type: string
          enum:
            - PENDING
      substatuses:
        type: array
        description: The set of substatuses to filter time off requests
        uniqueItems: true
        items:
          type: string
          enum:
            - AdvanceTimeElapsed
            - AutoApproved
            - InsufficientBalance
            - InvalidDailyDuration
            - OutsideShift
            - RemovedFromWaitlist
            - Waitlisted
      dateRange:
        description: The inclusive range of dates to filter time off requests
        $ref: '#/definitions/DateRange'
  CreateAdminTimeOffRequest:
    type: object
    required:
      - activityCodeId
      - dailyDurationMinutes
      - status
      - users
    properties:
      status:
        type: string
        description: The status of this time off request
        enum:
          - PENDING
          - APPROVED
      users:
        type: array
        description: A set of IDs for users to associate with this time off request
        uniqueItems: true
        items:
          $ref: '#/definitions/UserReference'
      activityCodeId:
        type: string
        description: >-
          The ID of the activity code associated with this time off request.
          Activity code must be of the TimeOff category
      notes:
        type: string
        description: Notes about the time off request
      fullDayManagementUnitDates:
        type: array
        description: >-
          A set of dates in yyyy-MM-dd format.  Should be interpreted in the
          management unit's configured time zone.
        items:
          type: string
      partialDayStartDateTimes:
        type: array
        description: A set of start date-times in ISO-8601 format for partial day requests.
        items:
          type: string
          format: date-time
      dailyDurationMinutes:
        type: integer
        format: int32
        description: The daily duration of this time off request in minutes
      paid:
        type: boolean
        description: Whether this is a paid time off request
  AdminTimeOffRequestPatch:
    type: object
    required:
      - metadata
    properties:
      status:
        type: string
        description: The status of this time off request
        enum:
          - PENDING
          - APPROVED
          - DENIED
      activityCodeId:
        type: string
        description: >-
          The ID of the activity code associated with this time off request.
          Activity code must be of the TimeOff category
      notes:
        type: string
        description: Notes about the time off request
      fullDayManagementUnitDates:
        type: array
        description: >-
          A set of dates in yyyy-MM-dd format.  Should be interpreted in the
          management unit's configured time zone.
        items:
          type: string
      partialDayStartDateTimes:
        type: array
        description: A set of start date-times in ISO-8601 format for partial day requests.
        items:
          type: string
          format: date-time
      dailyDurationMinutes:
        type: integer
        format: int32
        description: The daily duration of this time off request in minutes
      metadata:
        description: Version metadata for the time off request
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  WaitlistPosition:
    type: object
    properties:
      timeOffRequest:
        description: The time off request for this wait list position
        $ref: '#/definitions/TimeOffRequestReference'
      timeOffLimit:
        description: The time off limit for which time off request is waitlisted
        $ref: '#/definitions/TimeOffLimitReference'
      date:
        type: string
        format: date
        description: >-
          The date to which this wait list position applies, as defined by the
          time zone of the business unit. Dates are represented as an ISO-8601
          string. For example: yyyy-MM-dd
      waitlistPosition:
        type: integer
        format: int32
        description: >-
          The time off request's position in the waitlist on the date. 1 means
          time off is the first in the waitlist
  WaitlistPositionListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WaitlistPosition'
  QueryWaitlistPositionsRequest:
    type: object
    required:
      - timeOffRequests
    properties:
      timeOffRequests:
        type: array
        description: >-
          The list of the time off request ids for which to fetch the daily
          waitlist positions
        items:
          $ref: '#/definitions/UserTimeOffRequestReference'
  UserTimeOffRequestReference:
    type: object
    required:
      - user
    properties:
      id:
        type: string
        description: The id of the time off request
      user:
        description: The ID of the user to whom the time off request applies
        $ref: '#/definitions/UserReference'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  SearchShiftTradeResponse:
    type: object
    properties:
      trade:
        description: A trade which matches search criteria
        $ref: '#/definitions/ShiftTradeResponse'
      matchingReceivingShiftIds:
        type: array
        description: IDs of shifts which match the search criteria
        items:
          type: string
      preview:
        description: A preview of what the shift trade would look like if matched
        $ref: '#/definitions/ShiftTradePreviewResponse'
  SearchShiftTradesResponse:
    type: object
    properties:
      trades:
        type: array
        description: The shift trades that match the search criteria
        items:
          $ref: '#/definitions/SearchShiftTradeResponse'
  ShiftTradeActivityPreviewResponse:
    type: object
    properties:
      startDate:
        type: string
        format: date-time
        description: >-
          The start date and time of this activity. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      lengthMinutes:
        type: integer
        format: int32
        description: The length in minutes of this activity
      activityCodeId:
        type: string
        description: The ID of the activity code for this activity
      countsAsPaidTime:
        type: boolean
        description: Whether this activity counts as paid time
  ShiftTradePreviewResponse:
    type: object
    properties:
      activities:
        type: array
        description: >-
          List of activities that will make up the new shift if this shift trade
          is approved
        items:
          $ref: '#/definitions/ShiftTradeActivityPreviewResponse'
  SearchShiftTradesRequest:
    type: object
    required:
      - receivingScheduleId
    properties:
      receivingScheduleId:
        type: string
        description: The ID of the schedule for which to search for available shift trades
      receivingShiftIds:
        type: array
        description: >-
          The IDs of shifts that the receiving user would potentially be willing
          to trade. If empty, only returns one sided trades (pick up a shift)
        uniqueItems: true
        items:
          type: string
  ShiftTradeMatchReviewResponse:
    type: object
    properties:
      initiatingUser:
        description: Details for the initiatingUser side of the shift trade
        $ref: '#/definitions/ShiftTradeMatchReviewUserResponse'
      receivingUser:
        description: Details for the receivingUser side of the shift trade
        $ref: '#/definitions/ShiftTradeMatchReviewUserResponse'
      violations:
        type: array
        description: >-
          Constraint violations introduced after being matched that would
          normally disallow a trade, but which can still be overridden by the
          shift trade administrator
        items:
          $ref: '#/definitions/ShiftTradeMatchViolation'
      adminReviewViolations:
        type: array
        description: >-
          Constraint violations associated with this shift trade which require
          shift trade administrator review
        items:
          $ref: '#/definitions/ShiftTradeMatchViolation'
  ShiftTradeMatchReviewUserResponse:
    type: object
    properties:
      weeklyMinimumPaidMinutes:
        type: integer
        format: int32
        description: >-
          The minimum weekly paid minutes for this user per the work plan tied
          to the agent schedule
      weeklyMaximumPaidMinutes:
        type: integer
        format: int32
        description: >-
          The maximum weekly paid minutes for this user per the work plan tied
          to the agent schedule
      preTradeSchedulePaidMinutes:
        type: integer
        format: int32
        description: >-
          The paid minutes on the week schedule for this user prior to the shift
          trade
      postTradeSchedulePaidMinutes:
        type: integer
        format: int32
        description: >-
          The paid minutes on the week schedule for this user if the shift trade
          is approved
      postTradeNewShift:
        description: >-
          Preview of what the shift will look like for the opposite side of this
          trade after the match is approved
        $ref: '#/definitions/ShiftTradePreviewResponse'
  ShiftTradeMatchViolation:
    type: object
    properties:
      type:
        type: string
        description: The type of constraint violation
        enum:
          - AgentCapabilityMismatch
          - CannotTradeWithYourself
          - DirectTradeForOtherUser
          - InitiatingAgentScheduleDoesNotExist
          - InitiatingShiftDisallowedActivityCategory
          - InitiatingShiftDoesNotExist
          - InitiatingShiftHasExternalActivities
          - InitiatingShiftOverlapsExisting
          - InitiatingShiftStartTooClose
          - InitiatingShiftTimesChanged
          - InitiatingWeeklyMaxPaidTime
          - InitiatingWeeklyMinPaidTime
          - InvalidState
          - OneSidedTradeCreation
          - ReceivingAgentScheduleDoesNotExist
          - ReceivingShiftDisallowedActivityCategory
          - ReceivingShiftDoesNotExist
          - ReceivingShiftForOneSidedTrade
          - ReceivingShiftHasExternalActivities
          - ReceivingShiftMissingForTwoSidedTrade
          - ReceivingShiftOutsideAcceptableIntervals
          - ReceivingShiftOverlapsExisting
          - ReceivingShiftStartTooClose
          - ReceivingShiftTimesChanged
          - ReceivingWeeklyMaxPaidTime
          - ReceivingWeeklyMinPaidTime
          - ShiftTradingNotEnabled
          - UnequalPaidTime
          - WeekScheduleDifferent
          - WeekScheduleDoesNotExist
          - WeekScheduleUnpublished
      params:
        type: object
        description: Clarifying user params for constructing helpful error messages
        additionalProperties:
          type: string
  WeekShiftTradeListResponse:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WeekShiftTradeResponse'
  WeekShiftTradeResponse:
    type: object
    properties:
      trade:
        description: The shift trade details
        $ref: '#/definitions/ShiftTradeResponse'
      matchReview:
        description: >-
          A preview of what the schedule would look like if the shift trade is
          approved plus any violations
        $ref: '#/definitions/ShiftTradeMatchReviewResponse'
  AddShiftTradeRequest:
    type: object
    required:
      - initiatingShiftId
      - scheduleId
    properties:
      scheduleId:
        type: string
        description: >-
          The ID of the schedule to which the initiating and receiving shifts
          belong
      initiatingShiftId:
        type: string
        description: The ID of the shift that the initiating user wants to give up
      receivingUserId:
        type: string
        description: >-
          The ID of the user to whom to send the request (for use in direct
          trade requests)
      expiration:
        type: string
        format: date-time
        description: >-
          When this shift trade request should expire. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      acceptableIntervals:
        type: array
        items:
          type: string
          description: >-
            Intervals are represented as an ISO-8601 string. For example:
            YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
  BulkUpdateShiftTradeStateResponse:
    type: object
    properties:
      status:
        type: string
        description: The status of the operation
        enum:
          - Processing
          - Complete
          - Canceled
          - Error
      operationId:
        type: string
        description: The ID for the operation
      result:
        description: The result of the operation.  Null unless status == Complete
        $ref: '#/definitions/BulkUpdateShiftTradeStateResult'
  BulkUpdateShiftTradeStateResult:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/BulkUpdateShiftTradeStateResultItem'
  BulkUpdateShiftTradeStateResultItem:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      state:
        type: string
        description: The state of the shift trade after the update request is processed
        enum:
          - Unmatched
          - Matched
          - Approved
          - Denied
          - Expired
          - Canceled
      reviewedBy:
        description: The user who reviewed the request, if applicable
        $ref: '#/definitions/UserReference'
      reviewedDate:
        type: string
        format: date-time
        description: >-
          The date the request was reviewed, if applicable. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      failureReason:
        type: string
        description: The reason the update failed, if applicable
        enum:
          - InitiatingAgentScheduleNotFound
          - InitiatingAgentShiftHasExternalActivities
          - InitiatingAgentShiftNotFound
          - ReceivingAgentNotFound
          - ReceivingAgentScheduleNotFound
          - ReceivingAgentShiftHasExternalActivities
          - ReceivingAgentShiftNotFound
          - ScheduleNotPublished
          - TransitionNotAllowed
      metadata:
        description: Version metadata for the shift trade
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  BulkShiftTradeStateUpdateRequest:
    type: object
    required:
      - entities
    properties:
      entities:
        type: array
        description: The shift trades to update
        items:
          $ref: '#/definitions/BulkUpdateShiftTradeStateRequestItem'
  BulkUpdateShiftTradeStateRequestItem:
    type: object
    required:
      - metadata
      - state
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      state:
        type: string
        description: The new state to set on the shift trade
        enum:
          - Unmatched
          - Matched
          - Approved
          - Denied
          - Expired
          - Canceled
      metadata:
        description: Version metadata for the shift trade
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  ListWrapperInterval:
    type: object
    properties:
      values:
        type: array
        items:
          type: string
          description: >-
            Intervals are represented as an ISO-8601 string. For example:
            YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
  PatchShiftTradeRequest:
    type: object
    required:
      - metadata
    properties:
      receivingUserId:
        description: >-
          Update the ID of the receiving user to direct the request at a
          specific user, or set the wrapped id to null to open up a trade to be
          matched by any user.
        $ref: '#/definitions/ValueWrapperString'
      expiration:
        description: Update the expiration time for this shift trade.
        $ref: '#/definitions/ValueWrapperDate'
      acceptableIntervals:
        description: >-
          Update the acceptable intervals the initiating user is willing to
          accept in trade. Setting the enclosed list to empty will make this a
          one sided trade request
        $ref: '#/definitions/ListWrapperInterval'
      metadata:
        description: Version metadata
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  ValueWrapperDate:
    type: object
    properties:
      value:
        type: string
        format: date-time
        description: >-
          The value for the associated field. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  ValueWrapperString:
    type: object
    properties:
      value:
        type: string
        description: The value for the associated field
  MatchShiftTradeResponse:
    type: object
    properties:
      trade:
        description: The associated shift trade
        $ref: '#/definitions/ShiftTradeResponse'
      violations:
        type: array
        description: Constraint violations which disallow this shift trade
        items:
          $ref: '#/definitions/ShiftTradeMatchViolation'
      adminReviewViolations:
        type: array
        description: >-
          Constraint violations for this shift trade which require shift trade
          administrator review
        items:
          $ref: '#/definitions/ShiftTradeMatchViolation'
  MatchShiftTradeRequest:
    type: object
    required:
      - metadata
      - receivingScheduleId
    properties:
      receivingScheduleId:
        type: string
        description: The ID of the schedule with which the shift trade is associated
      receivingShiftId:
        type: string
        description: >-
          The ID of the shift the receiving user is giving up in trade, if
          applicable
      metadata:
        description: Version metadata for the shift trade
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  AgentManagementUnitReference:
    type: object
    properties:
      user:
        description: The user (agent) for whom the management unit was requested
        $ref: '#/definitions/UserReference'
      managementUnit:
        description: The management to which the user (agent) belongs
        $ref: '#/definitions/ManagementUnitReference'
      businessUnit:
        description: >-
          The business unit to which the user (agent) belongs. Populate with
          expand=businessUnit
        $ref: '#/definitions/BusinessUnitReference'
  ConstraintConflictMessage:
    type: object
    properties:
      message:
        description: Message for how to resolve a set of conflicted work plan constraints
        $ref: '#/definitions/WorkPlanConstraintConflictMessage'
      conflictedConstraintMessages:
        type: array
        description: >-
          Messages for the set of conflicted work plan constraints. Each element
          indicates the message of a work plan constraint that is conflicted in
          the set
        items:
          $ref: '#/definitions/WorkPlanConstraintMessage'
  ValidateWorkPlanMessages:
    type: object
    properties:
      violationMessages:
        type: array
        description: >-
          Messages for work plan violating some rules such as no shifts in a
          work plan
        items:
          $ref: '#/definitions/WorkPlanConfigurationViolationMessage'
      constraintConflictMessage:
        description: >-
          This field is not null when there is a set of work plan constraints
          that conflict thus agent schedules cannot be generated
        $ref: '#/definitions/ConstraintConflictMessage'
  ValidateWorkPlanResponse:
    type: object
    properties:
      workPlan:
        description: The work plan reference associated with this response
        $ref: '#/definitions/WorkPlanReference'
      valid:
        type: boolean
        description: Whether the work plan is valid or not
      messages:
        description: Validation messages for this work plan
        $ref: '#/definitions/ValidateWorkPlanMessages'
  WorkPlanConfigurationViolationMessage:
    type: object
    properties:
      type:
        type: string
        description: Type of configuration violation message for this work plan
        enum:
          - ActivitiesOverlap
          - ActivityEndGreaterThanShiftStop
          - ActivityPaidTimeGreaterThanShiftPaidTime
          - ActivityStartBeforeShiftStart
          - ActivityStartGreaterThanEqualToShiftStop
          - ActivityStartIncrementMinutesNotDivisibleByScheduleIntervalMinutes
          - DailyExactPaidMinutes
          - DailyMaxTotalLessThanWeeklyMin
          - DailyMaxTotalLessThanWeeklyMinWithOptional
          - DailyMaxTotalLessThanWeeklyMinWithoutOptional
          - DailyMinTotalGreaterThanWeeklyMax
          - DailyMinTotalGreaterThanWeeklyMaxWithOptional
          - DailyMinTotalGreaterThanWeeklyMaxWithoutOptional
          - DailyRequiredDaysGreaterThanWeeklyMaxDays
          - DailyShiftHasNoDaysSelected
          - DailyShiftMaxPossibilitiesViolated
          - EarliestShiftStopIsTooLate
          - ExactPaidTimeNotDivisibleByGranularity
          - MaxConsecutiveWorkingDaysNoMoreThanDoubleMaxWorkingDaysPerWeek
          - MaxDaysOffPerPlanningPeriodNotCorrect
          - MaxPaidTimeIsMoreThanShiftLength
          - MaxPaidTimeNotDivisibleByGranularity
          - MaxPaidTimePerPlanningPeriod
          - MaxShifts
          - MinPaidTimeNotDivisibleByGranularity
          - MinPaidTimePerPlanningPeriod
          - NoShifts
          - PaidTimeGreaterThanMaxWorkTime
          - PaidTimeLessThanMinWorkTime
          - PaidTimeNotMetByShiftStartStop
          - ShiftDaysSelectMoreThanMinWorkingDays
          - ShiftStopEarlierThanStart
          - ShiftVarianceCannotBeMet
          - WeeklyExactPaidMinutes
      arguments:
        type: array
        description: >-
          Arguments of the message that provide information about the
          misconfigured value or the threshold that is exceeded by the
          misconfigured value
        items:
          $ref: '#/definitions/WorkPlanValidationMessageArgument'
      severity:
        type: string
        description: >-
          Severity of the message. A message with Error severity indicates the
          scheduler won't be able to produce schedules and thus the work plan is
          invalid.
        enum:
          - Information
          - Warning
          - Error
  WorkPlanConstraintConflictMessage:
    type: object
    properties:
      type:
        type: string
        description: >-
          Type of constraint conflict that can be resolved by clients in order
          to generate agent schedules
        enum:
          - UnknownFix
          - WithPotentialFixes
      arguments:
        type: array
        description: >-
          The arguments to the type of the message that can help clients resolve
          validation issues
        items:
          $ref: '#/definitions/WorkPlanValidationMessageArgument'
  WorkPlanConstraintMessage:
    type: object
    properties:
      type:
        type: string
        description: Type of the work plan constraint in this message
        enum:
          - ActivityEarliestStartTimeMinutesFromMidnight
          - ActivityEarliestStartTimeMinutesFromShiftStart
          - ActivityLatestStartTimeMinutesFromMidnight
          - ActivityLatestStartTimeMinutesFromShiftStart
          - ActivityMinimumLengthFromShiftEndMinutes
          - ActivityMinimumLengthFromShiftStartMinutes
          - ActivityStartTimeIncrementInMinutes
          - PlanningPeriodMaximumDaysOff
          - PlanningPeriodMaximumPaidTimeMinutes
          - PlanningPeriodMinimumDaysOff
          - PlanningPeriodMinimumPaidTimeMinutes
          - ShiftDayOffRule
          - ShiftEarliestStartTimeMinutesFromMidnight
          - ShiftEarliestStopTimeMinutesFromMidnight
          - ShiftLatestStartTimeMinutesFromMidnight
          - ShiftLatestStopTimeMinutesFromMidnight
          - ShiftMaximumContiguousTimeMinutes
          - ShiftMaximumPaidTimeMinutes
          - ShiftMinimumContiguousTimeMinutes
          - ShiftMinimumPaidTimeMinutes
          - ShiftStartTimeIncrementInMinutes
          - ShiftStartVarianceMaximumVarianceMinutes
          - ShiftStartVariancePaidDuration
          - WorkPlanMaximumConsecutiveWorkingDays
          - WorkPlanMaximumConsecutiveWorkingWeekends
          - WorkPlanMaximumWeeklyPaidTimeMinutes
          - WorkPlanMaximumWorkingDaysPerWeek
          - WorkPlanMinimumConsecutiveNonWorkingTimePerWeekMinutes
          - WorkPlanMinimumInterShiftTimeMinutes
          - WorkPlanMinimumShiftStartDistanceMinutes
          - WorkPlanMinimumWeeklyPaidTimeMinutes
          - WorkPlanMinimumWorkingDaysPerWeek
          - WorkPlanOptionalDays
          - WorkPlanPaidTimeGranularityMinutes
      arguments:
        type: array
        description: >-
          Arguments of the message that provide information about the constraint
          that is being conflicted with, such as the value of the constraint
        items:
          $ref: '#/definitions/WorkPlanValidationMessageArgument'
  WorkPlanValidationMessageArgument:
    type: object
    properties:
      type:
        type: string
        description: The type of the argument associated with violation messages
        enum:
          - ActivityId
          - ActivityId2
          - ActivityPaidTimeMinutes
          - ActivityStartTimeMinutes
          - ActivityValidationId
          - ActivityValidationId2
          - ApplicableDays
          - Count
          - DailyPaidTimeMinutes
          - MaximumDays
          - MaxShiftCount
          - Minutes
          - PaidTimeGranularityMinutes
          - RequiredDays
          - ShiftId
          - ShiftPaidTimeMinutes
          - ShiftStartTimeMinutes
          - ShiftStopTimeMinutes
          - ShiftValidationId
          - WeeklyPaidTimeMinutes
          - Weeks
          - WorkTimeMinutes
      value:
        type: string
        description: The value of the argument
  DeletableUserReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      delete:
        type: boolean
        description: If marked true, the user will be removed an associated entity
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ListWrapperShiftStartVariance:
    type: object
    properties:
      values:
        type: array
        items:
          $ref: '#/definitions/ShiftStartVariance'
  SetWrapperDayOfWeek:
    type: object
    properties:
      values:
        type: array
        uniqueItems: true
        items:
          type: string
          enum:
            - Sunday
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
  ShiftStartVariance:
    type: object
    required:
      - applicableDays
      - maxShiftStartVarianceMinutes
    properties:
      applicableDays:
        type: array
        description: Days for which shift start variance is configured
        uniqueItems: true
        items:
          type: string
          enum:
            - Sunday
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
      maxShiftStartVarianceMinutes:
        type: integer
        format: int32
        description: Maximum variance in minutes across shift starts
  WorkPlanActivity:
    type: object
    properties:
      activityCodeId:
        type: string
        description: ID of the activity code associated with this activity
      description:
        type: string
        description: Description of the activity
      lengthMinutes:
        type: integer
        format: int32
        description: Length of the activity in minutes
      startTimeIsRelativeToShiftStart:
        type: boolean
        description: >-
          Whether the start time of the activity is relative to the start time
          of the shift it belongs to
      flexibleStartTime:
        type: boolean
        description: Whether the start time of the activity is flexible
      earliestStartTimeMinutes:
        type: integer
        format: int32
        description: >-
          Earliest activity start in offset minutes relative to shift start time
          if startTimeIsRelativeToShiftStart == true else its based on midnight.
          Used if flexibleStartTime == true
      latestStartTimeMinutes:
        type: integer
        format: int32
        description: >-
          Latest activity start in offset minutes relative to shift start time
          if startTimeIsRelativeToShiftStart == true else its based on midnight.
          Used if flexibleStartTime == true
      exactStartTimeMinutes:
        type: integer
        format: int32
        description: >-
          Exact activity start in offset minutes relative to shift start time if
          startTimeIsRelativeToShiftStart == true else its based on midnight.
          Used if flexibleStartTime == false
      startTimeIncrementMinutes:
        type: integer
        format: int32
        description: >-
          Increment in offset minutes that would contribute to different
          possible start times for the activity
      countsAsPaidTime:
        type: boolean
        description: Whether the activity is paid
      countsAsContiguousWorkTime:
        type: boolean
        description: Whether the activity duration is counted towards contiguous work time
      minimumLengthFromShiftStartMinutes:
        type: integer
        format: int32
        description: >-
          The minimum duration between shift start and shift item (e.g., break
          or meal) start in minutes
      minimumLengthFromShiftEndMinutes:
        type: integer
        format: int32
        description: >-
          The minimum duration between shift item (e.g., break or meal) end and
          shift end in minutes
      id:
        type: string
        description: >-
          ID of the activity. This is required only for the case of updating an
          existing activity
      delete:
        type: boolean
        description: >-
          If marked true for updating an existing activity, the activity will be
          permanently deleted
      validationId:
        type: string
        description: ID of the activity in the context of work plan validation
  WorkPlanShift:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: Name of the shift
      days:
        description: Days of the week applicable for this shift
        $ref: '#/definitions/SetWrapperDayOfWeek'
      flexibleStartTime:
        type: boolean
        description: Whether the start time of the shift is flexible
      exactStartTimeMinutesFromMidnight:
        type: integer
        format: int32
        description: >-
          Exact start time of the shift defined as offset minutes from midnight.
          Used if flexibleStartTime == false
      earliestStartTimeMinutesFromMidnight:
        type: integer
        format: int32
        description: >-
          Earliest start time of the shift defined as offset minutes from
          midnight. Used if flexibleStartTime == true
      latestStartTimeMinutesFromMidnight:
        type: integer
        format: int32
        description: >-
          Latest start time of the shift defined as offset minutes from
          midnight. Used if flexibleStartTime == true
      constrainStopTime:
        type: boolean
        description: >-
          Whether the latest stop time constraint for the shift is enabled. 
          Deprecated, use constrainLatestStopTime instead
      constrainLatestStopTime:
        type: boolean
        description: Whether the latest stop time constraint for the shift is enabled
      latestStopTimeMinutesFromMidnight:
        type: integer
        format: int32
        description: >-
          Latest stop time of the shift defined as offset minutes from midnight.
          Used if constrainStopTime == true
      constrainEarliestStopTime:
        type: boolean
        description: Whether the earliest stop time constraint for the shift is enabled
      earliestStopTimeMinutesFromMidnight:
        type: integer
        format: int32
        description: This is the earliest time a shift can end
      startIncrementMinutes:
        type: integer
        format: int32
        description: >-
          Increment in offset minutes that would contribute to different
          possible start times for the shift. Used if flexibleStartTime == true
      flexiblePaidTime:
        type: boolean
        description: Whether the paid time setting for the shift is flexible
      exactPaidTimeMinutes:
        type: integer
        format: int32
        description: >-
          Exact paid time in minutes configured for the shift. Used if
          flexiblePaidTime == false
      minimumPaidTimeMinutes:
        type: integer
        format: int32
        description: >-
          Minimum paid time in minutes configured for the shift. Used if
          flexiblePaidTime == true
      maximumPaidTimeMinutes:
        type: integer
        format: int32
        description: >-
          Maximum paid time in minutes configured for the shift. Used if
          flexiblePaidTime == true
      constrainContiguousWorkTime:
        type: boolean
        description: Whether the contiguous time constraint for the shift is enabled
      minimumContiguousWorkTimeMinutes:
        type: integer
        format: int32
        description: >-
          Minimum contiguous time in minutes configured for the shift. Used if
          constrainContiguousWorkTime == true
      maximumContiguousWorkTimeMinutes:
        type: integer
        format: int32
        description: >-
          Maximum contiguous time in minutes configured for the shift. Used if
          constrainContiguousWorkTime == true
      constrainDayOff:
        type: boolean
        description: Whether day off rule is enabled
      dayOffRule:
        type: string
        description: >-
          The day off rule for agents to have next day off or previous day off.
          used if constrainDayOff = true
        enum:
          - NextDayOff
          - PreviousDayOff
      activities:
        type: array
        description: Activities configured for this shift
        items:
          $ref: '#/definitions/WorkPlanActivity'
      id:
        type: string
        description: >-
          ID of the shift. This is required only for the case of updating an
          existing shift
      delete:
        type: boolean
        description: >-
          If marked true for updating an existing shift, the shift will be
          permanently deleted
      validationId:
        type: string
        description: ID of shift in the context of work plan validation
  WorkPlanValidationRequest:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      enabled:
        type: boolean
        description: Whether the work plan is enabled for scheduling
      valid:
        type: boolean
        description: Whether the work plan is valid or not
        readOnly: true
      constrainWeeklyPaidTime:
        type: boolean
        description: Whether the weekly paid time constraint is enabled for this work plan
      flexibleWeeklyPaidTime:
        type: boolean
        description: Whether the weekly paid time constraint is flexible for this work plan
      weeklyExactPaidMinutes:
        type: integer
        format: int32
        description: >-
          Exact weekly paid time in minutes for this work plan. Used if
          flexibleWeeklyPaidTime == false
      weeklyMinimumPaidMinutes:
        type: integer
        format: int32
        description: >-
          Minimum weekly paid time in minutes for this work plan. Used if
          flexibleWeeklyPaidTime == true
      weeklyMaximumPaidMinutes:
        type: integer
        format: int32
        description: >-
          Maximum weekly paid time in minutes for this work plan. Used if
          flexibleWeeklyPaidTime == true
      constrainPaidTimeGranularity:
        type: boolean
        description: Whether paid time granularity is constrained for this work plan
      paidTimeGranularityMinutes:
        type: integer
        format: int32
        description: >-
          Granularity in minutes allowed for shift paid time in this work plan.
          Used if constrainPaidTimeGranularity == true
      constrainMinimumTimeBetweenShifts:
        type: boolean
        description: >-
          Whether the minimum time between shifts constraint is enabled for this
          work plan
      minimumTimeBetweenShiftsMinutes:
        type: integer
        format: int32
        description: >-
          Minimum time between shifts in minutes defined in this work plan. Used
          if constrainMinimumTimeBetweenShifts == true
      maximumDays:
        type: integer
        format: int32
        description: >-
          Maximum number days in a week allowed to be scheduled for this work
          plan
      minimumConsecutiveNonWorkingMinutesPerWeek:
        type: integer
        format: int32
        description: >-
          Minimum amount of consecutive non working minutes per week that agents
          who are assigned this work plan are allowed to have off
      constrainMaximumConsecutiveWorkingWeekends:
        type: boolean
        description: Whether to constrain the maximum consecutive working weekends
      maximumConsecutiveWorkingWeekends:
        type: integer
        format: int32
        description: >-
          The maximum number of consecutive weekends that agents who are
          assigned to this work plan are allowed to work
      minimumWorkingDaysPerWeek:
        type: integer
        format: int32
        description: >-
          The minimum number of days that agents assigned to a work plan must
          work per week
      constrainMaximumConsecutiveWorkingDays:
        type: boolean
        description: Whether to constrain the maximum consecutive working days
      maximumConsecutiveWorkingDays:
        type: integer
        format: int32
        description: >-
          The maximum number of consecutive days that agents assigned to this
          work plan are allowed to work. Used if
          constrainMaximumConsecutiveWorkingDays == true
      minimumShiftStartDistanceMinutes:
        type: integer
        format: int32
        description: >-
          The time period in minutes for the duration between the start times of
          two consecutive working days
      minimumDaysOffPerPlanningPeriod:
        type: integer
        format: int32
        description: Minimum days off in the planning period
      maximumDaysOffPerPlanningPeriod:
        type: integer
        format: int32
        description: Maximum days off in the planning period
      minimumPaidMinutesPerPlanningPeriod:
        type: integer
        format: int32
        description: Minimum paid minutes in the planning period
      maximumPaidMinutesPerPlanningPeriod:
        type: integer
        format: int32
        description: Maximum paid minutes in the planning period
      optionalDays:
        description: Optional days to schedule for this work plan
        $ref: '#/definitions/SetWrapperDayOfWeek'
      shiftStartVarianceType:
        type: string
        description: >-
          This constraint ensures that an agent starts each workday within a
          user-defined time threshold
        enum:
          - ShiftStart
          - ShiftStartAndPaidDuration
      shiftStartVariances:
        description: Variance in minutes among start times of shifts in this work plan
        $ref: '#/definitions/ListWrapperShiftStartVariance'
      shifts:
        type: array
        description: Shifts in this work plan
        items:
          $ref: '#/definitions/WorkPlanShift'
      agents:
        type: array
        description: Agents in this work plan
        items:
          $ref: '#/definitions/DeletableUserReference'
      agentCount:
        type: integer
        format: int32
        description: Number of agents in this work plan
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WorkPlanListItemResponse:
    type: object
    required:
      - metadata
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      enabled:
        type: boolean
        description: Whether the work plan is enabled for scheduling
      valid:
        type: boolean
        description: Whether the work plan is valid or not
        readOnly: true
      constrainWeeklyPaidTime:
        type: boolean
        description: Whether the weekly paid time constraint is enabled for this work plan
      flexibleWeeklyPaidTime:
        type: boolean
        description: Whether the weekly paid time constraint is flexible for this work plan
      weeklyExactPaidMinutes:
        type: integer
        format: int32
        description: >-
          Exact weekly paid time in minutes for this work plan. Used if
          flexibleWeeklyPaidTime == false
      weeklyMinimumPaidMinutes:
        type: integer
        format: int32
        description: >-
          Minimum weekly paid time in minutes for this work plan. Used if
          flexibleWeeklyPaidTime == true
      weeklyMaximumPaidMinutes:
        type: integer
        format: int32
        description: >-
          Maximum weekly paid time in minutes for this work plan. Used if
          flexibleWeeklyPaidTime == true
      constrainPaidTimeGranularity:
        type: boolean
        description: Whether paid time granularity is constrained for this work plan
      paidTimeGranularityMinutes:
        type: integer
        format: int32
        description: >-
          Granularity in minutes allowed for shift paid time in this work plan.
          Used if constrainPaidTimeGranularity == true
      constrainMinimumTimeBetweenShifts:
        type: boolean
        description: >-
          Whether the minimum time between shifts constraint is enabled for this
          work plan
      minimumTimeBetweenShiftsMinutes:
        type: integer
        format: int32
        description: >-
          Minimum time between shifts in minutes defined in this work plan. Used
          if constrainMinimumTimeBetweenShifts == true
      maximumDays:
        type: integer
        format: int32
        description: >-
          Maximum number days in a week allowed to be scheduled for this work
          plan
      minimumConsecutiveNonWorkingMinutesPerWeek:
        type: integer
        format: int32
        description: >-
          Minimum amount of consecutive non working minutes per week that agents
          who are assigned this work plan are allowed to have off
      constrainMaximumConsecutiveWorkingWeekends:
        type: boolean
        description: Whether to constrain the maximum consecutive working weekends
      maximumConsecutiveWorkingWeekends:
        type: integer
        format: int32
        description: >-
          The maximum number of consecutive weekends that agents who are
          assigned to this work plan are allowed to work
      minimumWorkingDaysPerWeek:
        type: integer
        format: int32
        description: >-
          The minimum number of days that agents assigned to a work plan must
          work per week
      constrainMaximumConsecutiveWorkingDays:
        type: boolean
        description: Whether to constrain the maximum consecutive working days
      maximumConsecutiveWorkingDays:
        type: integer
        format: int32
        description: >-
          The maximum number of consecutive days that agents assigned to this
          work plan are allowed to work. Used if
          constrainMaximumConsecutiveWorkingDays == true
      minimumShiftStartDistanceMinutes:
        type: integer
        format: int32
        description: >-
          The time period in minutes for the duration between the start times of
          two consecutive working days
      minimumDaysOffPerPlanningPeriod:
        type: integer
        format: int32
        description: Minimum days off in the planning period
      maximumDaysOffPerPlanningPeriod:
        type: integer
        format: int32
        description: Maximum days off in the planning period
      minimumPaidMinutesPerPlanningPeriod:
        type: integer
        format: int32
        description: Minimum paid minutes in the planning period
      maximumPaidMinutesPerPlanningPeriod:
        type: integer
        format: int32
        description: Maximum paid minutes in the planning period
      optionalDays:
        description: >-
          Optional days to schedule for this work plan. Populate with
          expand=details
        $ref: '#/definitions/SetWrapperDayOfWeek'
      shiftStartVarianceType:
        type: string
        description: >-
          This constraint ensures that an agent starts each workday within a
          user-defined time threshold
        enum:
          - ShiftStart
          - ShiftStartAndPaidDuration
      shiftStartVariances:
        description: >-
          Variance in minutes among start times of shifts in this work plan.
          Populate with expand=details
        $ref: '#/definitions/ListWrapperShiftStartVariance'
      shifts:
        type: array
        description: >-
          Shifts in this work plan. Populate with expand=details (defaults to
          empty list)
        items:
          $ref: '#/definitions/WorkPlanShift'
      agents:
        type: array
        description: >-
          Agents in this work plan. Populate with expand=details (defaults to
          empty list)
        items:
          $ref: '#/definitions/DeletableUserReference'
      agentCount:
        type: integer
        format: int32
        description: Number of agents in this work plan.  Populate with expand=agentCount
      metadata:
        description: Version metadata for this work plan
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WorkPlanListResponse:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WorkPlanListItemResponse'
  WorkPlan:
    type: object
    required:
      - metadata
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      enabled:
        type: boolean
        description: Whether the work plan is enabled for scheduling
      valid:
        type: boolean
        description: Whether the work plan is valid or not
        readOnly: true
      constrainWeeklyPaidTime:
        type: boolean
        description: Whether the weekly paid time constraint is enabled for this work plan
      flexibleWeeklyPaidTime:
        type: boolean
        description: Whether the weekly paid time constraint is flexible for this work plan
      weeklyExactPaidMinutes:
        type: integer
        format: int32
        description: >-
          Exact weekly paid time in minutes for this work plan. Used if
          flexibleWeeklyPaidTime == false
      weeklyMinimumPaidMinutes:
        type: integer
        format: int32
        description: >-
          Minimum weekly paid time in minutes for this work plan. Used if
          flexibleWeeklyPaidTime == true
      weeklyMaximumPaidMinutes:
        type: integer
        format: int32
        description: >-
          Maximum weekly paid time in minutes for this work plan. Used if
          flexibleWeeklyPaidTime == true
      constrainPaidTimeGranularity:
        type: boolean
        description: Whether paid time granularity is constrained for this work plan
      paidTimeGranularityMinutes:
        type: integer
        format: int32
        description: >-
          Granularity in minutes allowed for shift paid time in this work plan.
          Used if constrainPaidTimeGranularity == true
      constrainMinimumTimeBetweenShifts:
        type: boolean
        description: >-
          Whether the minimum time between shifts constraint is enabled for this
          work plan
      minimumTimeBetweenShiftsMinutes:
        type: integer
        format: int32
        description: >-
          Minimum time between shifts in minutes defined in this work plan. Used
          if constrainMinimumTimeBetweenShifts == true
      maximumDays:
        type: integer
        format: int32
        description: >-
          Maximum number days in a week allowed to be scheduled for this work
          plan
      minimumConsecutiveNonWorkingMinutesPerWeek:
        type: integer
        format: int32
        description: >-
          Minimum amount of consecutive non working minutes per week that agents
          who are assigned this work plan are allowed to have off
      constrainMaximumConsecutiveWorkingWeekends:
        type: boolean
        description: Whether to constrain the maximum consecutive working weekends
      maximumConsecutiveWorkingWeekends:
        type: integer
        format: int32
        description: >-
          The maximum number of consecutive weekends that agents who are
          assigned to this work plan are allowed to work
      minimumWorkingDaysPerWeek:
        type: integer
        format: int32
        description: >-
          The minimum number of days that agents assigned to a work plan must
          work per week
      constrainMaximumConsecutiveWorkingDays:
        type: boolean
        description: Whether to constrain the maximum consecutive working days
      maximumConsecutiveWorkingDays:
        type: integer
        format: int32
        description: >-
          The maximum number of consecutive days that agents assigned to this
          work plan are allowed to work. Used if
          constrainMaximumConsecutiveWorkingDays == true
      minimumShiftStartDistanceMinutes:
        type: integer
        format: int32
        description: >-
          The time period in minutes for the duration between the start times of
          two consecutive working days
      minimumDaysOffPerPlanningPeriod:
        type: integer
        format: int32
        description: Minimum days off in the planning period
      maximumDaysOffPerPlanningPeriod:
        type: integer
        format: int32
        description: Maximum days off in the planning period
      minimumPaidMinutesPerPlanningPeriod:
        type: integer
        format: int32
        description: Minimum paid minutes in the planning period
      maximumPaidMinutesPerPlanningPeriod:
        type: integer
        format: int32
        description: Maximum paid minutes in the planning period
      optionalDays:
        description: Optional days to schedule for this work plan
        $ref: '#/definitions/SetWrapperDayOfWeek'
      shiftStartVarianceType:
        type: string
        description: >-
          This constraint ensures that an agent starts each workday within a
          user-defined time threshold
        enum:
          - ShiftStart
          - ShiftStartAndPaidDuration
      shiftStartVariances:
        description: Variance in minutes among start times of shifts in this work plan
        $ref: '#/definitions/ListWrapperShiftStartVariance'
      shifts:
        type: array
        description: Shifts in this work plan
        items:
          $ref: '#/definitions/WorkPlanShift'
      agents:
        type: array
        description: Agents in this work plan
        items:
          $ref: '#/definitions/DeletableUserReference'
      agentCount:
        type: integer
        format: int32
        description: Number of agents in this work plan
      metadata:
        description: Version metadata for this work plan
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  CreateWorkPlan:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: Name of this work plan
      enabled:
        type: boolean
        description: Whether the work plan is enabled for scheduling
      constrainWeeklyPaidTime:
        type: boolean
        description: Whether the weekly paid time constraint is enabled for this work plan
      flexibleWeeklyPaidTime:
        type: boolean
        description: Whether the weekly paid time constraint is flexible for this work plan
      weeklyExactPaidMinutes:
        type: integer
        format: int32
        description: >-
          Exact weekly paid time in minutes for this work plan. Used if
          flexibleWeeklyPaidTime == false
      weeklyMinimumPaidMinutes:
        type: integer
        format: int32
        description: >-
          Minimum weekly paid time in minutes for this work plan. Used if
          flexibleWeeklyPaidTime == true
      weeklyMaximumPaidMinutes:
        type: integer
        format: int32
        description: >-
          Maximum weekly paid time in minutes for this work plan. Used if
          flexibleWeeklyPaidTime == true
      constrainPaidTimeGranularity:
        type: boolean
        description: Whether paid time granularity should be constrained for this workplan
      paidTimeGranularityMinutes:
        type: integer
        format: int32
        description: >-
          Granularity in minutes allowed for shift paid time in this work plan.
          Used if constrainPaidTimeGranularity == true
      constrainMinimumTimeBetweenShifts:
        type: boolean
        description: >-
          Whether the minimum time between shifts constraint is enabled for this
          work plan
      minimumTimeBetweenShiftsMinutes:
        type: integer
        format: int32
        description: >-
          Minimum time between shifts in minutes defined in this work plan. Used
          if constrainMinimumTimeBetweenShifts == true
      maximumDays:
        type: integer
        format: int32
        description: >-
          Maximum number days in a week allowed to be scheduled for this work
          plan
      minimumConsecutiveNonWorkingMinutesPerWeek:
        type: integer
        format: int32
        description: >-
          Minimum amount of consecutive non working minutes per week that agents
          who are assigned this work plan are allowed to have off
      constrainMaximumConsecutiveWorkingWeekends:
        type: boolean
        description: Whether to constrain the maximum consecutive working weekends
      maximumConsecutiveWorkingWeekends:
        type: integer
        format: int32
        description: >-
          The maximum number of consecutive weekends that agents who are
          assigned to this work plan are allowed to work
      minimumWorkingDaysPerWeek:
        type: integer
        format: int32
        description: >-
          The minimum number of days that agents assigned to a work plan must
          work per week
      constrainMaximumConsecutiveWorkingDays:
        type: boolean
        description: Whether to constrain the maximum consecutive working days
      maximumConsecutiveWorkingDays:
        type: integer
        format: int32
        description: >-
          The maximum number of consecutive days that agents assigned to this
          work plan are allowed to work. Used if
          constrainMaximumConsecutiveWorkingDays == true
      minimumShiftStartDistanceMinutes:
        type: integer
        format: int32
        description: >-
          The time period in minutes for the duration between the start times of
          two consecutive working days
      minimumDaysOffPerPlanningPeriod:
        type: integer
        format: int32
        description: Minimum days off in the planning period
      maximumDaysOffPerPlanningPeriod:
        type: integer
        format: int32
        description: Maximum days off in the planning period
      minimumPaidMinutesPerPlanningPeriod:
        type: integer
        format: int32
        description: Minimum paid minutes in the planning period
      maximumPaidMinutesPerPlanningPeriod:
        type: integer
        format: int32
        description: Maximum paid minutes in the planning period
      optionalDays:
        description: Optional days to schedule for this work plan
        $ref: '#/definitions/SetWrapperDayOfWeek'
      shiftStartVarianceType:
        type: string
        description: >-
          This constraint ensures that an agent starts each workday within a
          user-defined time threshold
        enum:
          - ShiftStart
          - ShiftStartAndPaidDuration
      shiftStartVariances:
        description: Variance in minutes among start times of shifts in this work plan
        $ref: '#/definitions/ListWrapperShiftStartVariance'
      shifts:
        type: array
        description: Shifts in this work plan
        items:
          $ref: '#/definitions/CreateWorkPlanShift'
      agents:
        type: array
        description: Agents in this work plan
        items:
          $ref: '#/definitions/UserReference'
  CreateWorkPlanActivity:
    type: object
    properties:
      activityCodeId:
        type: string
        description: ID of the activity code associated with this activity
      description:
        type: string
        description: Description of the activity
      lengthMinutes:
        type: integer
        format: int32
        description: Length of the activity in minutes
      startTimeIsRelativeToShiftStart:
        type: boolean
        description: >-
          Whether the start time of the activity is relative to the start time
          of the shift it belongs to
      flexibleStartTime:
        type: boolean
        description: Whether the start time of the activity is flexible
      earliestStartTimeMinutes:
        type: integer
        format: int32
        description: >-
          Earliest activity start in offset minutes relative to shift start time
          if startTimeIsRelativeToShiftStart == true else its based on midnight.
          Used if flexibleStartTime == true
      latestStartTimeMinutes:
        type: integer
        format: int32
        description: >-
          Latest activity start in offset minutes relative to shift start time
          if startTimeIsRelativeToShiftStart == true else its based on midnight.
          Used if flexibleStartTime == true
      exactStartTimeMinutes:
        type: integer
        format: int32
        description: >-
          Exact activity start in offset minutes relative to shift start time if
          startTimeIsRelativeToShiftStart == true else its based on midnight.
          Used if flexibleStartTime == false
      startTimeIncrementMinutes:
        type: integer
        format: int32
        description: >-
          Increment in offset minutes that would contribute to different
          possible start times for the activity
      countsAsPaidTime:
        type: boolean
        description: Whether the activity is paid
      countsAsContiguousWorkTime:
        type: boolean
        description: Whether the activity duration is counted towards contiguous work time
      minimumLengthFromShiftStartMinutes:
        type: integer
        format: int32
        description: >-
          The minimum duration between shift start and shift item (e.g., break
          or meal) start in minutes
      minimumLengthFromShiftEndMinutes:
        type: integer
        format: int32
        description: >-
          The minimum duration between shift item (e.g., break or meal) end and
          shift end in minutes
  CreateWorkPlanShift:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: Name of the shift
      days:
        description: Days of the week applicable for this shift
        $ref: '#/definitions/SetWrapperDayOfWeek'
      flexibleStartTime:
        type: boolean
        description: Whether the start time of the shift is flexible
      exactStartTimeMinutesFromMidnight:
        type: integer
        format: int32
        description: >-
          Exact start time of the shift defined as offset minutes from midnight.
          Used if flexibleStartTime == false
      earliestStartTimeMinutesFromMidnight:
        type: integer
        format: int32
        description: >-
          Earliest start time of the shift defined as offset minutes from
          midnight. Used if flexibleStartTime == true
      latestStartTimeMinutesFromMidnight:
        type: integer
        format: int32
        description: >-
          Latest start time of the shift defined as offset minutes from
          midnight. Used if flexibleStartTime == true
      constrainStopTime:
        type: boolean
        description: >-
          Whether the latest stop time constraint for the shift is enabled. 
          Deprecated, use constrainLatestStopTime instead
      constrainLatestStopTime:
        type: boolean
        description: Whether the latest stop time constraint for the shift is enabled
      latestStopTimeMinutesFromMidnight:
        type: integer
        format: int32
        description: >-
          Latest stop time of the shift defined as offset minutes from midnight.
          Used if constrainStopTime == true
      constrainEarliestStopTime:
        type: boolean
        description: Whether the earliest stop time constraint for the shift is enabled
      earliestStopTimeMinutesFromMidnight:
        type: integer
        format: int32
        description: This is the earliest time a shift can end
      startIncrementMinutes:
        type: integer
        format: int32
        description: >-
          Increment in offset minutes that would contribute to different
          possible start times for the shift. Used if flexibleStartTime == true
      flexiblePaidTime:
        type: boolean
        description: Whether the paid time setting for the shift is flexible
      exactPaidTimeMinutes:
        type: integer
        format: int32
        description: >-
          Exact paid time in minutes configured for the shift. Used if
          flexiblePaidTime == false
      minimumPaidTimeMinutes:
        type: integer
        format: int32
        description: >-
          Minimum paid time in minutes configured for the shift. Used if
          flexiblePaidTime == true
      maximumPaidTimeMinutes:
        type: integer
        format: int32
        description: >-
          Maximum paid time in minutes configured for the shift. Used if
          flexiblePaidTime == true
      constrainContiguousWorkTime:
        type: boolean
        description: Whether the contiguous time constraint for the shift is enabled
      minimumContiguousWorkTimeMinutes:
        type: integer
        format: int32
        description: >-
          Minimum contiguous time in minutes configured for the shift. Used if
          constrainContiguousWorkTime == true
      maximumContiguousWorkTimeMinutes:
        type: integer
        format: int32
        description: >-
          Maximum contiguous time in minutes configured for the shift. Used if
          constrainContiguousWorkTime == true
      constrainDayOff:
        type: boolean
        description: Whether day off rule is enabled
      dayOffRule:
        type: string
        description: >-
          The day off rule for agents to have next day off or previous day off.
          used if constrainDayOff = true
        enum:
          - NextDayOff
          - PreviousDayOff
      activities:
        type: array
        description: Activities configured for this shift
        items:
          $ref: '#/definitions/CreateWorkPlanActivity'
  CopyWorkPlan:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: Name of the copied work plan
  DateRangeWithOptionalEnd:
    type: object
    required:
      - startBusinessUnitDate
    properties:
      startBusinessUnitDate:
        type: string
        format: date
        description: >-
          The start date for work plan rotation or an agent, interpreted in the
          business unit's time zone. Dates are represented as an ISO-8601
          string. For example: yyyy-MM-dd
      endBusinessUnitDate:
        type: string
        format: date
        description: >-
          The end date for work plan rotation or an agent, interpreted in the
          business unit's time zone. Null denotes open ended date range. Dates
          are represented as an ISO-8601 string. For example: yyyy-MM-dd
  WorkPlanPatternResponse:
    type: object
    properties:
      workPlans:
        type: array
        description: List of work plans in order of rotation on a weekly basis
        items:
          $ref: '#/definitions/WorkPlanReference'
  WorkPlanRotationAgentResponse:
    type: object
    properties:
      user:
        description: The user associated with this work plan rotation
        $ref: '#/definitions/UserReference'
      dateRange:
        description: >-
          The date range to which this agent is effective in the work plan
          rotation
        $ref: '#/definitions/DateRangeWithOptionalEnd'
      position:
        type: integer
        format: int32
        description: >-
          Start position of the work plan in the pattern for this agent in the
          work plan rotation. Position value starts from 0
  WorkPlanRotationListResponse:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WorkPlanRotationResponse'
  WorkPlanRotationResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      enabled:
        type: boolean
        description: Whether the work plan rotation is enabled for scheduling
      dateRange:
        description: The date range to which this work plan rotation applies
        $ref: '#/definitions/DateRangeWithOptionalEnd'
      pattern:
        description: Pattern with ordered list of work plans that rotate on a weekly basis
        $ref: '#/definitions/WorkPlanPatternResponse'
      agentCount:
        type: integer
        format: int32
        description: Number of agents in this work plan rotation
      agents:
        type: array
        description: >-
          Agents in this work plan rotation. Populate with expand=agents for GET
          WorkPlanRotationsList (defaults to empty list)
        items:
          $ref: '#/definitions/WorkPlanRotationAgentResponse'
      metadata:
        description: Version metadata for this work plan rotation
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  AddWorkPlanRotationAgentRequest:
    type: object
    required:
      - dateRange
      - position
      - userId
    properties:
      userId:
        type: string
        description: The ID of an agent in this work plan rotation
      dateRange:
        description: >-
          The date range to which this agent is effective in the work plan
          rotation
        $ref: '#/definitions/DateRangeWithOptionalEnd'
      position:
        type: integer
        format: int32
        description: >-
          Start position of the work plan in the pattern for this agent in the
          work plan rotation. Position value starts from 0
  AddWorkPlanRotationRequest:
    type: object
    required:
      - dateRange
      - name
      - pattern
    properties:
      name:
        type: string
        description: Name of this work plan rotation
      dateRange:
        description: The date range to which this work plan rotation applies
        $ref: '#/definitions/DateRangeWithOptionalEnd'
      agents:
        type: array
        description: Agents in this work plan rotation
        items:
          $ref: '#/definitions/AddWorkPlanRotationAgentRequest'
      pattern:
        description: Pattern with list of work plan IDs that rotate on a weekly basis
        $ref: '#/definitions/WorkPlanPatternRequest'
  WorkPlanPatternRequest:
    type: object
    required:
      - workPlanIds
    properties:
      workPlanIds:
        type: array
        description: >-
          List of work plan IDs in order of rotation on a weekly basis. Values
          in the list cannot be null or empty
        items:
          type: string
  CopyWorkPlanRotationRequest:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: Name to apply to the new copy of the work plan rotation
  UpdateWorkPlanRotationAgentRequest:
    type: object
    required:
      - userId
    properties:
      userId:
        type: string
        description: The ID of an agent in this work plan rotation
      dateRange:
        description: >-
          The date range to which this agent is effective in the work plan
          rotation
        $ref: '#/definitions/DateRangeWithOptionalEnd'
      position:
        type: integer
        format: int32
        description: >-
          Start position of the work plan in the pattern for this agent in the
          work plan rotation. Position value starts from 0
      delete:
        type: boolean
        description: >-
          If marked true for this agent when updating, then this agent will be
          removed from this work plan rotation
  UpdateWorkPlanRotationRequest:
    type: object
    required:
      - metadata
    properties:
      name:
        type: string
        description: Name of this work plan rotation
      enabled:
        type: boolean
        description: Whether the work plan rotation is enabled for scheduling
      dateRange:
        description: The date range to which this work plan rotation applies
        $ref: '#/definitions/DateRangeWithOptionalEnd'
      agents:
        type: array
        description: Agents in this work plan rotation
        items:
          $ref: '#/definitions/UpdateWorkPlanRotationAgentRequest'
      pattern:
        description: Pattern with list of work plan IDs that rotate on a weekly basis
        $ref: '#/definitions/WorkPlanPatternRequest'
      metadata:
        description: Version metadata for this work plan rotation
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  AdherenceExplanationJob:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      type:
        type: string
        description: The type of the adherence explanation job
        enum:
          - AddExplanation
          - UpdateExplanation
          - QueryAgentExplanations
          - QueryBuExplanations
      status:
        type: string
        description: The status of the adherence explanation job
        enum:
          - Processing
          - Complete
          - Error
      adherenceExplanation:
        description: >-
          The adherence explanation added or modified by the job once complete;
          may be null if status == 'Error'. Used if type is in [
          'AddExplanation', 'UpdateExplanation' ]
        $ref: '#/definitions/AdherenceExplanationResponse'
      downloadUrl:
        type: string
        description: >-
          A URL to fetch results of the job. Only set if status == 'Complete'
          and type is in [ 'QueryAgentExplanations', 'QueryBuExplanations' ]
      error:
        description: Error details if status == 'Error'
        $ref: '#/definitions/ErrorBody'
      agentQueryResponseTemplate:
        description: >-
          Schema template for deserializing data returned from the downloadUrl.
          Use if type == 'QueryAgentExplanations'
        $ref: '#/definitions/AdherenceExplanationListingAgentQueryResponse'
      buQueryResponseTemplate:
        description: >-
          Schema template for deserializing data returned from the downloadUrl.
          Use if type == 'QueryBuExplanations'
        $ref: '#/definitions/AdherenceExplanationListingBuQueryResponse'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  AdherenceExplanationListingAgentQueryResponse:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/AdherenceExplanationResponse'
  AdherenceExplanationListingBuQueryResponse:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/AdherenceExplanationResponse'
  AdherenceExplanationResponse:
    type: object
    required:
      - agent
      - businessUnit
      - lengthMinutes
      - managementUnit
      - startDate
      - status
      - type
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      agent:
        description: The agent to whom this adherence explanation applies
        $ref: '#/definitions/UserReference'
      managementUnit:
        description: >-
          The management unit to which the agent belonged at the time the
          adherence explanation was submitted
        $ref: '#/definitions/ManagementUnitReference'
      businessUnit:
        description: >-
          The business unit to which the agent belonged at the time the
          adherence explanation was submitted
        $ref: '#/definitions/BusinessUnitReference'
      type:
        type: string
        description: The type of the adherence explanation
        enum:
          - Late
      status:
        type: string
        description: The status of the adherence explanation
        enum:
          - Pending
          - Approved
          - Denied
      startDate:
        type: string
        format: date-time
        description: The start timestamp of the adherence explanation in ISO-8601 format
      lengthMinutes:
        type: integer
        format: int32
        description: The length of the adherence explanation in minutes
      notes:
        type: string
        description: Notes about the adherence explanation
      reviewedBy:
        description: The user who reviewed the adherence explanation, if applicable
        $ref: '#/definitions/UserReference'
      reviewedDate:
        type: string
        format: date-time
        description: >-
          The timestamp for when the adherence explanation was reviewed, if
          applicable. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  AdherenceExplanationJobReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      type:
        type: string
        description: The type of the adherence explanation job
        enum:
          - AddExplanation
          - UpdateExplanation
          - QueryAgentExplanations
          - QueryBuExplanations
      status:
        type: string
        description: The status of the adherence explanation job
        enum:
          - Processing
          - Complete
          - Error
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  AgentQueryAdherenceExplanationsResponse:
    type: object
    properties:
      job:
        description: The asynchronous job handling the query
        $ref: '#/definitions/AdherenceExplanationJobReference'
      result:
        description: The result of the query. May come via notification
        $ref: '#/definitions/AdherenceExplanationListingAgentQueryResponse'
      downloadUrl:
        type: string
        description: The URL from which to download the result. May come via notification
  AgentQueryAdherenceExplanationsRequest:
    type: object
    required:
      - endDate
      - startDate
    properties:
      startDate:
        type: string
        format: date-time
        description: >-
          The start date of the range to query. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endDate:
        type: string
        format: date-time
        description: >-
          The end date of the range to query. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  AdherenceExplanationAsyncResponse:
    type: object
    properties:
      job:
        description: A reference to the job that was started by the request
        $ref: '#/definitions/AdherenceExplanationJobReference'
  AddAdherenceExplanationAdminRequest:
    type: object
    required:
      - lengthMinutes
      - startDate
      - type
    properties:
      type:
        type: string
        description: The type of the adherence explanation
        enum:
          - Late
      startDate:
        type: string
        format: date-time
        description: The start timestamp of the adherence explanation in ISO-8601 format
      lengthMinutes:
        type: integer
        format: int32
        description: The length of the adherence explanation in minutes
      notes:
        type: string
        description: Notes about the adherence explanation
      status:
        type: string
        description: The status of the adherence explanation
        enum:
          - Pending
          - Approved
          - Denied
  UpdateAdherenceExplanationStatusRequest:
    type: object
    properties:
      status:
        type: string
        description: The status of the adherence explanation
        enum:
          - Pending
          - Approved
          - Denied
  BuQueryAdherenceExplanationsResponse:
    type: object
    properties:
      job:
        description: The asynchronous job handling the query
        $ref: '#/definitions/AdherenceExplanationJobReference'
      result:
        description: The result of the query. May come via notification
        $ref: '#/definitions/AdherenceExplanationListingBuQueryResponse'
      downloadUrl:
        type: string
        description: The URL from which to download the result. May come via notification
  BuQueryAdherenceExplanationsRequest:
    type: object
    required:
      - endDate
      - startDate
    properties:
      startDate:
        type: string
        format: date-time
        description: >-
          The start date of the range to query. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endDate:
        type: string
        format: date-time
        description: >-
          The end date of the range to query. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      managementUnitIds:
        type: array
        description: >-
          A filter for which management units to query. Leave empty or omit
          entirely for all management units in the business unit
        items:
          type: string
      agentIds:
        type: array
        description: >-
          A filter for which agents within the business unit to query. Leave
          empty or omit entirely for all agents in the business unit (or
          management units if specified)
        items:
          type: string
  AdherenceExplanationListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/AdherenceExplanationResponse'
  QueryAdherenceExplanationsResponse:
    type: object
    properties:
      job:
        description: The asynchronous job handling the query
        $ref: '#/definitions/AdherenceExplanationJobReference'
      result:
        description: The result of the query. May come via notification
        $ref: '#/definitions/AdherenceExplanationListing'
      downloadUrl:
        type: string
        description: The URL from which to download the result. May come via notification
  AddAdherenceExplanationAgentRequest:
    type: object
    required:
      - lengthMinutes
      - startDate
      - type
    properties:
      type:
        type: string
        description: The type of the adherence explanation
        enum:
          - Late
      startDate:
        type: string
        format: date-time
        description: The start timestamp of the adherence explanation in ISO-8601 format
      lengthMinutes:
        type: integer
        format: int32
        description: The length of the adherence explanation in minutes
      notes:
        type: string
        description: Notes about the adherence explanation
  HistoricalAdherenceExceptionInfo:
    type: object
    properties:
      startOffsetSeconds:
        type: integer
        format: int32
        description: Exception start offset in seconds relative to query start time
      endOffsetSeconds:
        type: integer
        format: int32
        description: Exception end offset in seconds relative to query start time
      scheduledActivityCodeId:
        type: string
        description: The ID of the scheduled activity code for this user
      scheduledActivityCategory:
        type: string
        description: Activity for which the user is scheduled
        enum:
          - OnQueueWork
          - Break
          - Meal
          - Meeting
          - OffQueueWork
          - TimeOff
          - Training
          - Unavailable
          - Unscheduled
      scheduledSecondaryPresenceLookupIds:
        type: array
        description: >-
          The lookup IDs used to retrieve the scheduled secondary statuses from
          map of lookup ID to corresponding secondary presence ID
        uniqueItems: true
        items:
          type: string
      actualActivityCodeId:
        type: string
        description: The ID of the actual activity code for this user
      actualActivityCategory:
        type: string
        description: Activity for which the user is actually engaged
        enum:
          - OnQueueWork
          - Break
          - Meal
          - Meeting
          - OffQueueWork
          - TimeOff
          - Training
          - Unavailable
          - Unscheduled
      systemPresence:
        type: string
        description: Actual underlying system presence value
        enum:
          - Available
          - Away
          - Busy
          - Offline
          - Idle
          - OnQueue
          - Meal
          - Training
          - Meeting
          - Break
      routingStatus:
        type: string
        description: >-
          Actual underlying routing status, used to determine whether a user is
          actually in adherence when OnQueue
        enum:
          - OFF_QUEUE
          - IDLE
          - INTERACTING
          - NOT_RESPONDING
          - COMMUNICATING
      impact:
        type: string
        description: The impact of the current adherence state for this user
        enum:
          - Positive
          - Negative
          - Neutral
          - Unknown
      secondaryPresenceLookupId:
        type: string
        description: >-
          The lookup ID used to retrieve the actual secondary status from map of
          lookup ID to corresponding secondary presence ID
  WfmHistoricalAdherenceBulkJobReference:
    type: object
    properties:
      id:
        type: string
        description: >-
          The ID of the historical adherence bulk job to listen for via
          notification or query using the jobs route
      status:
        type: string
        description: The status of the historical adherence bulk job
        enum:
          - Processing
          - Complete
          - Error
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  WfmHistoricalAdherenceBulkResponse:
    type: object
    properties:
      job:
        description: A reference to the job that was started by the request
        $ref: '#/definitions/WfmHistoricalAdherenceBulkJobReference'
      downloadUrls:
        type: array
        description: >-
          The uri list to GET the results of the Historical Adherence query.
          This field is populated only if query state is Complete
        items:
          type: string
      downloadResult:
        description: >-
          Results will always come via downloadUrls; however the schema is
          included for documentation
        $ref: '#/definitions/WfmHistoricalAdherenceBulkResult'
  WfmHistoricalAdherenceBulkResult:
    type: object
    properties:
      startDate:
        type: string
        format: date-time
        description: Beginning of the date range for this result in ISO-8601 format
      endDate:
        type: string
        format: date-time
        description: End of the date range for this result in ISO-8601 format
      managementUnitId:
        type: string
        description: The ID of the management unit for this result
      userResults:
        type: array
        description: The individual results for each user
        items:
          $ref: '#/definitions/WfmHistoricalAdherenceBulkUserResult'
      lookupIdToSecondaryPresenceId:
        type: object
        description: >-
          Map of secondary presence lookup ID to corresponding secondary
          presence ID
        additionalProperties:
          type: string
  WfmHistoricalAdherenceBulkUserDayMetrics:
    type: object
    properties:
      dayStartOffsetSeconds:
        type: integer
        format: int32
        description: Start of day offset in seconds relative to query start time
      adherenceScheduleSeconds:
        type: integer
        format: int32
        description: >-
          Duration of schedule in seconds included for adherence percentage
          calculation
      conformanceScheduleSeconds:
        type: integer
        format: int32
        description: Total scheduled duration in seconds for OnQueue activities
      conformanceActualSeconds:
        type: integer
        format: int32
        description: Total actually worked duration in seconds for OnQueue activities
      exceptionCount:
        type: integer
        format: int32
        description: Total number of adherence exceptions for this user
      exceptionDurationSeconds:
        type: integer
        format: int32
        description: Total duration in seconds of adherence exceptions for this user
      impactSeconds:
        type: integer
        format: int32
        description: >-
          The impact duration in seconds of current adherence state for this
          user
      scheduleLengthSeconds:
        type: integer
        format: int32
        description: Total duration in seconds for all scheduled activities
      actualLengthSeconds:
        type: integer
        format: int32
        description: Total duration in seconds for all actually worked activities
      adherencePercentage:
        type: number
        format: double
        description: Total adherence percentage for this user, in the scale of 0 - 100
      conformancePercentage:
        type: number
        format: double
        description: >-
          Total conformance percentage for this user, in the scale of 0 - 100.
          Conformance percentage can be greater than 100 when the actual on
          queue time is greater than the scheduled on queue time for the same
          period.
  WfmHistoricalAdherenceBulkUserResult:
    type: object
    properties:
      userId:
        type: string
        description: The ID of the user for whom the adherence is queried
      adherencePercentage:
        type: number
        format: double
        description: Adherence percentage for this user, in the scale of 0 - 100
      conformancePercentage:
        type: number
        format: double
        description: >-
          Conformance percentage for this user, in the scale of 0 - 100.
          Conformance percentage can be greater than 100 when the actual on
          queue time is greater than the scheduled on queue time for the same
          period.
      impact:
        type: string
        description: The impact of the current adherence state for this user
        enum:
          - Positive
          - Negative
          - Neutral
          - Unknown
      exceptionInfo:
        type: array
        description: List of adherence exceptions for this user
        items:
          $ref: '#/definitions/HistoricalAdherenceExceptionInfo'
      dayMetrics:
        type: array
        description: Adherence and conformance metrics for days in query range
        items:
          $ref: '#/definitions/WfmHistoricalAdherenceBulkUserDayMetrics'
  WfmHistoricalAdherenceBulkItem:
    type: object
    required:
      - endDate
      - managementUnitId
      - startDate
    properties:
      managementUnitId:
        type: string
        description: The ID of the management unit to query
      startDate:
        type: string
        format: date-time
        description: Beginning of the date range to query in ISO-8601 format
      endDate:
        type: string
        format: date-time
        description: End of the date range to query in ISO-8601 format
      userIds:
        type: array
        description: >-
          The IDs of the users to query. If not included, will query every user
          in the management unit
        uniqueItems: true
        items:
          type: string
      includeExceptions:
        type: boolean
        description: >-
          Whether user exceptions should be returned as part of the results. If
          not included, will default to false
  WfmHistoricalAdherenceBulkQuery:
    type: object
    required:
      - items
      - timeZone
    properties:
      items:
        type: array
        description: The historical adherence items to query
        items:
          $ref: '#/definitions/WfmHistoricalAdherenceBulkItem'
      timeZone:
        type: string
        description: >-
          The time zone, in olson format, to use in defining days when computing
          adherence. The results will be returned as UTC timestamps regardless
          of the time zone input.
  HistoricalAdherenceActuals:
    type: object
    properties:
      actualActivityCategory:
        type: string
        description: Activity in which the user is actually engaged
        enum:
          - OnQueueWork
          - Break
          - Meal
          - Meeting
          - OffQueueWork
          - TimeOff
          - Training
          - Unavailable
          - Unscheduled
      actualSecondaryPresenceLookupId:
        type: string
        description: >-
          The lookup ID used to retrieve the actual secondary status from map of
          lookup ID to corresponding secondary presence ID
      startOffsetSeconds:
        type: integer
        format: int32
        description: Actual start offset in seconds relative to query start time
      endOffsetSeconds:
        type: integer
        format: int32
        description: Actual end offset in seconds relative to query start time
  HistoricalAdherenceDayMetrics:
    type: object
    properties:
      dayStartOffsetSecs:
        type: integer
        format: int32
        description: Start of day offset in seconds relative to query start time
      adherenceScheduleSecs:
        type: integer
        format: int32
        description: >-
          Duration of schedule in seconds included for adherence percentage
          calculation
      conformanceScheduleSecs:
        type: integer
        format: int32
        description: Total scheduled duration in seconds for OnQueue activities
      conformanceActualSecs:
        type: integer
        format: int32
        description: Total actually worked duration in seconds for OnQueue activities
      exceptionCount:
        type: integer
        format: int32
        description: Total number of adherence exceptions for this user
      exceptionDurationSecs:
        type: integer
        format: int32
        description: Total duration in seconds of adherence exceptions for this user
      impactSeconds:
        type: integer
        format: int32
        description: >-
          The impact duration in seconds of current adherence state for this
          user
      scheduleLengthSecs:
        type: integer
        format: int32
        description: Total duration in seconds for all scheduled activities
      actualLengthSecs:
        type: integer
        format: int32
        description: Total duration in seconds for all actually worked activities
      adherencePercentage:
        type: number
        format: double
        description: Total adherence percentage for this user, in the scale of 0 - 100
      conformancePercentage:
        type: number
        format: double
        description: >-
          Total conformance percentage for this user, in the scale of 0 - 100.
          Conformance percentage can be greater than 100 when the actual on
          queue time is greater than the scheduled on queue time for the same
          period.
  HistoricalAdherenceQueryResult:
    type: object
    properties:
      userId:
        type: string
        description: The ID of the user for whom the adherence is queried
      managementUnitId:
        type: string
        description: >-
          The ID of the management unit of the user for whom the adherence is
          queried
      startDate:
        type: string
        format: date-time
        description: Beginning of the date range that was queried, in ISO-8601 format
      endDate:
        type: string
        format: date-time
        description: >-
          End of the date range that was queried, in ISO-8601 format. If it was
          not set, end date will be set to the queried time
      adherencePercentage:
        type: number
        format: double
        description: Adherence percentage for this user, in the scale of 0 - 100
      conformancePercentage:
        type: number
        format: double
        description: >-
          Conformance percentage for this user, in the scale of 0 - 100.
          Conformance percentage can be greater than 100 when the actual on
          queue time is greater than the scheduled on queue time for the same
          period.
      impact:
        type: string
        description: The impact of the current adherence state for this user
        enum:
          - Positive
          - Negative
          - Neutral
          - Unknown
      exceptionInfo:
        type: array
        description: List of adherence exceptions for this user
        items:
          $ref: '#/definitions/HistoricalAdherenceExceptionInfo'
      dayMetrics:
        type: array
        description: Adherence and conformance metrics for days in query range
        items:
          $ref: '#/definitions/HistoricalAdherenceDayMetrics'
      actualsEndDate:
        type: string
        format: date-time
        description: The end date of the actual activities in ISO-8601 format.
      actuals:
        type: array
        description: List of actual activity with offset for this user
        items:
          $ref: '#/definitions/HistoricalAdherenceActuals'
  WfmHistoricalAdherenceResponse:
    type: object
    properties:
      id:
        type: string
        description: The query ID to listen for
      downloadUrl:
        type: string
        description: Deprecated. Use downloadUrls instead.
      downloadResult:
        description: >-
          Result will always come via downloadUrls; however the schema is
          included for documentation
        $ref: '#/definitions/WfmHistoricalAdherenceResultWrapper'
      downloadUrls:
        type: array
        description: >-
          The uri list to GET the results of the Historical Adherence query. For
          notification purposes only
        items:
          type: string
      queryState:
        type: string
        description: The state of the adherence query
        enum:
          - Processing
          - Complete
          - Error
  WfmHistoricalAdherenceResultWrapper:
    type: object
    properties:
      entityId:
        type: string
        description: The operation ID of the historical adherence query
      data:
        type: array
        description: The list of historical adherence query results
        items:
          $ref: '#/definitions/HistoricalAdherenceQueryResult'
      lookupIdToSecondaryPresenceId:
        type: object
        description: >-
          Map of secondary presence lookup ID to corresponding secondary
          presence ID
        additionalProperties:
          type: string
  WfmHistoricalAdherenceQueryForUsers:
    type: object
    required:
      - startDate
      - timeZone
      - userIds
    properties:
      startDate:
        type: string
        format: date-time
        description: Beginning of the date range to query in ISO-8601 format
      endDate:
        type: string
        format: date-time
        description: >-
          End of the date range to query in ISO-8601 format. If it is not set,
          end date will be set to current time
      timeZone:
        type: string
        description: >-
          The time zone, in olson format, to use in defining days when computing
          adherence. The results will be returned as UTC timestamps regardless
          of the time zone input.
      userIds:
        type: array
        description: The userIds to report on
        uniqueItems: true
        items:
          type: string
      includeExceptions:
        type: boolean
        description: Whether user exceptions should be returned as part of the results
  WfmHistoricalAdherenceQuery:
    type: object
    required:
      - startDate
    properties:
      startDate:
        type: string
        format: date-time
        description: Beginning of the date range to query in ISO-8601 format
      endDate:
        type: string
        format: date-time
        description: >-
          End of the date range to query in ISO-8601 format. If it is not set,
          end date will be set to current time
      timeZone:
        type: string
        description: >-
          The time zone, in olson format, to use in defining days when computing
          adherence. The results will be returned as UTC timestamps regardless
          of the time zone input.
      userIds:
        type: array
        description: >-
          The userIds to report on. If null or not set, adherence will be
          computed for all the users in management unit or requested teamIds
        uniqueItems: true
        items:
          type: string
      includeExceptions:
        type: boolean
        description: Whether user exceptions should be returned as part of the results
      teamIds:
        type: array
        description: >-
          The teamIds to report on. If null or not set, adherence will be
          computed for requested users if applicable or otherwise all users in
          the management unit. Note: If teamIds is also specified, only
          adherence for users in the requested teams will be returned
        uniqueItems: true
        items:
          type: string
  WfmHistoricalAdherenceQueryForTeams:
    type: object
    required:
      - startDate
      - timeZone
    properties:
      startDate:
        type: string
        format: date-time
        description: Beginning of the date range to query in ISO-8601 format
      endDate:
        type: string
        format: date-time
        description: >-
          End of the date range to query in ISO-8601 format. If it is not set,
          end date will be set to current time
      timeZone:
        type: string
        description: >-
          The time zone, in olson format, to use in defining days when computing
          adherence. The results will be returned as UTC timestamps regardless
          of the time zone input.
      userIds:
        type: array
        description: >-
          The userIds to report on. If null or not set, adherence will be
          computed for all the users in management unit or requested teamIds
        uniqueItems: true
        items:
          type: string
      includeExceptions:
        type: boolean
        description: Whether user exceptions should be returned as part of the results
  ActivityCodeReference:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
      name:
        type: string
      secondaryPresences:
        type: array
        description: The secondary presences of this activity code.
        items:
          $ref: '#/definitions/SecondaryPresence'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  RealTimeAdherenceExplanation:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      startDate:
        type: string
        format: date-time
        description: The start timestamp of the adherence explanation in ISO-8601 format
      lengthMinutes:
        type: integer
        format: int32
        description: The length of the adherence explanation in minutes
      status:
        type: string
        description: The status of the adherence explanation
        enum:
          - Pending
          - Approved
          - Denied
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TeamReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UserScheduleAdherence:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      user:
        description: The user for whom this status applies
        readOnly: true
        $ref: '#/definitions/UserReference'
      businessUnit:
        description: The business unit to which this user belongs
        readOnly: true
        $ref: '#/definitions/BusinessUnitReference'
      managementUnit:
        description: The management unit to which this user belongs
        readOnly: true
        $ref: '#/definitions/ManagementUnitReference'
      team:
        description: The team to which this user belongs
        readOnly: true
        $ref: '#/definitions/TeamReference'
      scheduledActivityCategory:
        type: string
        description: Activity for which the user is scheduled
        readOnly: true
        enum:
          - OnQueueWork
          - Break
          - Meal
          - Meeting
          - OffQueueWork
          - TimeOff
          - Training
          - Unavailable
          - Unscheduled
      scheduledActivityCode:
        description: Activity code for which the user is currently scheduled
        readOnly: true
        $ref: '#/definitions/ActivityCodeReference'
      systemPresence:
        type: string
        description: Actual underlying system presence value
        readOnly: true
        enum:
          - Available
          - Away
          - Busy
          - Offline
          - Idle
          - OnQueue
          - Meal
          - Training
          - Meeting
          - Break
      organizationSecondaryPresenceId:
        type: string
        description: Organization Secondary Presence Id.
        readOnly: true
      routingStatus:
        type: string
        description: >-
          Actual underlying routing status, used to determine whether a user is
          actually in adherence when OnQueue
        readOnly: true
        enum:
          - OFF_QUEUE
          - IDLE
          - INTERACTING
          - NOT_RESPONDING
          - COMMUNICATING
      actualActivityCategory:
        type: string
        description: Activity in which the user is actually engaged
        readOnly: true
        enum:
          - OnQueueWork
          - Break
          - Meal
          - Meeting
          - OffQueueWork
          - TimeOff
          - Training
          - Unavailable
          - Unscheduled
      isOutOfOffice:
        type: boolean
        description: Whether the user is marked OutOfOffice
        readOnly: true
      adherenceState:
        type: string
        description: The user's current adherence state
        readOnly: true
        enum:
          - InAdherence
          - OutOfAdherence
          - Unscheduled
          - Unknown
          - Ignored
          - Explained
      impact:
        type: string
        description: The impact of the user's current adherenceState
        readOnly: true
        enum:
          - Positive
          - Negative
          - Neutral
          - Unknown
      adherenceExplanation:
        description: Currently applicable explanation for the adherence state
        readOnly: true
        $ref: '#/definitions/RealTimeAdherenceExplanation'
      timeOfAdherenceChange:
        type: string
        format: date-time
        description: >-
          Time when the user entered the current adherenceState in ISO-8601
          format
        readOnly: true
      presenceUpdateTime:
        type: string
        format: date-time
        description: >-
          Time when presence was last updated. Used to calculate time in current
          status. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      activeQueues:
        type: array
        description: The list of queues to which this user is joined
        readOnly: true
        items:
          $ref: '#/definitions/QueueReference'
      activeQueuesModifiedTime:
        type: string
        format: date-time
        description: >-
          Time when the list of active queues for this user was last updated.
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      removedFromManagementUnit:
        type: boolean
        description: >-
          For notification purposes. Used to indicate that a user was removed
          from the management unit
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  UserScheduleAdherenceListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UserScheduleAdherence'
      downloadUrl:
        type: string
        description: >-
          The downloadUrl if the response is too large to send directly via http
          response
        readOnly: true
  AgentPossibleWorkShiftsResponse:
    type: object
    properties:
      weekStartDate:
        type: string
        format: date
        description: >-
          Start date of requested effective work plan. Dates are represented as
          an ISO-8601 string. For example: yyyy-MM-dd
      pattern:
        type: array
        description: Each element is the ID of an effective work plan for a specific week
        items:
          type: integer
          format: int32
      weeklyPossibleWorkShifts:
        type: array
        description: >-
          Each element is a weekly effective work plan that can be used for
          multiple weeks
        items:
          $ref: '#/definitions/PossibleWorkShiftsForWeek'
      schedulerIntervalLengthMinutes:
        type: integer
        format: int32
        description: >-
          Number of minutes in each interval in the
          intervalScheduleProbabilities
      timeZone:
        type: string
        description: The time zone of the business unit
  DailyPossibleShift:
    type: object
    properties:
      dayOfWeek:
        type: string
        description: Day of the shift
        enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
      earliestShiftStartMinutesFromMidnight:
        type: integer
        format: int32
        description: >-
          Minutes of the earliest shift start from midnight. Note that midnight
          is 12:00 am in the time zone specified in the timeZone field (in the
          top level of the response)
      required:
        type: boolean
        description: Whether this is a required shift
      minimumPaidTimeMinutes:
        type: integer
        format: int32
        description: Minimum paid time in minutes of this daily shift
      maximumPaidTimeMinutes:
        type: integer
        format: int32
        description: Maximum paid time in minutes of this daily shift
      intervalScheduleProbabilities:
        type: array
        description: >-
          The percentage of being scheduled in each interval between the
          earliest shift start and latest shift end. Range of the values: [0,
          100].
        items:
          type: integer
          format: int32
  PossibleWorkShiftsForWeek:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID of this possible weekly shift
      dailyPossibleShifts:
        type: array
        description: Daily shifts in this possible weekly shift
        items:
          $ref: '#/definitions/DailyPossibleShift'
  AgentPossibleWorkShiftsRequest:
    type: object
    required:
      - weekCount
      - weekStartDate
    properties:
      weekStartDate:
        type: string
        format: date
        description: >-
          Start date of requested effective work plan, day of week will be in
          line with business unit start day of week. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      weekCount:
        type: integer
        format: int32
        description: Number of weeks for which to return possible work shifts
  CalendarUrlResponse:
    type: object
    properties:
      calendarUrl:
        type: string
        description: The calendar url for the user to subscribe with supported clients
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  AvailableTimeOffRange:
    type: object
    properties:
      timeOffLimit:
        description: The time off limit
        $ref: '#/definitions/TimeOffLimitReference'
      startDate:
        type: string
        format: date
        description: >-
          Start date of the requested date range. The end date is determined by
          the size of interval list. Dates are represented as an ISO-8601
          string. For example: yyyy-MM-dd
      granularity:
        type: string
        description: Granularity choice for time off limit
        enum:
          - Daily
      availableMinutesPerInterval:
        type: array
        description: >-
          The list of available time off values in minutes per granularity
          interval
        items:
          type: integer
          format: int32
      waitlistedRequestsPerInterval:
        type: array
        description: >-
          The current number of waitlisted time off requests for every interval
          per granularity
        items:
          type: integer
          format: int32
      waitlistEnabled:
        type: boolean
        description: Whether the time off request can be waitlisted
  AvailableTimeOffResponse:
    type: object
    properties:
      values:
        type: array
        items:
          $ref: '#/definitions/AvailableTimeOffRange'
  AvailableTimeOffRequest:
    type: object
    required:
      - activityCodeId
    properties:
      activityCodeId:
        type: string
        description: The ID for activity code to query available time off minutes
      dateRanges:
        type: array
        description: >-
          A list of date ranges of available time off minutes. A maximum number
          of date ranges is 30. The maximum total number of days in all ranges
          is 366. If no ranges are specified, then only the presence of the
          associated time off limit object will be checked. In such case, if the
          association exists, then the response will contain a list with of a
          single element filled with timeOffLimitId only.
        items:
          $ref: '#/definitions/LocalDateRange'
  CreateAgentTimeOffRequest:
    type: object
    required:
      - activityCodeId
      - dailyDurationMinutes
    properties:
      activityCodeId:
        type: string
        description: >-
          The ID of the activity code associated with this time off request.
          Activity code must be of the TimeOff category
      notes:
        type: string
        description: Notes about the time off request
      fullDayManagementUnitDates:
        type: array
        description: >-
          A set of dates in yyyy-MM-dd format.  Should be interpreted in the
          management unit's configured time zone.
        items:
          type: string
      partialDayStartDateTimes:
        type: array
        description: A set of start date-times in ISO-8601 format for partial day requests.
        items:
          type: string
          format: date-time
      dailyDurationMinutes:
        type: integer
        format: int32
        description: The daily duration of this time off request in minutes
  AgentTimeOffRequestPatch:
    type: object
    properties:
      markedAsRead:
        type: boolean
        description: Whether this request has been read by the agent
      status:
        type: string
        description: >-
          The status of this time off request. Can only be canceled if the
          requested date has not already passed
        enum:
          - CANCELED
      notes:
        type: string
        description: >-
          Notes about the time off request. Can only be edited while the request
          is still pending
  BuAgentScheduleActivity:
    type: object
    properties:
      startDate:
        type: string
        format: date-time
        description: >-
          The start date/time of this activity. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      lengthMinutes:
        type: integer
        format: int32
        description: The length of this activity in minutes
      description:
        type: string
        description: The description of this activity
      activityCodeId:
        type: string
        description: The ID of the activity code associated with this activity
      paid:
        type: boolean
        description: Whether this activity is paid
      timeOffRequestId:
        type: string
        description: >-
          The ID of the time off request associated with this activity, if
          applicable
      externalActivityId:
        type: string
        description: >-
          The ID of the external activity associated with this activity, if
          applicable
      externalActivityType:
        type: string
        description: >-
          The type of the external activity associated with this activity, if
          applicable
        enum:
          - Coaching
          - Learning
  BuAgentSchedulePublishedScheduleReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      weekDate:
        type: string
        format: date
        description: >-
          The start week date for this schedule. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      weekCount:
        type: integer
        format: int32
        description: The number of weeks encompassed by the schedule
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BuAgentScheduleSearchResponse:
    type: object
    properties:
      user:
        description: The user to whom this agent schedule applies
        $ref: '#/definitions/UserReference'
      shifts:
        type: array
        description: The shift definitions for this agent schedule
        items:
          $ref: '#/definitions/BuAgentScheduleShift'
      fullDayTimeOffMarkers:
        type: array
        description: Full day time off markers which apply to this agent schedule
        items:
          $ref: '#/definitions/BuFullDayTimeOffMarker'
  BuAgentScheduleShift:
    type: object
    properties:
      id:
        type: string
        description: The ID of the shift
      startDate:
        type: string
        format: date-time
        description: >-
          The start date of this shift. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      lengthMinutes:
        type: integer
        format: int32
        description: The length of this shift in minutes
        readOnly: true
      activities:
        type: array
        description: The activities associated with this shift
        items:
          $ref: '#/definitions/BuAgentScheduleActivity'
      manuallyEdited:
        type: boolean
        description: >-
          Whether this shift was manually edited. This is only set by clients
          and is used for rescheduling
      schedule:
        description: The schedule to which this shift belongs
        readOnly: true
        $ref: '#/definitions/BuScheduleReference'
  BuAgentScheduleUpdate:
    type: object
    properties:
      type:
        type: string
        description: The type of update
        enum:
          - Added
          - Edited
          - Deleted
      shiftStartDates:
        type: array
        description: The start date for the affected shifts
        items:
          type: string
          format: date-time
  BuCurrentAgentScheduleSearchResponse:
    type: object
    properties:
      agentSchedules:
        type: array
        description: The requested agent schedules
        items:
          $ref: '#/definitions/BuAgentScheduleSearchResponse'
      businessUnitTimeZone:
        type: string
        description: >-
          The time zone configured for the business unit to which this schedule
          applies
      publishedSchedules:
        type: array
        description: >-
          References to all published week schedules overlapping the start/end
          date query parameters
        items:
          $ref: '#/definitions/BuAgentSchedulePublishedScheduleReference'
      startDate:
        type: string
        format: date-time
        description: >-
          The start date of the schedules. Only populated on notifications. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endDate:
        type: string
        format: date-time
        description: >-
          The end date of the schedules. Only populated on notifications. Date
          time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      updates:
        type: array
        description: The list of updates for the schedule. Only used in notifications
        items:
          $ref: '#/definitions/BuAgentScheduleUpdate'
  BuFullDayTimeOffMarker:
    type: object
    properties:
      businessUnitDate:
        type: string
        format: date
        description: >-
          The date of the time off marker, interpreted in the business unit's
          time zone. Dates are represented as an ISO-8601 string. For example:
          yyyy-MM-dd
      lengthMinutes:
        type: integer
        format: int32
        description: The length of the time off marker in minutes
      description:
        type: string
        description: The description of the time off marker
      activityCodeId:
        type: string
        description: The ID of the activity code associated with the time off marker
      paid:
        type: boolean
        description: Whether the time off marker is paid
      timeOffRequestId:
        type: string
        description: The ID of the time off request
  BuGetCurrentAgentScheduleRequest:
    type: object
    required:
      - endDate
      - startDate
    properties:
      startDate:
        type: string
        format: date-time
        description: >-
          Start date of the range to search. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endDate:
        type: string
        format: date-time
        description: >-
          End date of the range to search. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  UserSchedule:
    type: object
    required:
      - metadata
    properties:
      shifts:
        type: array
        description: The shifts that belong to this schedule
        items:
          $ref: '#/definitions/UserScheduleShift'
      fullDayTimeOffMarkers:
        type: array
        description: >-
          Markers to indicate a full day time off request, relative to the
          management unit time zone
        items:
          $ref: '#/definitions/UserScheduleFullDayTimeOffMarker'
      delete:
        type: boolean
        description: >-
          If marked true for updating an existing user schedule, it will be
          deleted
      metadata:
        description: Version metadata for this schedule
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      workPlanId:
        type: string
        description: ID of the work plan associated with the user during schedule creation
        readOnly: true
  UserScheduleActivity:
    type: object
    properties:
      activityCodeId:
        type: string
        description: >-
          The id for the activity code.  Look up a map of activity codes with
          the activities route
      startDate:
        type: string
        format: date-time
        description: Start time in UTC for this activity, in ISO-8601 format
      lengthInMinutes:
        type: integer
        format: int32
        description: Length in minutes for this activity
      description:
        type: string
        description: Description for this activity
      countsAsPaidTime:
        type: boolean
        description: Whether this activity is paid
      isDstFallback:
        type: boolean
        description: Whether this activity spans a DST fallback
      timeOffRequestId:
        type: string
        description: Time off request id of this activity
  UserScheduleContainer:
    type: object
    properties:
      managementUnitTimeZone:
        type: string
        description: The reference time zone used for the management unit
      publishedSchedules:
        type: array
        description: >-
          References to all published week schedules overlapping the start/end
          date query parameters
        items:
          $ref: '#/definitions/WeekScheduleReference'
      userSchedules:
        type: object
        description: Map of user id to user schedule
        additionalProperties:
          $ref: '#/definitions/UserSchedule'
  UserScheduleFullDayTimeOffMarker:
    type: object
    properties:
      managementUnitDate:
        type: string
        description: >-
          The date associated with the time off request that this marker
          corresponds to.  Date only, in ISO-8601 format.
      activityCodeId:
        type: string
        description: >-
          The id for the activity code.  Look up a map of activity codes with
          the activities route
      isPaid:
        type: boolean
        description: Whether this is paid time off
      lengthInMinutes:
        type: integer
        format: int32
        description: The length in minutes of this time off marker
      description:
        type: string
        description: >-
          The description associated with the time off request that this marker
          corresponds to
      delete:
        type: boolean
        description: >-
          If marked true for updating an existing full day time off marker, it
          will be deleted
  UserScheduleShift:
    type: object
    properties:
      weekSchedule:
        description: The schedule to which this shift belongs
        readOnly: true
        $ref: '#/definitions/WeekScheduleReference'
      id:
        type: string
        description: >-
          ID of the schedule shift. This is only for the case of updating and
          deleting an existing shift
      startDate:
        type: string
        format: date-time
        description: >-
          Start time in UTC for this shift. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      lengthInMinutes:
        type: integer
        format: int32
        description: Length of this shift in minutes
        readOnly: true
      activities:
        type: array
        description: List of activities in this shift
        items:
          $ref: '#/definitions/UserScheduleActivity'
      delete:
        type: boolean
        description: If marked true for updating this schedule shift, it will be deleted
      manuallyEdited:
        type: boolean
        description: Whether the shift was set as manually edited
  WeekScheduleReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      weekDate:
        type: string
        description: First day of this week schedule in yyyy-MM-dd format
  CurrentUserScheduleRequestBody:
    type: object
    required:
      - endDate
      - startDate
    properties:
      startDate:
        type: string
        format: date-time
        description: Beginning of the range of schedules to fetch, in ISO-8601 format
      endDate:
        type: string
        format: date-time
        description: End of the range of schedules to fetch, in ISO-8601 format
      loadFullWeeks:
        type: boolean
        description: >-
          Whether to load the full week's schedule (for the current user) of any
          week overlapping the start/end date query parameters, defaults to
          false
  AdherenceExplanationNotification:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      agent:
        description: The agent for whom the adherence explanation applies
        $ref: '#/definitions/UserReference'
      managementUnit:
        description: >-
          The management unit to which the agent belonged at the time the
          adherence explanation was submitted
        $ref: '#/definitions/ManagementUnitReference'
      businessUnit:
        description: >-
          The business unit to which the agent belonged at the time the
          adherence explanation was submitted
        $ref: '#/definitions/BusinessUnitReference'
      startDate:
        type: string
        format: date-time
        description: >-
          The start date of the adherence explanation. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      lengthMinutes:
        type: integer
        format: int32
        description: The length of the adherence explanation in minutes
      status:
        type: string
        description: The status of the adherence explanation
        enum:
          - Pending
          - Approved
          - Denied
      type:
        type: string
        description: The type of the adherence explanation
        enum:
          - Late
      notes:
        type: string
        description: Notes about the adherence explanation
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  NotificationsResponse:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WfmUserNotification'
  ShiftTradeNotification:
    type: object
    properties:
      weekDate:
        type: string
        description: The start date of the schedule with which this trade is associated
      tradeId:
        type: string
        description: The ID of the shift trade
      oneSided:
        type: boolean
        description: Whether this is a one sided shift trade
      newState:
        type: string
        description: The new state of the shift trade, null if there was no change
        enum:
          - Unmatched
          - Matched
          - Approved
          - Denied
          - Expired
          - Canceled
      initiatingUser:
        description: The user who initiated the shift trade
        $ref: '#/definitions/UserReference'
      initiatingShiftDate:
        type: string
        format: date-time
        description: >-
          The start date and time of the initiating shift. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      receivingUser:
        description: >-
          The user on the receiving side of this shift trade (null if not
          matched)
        $ref: '#/definitions/UserReference'
      receivingShiftDate:
        type: string
        format: date-time
        description: >-
          The start date and time of the receiving shift (null if not matched or
          if one-sided. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
  TimeOffRequestNotification:
    type: object
    properties:
      timeOffRequestId:
        type: string
        description: The ID of this time off request
      user:
        description: The user associated with this time off request
        $ref: '#/definitions/UserReference'
      isFullDayRequest:
        type: boolean
        description: Whether this is a full day request (false means partial day)
      status:
        type: string
        description: The status of this time off request
        enum:
          - PENDING
          - APPROVED
          - DENIED
          - CANCELED
      partialDayStartDateTimes:
        type: array
        description: >-
          A set of start date-times in ISO-8601 format for partial day
          requests.  Will be not empty if isFullDayRequest == false
        items:
          type: string
          format: date-time
      fullDayManagementUnitDates:
        type: array
        description: >-
          A set of dates in yyyy-MM-dd format.  Should be interpreted in the
          management unit's configured time zone.  Will be not empty if
          isFullDayRequest == true
        items:
          type: string
  WfmUserNotification:
    type: object
    required:
      - id
      - markedAsRead
      - mutableGroupId
    properties:
      id:
        type: string
        description: The immutable globally unique identifier for the object.
      mutableGroupId:
        type: string
        description: The group ID of the notification (mutable, may change  on update)
      timestamp:
        type: string
        format: date-time
        description: >-
          The timestamp for this notification. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      type:
        type: string
        description: The type of this notification
        readOnly: true
        enum:
          - AdherenceExplanation
          - ShiftTrade
          - TimeOffRequest
      shiftTrade:
        description: A shift trade notification.  Only set if type == ShiftTrade
        readOnly: true
        $ref: '#/definitions/ShiftTradeNotification'
      timeOffRequest:
        description: A time off request notification.  Only set if type == TimeOffRequest
        readOnly: true
        $ref: '#/definitions/TimeOffRequestNotification'
      adherenceExplanation:
        description: >-
          An adherence explanation notification.  Only set if type ==
          AdherenceExplanation
        readOnly: true
        $ref: '#/definitions/AdherenceExplanationNotification'
      markedAsRead:
        type: boolean
        description: Whether this notification has been marked "read"
      agentNotification:
        type: boolean
        description: Whether this notification is for an agent
        readOnly: true
      otherNotificationIdsInGroup:
        type: array
        description: >-
          Other notification IDs in group.  This field is only populated in
          real-time notifications
        readOnly: true
        uniqueItems: true
        items:
          type: string
  UpdateNotificationResponse:
    type: object
    properties:
      mutableGroupId:
        type: string
        description: The mutableGroupId of the notification
      id:
        type: string
        description: >-
          The id of the notification for mapping the potentially new
          mutableGroupId
  UpdateNotificationsResponse:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/UpdateNotificationResponse'
  UpdateNotificationsRequest:
    type: object
    required:
      - entities
    properties:
      entities:
        type: array
        description: The notifications to update
        items:
          $ref: '#/definitions/WfmUserNotification'
  HistoricalImportDeleteJobResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      name:
        type: string
      status:
        type: string
        description: Property denoting the status of the delete.
        readOnly: true
        enum:
          - InProgress
          - Success
          - Failed
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  HistoricalImportStatus:
    type: object
    properties:
      requestId:
        type: string
        description: Request id of the historical import in the organization
        readOnly: true
      dateImportEnded:
        type: string
        format: date-time
        description: >-
          The last day of the data you are importing. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateImportStarted:
        type: string
        format: date-time
        description: >-
          The first day of the data you are importing. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      status:
        type: string
        description: Status of the historical import in the organization.
        readOnly: true
        enum:
          - Initiated
          - InProgress
          - Pending
          - Success
          - Failed
          - Cancelled
          - Purged
          - PurgePending
      error:
        type: string
        description: Error occured if the status of the import is failed
        readOnly: true
      dateCreated:
        type: string
        format: date-time
        description: >-
          Date in which the historical import is initiated. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      dateModified:
        type: string
        format: date-time
        description: >-
          Date in which the historical import is modified. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
        readOnly: true
      active:
        type: boolean
        description: Whether this historical import is active or not
        readOnly: true
      type:
        type: string
        description: Whether this historical import is of type csv or json
        readOnly: true
        enum:
          - Csv
          - Json
  HistoricalImportStatusListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/HistoricalImportStatus'
  ValidationServiceRequest:
    type: object
    required:
      - dateImportEnded
      - uploadKey
    properties:
      dateImportEnded:
        type: string
        format: date-time
        description: >-
          The last day of the data you are importing. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      uploadKey:
        type: string
        description: S3 key for the uploaded file
  ModelingProcessingError:
    type: object
    properties:
      internalErrorCode:
        type: string
        description: >-
          An internal code representing the type of error. ModelInputMissing for
          'Model Builder inputs not found.' ModelInputInvalid for 'Model Builder
          inputs are invalid. Ensure the input data format is correct.'
          ModelFailed for 'An error occured while building the model with the
          given input.'
        readOnly: true
        enum:
          - ModelInputMissing
          - ModelInputInvalid
          - ModelFailed
      description:
        type: string
        description: A text description of the error
        readOnly: true
  ModelingStatusResponse:
    type: object
    properties:
      id:
        type: string
        description: >-
          The ID generated for the modeling job.  Use to GET result when job is
          completed.
        readOnly: true
      status:
        type: string
        description: The status of the modeling job.
        readOnly: true
        enum:
          - Pending
          - Success
          - Failed
          - Ongoing
          - PartialFailure
      errorDetails:
        type: array
        description: >-
          If the request could not be properly processed, error details will be
          given here.
        readOnly: true
        items:
          $ref: '#/definitions/ModelingProcessingError'
      modelingResultUri:
        type: string
        description: >-
          The uri of the modeling result. It has a value if the status is either
          'Success', 'PartialFailure', or 'Failed'.
        readOnly: true
  BuScheduleRun:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      schedulerRunId:
        type: string
        description: The scheduler run ID.  Reference this value for support
      intradayRescheduling:
        type: boolean
        description: Whether this is an intraday rescheduling run
      state:
        type: string
        description: The state of the generation run
        enum:
          - None
          - Queued
          - Scheduling
          - Canceled
          - Failed
          - Complete
      weekCount:
        type: integer
        format: int32
        description: The number of weeks spanned by the schedule
      percentComplete:
        type: number
        format: double
        description: Percent completion of the schedule run
      targetWeek:
        type: string
        format: date
        description: >-
          The start date of the target week. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      schedule:
        description: The generated schedule.  Null unless the schedule run is complete
        $ref: '#/definitions/BuScheduleReference'
      scheduleDescription:
        type: string
        description: The description of the generated schedule
      schedulingStartTime:
        type: string
        format: date-time
        description: >-
          When the schedule generation run started. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      schedulingStartedBy:
        description: The user who started the scheduling run
        $ref: '#/definitions/UserReference'
      schedulingCanceledBy:
        description: The user who canceled the scheduling run, if applicable
        $ref: '#/definitions/UserReference'
      schedulingCompletedTime:
        type: string
        format: date-time
        description: >-
          When the scheduling run was completed, if applicable. Date time is
          represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      messageCount:
        type: integer
        format: int32
        description: >-
          The number of schedule generation messages for this schedule
          generation run
      messageSeverityCounts:
        type: array
        description: >-
          The list of schedule generation message counts by severity for this
          schedule generation run
        items:
          $ref: '#/definitions/SchedulerMessageSeverityCount'
      reschedulingOptions:
        description: >-
          Rescheduling options for this run.  Null unless intradayRescheduling
          is true
        $ref: '#/definitions/ReschedulingOptionsRunResponse'
      reschedulingResultExpiration:
        type: string
        format: date-time
        description: >-
          When the reschedule result will expire.  Null unless
          intradayRescheduling is true. Date time is represented as an ISO-8601
          string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ReschedulingManagementUnitResponse:
    type: object
    properties:
      managementUnit:
        description: The management unit
        $ref: '#/definitions/ManagementUnitReference'
      applied:
        type: boolean
        description: Whether the rescheduling run is applied for the given management unit
  ReschedulingOptionsRunResponse:
    type: object
    properties:
      existingSchedule:
        description: The existing schedule to which this reschedule run applies
        $ref: '#/definitions/BuScheduleReference'
      startDate:
        type: string
        format: date-time
        description: >-
          The start date of the period to reschedule. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endDate:
        type: string
        format: date-time
        description: >-
          The end date of the period to reschedule. Date time is represented as
          an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      managementUnits:
        type: array
        description: Per-management unit rescheduling options
        items:
          $ref: '#/definitions/ReschedulingManagementUnitResponse'
      agentCount:
        type: integer
        format: int32
        description: The number of agents to be considered in the reschedule
      activityCodeIds:
        type: array
        description: The IDs of the activity codes being considered for reschedule
        uniqueItems: true
        items:
          type: string
      doNotChangeWeeklyPaidTime:
        type: boolean
        description: Whether weekly paid time is allowed to be changed
      doNotChangeDailyPaidTime:
        type: boolean
        description: Whether daily paid time is allowed to be changed
      doNotChangeShiftStartTimes:
        type: boolean
        description: Whether shift start times are allowed to be changed
      doNotChangeManuallyEditedShifts:
        type: boolean
        description: Whether manually edited shifts are allowed to be changed
  SchedulerMessageSeverityCount:
    type: object
    properties:
      severity:
        type: string
        description: The schedule message severity
        enum:
          - Ignore
          - Information
          - Warning
          - Error
      count:
        type: integer
        format: int32
        description: The number of schedule messages with the given severity
  BuAgentScheduleRescheduleResponse:
    type: object
    properties:
      user:
        description: The user to whom this agent schedule applies
        $ref: '#/definitions/UserReference'
      shifts:
        type: array
        description: The shift definitions for this agent schedule
        items:
          $ref: '#/definitions/BuAgentScheduleShift'
      fullDayTimeOffMarkers:
        type: array
        description: Full day time off markers which apply to this agent schedule
        items:
          $ref: '#/definitions/BuFullDayTimeOffMarker'
      workPlan:
        description: The work plan for this user
        $ref: '#/definitions/WorkPlanReference'
      workPlansPerWeek:
        type: array
        description: >-
          The work plans per week for this user from the work plan rotation.
          Null values in the list denotes that user is not part of any work plan
          for that week
        items:
          $ref: '#/definitions/WorkPlanReference'
  BuHeadcountForecast:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/BuPlanningGroupHeadcountForecast'
      referenceStartDate:
        type: string
        format: date-time
        description: >-
          Reference start date for the interval values in each forecast entity.
          Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
  BuPlanningGroupHeadcountForecast:
    type: object
    properties:
      planningGroup:
        description: >-
          The planning group to which this portion of the headcount forecast
          applies
        $ref: '#/definitions/PlanningGroupReference'
      requiredPerInterval:
        type: array
        description: >-
          Required headcount per interval, referenced against the reference
          start date
        items:
          type: number
          format: double
      requiredWithoutShrinkagePerInterval:
        type: array
        description: >-
          Required headcount per interval without accounting for shrinkage,
          referenced against the reference start date
        items:
          type: number
          format: double
  BuRescheduleAgentScheduleResult:
    type: object
    properties:
      managementUnit:
        description: The management unit to which this part of the result applies
        $ref: '#/definitions/ManagementUnitReference'
      downloadResult:
        description: >-
          The agent schedules.  Result will always come via the downloadUrl;
          however the schema is included for documentation
        $ref: '#/definitions/MuRescheduleResultWrapper'
      downloadUrl:
        type: string
        description: The download URL from which to fetch the result
  BuRescheduleResult:
    type: object
    properties:
      generationResults:
        description: >-
          The generation results.  Note the result will always be delivered via
          the generationResultsDownloadUrl; however the schema is included for
          documentation
        $ref: '#/definitions/ScheduleGenerationResult'
      generationResultsDownloadUrl:
        type: string
        description: >-
          The download URL from which to fetch the generation results for the
          rescheduling run
      headcountForecast:
        description: >-
          The headcount forecast.  Note the result will always be delivered via
          the headcountForecastDownloadUrl; however the schema is included for
          documentation
        $ref: '#/definitions/BuHeadcountForecast'
      headcountForecastDownloadUrl:
        type: string
        description: >-
          The download URL from which to fetch the headcount forecast for the
          rescheduling run
      agentSchedules:
        type: array
        description: >-
          List of download links for agent schedules produced by the
          rescheduling run
        items:
          $ref: '#/definitions/BuRescheduleAgentScheduleResult'
  MuRescheduleResultWrapper:
    type: object
    properties:
      agentSchedules:
        type: array
        description: The list of agent schedules
        items:
          $ref: '#/definitions/BuAgentScheduleRescheduleResponse'
  PlanningGroupReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ScheduleGenerationMessage:
    type: object
    properties:
      type:
        type: string
        description: The type of the message
        enum:
          - AgentNotFound
          - AgentNotInSelectedManagementUnit
          - AgentNotLicensed
          - AgentWithoutWorkPlan
          - WorkPlanNotEnabled
          - WorkPlanNotFound
          - AgentWithoutCapability
          - NoNeedDays
          - UnableToProduceAgentSchedule
          - UnableToScheduleMaxConsecutiveWorkingDaysFromAgentHistory
          - UnableToScheduleMaxConsecutiveWorkingWeekendsFromAgentHistory
          - UnableToScheduleMaxWeeklyPaidTimeFromTimeOff
          - UnableToScheduleMaxWorkDayPaidTimeFromTimeOff
          - UnableToScheduleMinIntershiftTimeFromAgentHistory
          - UnableToScheduleMinIntershiftTimeFromDst
          - UnableToScheduleMinShiftStartDistanceFromAgentHistory
          - UnableToScheduleMinShiftStartDistanceFromDst
          - UnableToScheduleMinWeeklyPaidTimeFromTimeOff
          - UnableToScheduleMinWeeklyWorkDaysFromTimeOff
          - UnableToScheduleMinWorkDayPaidTimeFromTimeOff
          - UnableToSchedulePlanningPeriodMaxDaysOffFromAgentHistory
          - UnableToSchedulePlanningPeriodMaxDaysOffFromTimeOff
          - UnableToSchedulePlanningPeriodMaxPaidTimeFromAgentHistory
          - UnableToSchedulePlanningPeriodMaxPaidTimeFromTimeOff
          - UnableToSchedulePlanningPeriodMinDaysOffFromAgentHistory
          - UnableToSchedulePlanningPeriodMinPaidTimeFromAgentHistory
          - UnableToSchedulePlanningPeriodMinPaidTimeFromTimeOff
          - UnableToScheduleWorkDayFromTimeOff
          - UnableToScheduleMaxConsecutiveWorkingDays
          - UnableToScheduleMaxConsecutiveWorkingWeekends
          - UnableToScheduleMaxWeeklyPaidTime
          - UnableToScheduleMaxWeeklyWorkDays
          - UnableToScheduleMaxWorkDayPaidTime
          - UnableToScheduleMinConsecutiveNonWorkingTimePerWeek
          - UnableToScheduleMinIntershiftTime
          - UnableToScheduleMinShiftStartDistance
          - UnableToScheduleMinWeeklyPaidTime
          - UnableToScheduleMinWeeklyWorkDays
          - UnableToScheduleMinWorkDayPaidTime
          - UnableToSchedulePlanningPeriodMaxDaysOff
          - UnableToSchedulePlanningPeriodMaxPaidTime
          - UnableToSchedulePlanningPeriodMinDaysOff
          - UnableToSchedulePlanningPeriodMinPaidTime
          - UnableToScheduleShiftVariance
          - UnableToScheduleWorkDay
      arguments:
        type: array
        description: The arguments describing the message
        items:
          $ref: '#/definitions/SchedulerMessageArgument'
  ScheduleGenerationResult:
    type: object
    properties:
      failed:
        type: boolean
        description: Whether the schedule generation run failed
      runId:
        type: string
        description: >-
          The ID of the schedule generation run. Reference this when requesting
          support
      messageCount:
        type: integer
        format: int32
        description: >-
          The number of schedule generation messages for this schedule
          generation run
      messages:
        type: array
        description: User facing messages related to the schedule generation run
        items:
          $ref: '#/definitions/ScheduleGenerationMessage'
      messageSeverities:
        type: array
        description: The list of messages by severity in this schedule generation run
        items:
          $ref: '#/definitions/SchedulerMessageTypeSeverity'
  SchedulerMessageArgument:
    type: object
    properties:
      type:
        type: string
        description: The type of this message parameter
        enum:
          - AgentId
          - Date
      value:
        type: string
        description: The value of this message parameter
  PatchBuReschedulingOptionsManagementUnitRequest:
    type: object
    required:
      - managementUnitId
    properties:
      managementUnitId:
        type: string
        description: The management unit portion of the rescheduling run to update
      applied:
        type: boolean
        description: >-
          Whether to mark the run as applied.  Only applies to reschedule runs. 
          Once applied, a run cannot be un-marked as applied
  PatchBuReschedulingOptionsRequest:
    type: object
    properties:
      managementUnits:
        type: array
        description: Per-management unit rescheduling options to update
        items:
          $ref: '#/definitions/PatchBuReschedulingOptionsManagementUnitRequest'
  PatchBuScheduleRunRequest:
    type: object
    properties:
      reschedulingOptions:
        description: The rescheduling options to update
        $ref: '#/definitions/PatchBuReschedulingOptionsRequest'
  BuScheduleRunListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/BuScheduleRun'
  BuAgentSchedulesSearchResponse:
    type: object
    properties:
      agentSchedules:
        type: array
        description: The requested agent schedules
        items:
          $ref: '#/definitions/BuAgentScheduleSearchResponse'
      businessUnitTimeZone:
        type: string
        description: >-
          The time zone configured for the business unit to which this schedule
          applies
      publishedSchedules:
        type: array
        description: >-
          References to all published week schedules overlapping the start/end
          date query parameters
        items:
          $ref: '#/definitions/BuAgentSchedulePublishedScheduleReference'
  BuAsyncAgentSchedulesSearchResponse:
    type: object
    properties:
      status:
        type: string
        description: The status of the operation
        enum:
          - Processing
          - Complete
          - Canceled
          - Error
      operationId:
        type: string
        description: The ID for the operation
      result:
        description: The result of the operation.  Null unless status == Complete
        $ref: '#/definitions/BuAgentSchedulesSearchResponse'
      progress:
        type: integer
        format: int32
        description: Percent progress for the operation
      downloadUrl:
        type: string
        description: >-
          The URL from which to download the result if it is too large to pass
          directly
  BuSearchAgentSchedulesRequest:
    type: object
    required:
      - endDate
      - startDate
    properties:
      startDate:
        type: string
        format: date-time
        description: >-
          Start date of the range to search. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endDate:
        type: string
        format: date-time
        description: >-
          End date of the range to search. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      userIds:
        type: array
        description: IDs of the users for whose schedules to search
        items:
          type: string
  BuAsyncScheduleResponse:
    type: object
    properties:
      status:
        type: string
        description: The status of the operation
        enum:
          - Processing
          - Complete
          - Canceled
          - Error
      operationId:
        type: string
        description: The ID for the operation
      result:
        description: The result of the operation.  Null unless status == Complete
        $ref: '#/definitions/BuScheduleMetadata'
  BuManagementUnitScheduleSummary:
    type: object
    properties:
      managementUnit:
        description: The management unit to which this summary applies
        $ref: '#/definitions/ManagementUnitReference'
      agentCount:
        type: integer
        format: int32
        description: >-
          The number of agents from this management unit that are in the
          schedule
      startDate:
        type: string
        format: date-time
        description: >-
          The start of the schedule change in the management unit. Only
          populated in schedule update notifications. Date time is represented
          as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endDate:
        type: string
        format: date-time
        description: >-
          The end of the schedule change in the management unit. Only populated
          in schedule update notifications. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      agents:
        type: array
        description: >-
          The agents in the management unit who are part of this schedule, or in
          schedule change notifications, the agents that were changed. Note this
          will come back as an empty list unless the appropriate expand query
          parameter is passed
        uniqueItems: true
        items:
          $ref: '#/definitions/UserReference'
  BuScheduleMetadata:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      weekDate:
        type: string
        format: date
        description: >-
          The start week date for this schedule. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      weekCount:
        type: integer
        format: int32
        description: The number of weeks spanned by this schedule
      description:
        type: string
        description: The description of this schedule
      published:
        type: boolean
        description: Whether this schedule is published
      shortTermForecast:
        description: The forecast used for this schedule, if applicable
        $ref: '#/definitions/BuShortTermForecastReference'
      generationResults:
        description: Generation result summary for this schedule, if applicable
        $ref: '#/definitions/ScheduleGenerationResultSummary'
      metadata:
        description: Version metadata for this schedule
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      managementUnits:
        type: array
        description: High level per-management unit schedule metadata
        items:
          $ref: '#/definitions/BuManagementUnitScheduleSummary'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  ScheduleGenerationResultSummary:
    type: object
    properties:
      failed:
        type: boolean
        description: Whether the schedule generation run failed
      runId:
        type: string
        description: >-
          The ID of the schedule generation run. Reference this when requesting
          support
      messageCount:
        type: integer
        format: int32
        description: >-
          The number of schedule generation messages for this schedule
          generation run
      messageSeverityCounts:
        type: array
        description: >-
          The list of schedule generation message counts by severity for this
          schedule generation run
        items:
          $ref: '#/definitions/SchedulerMessageSeverityCount'
  BuAsyncScheduleRunResponse:
    type: object
    properties:
      status:
        type: string
        description: The status of the operation
        enum:
          - Processing
          - Complete
          - Canceled
          - Error
      operationId:
        type: string
        description: The ID for the operation
      result:
        description: The result of the operation.  Null unless status == Complete
        $ref: '#/definitions/BuScheduleRun'
  BuRescheduleRequest:
    type: object
    required:
      - doNotChangeDailyPaidTime
      - doNotChangeManuallyEditedShifts
      - doNotChangeShiftStartTimes
      - doNotChangeWeeklyPaidTime
      - managementUnitIds
    properties:
      startDate:
        type: string
        format: date-time
        description: >-
          The start of the range to reschedule.  Defaults to the beginning of
          the schedule. Date time is represented as an ISO-8601 string. For
          example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      endDate:
        type: string
        format: date-time
        description: >-
          The end of the range to reschedule.  Defaults the the end of the
          schedule. Date time is represented as an ISO-8601 string. For example:
          yyyy-MM-ddTHH:mm:ss[.mmm]Z
      agentIds:
        type: array
        description: >-
          The IDs of the agents to consider for rescheduling.  Omit to consider
          all agents in the specified management units.Agents not in the
          specified management units will be ignored
        items:
          type: string
      activityCodeIds:
        type: array
        description: >-
          The IDs of the activity codes to consider for rescheduling.  Omit to
          consider all activity codes
        items:
          type: string
      managementUnitIds:
        type: array
        description: The IDs of the management units to reschedule
        items:
          type: string
      doNotChangeWeeklyPaidTime:
        type: boolean
        description: >-
          Instructs the scheduler whether it is allowed to change weekly paid
          time
      doNotChangeDailyPaidTime:
        type: boolean
        description: >-
          Instructs the scheduler whether it is allowed to change daily paid
          time
      doNotChangeShiftStartTimes:
        type: boolean
        description: >-
          Instructs the scheduler whether it is allowed to change shift start
          times
      doNotChangeManuallyEditedShifts:
        type: boolean
        description: >-
          Instructs the scheduler whether it is allowed to change manually
          edited shifts
  SchedulingTestingOptionsRequest:
    type: object
    properties:
      fastScheduling:
        type: boolean
        description: Whether to enable fast scheduling
      delayScheduling:
        type: boolean
        description: Whether to force delayed scheduling
      failScheduling:
        type: boolean
        description: Whether to force scheduling to fail
      populateWarnings:
        type: boolean
        description: Whether to populate warnings in the generated schedule
      populateDeprecatedWarnings:
        type: boolean
        description: Whether to populate deprecated warnings in the generated schedule
  BuScheduleListItem:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      weekDate:
        type: string
        format: date
        description: >-
          The start week date for this schedule. Dates are represented as an
          ISO-8601 string. For example: yyyy-MM-dd
      weekCount:
        type: integer
        format: int32
        description: The number of weeks spanned by this schedule
      description:
        type: string
        description: The description of this schedule
      published:
        type: boolean
        description: Whether this schedule is published
      shortTermForecast:
        description: The forecast used for this schedule, if applicable
        $ref: '#/definitions/BuShortTermForecastReference'
      generationResults:
        description: Generation result summary for this schedule, if applicable
        $ref: '#/definitions/ScheduleGenerationResultSummary'
      metadata:
        description: Version metadata for this schedule
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  BuScheduleListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/BuScheduleListItem'
  BuCreateBlankScheduleRequest:
    type: object
    required:
      - description
      - weekCount
    properties:
      description:
        type: string
        description: The description for the schedule
      shortTermForecast:
        description: >-
          The forecast to use when generating the schedule.  Note that the
          forecast must fully encompass the schedule's start week + week count
        $ref: '#/definitions/BuShortTermForecastReference'
      weekCount:
        type: integer
        format: int32
        description: The number of weeks in the schedule. One extra day is added at the end
  BuImportAgentScheduleUploadSchema:
    type: object
    required:
      - userId
    properties:
      userId:
        type: string
        description: The ID of the user to whom this agent schedule applies
      workPlanId:
        description: >-
          The ID of the work plan for this user.  Mutually exclusive with
          workPlanIdsPerWeek
        $ref: '#/definitions/ValueWrapperString'
      workPlanIdsPerWeek:
        description: >-
          The IDs of the work plans per week for this user.  Mutually exclusive
          with workPlanId
        $ref: '#/definitions/ListWrapperString'
      shifts:
        type: array
        description: The shift definitions for this agent schedule
        items:
          $ref: '#/definitions/BuAgentScheduleShift'
      fullDayTimeOffMarkers:
        type: array
        description: Any full day time off markers that apply to this agent schedule
        items:
          $ref: '#/definitions/BuFullDayTimeOffMarker'
  ImportScheduleUploadResponse:
    type: object
    properties:
      uploadKey:
        type: string
        description: >-
          The key to pass to the secondary request to start processing of the
          upload
      url:
        type: string
        description: The url to which to PUT the upload body
      headers:
        type: object
        description: Required headers for the PUT request to the url
        additionalProperties:
          type: string
      uploadBodySchema:
        description: >-
          Always null. Defines the schema of the json body to be PUT to the url.
          The json body should be gzip encoded before uploading
        $ref: '#/definitions/ImportScheduleUploadSchema'
  ImportScheduleUploadSchema:
    type: object
    required:
      - description
      - weekCount
    properties:
      description:
        type: string
        description: The description for the imported schedule
      weekCount:
        type: integer
        format: int32
        description: The number of weeks the imported schedule will cover
      published:
        type: boolean
        description: Whether the imported schedule should be immediately published
      shortTermForecast:
        description: The short term forecast to associate with the imported schedule
        $ref: '#/definitions/BuShortTermForecastReference'
      headcountForecast:
        description: The headcount forecast to associate with the imported schedule
        $ref: '#/definitions/BuHeadcountForecast'
      agentSchedules:
        type: array
        description: Individual agent schedules
        items:
          $ref: '#/definitions/BuImportAgentScheduleUploadSchema'
  ListWrapperString:
    type: object
    properties:
      values:
        type: array
        items:
          type: string
  ScheduleUploadProcessingResponse:
    type: object
    properties:
      status:
        type: string
        description: The status of the operation
        enum:
          - Processing
          - Complete
          - Canceled
          - Error
      operationId:
        type: string
        description: The ID for the operation
      result:
        description: The result of the operation.  Null unless status == Complete
        $ref: '#/definitions/BuScheduleMetadata'
  BuGenerateScheduleRequest:
    type: object
    required:
      - description
      - weekCount
    properties:
      description:
        type: string
        description: The description for the schedule
      shortTermForecast:
        description: >-
          The forecast to use when generating the schedule.  Note that the
          forecast must fully encompass the schedule's start week + week count
        $ref: '#/definitions/BuShortTermForecastReference'
      weekCount:
        type: integer
        format: int32
        description: The number of weeks in the schedule. One extra day is added at the end
      options:
        description: Additional scheduling options
        $ref: '#/definitions/SchedulingOptionsRequest'
  SchedulingNoForecastOptionsRequest:
    type: object
    properties:
      shiftLength:
        type: string
        description: The shift length option to apply if no forecast is supplied
        enum:
          - Shortest
          - Median
          - Longest
          - Random
      shiftStart:
        type: string
        description: The shift start option to apply if no forecast is supplied
        enum:
          - Earliest
          - Median
          - Latest
          - Random
  SchedulingOptionsRequest:
    type: object
    properties:
      noForecastOptions:
        description: Schedule generation options to apply if no forecast is supplied
        $ref: '#/definitions/SchedulingNoForecastOptionsRequest'
  BuCopyScheduleRequest:
    type: object
    required:
      - description
      - weekDate
    properties:
      description:
        type: string
        description: The description for the new schedule
      weekDate:
        type: string
        format: date
        description: >-
          The start weekDate for the new copy of the schedule. Dates are
          represented as an ISO-8601 string. For example: yyyy-MM-dd
  BuHeadcountForecastResponse:
    type: object
    properties:
      result:
        description: The headcount forecast, null when downloadUrl is provided
        $ref: '#/definitions/BuHeadcountForecast'
      downloadUrl:
        type: string
        description: >-
          Download URL.  Null unless the response is too large to pass directly
          through the api
  BuAgentScheduleQueryResponse:
    type: object
    properties:
      user:
        description: The user to whom this agent schedule applies
        $ref: '#/definitions/UserReference'
      shifts:
        type: array
        description: The shift definitions for this agent schedule
        items:
          $ref: '#/definitions/BuAgentScheduleShift'
      fullDayTimeOffMarkers:
        type: array
        description: Full day time off markers which apply to this agent schedule
        items:
          $ref: '#/definitions/BuFullDayTimeOffMarker'
      workPlan:
        description: The work plan for this user
        $ref: '#/definitions/WorkPlanReference'
      workPlansPerWeek:
        type: array
        description: >-
          The work plans per week for this user from the work plan rotation.
          Null values in the list denotes that user is not part of any work plan
          for that week
        items:
          $ref: '#/definitions/WorkPlanReference'
      metadata:
        description: Versioned entity metadata for this agent schedule
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  BuAgentSchedulesQueryResponse:
    type: object
    properties:
      agentSchedules:
        type: array
        description: The requested agent schedules
        items:
          $ref: '#/definitions/BuAgentScheduleQueryResponse'
      businessUnitTimeZone:
        type: string
        description: >-
          The time zone configured for the business unit to which these
          schedules apply
  BuAsyncAgentSchedulesQueryResponse:
    type: object
    properties:
      status:
        type: string
        description: The status of the operation
        enum:
          - Processing
          - Complete
          - Canceled
          - Error
      operationId:
        type: string
        description: The ID for the operation
      result:
        description: The result of the operation.  Null unless status == Complete
        $ref: '#/definitions/BuAgentSchedulesQueryResponse'
      progress:
        type: integer
        format: int32
        description: Percent progress for the operation
      downloadUrl:
        type: string
        description: >-
          The URL from which to download the result if it is too large to pass
          directly
  BuQueryAgentSchedulesRequest:
    type: object
    required:
      - managementUnitId
    properties:
      managementUnitId:
        type: string
        description: The ID of the management unit to query
      userIds:
        type: array
        description: >-
          The IDs of the users to query.  Omit to query all user schedules in
          the management unit. 
        uniqueItems: true
        items:
          type: string
      teamIds:
        type: array
        description: >-
          The teamIds to request. If null or not set, results will be queried
          for requested users if applicable or otherwise all users in the
          management unit
        uniqueItems: true
        items:
          type: string
  BuAgentScheduleHistoryChange:
    type: object
    properties:
      metadata:
        description: The metadata of the change, including who and when the change was made
        $ref: '#/definitions/BuAgentScheduleHistoryChangeMetadata'
      shifts:
        type: array
        description: The list of changed shifts
        items:
          $ref: '#/definitions/BuAgentScheduleShift'
      fullDayTimeOffMarkers:
        type: array
        description: The list of changed full day time off markers
        items:
          $ref: '#/definitions/BuFullDayTimeOffMarker'
      deletes:
        description: >-
          The deleted shifts, full day time off markers, or the entire agent
          schedule
        $ref: '#/definitions/BuAgentScheduleHistoryDeletedChange'
  BuAgentScheduleHistoryChangeMetadata:
    type: object
    properties:
      dateModified:
        type: string
        format: date-time
        description: >-
          The timestamp of the schedule change. Date time is represented as an
          ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
      modifiedBy:
        description: The user that made the schedule change
        $ref: '#/definitions/UserReference'
  BuAgentScheduleHistoryDeletedChange:
    type: object
    properties:
      shiftIds:
        type: array
        description: The IDs of deleted shifts
        uniqueItems: true
        items:
          type: string
      fullDayTimeOffMarkerDates:
        type: array
        description: The dates of any deleted full day time off markers
        uniqueItems: true
        items:
          type: string
          format: date
      agentSchedule:
        type: boolean
        description: Whether the entire agent schedule was deleted
  BuAgentScheduleHistoryDroppedChange:
    type: object
    properties:
      metadata:
        description: The metadata of the change, including who and when the change was made
        $ref: '#/definitions/BuAgentScheduleHistoryChangeMetadata'
      shiftIds:
        type: array
        description: The IDs of deleted shifts
        uniqueItems: true
        items:
          type: string
      fullDayTimeOffMarkerDates:
        type: array
        description: The dates of any deleted full day time off markers
        uniqueItems: true
        items:
          type: string
          format: date
      deletes:
        description: >-
          The deleted shifts, full day time off markers, or the entire agent
          schedule
        $ref: '#/definitions/BuAgentScheduleHistoryDeletedChange'
  BuAgentScheduleHistoryResponse:
    type: object
    properties:
      priorPublishedSchedules:
        type: array
        description: The list of previously published schedules
        items:
          $ref: '#/definitions/BuScheduleReference'
      basePublishedSchedule:
        description: The originally published agent schedules
        $ref: '#/definitions/BuAgentScheduleHistoryChange'
      droppedChanges:
        type: array
        description: >-
          The changes dropped from the schedule history. This will happen if the
          schedule history is too large
        items:
          $ref: '#/definitions/BuAgentScheduleHistoryDroppedChange'
      changes:
        type: array
        description: The list of changes for the schedule history
        items:
          $ref: '#/definitions/BuAgentScheduleHistoryChange'
  BuUpdateAgentScheduleUploadSchema:
    type: object
    required:
      - userId
    properties:
      userId:
        type: string
        description: The ID of the user to whom this agent schedule applies
      workPlanId:
        description: >-
          The ID of the work plan for this user.  Mutually exclusive with
          workPlanIdsPerWeek
        $ref: '#/definitions/ValueWrapperString'
      workPlanIdsPerWeek:
        description: >-
          The IDs of the work plans per week for this user.  Mutually exclusive
          with workPlanId
        $ref: '#/definitions/ListWrapperString'
      shifts:
        type: array
        description: The shift definitions for this agent schedule
        items:
          $ref: '#/definitions/BuAgentScheduleShift'
      fullDayTimeOffMarkers:
        type: array
        description: Any full day time off markers that apply to this agent schedule
        items:
          $ref: '#/definitions/BuFullDayTimeOffMarker'
      metadata:
        description: >-
          Version metadata for this agent schedule. Required if updating or
          deleting an existing agent schedule, otherwise should be omitted
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      delete:
        type: boolean
        description: Whether to delete this agent's schedule. Defaults to false if not set
  UpdateScheduleUploadResponse:
    type: object
    properties:
      uploadKey:
        type: string
        description: >-
          The key to pass to the secondary request to start processing of the
          upload
      url:
        type: string
        description: The url to which to PUT the upload body
      headers:
        type: object
        description: Required headers for the PUT request to the url
        additionalProperties:
          type: string
      uploadBodySchema:
        description: >-
          Always null. Defines the schema of the json body to be PUT to the url.
          The json body should be gzip encoded before uploading
        $ref: '#/definitions/UpdateScheduleUploadSchema'
  UpdateScheduleUploadSchema:
    type: object
    required:
      - metadata
    properties:
      description:
        type: string
        description: The description to set for the schedule
      published:
        type: boolean
        description: >-
          Whether to publish the schedule. Note: a schedule cannot be
          un-published unless another schedule is published over it
      shortTermForecast:
        description: The short term forecast to associate with the schedule
        $ref: '#/definitions/BuShortTermForecastReference'
      headcountForecast:
        description: The headcount forecast to associate with the schedule
        $ref: '#/definitions/BuHeadcountForecast'
      agentSchedules:
        type: array
        description: Individual agent schedules
        items:
          $ref: '#/definitions/BuUpdateAgentScheduleUploadSchema'
      metadata:
        description: Version metadata for this schedule
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  ProcessScheduleUpdateUploadRequest:
    type: object
    required:
      - uploadKey
    properties:
      uploadKey:
        type: string
        description: The uploadKey provided by the request to get an upload URL
      teamIds:
        type: array
        description: >-
          The list of teams to which the users being modified belong. Only
          required if the requesting user has conditional permission to
          wfm:schedule:edit
        uniqueItems: true
        items:
          type: string
      managementUnitIdsForAddedTeamUsers:
        type: array
        description: >-
          The set of muIds to which agents belong if agents are being newly
          added to the schedule, if the requesting user has conditional
          permission to wfm:schedule:edit
        uniqueItems: true
        items:
          type: string
  UserListScheduleRequestBody:
    type: object
    required:
      - endDate
      - startDate
      - userIds
    properties:
      userIds:
        type: array
        description: The user ids for which to fetch schedules
        items:
          type: string
      startDate:
        type: string
        format: date-time
        description: Beginning of the range of schedules to fetch, in ISO-8601 format
      endDate:
        type: string
        format: date-time
        description: End of the range of schedules to fetch, in ISO-8601 format
      loadFullWeeks:
        type: boolean
        description: >-
          Whether to load the full week's schedule (for the requested users) of
          any week overlapping the start/end date query parameters, defaults to
          false
  ScheduleGenerationWarning:
    type: object
    properties:
      userId:
        type: string
        description: ID of the user in the warning
      userNotLicensed:
        type: boolean
        description: Whether the user does not have the appropriate license to be scheduled
      unableToMeetMaxDays:
        type: boolean
        description: >-
          Whether the number of scheduled days exceeded the maximum days to
          schedule defined in the agent work plan
      unableToScheduleRequiredDays:
        type: array
        description: >-
          Days indicated as required to work in agent work plan where no viable
          shift was found to schedule
        uniqueItems: true
        items:
          type: string
          enum:
            - Sunday
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
      unableToMeetMinPaidForTheWeek:
        type: boolean
        description: >-
          Whether the schedule did not meet the minimum paid time for the week
          defined in the agent work plan
      unableToMeetMaxPaidForTheWeek:
        type: boolean
        description: >-
          Whether the schedule exceeded the maximum paid time for the week
          defined in the agent work plan
      noNeedDays:
        type: array
        description: >-
          Days agent was scheduled but there was no need to meet. The scheduled
          days have no effect on service levels
        uniqueItems: true
        items:
          type: string
          enum:
            - Sunday
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
      shiftsTooCloseTogether:
        type: boolean
        description: >-
          Whether the schedule did not meet the minimum time between shifts
          defined in the agent work plan
  ShortTermForecastReference:
    type: object
    required:
      - weekDate
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      weekDate:
        type: string
        description: The weekDate of the short term forecast in yyyy-MM-dd format
      description:
        type: string
        description: The description of the short term forecast
  WeekScheduleGenerationResult:
    type: object
    properties:
      failed:
        type: boolean
        description: Whether the schedule generation failed
      runId:
        type: string
        description: ID of the schedule run
      agentWarnings:
        type: array
        description: >-
          Warning messages from the schedule run. This will be available only
          when requesting information for a single week schedule
        items:
          $ref: '#/definitions/ScheduleGenerationWarning'
      agentWarningCount:
        type: integer
        format: int32
        description: >-
          Count of warning messages from the schedule run. This will be
          available only when requesting multiple week schedules
  WeekScheduleListItemResponse:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      weekDate:
        type: string
        description: First day of this week schedule in yyyy-MM-dd format
      description:
        type: string
        description: Description of the week schedule
      published:
        type: boolean
        description: Whether the week schedule is published
      generationResults:
        description: Summary of the results from the schedule run
        $ref: '#/definitions/WeekScheduleGenerationResult'
      shortTermForecast:
        description: Short term forecast associated with this schedule
        $ref: '#/definitions/ShortTermForecastReference'
      metadata:
        description: Version metadata for this work plan
        $ref: '#/definitions/WfmVersionedEntityMetadata'
  WeekScheduleListResponse:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/WeekScheduleListItemResponse'
  HeadcountForecast:
    type: object
    required:
      - required
      - requiredWithoutShrinkage
    properties:
      required:
        type: array
        description: Headcount information with shrinkage
        items:
          $ref: '#/definitions/HeadcountInterval'
      requiredWithoutShrinkage:
        type: array
        description: Headcount information without shrinkage
        items:
          $ref: '#/definitions/HeadcountInterval'
  HeadcountInterval:
    type: object
    required:
      - interval
      - value
    properties:
      interval:
        type: string
        format: date-time
        description: >-
          The start date-time for this headcount interval in ISO-8601 format,
          must be within the 8 day schedule
      value:
        type: number
        format: double
        description: Headcount value for this interval
  WeekSchedule:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
      weekDate:
        type: string
        description: First day of this week schedule in yyyy-MM-dd format
      description:
        type: string
        description: Description of the week schedule
      published:
        type: boolean
        description: Whether the week schedule is published
      generationResults:
        description: Summary of the results from the schedule run
        $ref: '#/definitions/WeekScheduleGenerationResult'
      shortTermForecast:
        description: Short term forecast associated with this schedule
        $ref: '#/definitions/ShortTermForecastReference'
      metadata:
        description: Version metadata for this work plan
        $ref: '#/definitions/WfmVersionedEntityMetadata'
      userSchedules:
        type: object
        description: User schedules in the week
        additionalProperties:
          $ref: '#/definitions/UserSchedule'
      headcountForecast:
        description: Headcount information for the week schedule
        $ref: '#/definitions/HeadcountForecast'
      agentSchedulesVersion:
        type: integer
        format: int32
        description: Version of agent schedules in the week schedule
  WeekScheduleResponse:
    type: object
    properties:
      result:
        description: The result of the request. The value will be null if response is large
        $ref: '#/definitions/WeekSchedule'
      downloadUrl:
        type: string
        description: >-
          The url to fetch the result for large responses. The value is null if
          result contains the data
  SchedulingProcessingError:
    type: object
    properties:
      internalErrorCode:
        type: string
        description: >-
          An internal code representing the type of error. BadJson for 'Unable
          to parse json.' NotFound for 'Resource not found.' Fail for 'An
          unexpected server error occured.'
        readOnly: true
        enum:
          - BadJson
          - NotFound
          - Fail
      description:
        type: string
        description: A text description of the error
        readOnly: true
  SchedulingStatusResponse:
    type: object
    properties:
      id:
        type: string
        description: >-
          The ID generated for the scheduling job.  Use to GET result when job
          is completed.
        readOnly: true
      status:
        type: string
        description: The status of the scheduling job.
        readOnly: true
        enum:
          - Pending
          - Success
          - Failed
          - Ongoing
          - PartialFailure
      errorDetails:
        type: array
        description: >-
          If the request could not be properly processed, error details will be
          given here.
        readOnly: true
        items:
          $ref: '#/definitions/SchedulingProcessingError'
      schedulingResultUri:
        type: string
        description: >-
          The uri of the scheduling result. It has a value if the status is
          'Success'.
        readOnly: true
      percentComplete:
        type: integer
        format: int32
        description: The percentage of the job that is complete.
        readOnly: true
  HistoricalShrinkageActivityCategoryResponse:
    type: object
    properties:
      activityCategory:
        type: string
        description: Activity category for which shrinkage data is provided
        enum:
          - OnQueueWork
          - Break
          - Meal
          - Meeting
          - OffQueueWork
          - TimeOff
          - Training
          - Unavailable
          - Unscheduled
      shrinkageForActivityCategory:
        description: Aggregated shrinkage data for the activity category
        $ref: '#/definitions/HistoricalShrinkageAggregateResponse'
      shrinkageForActivityCodes:
        type: array
        description: Shrinkage for the activity codes under this activity category
        items:
          $ref: '#/definitions/HistoricalShrinkageActivityCodeResponse'
  HistoricalShrinkageActivityCodeResponse:
    type: object
    properties:
      activityCodeId:
        type: string
        description: The ID of the activity code for which shrinkage data is provided
      shrinkageForActivityCode:
        description: Aggregated shrinkage data for the activity code
        $ref: '#/definitions/HistoricalShrinkageAggregateResponse'
  HistoricalShrinkageAggregateResponse:
    type: object
    properties:
      scheduledShrinkageSeconds:
        type: integer
        format: int32
        description: Aggregated shrinkage value in seconds for scheduled activities
      scheduledShrinkagePercent:
        type: number
        format: double
        description: >-
          Aggregated shrinkage value in percent from 0.0 to 100.0 for scheduled
          activities
      actualShrinkageSeconds:
        type: integer
        format: int32
        description: Aggregated actual value in seconds for scheduled activities
      actualShrinkagePercent:
        type: number
        format: double
        description: >-
          Aggregated actual value in percent from 0.0 to 100.0 for scheduled
          activities
      paidShrinkageSeconds:
        type: integer
        format: int32
        description: Aggregated shrinkage value in seconds for paid activities
      unpaidShrinkageSeconds:
        type: integer
        format: int32
        description: Aggregated shrinkage value in seconds for unpaid activities
      plannedShrinkageSeconds:
        type: integer
        format: int32
        description: Aggregated shrinkage value in seconds for planned activities
      unplannedShrinkageSeconds:
        type: integer
        format: int32
        description: Aggregated shrinkage value in seconds for unplanned activities
  HistoricalShrinkageResult:
    type: object
    properties:
      startDate:
        type: string
        format: date-time
        description: Beginning of the date range that was queried, in ISO-8601 format
      endDate:
        type: string
        format: date-time
        description: >-
          End of the date range that was queried, in ISO-8601 format. If it was
          not set, end date will be set to the queried time
      totalScheduledDurationSeconds:
        type: integer
        format: int32
        description: >-
          Total duration in seconds for which agents in the management unit are
          scheduled
      totalLoggedInDurationSeconds:
        type: integer
        format: int32
        description: >-
          Total duration in seconds for which agents in the management unit are
          actually logged-in
      aggregatedShrinkage:
        description: Aggregated shrinkage data for all the activity categories
        $ref: '#/definitions/HistoricalShrinkageAggregateResponse'
      shrinkageForActivityCategories:
        type: array
        description: Shrinkage for activity categories
        items:
          $ref: '#/definitions/HistoricalShrinkageActivityCategoryResponse'
      businessUnitIds:
        type: array
        description: List of all business units of all the agents in response
        items:
          type: string
  HistoricalShrinkageResultListing:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/HistoricalShrinkageResult'
  WfmHistoricalShrinkageResponse:
    type: object
    properties:
      operationId:
        type: string
        description: The operationId for which to listen
      downloadUrls:
        type: array
        description: >-
          The url list to GET the results of the Historical Shrinkage query.
          This field is populated only if query state is Complete
        items:
          type: string
      downloadResult:
        description: >-
          Result will always come via downloadUrls; however the schema is
          included for documentation
        $ref: '#/definitions/HistoricalShrinkageResultListing'
      state:
        type: string
        description: The state of the shrinkage query
        enum:
          - Processing
          - Complete
          - Error
  WfmHistoricalShrinkageRequest:
    type: object
    required:
      - startDate
    properties:
      startDate:
        type: string
        format: date-time
        description: Beginning of the date range to query in ISO-8601 format
      endDate:
        type: string
        format: date-time
        description: >-
          End of the date range to query in ISO-8601 format. If it is not set,
          end date will be set to current time
      timeZone:
        type: string
        description: >-
          The time zone, in olson format, to use in defining days when computing
          shrinkage for requested granularity. If it is not set, the business
          unit time zone will be used. The results will be returned as UTC
          timestamps regardless of the time zone input.
      granularity:
        type: string
        description: Shrinkage aggregation interval granularity.
        enum:
          - Daily
          - Weekly
  WfmHistoricalShrinkageTeamsRequest:
    type: object
    required:
      - startDate
      - timeZone
    properties:
      startDate:
        type: string
        format: date-time
        description: Beginning of the date range to query in ISO-8601 format
      endDate:
        type: string
        format: date-time
        description: >-
          End of the date range to query in ISO-8601 format. If it is not set,
          end date will be set to current time
      timeZone:
        type: string
        description: >-
          The time zone, in olson format, to use in defining days when computing
          shrinkage for requested granularity. The results will be returned as
          UTC timestamps regardless of the time zone input.
      granularity:
        type: string
        description: Shrinkage aggregation interval granularity
        enum:
          - Daily
          - Weekly
  TimeOffBalanceJobReference:
    type: object
    properties:
      id:
        type: string
        description: The globally unique identifier for the object.
        readOnly: true
      status:
        type: string
        description: The status of the job
        enum:
          - Processing
          - Complete
          - Error
      selfUri:
        type: string
        format: uri
        description: The URI for this object
        readOnly: true
  TimeOffBalanceResponse:
    type: object
    required:
      - activityCodeId
      - hrisTimeOffTypeId
    properties:
      activityCodeId:
        type: string
        description: The ID for activity code associated with time off balance
      hrisTimeOffTypeId:
        type: string
        description: The ID of the time off type configured in HRIS integration
      hrisTimeOffTypeSecondaryId:
        type: string
        description: The secondary ID of the time off type configured in HRIS integration
      startDate:
        type: string
        format: date
        description: >-
          The Start date of the requested date range. The end date is determined
          by the size of interval list. Dates are represented as an ISO-8601
          string. For example: yyyy-MM-dd
      balanceMinutesPerDay:
        type: array
        description: The list of available time off balance values in minutes for each day
        items:
          type: integer
          format: int32
  TimeOffBalancesResponse:
    type: object
    properties:
      job:
        description: The asynchronous job handling the query
        $ref: '#/definitions/TimeOffBalanceJobReference'
      entities:
        type: array
        description: The list of time off balances. May come via notification
        items:
          $ref: '#/definitions/TimeOffBalanceResponse'
  TimeOffBalanceRequest:
    type: object
    required:
      - activityCodeIds
    properties:
      activityCodeIds:
        type: array
        description: >-
          The set of activity code IDs for which to query available time off
          balances
        uniqueItems: true
        items:
          type: string
      dateRanges:
        type: array
        description: The list of date ranges for which to query time off balance
        items:
          $ref: '#/definitions/LocalDateRange'
responses:
  '400':
    description: The request could not be understood by the server due to malformed syntax.
    schema:
      $ref: '#/definitions/ErrorBody'
  '401':
    description: No authentication bearer token specified in authorization header.
    schema:
      $ref: '#/definitions/ErrorBody'
  '403':
    description: You are not authorized to perform the requested action.
    schema:
      $ref: '#/definitions/ErrorBody'
  '404':
    description: The requested resource was not found.
    schema:
      $ref: '#/definitions/ErrorBody'
  '408':
    description: >-
      The client did not produce a request within the server timeout limit. This
      can be caused by a slow network connection and/or large payloads.
    schema:
      $ref: '#/definitions/ErrorBody'
  '413':
    description: 'The request is over the size limit. Maximum bytes: %s'
    schema:
      $ref: '#/definitions/ErrorBody'
  '415':
    description: >-
      Unsupported Media Type - Unsupported or incorrect media type, such as an
      incorrect Content-Type value in the header.
    schema:
      $ref: '#/definitions/ErrorBody'
  '429':
    description: Rate limit exceeded the maximum. Retry the request in [%s] seconds
    schema:
      $ref: '#/definitions/ErrorBody'
  '500':
    description: >-
      The server encountered an unexpected condition which prevented it from
      fulfilling the request.
    schema:
      $ref: '#/definitions/ErrorBody'
  '503':
    description: >-
      Service Unavailable - The server is currently unavailable (because it is
      overloaded or down for maintenance).
    schema:
      $ref: '#/definitions/ErrorBody'
  '504':
    description: The request timed out.
    schema:
      $ref: '#/definitions/ErrorBody'
externalDocs:
  description: PureCloud API Documentation
  url: https://developer.genesys.cloud
